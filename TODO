
  console rewrite as controller (accessing linklists for completion)

  goil revision of threading and timing

  jrml implement OSC programmable controller

  jrml rewrite movielayer with new ffmpeg or openMLT libs

  dump a screenshot of a layer in javascript: layer.dumpfile()

  *** rewrite video4linux layer with libunicap

  jrml sound frequency and beat parametrization (get harmonics from fluxus)

  *** write a separate GUI to control freej via OSC

  *** fix TBT layer, colors on text

  joep port EffecTV filters to Frei0r

  *** complete and refine the Iterator class

  *** File object in javascript to read/write files in ascii/binary

  *** Javascript class to read XML RSS feeds

  *** build more scripts

  *** 8bit geometrical mask blits and fades

  vvv cairo layers: poligons and svg - SDL_gfx rocks

  vvv libvisual layer / unstable library. Goom layer is done


  
  vvv enhance text layer (more scrollers, word positioning etc.)
  
  *** XScreensaver layer // must PORT screenhacks code :(
  *** please help solve the riddle if you can...
 HINT from salsaman:
22:52 @<salsaman2> #ifdef HAVE_DOUBLE_BUFFER_EXTENSION
22:52 @<salsaman2> #include "xdbe.h"
22:54 @<salsaman2> static  XdbeBackBuffer backb;
22:55 @<salsaman2>     if (backb)
22:55 @<salsaman2>       {
22:55 @<salsaman2>         XdbeSwapInfo info[1];
22:55 @<salsaman2>         info[0].swap_window = window;
22:55 @<salsaman2>         info[0].swap_action = XdbeUndefined;
22:55 @<salsaman2>         XdbeSwapBuffers (dpy, info, 1);
22:55 @<salsaman2>       }
22:55 @<salsaman2> and thats it
22:55 @<salsaman2> so just XdbeSwapBuffers would need overloading
22:56 @<salsaman2> normally swaps display and backing buffers
22:56 @<salsaman2> but a hacked version could swap back buffer1 and back buffer2
