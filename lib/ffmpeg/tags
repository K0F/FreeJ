!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.5.4	//
$aligned	libavcodec/alpha/dsputil_alpha_asm.S	/^$aligned:$/;"	l
$aligned	libavcodec/alpha/motion_est_mvi_asm.S	/^$aligned:$/;"	l
$unaligned	libavcodec/alpha/dsputil_alpha_asm.S	/^$unaligned:$/;"	l
$unaligned	libavcodec/alpha/motion_est_mvi_asm.S	/^$unaligned:$/;"	l
A1	libavcodec/faandct.c	55;"	d	file:
A2	libavcodec/faandct.c	56;"	d	file:
A4	libavcodec/faandct.c	58;"	d	file:
A5	libavcodec/faandct.c	57;"	d	file:
A52_2F1R	libavcodec/liba52/a52.h	50;"	d
A52_2F2R	libavcodec/liba52/a52.h	52;"	d
A52_3F	libavcodec/liba52/a52.h	49;"	d
A52_3F1R	libavcodec/liba52/a52.h	51;"	d
A52_3F2R	libavcodec/liba52/a52.h	53;"	d
A52_ADJUST_LEVEL	libavcodec/liba52/a52.h	60;"	d
A52_CHANNEL	libavcodec/liba52/a52.h	46;"	d
A52_CHANNEL1	libavcodec/liba52/a52.h	54;"	d
A52_CHANNEL2	libavcodec/liba52/a52.h	55;"	d
A52_CHANNEL_MASK	libavcodec/liba52/a52.h	57;"	d
A52_DOLBY	libavcodec/liba52/a52.h	56;"	d
A52_H	libavcodec/liba52/a52.h	25;"	d
A52_LFE	libavcodec/liba52/a52.h	59;"	d
A52_LFE	libavcodec/parser.c	688;"	d	file:
A52_MONO	libavcodec/liba52/a52.h	47;"	d
A52_STEREO	libavcodec/liba52/a52.h	48;"	d
A52_UTIL_H	libavcodec/liba52/a52_util.h	25;"	d
AAC_CODEC	libavcodec/faad.c	297;"	d	file:
AAC_CODEC	libavcodec/faad.c	314;"	d	file:
AANSCALE_BITS	libavcodec/dct-test.c	34;"	d	file:
ABS	libavcodec/common.h	263;"	d
ABS	libavcodec/libpostproc/postprocess.c	105;"	d	file:
AC3BitAllocParameters	libavcodec/ac3.h	/^typedef struct AC3BitAllocParameters {$/;"	s
AC3BitAllocParameters	libavcodec/ac3.h	/^} AC3BitAllocParameters;$/;"	t
AC3DecodeState	libavcodec/a52dec.c	/^typedef struct AC3DecodeState {$/;"	s	file:
AC3DecodeState	libavcodec/a52dec.c	/^} AC3DecodeState;$/;"	t	file:
AC3DecodeState	libavcodec/ac3dec.c	/^typedef struct AC3DecodeState {$/;"	s	file:
AC3DecodeState	libavcodec/ac3dec.c	/^} AC3DecodeState;$/;"	t	file:
AC3EncodeContext	libavcodec/ac3enc.c	/^typedef struct AC3EncodeContext {$/;"	s	file:
AC3EncodeContext	libavcodec/ac3enc.c	/^} AC3EncodeContext;$/;"	t	file:
AC3ParseContext	libavcodec/parser.c	/^typedef struct AC3ParseContext {$/;"	s	file:
AC3ParseContext	libavcodec/parser.c	/^} AC3ParseContext;$/;"	t	file:
AC3_FRAME_SIZE	libavcodec/ac3.h	29;"	d
AC3_HEADER_SIZE	libavcodec/parser.c	687;"	d	file:
AC3_ID	libavformat/mpeg.c	90;"	d	file:
AC3_MAX_CHANNELS	libavcodec/ac3.h	26;"	d
AC3_MAX_CODED_FRAME_SIZE	libavcodec/ac3.h	25;"	d
AC3_encode_close	libavcodec/ac3enc.c	/^static int AC3_encode_close(AVCodecContext *avctx)$/;"	f	file:
AC3_encode_frame	libavcodec/ac3enc.c	/^static int AC3_encode_frame(AVCodecContext *avctx,$/;"	f	file:
AC3_encode_init	libavcodec/ac3enc.c	/^static int AC3_encode_init(AVCodecContext *avctx)$/;"	f	file:
ACCEL_SPARC_VIS	libavcodec/sparc/dsputil_vis.c	4003;"	d	file:
ACCEL_SPARC_VIS2	libavcodec/sparc/dsputil_vis.c	4004;"	d	file:
ACCUMULATE_DIFFS	libavcodec/libpostproc/postprocess_altivec_template.c	853;"	d	file:
ACCUMULATE_DIFFS	libavcodec/libpostproc/postprocess_altivec_template.c	867;"	d	file:
ACDC_VLC_BITS	libavcodec/4xm.c	33;"	d	file:
ACE_VO_TYPE	libavcodec/mpeg4data.h	17;"	d
AC_END	libavcodec/mpegvideo.h	526;"	d
AC_ERROR	libavcodec/mpegvideo.h	523;"	d
ADAPT_LEVEL	libavcodec/sonic.c	116;"	d	file:
ADD	libavcodec/mpegaudiodec.c	603;"	d	file:
ADD	libavcodec/ppc/idct_altivec.c	228;"	d	file:
ADD	libavcodec/ps2/idct_mmi.c	258;"	d	file:
ADPCMChannelStatus	libavcodec/adpcm.c	/^typedef struct ADPCMChannelStatus {$/;"	s	file:
ADPCMChannelStatus	libavcodec/adpcm.c	/^} ADPCMChannelStatus;$/;"	t	file:
ADPCMContext	libavcodec/adpcm.c	/^typedef struct ADPCMContext {$/;"	s	file:
ADPCMContext	libavcodec/adpcm.c	/^} ADPCMContext;$/;"	t	file:
ADPCM_CODEC	libavcodec/adpcm.c	1022;"	d	file:
ADPCM_CODEC	libavcodec/adpcm.c	1039;"	d	file:
ADPCM_DECODER	libavcodec/adpcm.c	1007;"	d	file:
ADPCM_DECODER	libavcodec/adpcm.c	1019;"	d	file:
ADPCM_ENCODER	libavcodec/adpcm.c	1003;"	d	file:
ADPCM_ENCODER	libavcodec/adpcm.c	991;"	d	file:
ADVANCE_BLOCK	libavcodec/rpza.c	56;"	d	file:
ADVANCE_BLOCK	libavcodec/smc.c	64;"	d	file:
ADVANCE_CURFRAME_X	libavcodec/xan.c	461;"	d	file:
ADVANCE_CURRENT_X	libavcodec/xan.c	342;"	d	file:
ADVANCE_PREVFRAME_X	libavcodec/xan.c	468;"	d	file:
ADV_SIMPLE_VO_TYPE	libavcodec/mpeg4data.h	18;"	d
ADXContext	libavcodec/adx.c	/^} ADXContext;$/;"	t	file:
ALACContext	libavcodec/alac.c	/^} ALACContext;$/;"	t	file:
ALAC_EXTRADATA_SIZE	libavcodec/alac.c	41;"	d	file:
ALGO_NOP	libavcodec/truemotion1.c	101;"	d	file:
ALGO_RGB16H	libavcodec/truemotion1.c	103;"	d	file:
ALGO_RGB16V	libavcodec/truemotion1.c	102;"	d	file:
ALGO_RGB24H	libavcodec/truemotion1.c	104;"	d	file:
ALIGN	libavcodec/utils.c	201;"	d	file:
ALIGN_MASK	libavcodec/libpostproc/postprocess_template.c	33;"	d	file:
ALIGN_MASK	libavcodec/libpostproc/postprocess_template.c	42;"	d	file:
ALTIVEC_TRANSPOSE_8x8_SHORT	libavcodec/libpostproc/postprocess_altivec_template.c	28;"	d	file:
ALT_BITSTREAM_READER	libavcodec/bitstream.h	12;"	d
ALT_BITSTREAM_READER_LE	libavcodec/indeo2.c	25;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/vorbis.c	26;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/vorbis.h	1;"	d
AMASK_BWX	libavcodec/alpha/asm.h	40;"	d
AMASK_CIX	libavcodec/alpha/asm.h	42;"	d
AMASK_FIX	libavcodec/alpha/asm.h	41;"	d
AMASK_MVI	libavcodec/alpha/asm.h	43;"	d
AMRContext	libavcodec/amr.c	/^typedef struct AMRContext {$/;"	s	file:
AMRContext	libavcodec/amr.c	/^} AMRContext;$/;"	t	file:
AMRLIBS	libavcodec/Makefile	/^AMRLIBS=amrlibs$/;"	m
AMROBJS	libavcodec/Makefile	/^AMROBJS= amr.o$/;"	m
AMROBJS	libavcodec/Makefile	/^AMROBJS=$/;"	m
AMROBJS	libavformat/Makefile	/^AMROBJS= amr.o$/;"	m
AMROBJS	libavformat/Makefile	/^AMROBJS=$/;"	m
AMRWBContext	libavcodec/amr.c	/^typedef struct AMRWBContext {$/;"	s	file:
AMRWBContext	libavcodec/amr.c	/^} AMRWBContext;$/;"	t	file:
AMRWB_bitrates	libavcodec/amr.c	/^typedef struct AMRWB_bitrates$/;"	s	file:
AMRWB_bitrates	libavcodec/amr.c	/^} AMRWB_bitrates;$/;"	t	file:
AMRWB_header	libavformat/amr.c	/^static const unsigned char AMRWB_header [] = "#!AMR-WB\\n";$/;"	v	file:
AMR_bitrates	libavcodec/amr.c	/^typedef struct AMR_bitrates$/;"	s	file:
AMR_bitrates	libavcodec/amr.c	/^} AMR_bitrates;$/;"	t	file:
AMR_header	libavformat/amr.c	/^static const unsigned char AMR_header [] = "#!AMR\\n";$/;"	v	file:
APP0	libavcodec/mjpeg.c	/^    APP0  = 0xe0,$/;"	e	file:
APP1	libavcodec/mjpeg.c	/^    APP1  = 0xe1,$/;"	e	file:
APP10	libavcodec/mjpeg.c	/^    APP10 = 0xea,$/;"	e	file:
APP11	libavcodec/mjpeg.c	/^    APP11 = 0xeb,$/;"	e	file:
APP12	libavcodec/mjpeg.c	/^    APP12 = 0xec,$/;"	e	file:
APP13	libavcodec/mjpeg.c	/^    APP13 = 0xed,$/;"	e	file:
APP14	libavcodec/mjpeg.c	/^    APP14 = 0xee,$/;"	e	file:
APP15	libavcodec/mjpeg.c	/^    APP15 = 0xef,$/;"	e	file:
APP2	libavcodec/mjpeg.c	/^    APP2  = 0xe2,$/;"	e	file:
APP3	libavcodec/mjpeg.c	/^    APP3  = 0xe3,$/;"	e	file:
APP4	libavcodec/mjpeg.c	/^    APP4  = 0xe4,$/;"	e	file:
APP5	libavcodec/mjpeg.c	/^    APP5  = 0xe5,$/;"	e	file:
APP6	libavcodec/mjpeg.c	/^    APP6  = 0xe6,$/;"	e	file:
APP7	libavcodec/mjpeg.c	/^    APP7  = 0xe7,$/;"	e	file:
APP8	libavcodec/mjpeg.c	/^    APP8  = 0xe8,$/;"	e	file:
APP9	libavcodec/mjpeg.c	/^    APP9  = 0xe9,$/;"	e	file:
APPLY_C_PREDICTOR	libavcodec/truemotion1.c	517;"	d	file:
APPLY_C_PREDICTOR_24	libavcodec/truemotion1.c	534;"	d	file:
APPLY_Y_PREDICTOR	libavcodec/truemotion1.c	553;"	d	file:
APPLY_Y_PREDICTOR_24	libavcodec/truemotion1.c	570;"	d	file:
AR	config.mak	/^AR=ar$/;"	m
ARTS_VO_TYPE	libavcodec/mpeg4data.h	16;"	d
ASFContext	libavformat/asf.h	/^} ASFContext;$/;"	t
ASFIndex	libavformat/asf.h	/^} ASFIndex;$/;"	t
ASFMainHeader	libavformat/asf.h	/^} ASFMainHeader;$/;"	t
ASFStream	libavformat/asf.h	/^} ASFStream;$/;"	t
ASF_INDEXED_INTERVAL	libavformat/asf-enc.c	29;"	d	file:
ASF_INDEX_BLOCK	libavformat/asf-enc.c	30;"	d	file:
ASF_PACKET_ERROR_CORRECTION_DATA_SIZE	libavformat/asf-enc.c	32;"	d	file:
ASF_PACKET_ERROR_CORRECTION_FLAGS	libavformat/asf-enc.c	33;"	d	file:
ASF_PACKET_ERROR_CORRECTION_FLAGS_FIELD_SIZE	libavformat/asf-enc.c	39;"	d	file:
ASF_PACKET_ERROR_CORRECTION_FLAGS_FIELD_SIZE	libavformat/asf-enc.c	41;"	d	file:
ASF_PACKET_FLAG_ERROR_CORRECTION_PRESENT	libavformat/asf.h	206;"	d
ASF_PAYLOAD_FLAGS	libavformat/asf-enc.c	53;"	d	file:
ASF_PAYLOAD_LENGTH_FIELD_SIZE	libavformat/asf-enc.c	135;"	d	file:
ASF_PAYLOAD_LENGTH_FIELD_SIZE	libavformat/asf-enc.c	138;"	d	file:
ASF_PAYLOAD_LENGTH_FIELD_SIZE	libavformat/asf-enc.c	141;"	d	file:
ASF_PAYLOAD_MEDIA_OBJECT_NUMBER_FIELD_SIZE	libavformat/asf-enc.c	122;"	d	file:
ASF_PAYLOAD_MEDIA_OBJECT_NUMBER_FIELD_SIZE	libavformat/asf-enc.c	125;"	d	file:
ASF_PAYLOAD_MEDIA_OBJECT_NUMBER_FIELD_SIZE	libavformat/asf-enc.c	128;"	d	file:
ASF_PAYLOAD_MEDIA_OBJECT_NUMBER_FIELD_SIZE	libavformat/asf-enc.c	131;"	d	file:
ASF_PAYLOAD_OFFSET_INTO_MEDIA_OBJECT_FIELD_SIZE	libavformat/asf-enc.c	109;"	d	file:
ASF_PAYLOAD_OFFSET_INTO_MEDIA_OBJECT_FIELD_SIZE	libavformat/asf-enc.c	112;"	d	file:
ASF_PAYLOAD_OFFSET_INTO_MEDIA_OBJECT_FIELD_SIZE	libavformat/asf-enc.c	115;"	d	file:
ASF_PAYLOAD_OFFSET_INTO_MEDIA_OBJECT_FIELD_SIZE	libavformat/asf-enc.c	118;"	d	file:
ASF_PAYLOAD_REPLICATED_DATA_LENGTH	libavformat/asf-enc.c	158;"	d	file:
ASF_PAYLOAD_REPLICATED_DATA_LENGTH_FIELD_SIZE	libavformat/asf-enc.c	102;"	d	file:
ASF_PAYLOAD_REPLICATED_DATA_LENGTH_FIELD_SIZE	libavformat/asf-enc.c	105;"	d	file:
ASF_PAYLOAD_REPLICATED_DATA_LENGTH_FIELD_SIZE	libavformat/asf-enc.c	96;"	d	file:
ASF_PAYLOAD_REPLICATED_DATA_LENGTH_FIELD_SIZE	libavformat/asf-enc.c	99;"	d	file:
ASF_PL_FLAG_KEY_FRAME	libavformat/asf.h	265;"	d
ASF_PL_FLAG_MEDIA_OBJECT_NUMBER_LENGTH_FIELD_IS_BYTE	libavformat/asf.h	253;"	d
ASF_PL_FLAG_MEDIA_OBJECT_NUMBER_LENGTH_FIELD_IS_DWORD	libavformat/asf.h	255;"	d
ASF_PL_FLAG_MEDIA_OBJECT_NUMBER_LENGTH_FIELD_IS_WORD	libavformat/asf.h	254;"	d
ASF_PL_FLAG_OFFSET_INTO_MEDIA_OBJECT_LENGTH_FIELD_IS_BYTE	libavformat/asf.h	248;"	d
ASF_PL_FLAG_OFFSET_INTO_MEDIA_OBJECT_LENGTH_FIELD_IS_DWORD	libavformat/asf.h	250;"	d
ASF_PL_FLAG_OFFSET_INTO_MEDIA_OBJECT_LENGTH_FIELD_IS_WORD	libavformat/asf.h	249;"	d
ASF_PL_FLAG_PAYLOAD_LENGTH_FIELD_IS_BYTE	libavformat/asf.h	261;"	d
ASF_PL_FLAG_PAYLOAD_LENGTH_FIELD_IS_WORD	libavformat/asf.h	262;"	d
ASF_PL_FLAG_REPLICATED_DATA_LENGTH_FIELD_IS_BYTE	libavformat/asf.h	243;"	d
ASF_PL_FLAG_REPLICATED_DATA_LENGTH_FIELD_IS_DWORD	libavformat/asf.h	245;"	d
ASF_PL_FLAG_REPLICATED_DATA_LENGTH_FIELD_IS_WORD	libavformat/asf.h	244;"	d
ASF_PL_FLAG_STREAM_NUMBER_LENGTH_FIELD_IS_BYTE	libavformat/asf.h	258;"	d
ASF_PL_MASK_MEDIA_OBJECT_NUMBER_LENGTH_FIELD_SIZE	libavformat/asf.h	256;"	d
ASF_PL_MASK_OFFSET_INTO_MEDIA_OBJECT_LENGTH_FIELD_SIZE	libavformat/asf.h	251;"	d
ASF_PL_MASK_PAYLOAD_LENGTH_FIELD_SIZE	libavformat/asf.h	263;"	d
ASF_PL_MASK_REPLICATED_DATA_LENGTH_FIELD_SIZE	libavformat/asf.h	246;"	d
ASF_PL_MASK_STREAM_NUMBER_LENGTH_FIELD_SIZE	libavformat/asf.h	259;"	d
ASF_PPI_FLAG_MULTIPLE_PAYLOADS_PRESENT	libavformat/asf.h	225;"	d
ASF_PPI_FLAG_PACKET_LENGTH_FIELD_IS_BYTE	libavformat/asf.h	237;"	d
ASF_PPI_FLAG_PACKET_LENGTH_FIELD_IS_DWORD	libavformat/asf.h	239;"	d
ASF_PPI_FLAG_PACKET_LENGTH_FIELD_IS_WORD	libavformat/asf.h	238;"	d
ASF_PPI_FLAG_PADDING_LENGTH_FIELD_IS_BYTE	libavformat/asf.h	232;"	d
ASF_PPI_FLAG_PADDING_LENGTH_FIELD_IS_DWORD	libavformat/asf.h	234;"	d
ASF_PPI_FLAG_PADDING_LENGTH_FIELD_IS_WORD	libavformat/asf.h	233;"	d
ASF_PPI_FLAG_SEQUENCE_FIELD_IS_BYTE	libavformat/asf.h	227;"	d
ASF_PPI_FLAG_SEQUENCE_FIELD_IS_DWORD	libavformat/asf.h	229;"	d
ASF_PPI_FLAG_SEQUENCE_FIELD_IS_WORD	libavformat/asf.h	228;"	d
ASF_PPI_LENGTH_TYPE_FLAGS	libavformat/asf-enc.c	51;"	d	file:
ASF_PPI_MASK_PACKET_LENGTH_FIELD_SIZE	libavformat/asf.h	240;"	d
ASF_PPI_MASK_PADDING_LENGTH_FIELD_SIZE	libavformat/asf.h	235;"	d
ASF_PPI_MASK_SEQUENCE_FIELD_SIZE	libavformat/asf.h	230;"	d
ASF_PPI_PACKET_LENGTH_FIELD_SIZE	libavformat/asf-enc.c	70;"	d	file:
ASF_PPI_PACKET_LENGTH_FIELD_SIZE	libavformat/asf-enc.c	73;"	d	file:
ASF_PPI_PACKET_LENGTH_FIELD_SIZE	libavformat/asf-enc.c	76;"	d	file:
ASF_PPI_PACKET_LENGTH_FIELD_SIZE	libavformat/asf-enc.c	79;"	d	file:
ASF_PPI_PADDING_LENGTH_FIELD_SIZE	libavformat/asf-enc.c	83;"	d	file:
ASF_PPI_PADDING_LENGTH_FIELD_SIZE	libavformat/asf-enc.c	86;"	d	file:
ASF_PPI_PADDING_LENGTH_FIELD_SIZE	libavformat/asf-enc.c	89;"	d	file:
ASF_PPI_PADDING_LENGTH_FIELD_SIZE	libavformat/asf-enc.c	92;"	d	file:
ASF_PPI_PROPERTY_FLAGS	libavformat/asf-enc.c	44;"	d	file:
ASF_PPI_SEQUENCE_FIELD_SIZE	libavformat/asf-enc.c	56;"	d	file:
ASF_PPI_SEQUENCE_FIELD_SIZE	libavformat/asf-enc.c	59;"	d	file:
ASF_PPI_SEQUENCE_FIELD_SIZE	libavformat/asf-enc.c	62;"	d	file:
ASF_PPI_SEQUENCE_FIELD_SIZE	libavformat/asf-enc.c	65;"	d	file:
ASM_OBJS	libavcodec/Makefile	/^ASM_OBJS=$/;"	m
ASV1Context	libavcodec/asv1.c	/^typedef struct ASV1Context{$/;"	s	file:
ASV1Context	libavcodec/asv1.c	/^} ASV1Context;$/;"	t	file:
ASV2_LEVEL_VLC_BITS	libavcodec/asv1.c	33;"	d	file:
AT	libavcodec/alpha/regdef.h	40;"	d
ATOM_PREAMBLE_SIZE	qt-faststart.c	63;"	d	file:
ATTR_ALIGN	libavcodec/i386/fdct_mmx.c	20;"	d	file:
ATTR_ALIGN	libavcodec/i386/idct_mmx.c	30;"	d	file:
ATTR_ALIGN	libavcodec/sparc/dsputil_vis.c	59;"	d	file:
ATTR_NAME_TYPE_INT	libavformat/rtsp.c	264;"	d	file:
ATTR_NAME_TYPE_STR	libavformat/rtsp.c	265;"	d	file:
AUDIOBLOCK	libavcodec/ra144.c	25;"	d	file:
AUDIOBUFFER	libavcodec/ra144.c	26;"	d	file:
AUDIO_BLOCK_COUNT	libavformat/beosaudio.cpp	46;"	d	file:
AUDIO_BLOCK_SIZE	libavformat/audio.c	35;"	d	file:
AUDIO_BLOCK_SIZE	libavformat/beosaudio.cpp	45;"	d	file:
AUDIO_BUFFER_SIZE	libavformat/beosaudio.cpp	48;"	d	file:
AUDIO_DIFF_AVG_NB	ffplay.c	74;"	d	file:
AUDIO_FIFO_SIZE	libavformat/swf.c	50;"	d	file:
AUDIO_ID	libavformat/mpeg.c	88;"	d	file:
AUDI_TAG	libavformat/wc3movie.c	44;"	d	file:
AUD_CHUNK_PREAMBLE_SIZE	libavformat/westwood.c	37;"	d	file:
AUD_CHUNK_SIGNATURE	libavformat/westwood.c	38;"	d	file:
AUD_HEADER_SIZE	libavformat/westwood.c	36;"	d	file:
AUHeaders	libavformat/rtp.h	/^    struct AUHeaders {$/;"	s	struct:rtp_payload_data_s
AU_UNKOWN_SIZE	libavformat/au.c	32;"	d	file:
AU_UNKOWN_SIZE	libavformat/sol.c	29;"	d	file:
AVCLASS	libavcodec/avcodec.h	/^struct AVCLASS {$/;"	s
AVCODEC_H	libavcodec/avcodec.h	2;"	d
AVCODEC_I386MMX_H	libavcodec/i386/mmx.h	6;"	d
AVCODEC_MAX_AUDIO_FRAME_SIZE	libavcodec/avcodec.h	247;"	d
AVCODEC_MPEGVIDEO_H	libavcodec/mpegvideo.h	27;"	d
AVClass	libavcodec/avcodec.h	/^typedef struct AVCLASS AVClass;$/;"	t
AVCodec	libavcodec/avcodec.h	/^typedef struct AVCodec {$/;"	s
AVCodec	libavcodec/avcodec.h	/^} AVCodec;$/;"	t
AVCodecContext	libavcodec/avcodec.h	/^typedef struct AVCodecContext {$/;"	s
AVCodecContext	libavcodec/avcodec.h	/^} AVCodecContext;$/;"	t
AVCodecParser	libavcodec/avcodec.h	/^typedef struct AVCodecParser {$/;"	s
AVCodecParser	libavcodec/avcodec.h	/^} AVCodecParser;$/;"	t
AVCodecParserContext	libavcodec/avcodec.h	/^typedef struct AVCodecParserContext {$/;"	s
AVCodecParserContext	libavcodec/avcodec.h	/^} AVCodecParserContext;$/;"	t
AVDISCARD_ALL	libavformat/avformat.h	/^    AVDISCARD_ALL    = 48, \/\/\/< discard all$/;"	e	enum:AVDiscard
AVDISCARD_BIDIR	libavformat/avformat.h	/^    AVDISCARD_BIDIR  = 16, \/\/\/< discard all bidirectional frames$/;"	e	enum:AVDiscard
AVDISCARD_DEFAULT	libavformat/avformat.h	/^    AVDISCARD_DEFAULT=  0, \/\/\/< discard useless packets like 0 size packets in avi$/;"	e	enum:AVDiscard
AVDISCARD_NONE	libavformat/avformat.h	/^    AVDISCARD_NONE   =-16, \/\/\/< discard nothing$/;"	e	enum:AVDiscard
AVDISCARD_NONKEY	libavformat/avformat.h	/^    AVDISCARD_NONKEY = 32, \/\/\/< discard all frames except keyframes$/;"	e	enum:AVDiscard
AVDiscard	libavformat/avformat.h	/^enum AVDiscard{$/;"	g
AVERROR_INVALIDDATA	libavformat/avformat.h	580;"	d
AVERROR_IO	libavformat/avformat.h	578;"	d
AVERROR_NOFMT	libavformat/avformat.h	582;"	d
AVERROR_NOMEM	libavformat/avformat.h	581;"	d
AVERROR_NOTSUPP	libavformat/avformat.h	583;"	d
AVERROR_NUMEXPECTED	libavformat/avformat.h	579;"	d
AVERROR_UNKNOWN	libavformat/avformat.h	577;"	d
AVFMTCTX_NOHEADER	libavformat/avformat.h	264;"	d
AVFMT_GLOBALHEADER	libavformat/avformat.h	126;"	d
AVFMT_NEEDNUMBER	libavformat/avformat.h	122;"	d
AVFMT_NOFILE	libavformat/avformat.h	121;"	d
AVFMT_RAWPICTURE	libavformat/avformat.h	124;"	d
AVFMT_SHOW_IDS	libavformat/avformat.h	123;"	d
AVFORMAT_H	libavformat/avformat.h	2;"	d
AVFormatContext	libavformat/avformat.h	/^typedef struct AVFormatContext {$/;"	s
AVFormatContext	libavformat/avformat.h	/^} AVFormatContext;$/;"	t
AVFormatParameters	libavformat/avformat.h	/^typedef struct AVFormatParameters {$/;"	s
AVFormatParameters	libavformat/avformat.h	/^} AVFormatParameters;$/;"	t
AVFrac	libavformat/avformat.h	/^typedef struct AVFrac {$/;"	s
AVFrac	libavformat/avformat.h	/^} AVFrac;$/;"	t
AVFrame	libavcodec/avcodec.h	/^typedef struct AVFrame {$/;"	s
AVFrame	libavcodec/avcodec.h	/^} AVFrame;$/;"	t
AVG2	libavcodec/alpha/dsputil_alpha.c	256;"	d	file:
AVG2	libavcodec/alpha/dsputil_alpha.c	267;"	d	file:
AVG2	libavcodec/alpha/dsputil_alpha.c	271;"	d	file:
AVG4	libavcodec/alpha/dsputil_alpha.c	257;"	d	file:
AVG4	libavcodec/alpha/dsputil_alpha.c	268;"	d	file:
AVG4	libavcodec/alpha/dsputil_alpha.c	272;"	d	file:
AVG4_ROUNDER	libavcodec/alpha/dsputil_alpha.c	258;"	d	file:
AVG4_ROUNDER	libavcodec/alpha/dsputil_alpha.c	269;"	d	file:
AVG4_ROUNDER	libavcodec/alpha/dsputil_alpha.c	273;"	d	file:
AVG726Context	libavcodec/g726.c	/^typedef struct AVG726Context {$/;"	s	file:
AVG726Context	libavcodec/g726.c	/^} AVG726Context;$/;"	t	file:
AVG_3DNOW_OP	libavcodec/i386/dsputil_mmx.c	3044;"	d	file:
AVG_COEF	ffserver.c	81;"	d	file:
AVG_MMX2_OP	libavcodec/i386/dsputil_mmx.c	3048;"	d	file:
AVG_OP_U8_ALTIVEC	libavcodec/ppc/dsputil_h264_altivec.c	26;"	d	file:
AVIContext	libavformat/avidec.c	/^} AVIContext;$/;"	t	file:
AVIContext	libavformat/avienc.c	/^} AVIContext;$/;"	t	file:
AVIF_COPYRIGHTED	libavformat/avi.h	11;"	d
AVIF_HASINDEX	libavformat/avi.h	6;"	d
AVIF_ISINTERLEAVED	libavformat/avi.h	8;"	d
AVIF_MUSTUSEINDEX	libavformat/avi.h	7;"	d
AVIF_TRUSTCKTYPE	libavformat/avi.h	9;"	d
AVIF_WASCAPTUREFILE	libavformat/avi.h	10;"	d
AVIIF_INDEX	libavformat/avi.h	17;"	d
AVIIentry	libavformat/avienc.c	/^typedef struct AVIIentry {$/;"	s	file:
AVIIentry	libavformat/avienc.c	/^} AVIIentry;$/;"	t	file:
AVIIndex	libavformat/avienc.c	/^typedef struct AVIIndex {$/;"	s	file:
AVIIndex	libavformat/avienc.c	/^} AVIIndex;$/;"	t	file:
AVIMAGE_INTERLEAVED	libavformat/avformat.h	350;"	d
AVINDEX_KEYFRAME	libavformat/avformat.h	208;"	d
AVIO_H	libavformat/avio.h	2;"	d
AVIStream	libavformat/avidec.c	/^typedef struct AVIStream {$/;"	s	file:
AVIStream	libavformat/avidec.c	/^} AVIStream;$/;"	t	file:
AVI_INDEX_CLUSTER_SIZE	libavformat/avienc.c	32;"	d	file:
AVI_MASTER_INDEX_SIZE	libavformat/avi.h	14;"	d
AVI_MAX_RIFF_SIZE	libavformat/avi.h	13;"	d
AVImageFormat	libavformat/avformat.h	/^typedef struct AVImageFormat {$/;"	s
AVImageFormat	libavformat/avformat.h	/^} AVImageFormat;$/;"	t
AVImageInfo	libavformat/avformat.h	/^typedef struct AVImageInfo {$/;"	s
AVImageInfo	libavformat/avformat.h	/^} AVImageInfo;$/;"	t
AVIndexEntry	libavformat/avformat.h	/^typedef struct AVIndexEntry {$/;"	s
AVIndexEntry	libavformat/avformat.h	/^} AVIndexEntry;$/;"	t
AVInputFile	ffmpeg.c	/^typedef struct AVInputFile {$/;"	s	file:
AVInputFile	ffmpeg.c	/^} AVInputFile;$/;"	t	file:
AVInputFormat	libavformat/avformat.h	/^typedef struct AVInputFormat {$/;"	s
AVInputFormat	libavformat/avformat.h	/^} AVInputFormat;$/;"	t
AVInputImageContext	libavformat/avformat.h	/^typedef struct AVInputImageContext AVInputImageContext;$/;"	t
AVInputStream	ffmpeg.c	/^typedef struct AVInputStream {$/;"	s	file:
AVInputStream	ffmpeg.c	/^} AVInputStream;$/;"	t	file:
AVInteger	libavcodec/integer.h	/^typedef struct AVInteger{$/;"	s
AVInteger	libavcodec/integer.h	/^} AVInteger;$/;"	t
AVMetaDataMap	ffmpeg.c	/^typedef struct AVMetaDataMap {$/;"	s	file:
AVMetaDataMap	ffmpeg.c	/^} AVMetaDataMap;$/;"	t	file:
AVOPTION_CODEC_BOOL	libavcodec/common.h	42;"	d
AVOPTION_CODEC_DOUBLE	libavcodec/common.h	44;"	d
AVOPTION_CODEC_FLAG	libavcodec/common.h	46;"	d
AVOPTION_CODEC_INT	libavcodec/common.h	48;"	d
AVOPTION_CODEC_RCOVERRIDE	libavcodec/common.h	52;"	d
AVOPTION_CODEC_STRING	libavcodec/common.h	50;"	d
AVOPTION_END	libavcodec/common.h	55;"	d
AVOPTION_SUB	libavcodec/common.h	54;"	d
AVOption	libavcodec/avcodec.h	/^typedef struct AVOption {$/;"	s
AVOption	libavcodec/avcodec.h	/^} AVOption;$/;"	t
AVOutputFormat	libavformat/avformat.h	/^typedef struct AVOutputFormat {$/;"	s
AVOutputFormat	libavformat/avformat.h	/^} AVOutputFormat;$/;"	t
AVOutputStream	ffmpeg.c	/^typedef struct AVOutputStream {$/;"	s	file:
AVOutputStream	ffmpeg.c	/^} AVOutputStream;$/;"	t	file:
AVPALETTE_COUNT	libavcodec/avcodec.h	1867;"	d
AVPALETTE_SIZE	libavcodec/avcodec.h	1866;"	d
AVPROBE_SCORE_MAX	libavformat/avformat.h	98;"	d
AVPacket	libavformat/avformat.h	/^typedef struct AVPacket {$/;"	s
AVPacket	libavformat/avformat.h	/^} AVPacket; $/;"	t
AVPacketList	libavformat/avformat.h	/^typedef struct AVPacketList {$/;"	s
AVPacketList	libavformat/avformat.h	/^} AVPacketList;$/;"	t
AVPaletteControl	libavcodec/avcodec.h	/^typedef struct AVPaletteControl {$/;"	s
AVPaletteControl	libavcodec/avcodec.h	/^} AVPaletteControl;$/;"	t
AVPanScan	libavcodec/avcodec.h	/^typedef struct AVPanScan{$/;"	s
AVPanScan	libavcodec/avcodec.h	/^}AVPanScan;$/;"	t
AVPicture	libavcodec/avcodec.h	/^typedef struct AVPicture {$/;"	s
AVPicture	libavcodec/avcodec.h	/^} AVPicture;$/;"	t
AVProbeData	libavformat/avformat.h	/^typedef struct AVProbeData {$/;"	s
AVProbeData	libavformat/avformat.h	/^} AVProbeData;$/;"	t
AVRational	libavcodec/rational.h	/^typedef struct AVRational{$/;"	s
AVRational	libavcodec/rational.h	/^} AVRational;$/;"	t
AVResampleContext	libavcodec/resample2.c	/^typedef struct AVResampleContext{$/;"	s	file:
AVResampleContext	libavcodec/resample2.c	/^}AVResampleContext;$/;"	t	file:
AVRounding	libavcodec/avcodec.h	/^enum AVRounding {$/;"	g
AVRtpDynamicPayloadType_s	libavformat/rtp.h	/^typedef struct AVRtpDynamicPayloadType_s \/* payload type >= 96 *\/$/;"	s
AVRtpDynamicPayloadType_t	libavformat/rtp.h	/^} AVRtpDynamicPayloadType_t;$/;"	t
AVRtpDynamicPayloadTypes	libavformat/rtp.c	/^AVRtpDynamicPayloadType_t AVRtpDynamicPayloadTypes[]=$/;"	v
AVRtpPayloadType_s	libavformat/rtp.h	/^typedef struct AVRtpPayloadType_s$/;"	s
AVRtpPayloadType_t	libavformat/rtp.h	/^} AVRtpPayloadType_t;$/;"	t
AVRtpPayloadTypes	libavformat/rtp.c	/^AVRtpPayloadType_t AVRtpPayloadTypes[]=$/;"	v
AVSEEK_FLAG_ANY	libavformat/avformat.h	598;"	d
AVSEEK_FLAG_BACKWARD	libavformat/avformat.h	596;"	d
AVSEEK_FLAG_BYTE	libavformat/avformat.h	597;"	d
AVStream	libavformat/avformat.h	/^typedef struct AVStream {$/;"	s
AVStream	libavformat/avformat.h	/^} AVStream;$/;"	t
AVStreamMap	ffmpeg.c	/^typedef struct AVStreamMap {$/;"	s	file:
AVStreamMap	ffmpeg.c	/^} AVStreamMap;$/;"	t	file:
AVV	libavcodec/libpostproc/postprocess_altivec_template.c	23;"	d	file:
AVV	libavcodec/libpostproc/postprocess_altivec_template.c	25;"	d	file:
AVV	libavcodec/ppc/gcc_fixes.h	16;"	d
AVV	libavcodec/ppc/gcc_fixes.h	18;"	d
AVV	libavcodec/ppc/gcc_fixes.h	21;"	d
AV_DEBUG	libavcodec/vorbis.c	37;"	d	file:
AV_DELAY_MAX	ffmpeg.c	660;"	d	file:
AV_INTEGER_SIZE	libavcodec/integer.h	30;"	d
AV_LOG_DEBUG	libavcodec/avcodec.h	2340;"	d
AV_LOG_ERROR	libavcodec/avcodec.h	2338;"	d
AV_LOG_INFO	libavcodec/avcodec.h	2339;"	d
AV_LOG_QUIET	libavcodec/avcodec.h	2337;"	d
AV_NOPTS_VALUE	libavcodec/avcodec.h	29;"	d
AV_NOSYNC_THRESHOLD	ffplay.c	68;"	d	file:
AV_PARSER_PTS_NB	libavcodec/avcodec.h	2273;"	d
AV_ROUND_DOWN	libavcodec/avcodec.h	/^    AV_ROUND_DOWN     = 2, \/\/\/< round toward -infinity$/;"	e	enum:AVRounding
AV_ROUND_INF	libavcodec/avcodec.h	/^    AV_ROUND_INF      = 1, \/\/\/< round away from zero$/;"	e	enum:AVRounding
AV_ROUND_NEAR_INF	libavcodec/avcodec.h	/^    AV_ROUND_NEAR_INF = 5, \/\/\/< round to nearest and halfway cases away from zero$/;"	e	enum:AVRounding
AV_ROUND_UP	libavcodec/avcodec.h	/^    AV_ROUND_UP       = 3, \/\/\/< round toward +infinity$/;"	e	enum:AVRounding
AV_ROUND_ZERO	libavcodec/avcodec.h	/^    AV_ROUND_ZERO     = 0, \/\/\/< round toward zero$/;"	e	enum:AVRounding
AV_STRINGIFY	libavcodec/avcodec.h	25;"	d
AV_SYNC_AUDIO_MASTER	ffplay.c	/^    AV_SYNC_AUDIO_MASTER, \/* default choice *\/$/;"	e	file:
AV_SYNC_EXTERNAL_CLOCK	ffplay.c	/^    AV_SYNC_EXTERNAL_CLOCK, \/* synchronize to an external clock *\/$/;"	e	file:
AV_SYNC_THRESHOLD	ffplay.c	66;"	d	file:
AV_SYNC_VIDEO_MASTER	ffplay.c	/^    AV_SYNC_VIDEO_MASTER,$/;"	e	file:
AV_TIME_BASE	libavcodec/avcodec.h	30;"	d
AV_TIME_BASE_Q	libavcodec/avcodec.h	31;"	d
AV_TOSTRING	libavcodec/avcodec.h	26;"	d
AascContext	libavcodec/aasc.c	/^typedef struct AascContext {$/;"	s	file:
AascContext	libavcodec/aasc.c	/^} AascContext;$/;"	t	file:
AbvEntry	libavformat/utils.c	/^} AbvEntry;$/;"	t	file:
AdaptCoeff1	libavcodec/adpcm.c	/^static const int AdaptCoeff1[] = {$/;"	v	file:
AdaptCoeff2	libavcodec/adpcm.c	/^static const int AdaptCoeff2[] = {$/;"	v	file:
AdaptationTable	libavcodec/adpcm.c	/^static const int AdaptationTable[] = {$/;"	v	file:
AudioData	libavformat/audio.c	/^} AudioData;$/;"	t	file:
AudioData	libavformat/beosaudio.cpp	/^} AudioData;$/;"	t	file:
AudioTrack	libavformat/4xm.c	/^typedef struct AudioTrack {$/;"	s	file:
AudioTrack	libavformat/4xm.c	/^} AudioTrack;$/;"	t	file:
B	libavcodec/huffyuv.c	37;"	d	file:
B	libavcodec/huffyuv.c	41;"	d	file:
B0	libavcodec/faandct.c	45;"	d	file:
B1	libavcodec/faandct.c	46;"	d	file:
B2	libavcodec/faandct.c	47;"	d	file:
B3	libavcodec/faandct.c	48;"	d	file:
B4	libavcodec/faandct.c	49;"	d	file:
B5	libavcodec/faandct.c	50;"	d	file:
B6	libavcodec/faandct.c	51;"	d	file:
B7	libavcodec/faandct.c	52;"	d	file:
BACKSTEP_SIZE	libavcodec/mpegaudiodec.c	87;"	d	file:
BARPA_INET_H	libavformat/barpainet.h	2;"	d
BASE	libavformat/crc.c	26;"	d	file:
BASEVOL	libavcodec/adx.c	43;"	d	file:
BASE_QUANT	libavcodec/sonic.c	72;"	d	file:
BASIS_SHIFT	libavcodec/dsputil.h	324;"	d
BERRNO_H	berrno.h	2;"	d
BE_16	libavcodec/avcodec.h	2355;"	d
BE_16	qt-faststart.c	27;"	d	file:
BE_32	libavcodec/avcodec.h	2356;"	d
BE_32	qt-faststart.c	28;"	d	file:
BE_64	qt-faststart.c	32;"	d	file:
BE_DEF	libavformat/raw.c	577;"	d	file:
BE_DEF	libavformat/raw.c	580;"	d	file:
BE_FOURCC	qt-faststart.c	41;"	d	file:
BF	libavcodec/ac3enc.c	315;"	d	file:
BF	libavcodec/fft.c	123;"	d	file:
BF	libavcodec/mpegaudiodec.c	578;"	d	file:
BF	libavcodec/ppc/fft_altivec.c	32;"	d	file:
BF	libavcodec/simple_idct.c	451;"	d	file:
BF1	libavcodec/mpegaudiodec.c	586;"	d	file:
BF2	libavcodec/mpegaudiodec.c	593;"	d	file:
BIAS	libavcodec/liba52/a52_internal.h	135;"	d
BIAS	libavcodec/liba52/a52_internal.h	160;"	d
BIAS	libavcodec/pcm.c	35;"	d	file:
BIN_ONLY_SHAPE	libavcodec/mpeg4data.h	9;"	d
BIN_SHAPE	libavcodec/mpeg4data.h	8;"	d
BITMAP_ID	libavformat/swf.c	53;"	d	file:
BITSHIFTSIZE	libavcodec/shorten.c	48;"	d	file:
BITSTREAM_H	libavcodec/bitstream.h	7;"	d
BITS_FRW_ACC	libavcodec/i386/fdct_mmx.c	33;"	d	file:
BITS_INV_ACC	libavcodec/ps2/idct_mmi.c	18;"	d	file:
BITS_IN_JSAMPLE	libavcodec/jfdctint.c	38;"	d	file:
BI_TYPE	libavcodec/vc9.c	133;"	d	file:
BLKSIZE	libavcodec/adpcm.c	47;"	d	file:
BLOCKSIZE	libavcodec/ra144.c	29;"	d	file:
BLOCK_2x2	libavcodec/truemotion1.c	107;"	d	file:
BLOCK_2x4	libavcodec/truemotion1.c	108;"	d	file:
BLOCK_4x2	libavcodec/truemotion1.c	109;"	d	file:
BLOCK_4x4	libavcodec/truemotion1.c	110;"	d	file:
BLOCK_INTRA	libavcodec/snow.c	385;"	d	file:
BLOCK_MAX_BITS	libavcodec/wmadec.c	40;"	d	file:
BLOCK_MAX_SIZE	libavcodec/wmadec.c	41;"	d	file:
BLOCK_MIN_BITS	libavcodec/wmadec.c	39;"	d	file:
BLOCK_NB_SIZES	libavcodec/wmadec.c	43;"	d	file:
BLOCK_SIZE	libavcodec/libpostproc/postprocess.c	110;"	d	file:
BLOCK_TYPE_VLC_BITS	libavcodec/4xm.c	32;"	d	file:
BMPTYPE_RGB	libavcodec/lcl.c	53;"	d	file:
BMPTYPE_YUV	libavcodec/lcl.c	52;"	d	file:
BMV_TYPE_BACKWARD	libavcodec/vc9.c	120;"	d	file:
BMV_TYPE_BACKWARD	libavcodec/vc9.c	121;"	d	file:
BMV_TYPE_FORWARD	libavcodec/vc9.c	122;"	d	file:
BMV_TYPE_INTERPOLATED	libavcodec/vc9.c	123;"	d	file:
BNAM_TAG	libavformat/wc3movie.c	36;"	d	file:
BOUNDARY_TAG	libavformat/mpjpeg.c	23;"	d	file:
BPP	libavcodec/imgconvert.c	1466;"	d	file:
BPP	libavcodec/imgconvert.c	1487;"	d	file:
BPP	libavcodec/imgconvert.c	1509;"	d	file:
BPP	libavcodec/imgconvert.c	1515;"	d	file:
BPP	libavcodec/imgconvert.c	1536;"	d	file:
BPP	libavcodec/imgconvert.c	1567;"	d	file:
BPP	libavcodec/imgconvert_template.h	854;"	d
BRCH_TAG	libavformat/wc3movie.c	40;"	d	file:
BUFFERSIZE	libavcodec/ra144.c	31;"	d	file:
BUFFER_CAT	libavcodec/xvidff.c	36;"	d	file:
BUFFER_DURATION	libavformat/rm.c	22;"	d	file:
BUFFER_REMAINING	libavcodec/xvidff.c	35;"	d	file:
BUFFER_SIZE	libavcodec/dtsdec.c	37;"	d	file:
BUFFER_SIZE	libavcodec/liba52/bitstream.c	27;"	d	file:
BUFFER_SIZE	libavcodec/mp3lameaudio.c	29;"	d	file:
BUFFER_SIZE	libavcodec/oggvorbis.c	16;"	d	file:
BUFFER_SIZE	libavcodec/xvidff.c	34;"	d	file:
BUFFER_SIZE	libavformat/http.c	38;"	d	file:
BUILDSUF	config.mak	/^BUILDSUF=$/;"	m
BUILD_SHARED	config.mak	/^BUILD_SHARED=yes$/;"	m
BUILD_VHOOK	config.mak	/^BUILD_VHOOK=yes$/;"	m
BUTTERFLY	libavcodec/liba52/imdct.c	115;"	d	file:
BUTTERFLY1	libavcodec/dsputil.c	3183;"	d	file:
BUTTERFLY2	libavcodec/dsputil.c	3179;"	d	file:
BUTTERFLYA	libavcodec/dsputil.c	3192;"	d	file:
BUTTERFLY_0	libavcodec/liba52/imdct.c	101;"	d	file:
BUTTERFLY_B	libavcodec/liba52/imdct.c	108;"	d	file:
BUTTERFLY_HALF	libavcodec/liba52/imdct.c	151;"	d	file:
BUTTERFLY_ZERO	libavcodec/liba52/imdct.c	134;"	d	file:
BYTES_PER_FRAME_RECORD	libavformat/sierravmd.c	31;"	d	file:
BYTE_VEC	libavcodec/alpha/asm.h	/^static inline uint64_t BYTE_VEC(uint64_t x)$/;"	f
BYTE_VEC32	libavcodec/dsputil.h	341;"	d
B_TYPE	libavcodec/mpegvideo.h	66;"	d
BeginIDCT	libavcodec/i386/vp3dsp_mmx.c	49;"	d	file:
BitPlane	libavcodec/vc9.c	/^typedef struct BitPlane {$/;"	s	file:
BitPlane	libavcodec/vc9.c	/^} BitPlane;$/;"	t	file:
BlockInfo	libavcodec/dv.c	/^typedef struct BlockInfo {$/;"	s	file:
BlockInfo	libavcodec/dv.c	/^} BlockInfo;$/;"	t	file:
BlockNode	libavcodec/snow.c	/^typedef struct BlockNode{$/;"	s	file:
BlockNode	libavcodec/snow.c	/^}BlockNode;$/;"	t	file:
ByteIOContext	libavformat/avio.h	/^} ByteIOContext;$/;"	t
C	libavcodec/i386/vp3dsp_mmx.c	286;"	d	file:
C	libavcodec/i386/vp3dsp_sse2.c	814;"	d	file:
C0	libavcodec/i386/simple_idct_mmx.c	33;"	d	file:
C0	libavcodec/i386/simple_idct_mmx.c	88;"	d	file:
C1	libavcodec/i386/fdct_mmx.c	148;"	d	file:
C1	libavcodec/i386/fdct_mmx.c	157;"	d	file:
C1	libavcodec/i386/fdct_mmx.c	164;"	d	file:
C1	libavcodec/i386/fdct_mmx.c	173;"	d	file:
C1	libavcodec/i386/fdct_mmx.c	180;"	d	file:
C1	libavcodec/i386/fdct_mmx.c	189;"	d	file:
C1	libavcodec/i386/fdct_mmx.c	196;"	d	file:
C1	libavcodec/i386/fdct_mmx.c	205;"	d	file:
C1	libavcodec/i386/fdct_mmx.c	212;"	d	file:
C1	libavcodec/i386/fdct_mmx.c	221;"	d	file:
C1	libavcodec/i386/fdct_mmx.c	228;"	d	file:
C1	libavcodec/i386/fdct_mmx.c	237;"	d	file:
C1	libavcodec/i386/fdct_mmx.c	244;"	d	file:
C1	libavcodec/i386/fdct_mmx.c	253;"	d	file:
C1	libavcodec/i386/fdct_mmx.c	260;"	d	file:
C1	libavcodec/i386/simple_idct_mmx.c	34;"	d	file:
C1	libavcodec/i386/simple_idct_mmx.c	89;"	d	file:
C1	libavcodec/mpegaudiodec.c	1006;"	d	file:
C1	libavcodec/ppc/fdct_altivec.c	34;"	d	file:
C1	libavcodec/simple_idct.c	422;"	d	file:
C1	libavcodec/simple_idct.c	501;"	d	file:
C1	libavcodec/simple_idct.c	505;"	d	file:
C2	libavcodec/i386/fdct_mmx.c	149;"	d	file:
C2	libavcodec/i386/fdct_mmx.c	158;"	d	file:
C2	libavcodec/i386/fdct_mmx.c	165;"	d	file:
C2	libavcodec/i386/fdct_mmx.c	174;"	d	file:
C2	libavcodec/i386/fdct_mmx.c	181;"	d	file:
C2	libavcodec/i386/fdct_mmx.c	190;"	d	file:
C2	libavcodec/i386/fdct_mmx.c	197;"	d	file:
C2	libavcodec/i386/fdct_mmx.c	206;"	d	file:
C2	libavcodec/i386/fdct_mmx.c	213;"	d	file:
C2	libavcodec/i386/fdct_mmx.c	222;"	d	file:
C2	libavcodec/i386/fdct_mmx.c	229;"	d	file:
C2	libavcodec/i386/fdct_mmx.c	238;"	d	file:
C2	libavcodec/i386/fdct_mmx.c	245;"	d	file:
C2	libavcodec/i386/fdct_mmx.c	254;"	d	file:
C2	libavcodec/i386/fdct_mmx.c	261;"	d	file:
C2	libavcodec/i386/simple_idct_mmx.c	35;"	d	file:
C2	libavcodec/i386/simple_idct_mmx.c	90;"	d	file:
C2	libavcodec/mpegaudiodec.c	1007;"	d	file:
C2	libavcodec/ppc/fdct_altivec.c	35;"	d	file:
C2	libavcodec/simple_idct.c	423;"	d	file:
C2	libavcodec/simple_idct.c	502;"	d	file:
C2	libavcodec/simple_idct.c	506;"	d	file:
C3	libavcodec/i386/fdct_mmx.c	150;"	d	file:
C3	libavcodec/i386/fdct_mmx.c	159;"	d	file:
C3	libavcodec/i386/fdct_mmx.c	166;"	d	file:
C3	libavcodec/i386/fdct_mmx.c	175;"	d	file:
C3	libavcodec/i386/fdct_mmx.c	182;"	d	file:
C3	libavcodec/i386/fdct_mmx.c	191;"	d	file:
C3	libavcodec/i386/fdct_mmx.c	198;"	d	file:
C3	libavcodec/i386/fdct_mmx.c	207;"	d	file:
C3	libavcodec/i386/fdct_mmx.c	214;"	d	file:
C3	libavcodec/i386/fdct_mmx.c	223;"	d	file:
C3	libavcodec/i386/fdct_mmx.c	230;"	d	file:
C3	libavcodec/i386/fdct_mmx.c	239;"	d	file:
C3	libavcodec/i386/fdct_mmx.c	246;"	d	file:
C3	libavcodec/i386/fdct_mmx.c	255;"	d	file:
C3	libavcodec/i386/fdct_mmx.c	262;"	d	file:
C3	libavcodec/i386/simple_idct_mmx.c	36;"	d	file:
C3	libavcodec/i386/simple_idct_mmx.c	91;"	d	file:
C3	libavcodec/mpegaudiodec.c	1008;"	d	file:
C3	libavcodec/mpegaudiodec.c	947;"	d	file:
C3	libavcodec/ppc/fdct_altivec.c	36;"	d	file:
C3	libavcodec/simple_idct.c	507;"	d	file:
C4	libavcodec/i386/fdct_mmx.c	151;"	d	file:
C4	libavcodec/i386/fdct_mmx.c	160;"	d	file:
C4	libavcodec/i386/fdct_mmx.c	167;"	d	file:
C4	libavcodec/i386/fdct_mmx.c	176;"	d	file:
C4	libavcodec/i386/fdct_mmx.c	183;"	d	file:
C4	libavcodec/i386/fdct_mmx.c	192;"	d	file:
C4	libavcodec/i386/fdct_mmx.c	199;"	d	file:
C4	libavcodec/i386/fdct_mmx.c	208;"	d	file:
C4	libavcodec/i386/fdct_mmx.c	215;"	d	file:
C4	libavcodec/i386/fdct_mmx.c	224;"	d	file:
C4	libavcodec/i386/fdct_mmx.c	231;"	d	file:
C4	libavcodec/i386/fdct_mmx.c	240;"	d	file:
C4	libavcodec/i386/fdct_mmx.c	247;"	d	file:
C4	libavcodec/i386/fdct_mmx.c	256;"	d	file:
C4	libavcodec/i386/fdct_mmx.c	263;"	d	file:
C4	libavcodec/i386/idct_mmx.c	396;"	d	file:
C4	libavcodec/i386/idct_mmx.c	536;"	d	file:
C4	libavcodec/i386/simple_idct_mmx.c	38;"	d	file:
C4	libavcodec/i386/simple_idct_mmx.c	40;"	d	file:
C4	libavcodec/i386/simple_idct_mmx.c	92;"	d	file:
C4	libavcodec/mpegaudiodec.c	1009;"	d	file:
C4	libavcodec/ppc/fdct_altivec.c	37;"	d	file:
C5	libavcodec/i386/fdct_mmx.c	152;"	d	file:
C5	libavcodec/i386/fdct_mmx.c	161;"	d	file:
C5	libavcodec/i386/fdct_mmx.c	168;"	d	file:
C5	libavcodec/i386/fdct_mmx.c	177;"	d	file:
C5	libavcodec/i386/fdct_mmx.c	184;"	d	file:
C5	libavcodec/i386/fdct_mmx.c	193;"	d	file:
C5	libavcodec/i386/fdct_mmx.c	200;"	d	file:
C5	libavcodec/i386/fdct_mmx.c	209;"	d	file:
C5	libavcodec/i386/fdct_mmx.c	216;"	d	file:
C5	libavcodec/i386/fdct_mmx.c	225;"	d	file:
C5	libavcodec/i386/fdct_mmx.c	232;"	d	file:
C5	libavcodec/i386/fdct_mmx.c	241;"	d	file:
C5	libavcodec/i386/fdct_mmx.c	248;"	d	file:
C5	libavcodec/i386/fdct_mmx.c	257;"	d	file:
C5	libavcodec/i386/fdct_mmx.c	264;"	d	file:
C5	libavcodec/i386/simple_idct_mmx.c	42;"	d	file:
C5	libavcodec/i386/simple_idct_mmx.c	93;"	d	file:
C5	libavcodec/mpegaudiodec.c	1010;"	d	file:
C5	libavcodec/ppc/fdct_altivec.c	38;"	d	file:
C6	libavcodec/i386/fdct_mmx.c	153;"	d	file:
C6	libavcodec/i386/fdct_mmx.c	162;"	d	file:
C6	libavcodec/i386/fdct_mmx.c	169;"	d	file:
C6	libavcodec/i386/fdct_mmx.c	178;"	d	file:
C6	libavcodec/i386/fdct_mmx.c	185;"	d	file:
C6	libavcodec/i386/fdct_mmx.c	194;"	d	file:
C6	libavcodec/i386/fdct_mmx.c	201;"	d	file:
C6	libavcodec/i386/fdct_mmx.c	210;"	d	file:
C6	libavcodec/i386/fdct_mmx.c	217;"	d	file:
C6	libavcodec/i386/fdct_mmx.c	226;"	d	file:
C6	libavcodec/i386/fdct_mmx.c	233;"	d	file:
C6	libavcodec/i386/fdct_mmx.c	242;"	d	file:
C6	libavcodec/i386/fdct_mmx.c	249;"	d	file:
C6	libavcodec/i386/fdct_mmx.c	258;"	d	file:
C6	libavcodec/i386/fdct_mmx.c	265;"	d	file:
C6	libavcodec/i386/simple_idct_mmx.c	43;"	d	file:
C6	libavcodec/i386/simple_idct_mmx.c	94;"	d	file:
C6	libavcodec/mpegaudiodec.c	1011;"	d	file:
C6	libavcodec/ppc/fdct_altivec.c	39;"	d	file:
C7	libavcodec/i386/fdct_mmx.c	154;"	d	file:
C7	libavcodec/i386/fdct_mmx.c	163;"	d	file:
C7	libavcodec/i386/fdct_mmx.c	170;"	d	file:
C7	libavcodec/i386/fdct_mmx.c	179;"	d	file:
C7	libavcodec/i386/fdct_mmx.c	186;"	d	file:
C7	libavcodec/i386/fdct_mmx.c	195;"	d	file:
C7	libavcodec/i386/fdct_mmx.c	202;"	d	file:
C7	libavcodec/i386/fdct_mmx.c	211;"	d	file:
C7	libavcodec/i386/fdct_mmx.c	218;"	d	file:
C7	libavcodec/i386/fdct_mmx.c	227;"	d	file:
C7	libavcodec/i386/fdct_mmx.c	234;"	d	file:
C7	libavcodec/i386/fdct_mmx.c	243;"	d	file:
C7	libavcodec/i386/fdct_mmx.c	250;"	d	file:
C7	libavcodec/i386/fdct_mmx.c	259;"	d	file:
C7	libavcodec/i386/fdct_mmx.c	266;"	d	file:
C7	libavcodec/i386/simple_idct_mmx.c	44;"	d	file:
C7	libavcodec/i386/simple_idct_mmx.c	95;"	d	file:
C7	libavcodec/mpegaudiodec.c	1012;"	d	file:
C7	libavcodec/ppc/fdct_altivec.c	40;"	d	file:
C8	libavcodec/mpegaudiodec.c	1013;"	d	file:
CABACContext	libavcodec/cabac.h	/^typedef struct CABACContext{$/;"	s
CABACContext	libavcodec/cabac.h	/^}CABACContext;$/;"	t
CABAC_BITS	libavcodec/cabac.h	30;"	d
CABAC_MASK	libavcodec/cabac.h	31;"	d
CALL_2X_PIXELS	libavcodec/dsputil.h	121;"	d
CANDIDATE_MB_TYPE_BACKWARD	libavcodec/mpegvideo.h	446;"	d
CANDIDATE_MB_TYPE_BACKWARD_I	libavcodec/mpegvideo.h	451;"	d
CANDIDATE_MB_TYPE_BIDIR	libavcodec/mpegvideo.h	447;"	d
CANDIDATE_MB_TYPE_BIDIR_I	libavcodec/mpegvideo.h	452;"	d
CANDIDATE_MB_TYPE_DIRECT	libavcodec/mpegvideo.h	444;"	d
CANDIDATE_MB_TYPE_FORWARD	libavcodec/mpegvideo.h	445;"	d
CANDIDATE_MB_TYPE_FORWARD_I	libavcodec/mpegvideo.h	450;"	d
CANDIDATE_MB_TYPE_INTER	libavcodec/mpegvideo.h	439;"	d
CANDIDATE_MB_TYPE_INTER4V	libavcodec/mpegvideo.h	440;"	d
CANDIDATE_MB_TYPE_INTER_I	libavcodec/mpegvideo.h	449;"	d
CANDIDATE_MB_TYPE_INTRA	libavcodec/mpegvideo.h	438;"	d
CANDIDATE_MB_TYPE_SKIPPED	libavcodec/mpegvideo.h	441;"	d
CANONICAL_HEADER_SIZE	libavcodec/shorten.c	73;"	d	file:
CBF0_TAG	libavcodec/vqavideo.c	85;"	d	file:
CBFZ_TAG	libavcodec/vqavideo.c	86;"	d	file:
CBP0_TAG	libavcodec/vqavideo.c	87;"	d	file:
CBPC_B_VLC_BITS	libavcodec/h263.c	54;"	d	file:
CBPY_VLC_BITS	libavcodec/h263.c	47;"	d	file:
CBPY_VLC_BITS	libavcodec/msmpeg4.c	42;"	d	file:
CBPZ_TAG	libavcodec/vqavideo.c	88;"	d	file:
CC	config.mak	/^CC=gcc$/;"	m
CDXA_TAG	libavformat/psxstr.c	35;"	d	file:
CDXA_TYPE_AUDIO	libavformat/psxstr.c	45;"	d	file:
CDXA_TYPE_DATA	libavformat/psxstr.c	44;"	d	file:
CDXA_TYPE_MASK	libavformat/psxstr.c	43;"	d	file:
CDXA_TYPE_VIDEO	libavformat/psxstr.c	46;"	d	file:
CENTERSAMPLE	libavcodec/xan.c	63;"	d	file:
CFLAGS	Makefile	/^CFLAGS=$(OPTFLAGS) -I. -I$(SRC_PATH) -I$(SRC_PATH)\/libavcodec -I$(SRC_PATH)\/libavformat -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -D_GNU_SOURCE$/;"	m
CFLAGS	libavcodec/Makefile	/^CFLAGS=$(OPTFLAGS) -DHAVE_AV_CONFIG_H -I.. -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -D_GNU_SOURCE $(AMR_CFLAGS)$/;"	m
CFLAGS	libavcodec/libpostproc/Makefile	/^CFLAGS  = $(OPTFLAGS) $(MLIB_INC) -I. -I.. $(EXTRA_INC)$/;"	m
CFLAGS	libavformat/Makefile	/^CFLAGS=$(OPTFLAGS) -I.. -I$(SRC_PATH) -I$(SRC_PATH)\/libavcodec -DHAVE_AV_CONFIG_H -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -D_GNU_SOURCE$/;"	m
CFLAGS	tests/Makefile	/^CFLAGS=-O2 -Wall -g$/;"	m
CFLAGS	vhook/Makefile	/^CFLAGS=-fPIC $(SHCFLAGS) -I.. -I$(SRC_PATH) -I$(SRC_PATH)\/libavformat -I$(SRC_PATH)\/libavcodec -DHAVE_AV_CONFIG_H$/;"	m
CFRAME_BUFFER_COUNT	libavcodec/4xm.c	35;"	d	file:
CFrameBuffer	libavcodec/4xm.c	/^typedef struct CFrameBuffer{$/;"	s	file:
CFrameBuffer	libavcodec/4xm.c	/^}CFrameBuffer;$/;"	t	file:
CHANSIZE	libavcodec/shorten.c	45;"	d	file:
CHECKED_ALLOCZ	libavcodec/common.h	537;"	d
CHECK_CLIPED_MV	libavcodec/motion_est_template.c	516;"	d	file:
CHECK_CODEC	ffserver.c	3446;"	d	file:
CHECK_COUNT	libavcodec/vqavideo.c	198;"	d	file:
CHECK_COUNT	libavformat/mpegts.c	1022;"	d	file:
CHECK_HALF_MV	libavcodec/motion_est_template.c	37;"	d	file:
CHECK_MV	libavcodec/motion_est_template.c	497;"	d	file:
CHECK_MV_DIR	libavcodec/motion_est_template.c	525;"	d	file:
CHECK_PIXEL_PTR	libavcodec/qtrle.c	60;"	d	file:
CHECK_QUARTER_MV	libavcodec/motion_est_template.c	264;"	d	file:
CHECK_SAD_HALF_MV	libavcodec/motion_est.c	545;"	d	file:
CHECK_STREAM_PTR	libavcodec/interplayvideo.c	77;"	d	file:
CHECK_STREAM_PTR	libavcodec/msvideo1.c	42;"	d	file:
CHECK_STREAM_PTR	libavcodec/qtrle.c	53;"	d	file:
CHECK_SUBSEQUENT_NSVS	libavformat/nsvdec.c	25;"	d	file:
CHROMA_420	libavcodec/mpegvideo.h	672;"	d
CHROMA_422	libavcodec/mpegvideo.h	673;"	d
CHROMA_444	libavcodec/mpegvideo.h	674;"	d
CHROMA_DC_BLOCK_INDEX	libavcodec/h264.c	43;"	d	file:
CHROMA_DC_COEFF_TOKEN_VLC_BITS	libavcodec/h264.c	45;"	d	file:
CHROMA_DC_TOTAL_ZEROS_VLC_BITS	libavcodec/h264.c	48;"	d	file:
CHROM_DERING	libavcodec/libpostproc/postprocess_internal.h	34;"	d
CHROM_H_DEBLOCK	libavcodec/libpostproc/postprocess_internal.h	32;"	d
CHROM_LEVEL_FIX	libavcodec/libpostproc/postprocess_internal.h	36;"	d
CHROM_V_DEBLOCK	libavcodec/libpostproc/postprocess_internal.h	31;"	d
CHUNK_AUDIO_ONLY	libavformat/ipmovie.c	51;"	d	file:
CHUNK_BAD	libavformat/ipmovie.c	60;"	d	file:
CHUNK_DONE	libavformat/ipmovie.c	57;"	d	file:
CHUNK_END	libavformat/ipmovie.c	55;"	d	file:
CHUNK_EOF	libavformat/ipmovie.c	59;"	d	file:
CHUNK_INIT_AUDIO	libavformat/ipmovie.c	50;"	d	file:
CHUNK_INIT_VIDEO	libavformat/ipmovie.c	52;"	d	file:
CHUNK_NOMEM	libavformat/ipmovie.c	58;"	d	file:
CHUNK_PREAMBLE_SIZE	libavcodec/vqavideo.c	76;"	d	file:
CHUNK_PREAMBLE_SIZE	libavformat/ipmovie.c	47;"	d	file:
CHUNK_SHUTDOWN	libavformat/ipmovie.c	54;"	d	file:
CHUNK_VIDEO	libavformat/ipmovie.c	53;"	d	file:
CIND_TAG	libavformat/westwood.c	51;"	d	file:
CINF_TAG	libavformat/westwood.c	49;"	d	file:
CINH_TAG	libavformat/westwood.c	50;"	d	file:
CLAMP_TO_SHORT	libavcodec/adpcm.c	49;"	d	file:
CLEANAMR	libavcodec/Makefile	/^CLEANAMR=cleanamr$/;"	m
CLEANAMR	libavcodec/Makefile	/^CLEANAMR=cleanamrfloat$/;"	m
CLEANAMRWB	libavcodec/Makefile	/^CLEANAMRWB=cleanamrwbfloat$/;"	m
CLEANVHOOK	Makefile	/^CLEANVHOOK=clean-vhook$/;"	m
CLIP	libavcodec/adx.c	47;"	d	file:
CLIP	libavcodec/libpostproc/postprocess_internal.h	/^static inline int CLIP(int a){$/;"	f
CLIP	libavcodec/libpostproc/postprocess_internal.h	74;"	d
CLIP	libavcodec/libpostproc/postprocess_internal.h	76;"	d
CLIP8	libavcodec/ws-snd1.c	38;"	d	file:
CLIPMAX	libavcodec/ps2/idct_mmi.c	40;"	d	file:
CLJRContext	libavcodec/cljr.c	/^typedef struct CLJRContext{$/;"	s	file:
CLJRContext	libavcodec/cljr.c	/^} CLJRContext;$/;"	t	file:
CLOSE_READER	libavcodec/bitstream.h	388;"	d
CLOSE_READER	libavcodec/bitstream.h	445;"	d
CLOSE_READER	libavcodec/bitstream.h	508;"	d
CMAC	libavcodec/fft-test.c	17;"	d	file:
CMOV_ATOM	qt-faststart.c	59;"	d	file:
CMUL	libavcodec/ac3enc.c	330;"	d	file:
CMUL	libavcodec/fft.c	138;"	d	file:
CMUL	libavcodec/mdct.c	61;"	d	file:
CMUL	libavcodec/ppc/fft_altivec.c	45;"	d	file:
CN_SHIFT	libavcodec/simple_idct.c	420;"	d	file:
CN_SHIFT	libavcodec/simple_idct.c	498;"	d	file:
CN_SHIFT	libavcodec/simple_idct.c	503;"	d	file:
CO64_ATOM	qt-faststart.c	61;"	d	file:
COCTET	libavcodec/smc.c	41;"	d	file:
CODEC_CAP_DELAY	libavcodec/avcodec.h	363;"	d
CODEC_CAP_DR1	libavcodec/avcodec.h	352;"	d
CODEC_CAP_DRAW_HORIZ_BAND	libavcodec/avcodec.h	347;"	d
CODEC_CAP_HWACCEL	libavcodec/avcodec.h	358;"	d
CODEC_CAP_PARSE_ONLY	libavcodec/avcodec.h	355;"	d
CODEC_CAP_TRUNCATED	libavcodec/avcodec.h	356;"	d
CODEC_FLAG2_FAST	libavcodec/avcodec.h	336;"	d
CODEC_FLAG2_NO_OUTPUT	libavcodec/avcodec.h	338;"	d
CODEC_FLAG2_STRICT_GOP	libavcodec/avcodec.h	337;"	d
CODEC_FLAG_4MV	libavcodec/avcodec.h	300;"	d
CODEC_FLAG_AC_PRED	libavcodec/avcodec.h	325;"	d
CODEC_FLAG_ALT_SCAN	libavcodec/avcodec.h	319;"	d
CODEC_FLAG_BITEXACT	libavcodec/avcodec.h	322;"	d
CODEC_FLAG_CBP_RD	libavcodec/avcodec.h	327;"	d
CODEC_FLAG_CLOSED_GOP	libavcodec/avcodec.h	335;"	d
CODEC_FLAG_EMU_EDGE	libavcodec/avcodec.h	312;"	d
CODEC_FLAG_EXTERN_HUFF	libavcodec/avcodec.h	310;"	d
CODEC_FLAG_GLOBAL_HEADER	libavcodec/avcodec.h	321;"	d
CODEC_FLAG_GMC	libavcodec/avcodec.h	302;"	d
CODEC_FLAG_GRAY	libavcodec/avcodec.h	311;"	d
CODEC_FLAG_H263P_AIC	libavcodec/avcodec.h	324;"	d
CODEC_FLAG_H263P_AIV	libavcodec/avcodec.h	329;"	d
CODEC_FLAG_H263P_SLICE_STRUCT	libavcodec/avcodec.h	332;"	d
CODEC_FLAG_H263P_UMV	libavcodec/avcodec.h	326;"	d
CODEC_FLAG_INPUT_PRESERVED	libavcodec/avcodec.h	307;"	d
CODEC_FLAG_INTERLACED_DCT	libavcodec/avcodec.h	317;"	d
CODEC_FLAG_INTERLACED_ME	libavcodec/avcodec.h	333;"	d
CODEC_FLAG_LOOP_FILTER	libavcodec/avcodec.h	331;"	d
CODEC_FLAG_LOW_DELAY	libavcodec/avcodec.h	318;"	d
CODEC_FLAG_MV0	libavcodec/avcodec.h	303;"	d
CODEC_FLAG_NORMALIZE_AQP	libavcodec/avcodec.h	316;"	d
CODEC_FLAG_OBMC	libavcodec/avcodec.h	330;"	d
CODEC_FLAG_PART	libavcodec/avcodec.h	304;"	d
CODEC_FLAG_PASS1	libavcodec/avcodec.h	308;"	d
CODEC_FLAG_PASS2	libavcodec/avcodec.h	309;"	d
CODEC_FLAG_PSNR	libavcodec/avcodec.h	313;"	d
CODEC_FLAG_QPEL	libavcodec/avcodec.h	301;"	d
CODEC_FLAG_QP_RD	libavcodec/avcodec.h	328;"	d
CODEC_FLAG_QSCALE	libavcodec/avcodec.h	299;"	d
CODEC_FLAG_SVCD_SCAN_OFFSET	libavcodec/avcodec.h	334;"	d
CODEC_FLAG_TRELLIS_QUANT	libavcodec/avcodec.h	320;"	d
CODEC_FLAG_TRUNCATED	libavcodec/avcodec.h	314;"	d
CODEC_ID_4XM	libavcodec/avcodec.h	/^    CODEC_ID_4XM,$/;"	e	enum:CodecID
CODEC_ID_8BPS	libavcodec/avcodec.h	/^    CODEC_ID_8BPS,$/;"	e	enum:CodecID
CODEC_ID_AAC	libavcodec/avcodec.h	/^    CODEC_ID_AAC,$/;"	e	enum:CodecID
CODEC_ID_AASC	libavcodec/avcodec.h	/^    CODEC_ID_AASC,$/;"	e	enum:CodecID
CODEC_ID_AC3	libavcodec/avcodec.h	/^    CODEC_ID_AC3,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_4XM	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_4XM,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_ADX	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_ADX,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_CT	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_CT,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_EA	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_EA,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_G726	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_G726,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_IMA_DK3	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_IMA_DK3,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_IMA_DK4	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_IMA_DK4,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_IMA_QT	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_IMA_QT= 0x11000,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_IMA_SMJPEG	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_IMA_SMJPEG,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_IMA_WAV	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_IMA_WAV,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_IMA_WS	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_IMA_WS,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_MS	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_MS,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_SWF	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_SWF,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_XA	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_XA,$/;"	e	enum:CodecID
CODEC_ID_ALAC	libavcodec/avcodec.h	/^    CODEC_ID_ALAC,$/;"	e	enum:CodecID
CODEC_ID_AMR_NB	libavcodec/avcodec.h	/^    CODEC_ID_AMR_NB= 0x12000,$/;"	e	enum:CodecID
CODEC_ID_AMR_WB	libavcodec/avcodec.h	/^    CODEC_ID_AMR_WB,$/;"	e	enum:CodecID
CODEC_ID_ASV1	libavcodec/avcodec.h	/^    CODEC_ID_ASV1,$/;"	e	enum:CodecID
CODEC_ID_ASV2	libavcodec/avcodec.h	/^    CODEC_ID_ASV2,$/;"	e	enum:CodecID
CODEC_ID_CINEPAK	libavcodec/avcodec.h	/^    CODEC_ID_CINEPAK,$/;"	e	enum:CodecID
CODEC_ID_CLJR	libavcodec/avcodec.h	/^    CODEC_ID_CLJR,$/;"	e	enum:CodecID
CODEC_ID_CYUV	libavcodec/avcodec.h	/^    CODEC_ID_CYUV,$/;"	e	enum:CodecID
CODEC_ID_DTS	libavcodec/avcodec.h	/^    CODEC_ID_DTS,$/;"	e	enum:CodecID
CODEC_ID_DVAUDIO	libavcodec/avcodec.h	/^    CODEC_ID_DVAUDIO,$/;"	e	enum:CodecID
CODEC_ID_DVVIDEO	libavcodec/avcodec.h	/^    CODEC_ID_DVVIDEO,$/;"	e	enum:CodecID
CODEC_ID_FFV1	libavcodec/avcodec.h	/^    CODEC_ID_FFV1,$/;"	e	enum:CodecID
CODEC_ID_FFVHUFF	libavcodec/avcodec.h	/^    CODEC_ID_FFVHUFF,$/;"	e	enum:CodecID
CODEC_ID_FLAC	libavcodec/avcodec.h	/^    CODEC_ID_FLAC,$/;"	e	enum:CodecID
CODEC_ID_FLIC	libavcodec/avcodec.h	/^    CODEC_ID_FLIC,$/;"	e	enum:CodecID
CODEC_ID_FLV1	libavcodec/avcodec.h	/^    CODEC_ID_FLV1,$/;"	e	enum:CodecID
CODEC_ID_FRAPS	libavcodec/avcodec.h	/^    CODEC_ID_FRAPS,$/;"	e	enum:CodecID
CODEC_ID_GSM	libavcodec/avcodec.h	/^    CODEC_ID_GSM,    $/;"	e	enum:CodecID
CODEC_ID_H261	libavcodec/avcodec.h	/^    CODEC_ID_H261,$/;"	e	enum:CodecID
CODEC_ID_H263	libavcodec/avcodec.h	/^    CODEC_ID_H263,$/;"	e	enum:CodecID
CODEC_ID_H263I	libavcodec/avcodec.h	/^    CODEC_ID_H263I,$/;"	e	enum:CodecID
CODEC_ID_H263P	libavcodec/avcodec.h	/^    CODEC_ID_H263P,$/;"	e	enum:CodecID
CODEC_ID_H264	libavcodec/avcodec.h	/^    CODEC_ID_H264,$/;"	e	enum:CodecID
CODEC_ID_HUFFYUV	libavcodec/avcodec.h	/^    CODEC_ID_HUFFYUV,$/;"	e	enum:CodecID
CODEC_ID_IDCIN	libavcodec/avcodec.h	/^    CODEC_ID_IDCIN,$/;"	e	enum:CodecID
CODEC_ID_INDEO2	libavcodec/avcodec.h	/^    CODEC_ID_INDEO2,$/;"	e	enum:CodecID
CODEC_ID_INDEO3	libavcodec/avcodec.h	/^    CODEC_ID_INDEO3,$/;"	e	enum:CodecID
CODEC_ID_INTERPLAY_DPCM	libavcodec/avcodec.h	/^    CODEC_ID_INTERPLAY_DPCM,$/;"	e	enum:CodecID
CODEC_ID_INTERPLAY_VIDEO	libavcodec/avcodec.h	/^    CODEC_ID_INTERPLAY_VIDEO,$/;"	e	enum:CodecID
CODEC_ID_LJPEG	libavcodec/avcodec.h	/^    CODEC_ID_LJPEG,$/;"	e	enum:CodecID
CODEC_ID_LOCO	libavcodec/avcodec.h	/^    CODEC_ID_LOCO,$/;"	e	enum:CodecID
CODEC_ID_MACE3	libavcodec/avcodec.h	/^    CODEC_ID_MACE3,$/;"	e	enum:CodecID
CODEC_ID_MACE6	libavcodec/avcodec.h	/^    CODEC_ID_MACE6,$/;"	e	enum:CodecID
CODEC_ID_MDEC	libavcodec/avcodec.h	/^    CODEC_ID_MDEC,$/;"	e	enum:CodecID
CODEC_ID_MJPEG	libavcodec/avcodec.h	/^    CODEC_ID_MJPEG,$/;"	e	enum:CodecID
CODEC_ID_MJPEGB	libavcodec/avcodec.h	/^    CODEC_ID_MJPEGB,$/;"	e	enum:CodecID
CODEC_ID_MP2	libavcodec/avcodec.h	/^    CODEC_ID_MP2= 0x15000,$/;"	e	enum:CodecID
CODEC_ID_MP3	libavcodec/avcodec.h	/^    CODEC_ID_MP3, \/* prefered ID for MPEG Audio layer 1, 2 or3 decoding *\/$/;"	e	enum:CodecID
CODEC_ID_MP3ADU	libavcodec/avcodec.h	/^    CODEC_ID_MP3ADU,$/;"	e	enum:CodecID
CODEC_ID_MP3LAME	libavcodec/avcodec.h	184;"	d
CODEC_ID_MP3ON4	libavcodec/avcodec.h	/^    CODEC_ID_MP3ON4,$/;"	e	enum:CodecID
CODEC_ID_MPEG1VIDEO	libavcodec/avcodec.h	/^    CODEC_ID_MPEG1VIDEO,$/;"	e	enum:CodecID
CODEC_ID_MPEG2TS	libavcodec/avcodec.h	/^    CODEC_ID_MPEG2TS= 0x20000, \/* _FAKE_ codec to indicate a raw MPEG2 transport$/;"	e	enum:CodecID
CODEC_ID_MPEG2VIDEO	libavcodec/avcodec.h	/^    CODEC_ID_MPEG2VIDEO, \/* prefered ID for MPEG Video 1 or 2 decoding *\/$/;"	e	enum:CodecID
CODEC_ID_MPEG2VIDEO_XVMC	libavcodec/avcodec.h	/^    CODEC_ID_MPEG2VIDEO_XVMC,$/;"	e	enum:CodecID
CODEC_ID_MPEG4	libavcodec/avcodec.h	/^    CODEC_ID_MPEG4,$/;"	e	enum:CodecID
CODEC_ID_MPEG4AAC	libavcodec/avcodec.h	/^    CODEC_ID_MPEG4AAC,$/;"	e	enum:CodecID
CODEC_ID_MSMPEG4V1	libavcodec/avcodec.h	/^    CODEC_ID_MSMPEG4V1,$/;"	e	enum:CodecID
CODEC_ID_MSMPEG4V2	libavcodec/avcodec.h	/^    CODEC_ID_MSMPEG4V2,$/;"	e	enum:CodecID
CODEC_ID_MSMPEG4V3	libavcodec/avcodec.h	/^    CODEC_ID_MSMPEG4V3,$/;"	e	enum:CodecID
CODEC_ID_MSRLE	libavcodec/avcodec.h	/^    CODEC_ID_MSRLE,$/;"	e	enum:CodecID
CODEC_ID_MSVIDEO1	libavcodec/avcodec.h	/^    CODEC_ID_MSVIDEO1,$/;"	e	enum:CodecID
CODEC_ID_MSZH	libavcodec/avcodec.h	/^    CODEC_ID_MSZH,$/;"	e	enum:CodecID
CODEC_ID_NONE	libavcodec/avcodec.h	/^    CODEC_ID_NONE, $/;"	e	enum:CodecID
CODEC_ID_OGGTHEORA	libavcodec/avcodec.h	/^    CODEC_ID_OGGTHEORA= 0x16000, $/;"	e	enum:CodecID
CODEC_ID_PAM	libavcodec/avcodec.h	/^    CODEC_ID_PAM,$/;"	e	enum:CodecID
CODEC_ID_PBM	libavcodec/avcodec.h	/^    CODEC_ID_PBM,$/;"	e	enum:CodecID
CODEC_ID_PCM_ALAW	libavcodec/avcodec.h	/^    CODEC_ID_PCM_ALAW,$/;"	e	enum:CodecID
CODEC_ID_PCM_MULAW	libavcodec/avcodec.h	/^    CODEC_ID_PCM_MULAW,$/;"	e	enum:CodecID
CODEC_ID_PCM_S16BE	libavcodec/avcodec.h	/^    CODEC_ID_PCM_S16BE,$/;"	e	enum:CodecID
CODEC_ID_PCM_S16LE	libavcodec/avcodec.h	/^    CODEC_ID_PCM_S16LE= 0x10000,$/;"	e	enum:CodecID
CODEC_ID_PCM_S8	libavcodec/avcodec.h	/^    CODEC_ID_PCM_S8,$/;"	e	enum:CodecID
CODEC_ID_PCM_U16BE	libavcodec/avcodec.h	/^    CODEC_ID_PCM_U16BE,$/;"	e	enum:CodecID
CODEC_ID_PCM_U16LE	libavcodec/avcodec.h	/^    CODEC_ID_PCM_U16LE,$/;"	e	enum:CodecID
CODEC_ID_PCM_U8	libavcodec/avcodec.h	/^    CODEC_ID_PCM_U8,$/;"	e	enum:CodecID
CODEC_ID_PGM	libavcodec/avcodec.h	/^    CODEC_ID_PGM,$/;"	e	enum:CodecID
CODEC_ID_PGMYUV	libavcodec/avcodec.h	/^    CODEC_ID_PGMYUV,$/;"	e	enum:CodecID
CODEC_ID_PNG	libavcodec/avcodec.h	/^    CODEC_ID_PNG,$/;"	e	enum:CodecID
CODEC_ID_PPM	libavcodec/avcodec.h	/^    CODEC_ID_PPM,$/;"	e	enum:CodecID
CODEC_ID_QDRAW	libavcodec/avcodec.h	/^    CODEC_ID_QDRAW,$/;"	e	enum:CodecID
CODEC_ID_QPEG	libavcodec/avcodec.h	/^    CODEC_ID_QPEG,$/;"	e	enum:CodecID
CODEC_ID_QTRLE	libavcodec/avcodec.h	/^    CODEC_ID_QTRLE,$/;"	e	enum:CodecID
CODEC_ID_RAWVIDEO	libavcodec/avcodec.h	/^    CODEC_ID_RAWVIDEO,$/;"	e	enum:CodecID
CODEC_ID_RA_144	libavcodec/avcodec.h	/^    CODEC_ID_RA_144= 0x13000,$/;"	e	enum:CodecID
CODEC_ID_RA_288	libavcodec/avcodec.h	/^    CODEC_ID_RA_288,$/;"	e	enum:CodecID
CODEC_ID_ROQ	libavcodec/avcodec.h	/^    CODEC_ID_ROQ,$/;"	e	enum:CodecID
CODEC_ID_ROQ_DPCM	libavcodec/avcodec.h	/^    CODEC_ID_ROQ_DPCM= 0x14000,$/;"	e	enum:CodecID
CODEC_ID_RPZA	libavcodec/avcodec.h	/^    CODEC_ID_RPZA,$/;"	e	enum:CodecID
CODEC_ID_RV10	libavcodec/avcodec.h	/^    CODEC_ID_RV10,$/;"	e	enum:CodecID
CODEC_ID_RV20	libavcodec/avcodec.h	/^    CODEC_ID_RV20,$/;"	e	enum:CodecID
CODEC_ID_RV30	libavcodec/avcodec.h	/^    CODEC_ID_RV30,$/;"	e	enum:CodecID
CODEC_ID_RV40	libavcodec/avcodec.h	/^    CODEC_ID_RV40,$/;"	e	enum:CodecID
CODEC_ID_SHORTEN	libavcodec/avcodec.h	/^    CODEC_ID_SHORTEN,$/;"	e	enum:CodecID
CODEC_ID_SMC	libavcodec/avcodec.h	/^    CODEC_ID_SMC,$/;"	e	enum:CodecID
CODEC_ID_SNOW	libavcodec/avcodec.h	/^    CODEC_ID_SNOW,$/;"	e	enum:CodecID
CODEC_ID_SOL_DPCM	libavcodec/avcodec.h	/^    CODEC_ID_SOL_DPCM,$/;"	e	enum:CodecID
CODEC_ID_SONIC	libavcodec/avcodec.h	/^    CODEC_ID_SONIC,$/;"	e	enum:CodecID
CODEC_ID_SONIC_LS	libavcodec/avcodec.h	/^    CODEC_ID_SONIC_LS,$/;"	e	enum:CodecID
CODEC_ID_SP5X	libavcodec/avcodec.h	/^    CODEC_ID_SP5X,$/;"	e	enum:CodecID
CODEC_ID_SVQ1	libavcodec/avcodec.h	/^    CODEC_ID_SVQ1,$/;"	e	enum:CodecID
CODEC_ID_SVQ3	libavcodec/avcodec.h	/^    CODEC_ID_SVQ3,$/;"	e	enum:CodecID
CODEC_ID_THEORA	libavcodec/avcodec.h	/^    CODEC_ID_THEORA,$/;"	e	enum:CodecID
CODEC_ID_TRUEMOTION1	libavcodec/avcodec.h	/^    CODEC_ID_TRUEMOTION1,$/;"	e	enum:CodecID
CODEC_ID_TSCC	libavcodec/avcodec.h	/^    CODEC_ID_TSCC,$/;"	e	enum:CodecID
CODEC_ID_ULTI	libavcodec/avcodec.h	/^    CODEC_ID_ULTI,$/;"	e	enum:CodecID
CODEC_ID_VC9	libavcodec/avcodec.h	/^    CODEC_ID_VC9,$/;"	e	enum:CodecID
CODEC_ID_VCR1	libavcodec/avcodec.h	/^    CODEC_ID_VCR1,$/;"	e	enum:CodecID
CODEC_ID_VIXL	libavcodec/avcodec.h	/^    CODEC_ID_VIXL,$/;"	e	enum:CodecID
CODEC_ID_VMDAUDIO	libavcodec/avcodec.h	/^    CODEC_ID_VMDAUDIO,$/;"	e	enum:CodecID
CODEC_ID_VMDVIDEO	libavcodec/avcodec.h	/^    CODEC_ID_VMDVIDEO,$/;"	e	enum:CodecID
CODEC_ID_VORBIS	libavcodec/avcodec.h	/^    CODEC_ID_VORBIS,$/;"	e	enum:CodecID
CODEC_ID_VP3	libavcodec/avcodec.h	/^    CODEC_ID_VP3,$/;"	e	enum:CodecID
CODEC_ID_WESTWOOD_SND1	libavcodec/avcodec.h	/^    CODEC_ID_WESTWOOD_SND1,$/;"	e	enum:CodecID
CODEC_ID_WMAV1	libavcodec/avcodec.h	/^    CODEC_ID_WMAV1,$/;"	e	enum:CodecID
CODEC_ID_WMAV2	libavcodec/avcodec.h	/^    CODEC_ID_WMAV2,$/;"	e	enum:CodecID
CODEC_ID_WMV1	libavcodec/avcodec.h	/^    CODEC_ID_WMV1,$/;"	e	enum:CodecID
CODEC_ID_WMV2	libavcodec/avcodec.h	/^    CODEC_ID_WMV2,$/;"	e	enum:CodecID
CODEC_ID_WMV3	libavcodec/avcodec.h	/^    CODEC_ID_WMV3,$/;"	e	enum:CodecID
CODEC_ID_WNV1	libavcodec/avcodec.h	/^    CODEC_ID_WNV1,$/;"	e	enum:CodecID
CODEC_ID_WS_VQA	libavcodec/avcodec.h	/^    CODEC_ID_WS_VQA,$/;"	e	enum:CodecID
CODEC_ID_XAN_DPCM	libavcodec/avcodec.h	/^    CODEC_ID_XAN_DPCM,$/;"	e	enum:CodecID
CODEC_ID_XAN_WC3	libavcodec/avcodec.h	/^    CODEC_ID_XAN_WC3,$/;"	e	enum:CodecID
CODEC_ID_XAN_WC4	libavcodec/avcodec.h	/^    CODEC_ID_XAN_WC4,$/;"	e	enum:CodecID
CODEC_ID_XVID	libavcodec/avcodec.h	/^    CODEC_ID_XVID,$/;"	e	enum:CodecID
CODEC_ID_ZLIB	libavcodec/avcodec.h	/^    CODEC_ID_ZLIB,$/;"	e	enum:CodecID
CODEC_MSZH	libavcodec/lcl.c	73;"	d	file:
CODEC_TYPE_AUDIO	libavcodec/avcodec.h	/^    CODEC_TYPE_AUDIO,$/;"	e	enum:CodecType
CODEC_TYPE_DATA	libavcodec/avcodec.h	/^    CODEC_TYPE_DATA,$/;"	e	enum:CodecType
CODEC_TYPE_MOV_OTHER	libavformat/mov.c	80;"	d	file:
CODEC_TYPE_UNKNOWN	libavcodec/avcodec.h	/^    CODEC_TYPE_UNKNOWN = -1,$/;"	e	enum:CodecType
CODEC_TYPE_VIDEO	libavcodec/avcodec.h	/^    CODEC_TYPE_VIDEO,$/;"	e	enum:CodecType
CODEC_ZLIB	libavcodec/lcl.c	74;"	d	file:
CODE_VLC_BITS	libavcodec/indeo2.c	37;"	d	file:
CODE_VLC_BITS	libavcodec/wnv1.c	45;"	d	file:
CODING_MODE_COUNT	libavcodec/vp3.c	169;"	d	file:
COEFF	libavcodec/liba52/parse.c	315;"	d	file:
COEFF	libavcodec/liba52/parse.c	317;"	d	file:
COEFFS1	libavcodec/snow.c	825;"	d	file:
COEFFS1	libavcodec/snow.c	838;"	d	file:
COEFFS1	libavcodec/snow.c	854;"	d	file:
COEFFS1	libavcodec/snow.c	867;"	d	file:
COEFFS1	libavcodec/snow.c	881;"	d	file:
COEFFS1	libavcodec/snow.c	895;"	d	file:
COEFFS1	libavcodec/snow.c	908;"	d	file:
COEFFS1	libavcodec/snow.c	921;"	d	file:
COEFFS2	libavcodec/snow.c	828;"	d	file:
COEFFS2	libavcodec/snow.c	841;"	d	file:
COEFFS2	libavcodec/snow.c	857;"	d	file:
COEFFS2	libavcodec/snow.c	870;"	d	file:
COEFFS2	libavcodec/snow.c	884;"	d	file:
COEFFS2	libavcodec/snow.c	898;"	d	file:
COEFFS2	libavcodec/snow.c	911;"	d	file:
COEFFS2	libavcodec/snow.c	924;"	d	file:
COEFFS3	libavcodec/snow.c	831;"	d	file:
COEFFS3	libavcodec/snow.c	844;"	d	file:
COEFFS3	libavcodec/snow.c	860;"	d	file:
COEFFS3	libavcodec/snow.c	873;"	d	file:
COEFFS3	libavcodec/snow.c	887;"	d	file:
COEFFS3	libavcodec/snow.c	901;"	d	file:
COEFFS3	libavcodec/snow.c	914;"	d	file:
COEFFS3	libavcodec/snow.c	927;"	d	file:
COEFFS4	libavcodec/snow.c	834;"	d	file:
COEFFS4	libavcodec/snow.c	847;"	d	file:
COEFFS4	libavcodec/snow.c	863;"	d	file:
COEFFS4	libavcodec/snow.c	876;"	d	file:
COEFFS4	libavcodec/snow.c	890;"	d	file:
COEFFS4	libavcodec/snow.c	904;"	d	file:
COEFFS4	libavcodec/snow.c	917;"	d	file:
COEFFS4	libavcodec/snow.c	930;"	d	file:
COEFF_TOKEN_VLC_BITS	libavcodec/h264.c	46;"	d	file:
COLOR	libavcodec/mpegvideo.c	1897;"	d	file:
COLORS_PER_TABLE	libavcodec/smc.c	43;"	d	file:
COL_IDCT	libavcodec/i386/simple_idct_mmx.c	284;"	d	file:
COL_SHIFT	libavcodec/alpha/simple_idct_alpha.c	46;"	d	file:
COL_SHIFT	libavcodec/armv4l/simple_idct_arm.S	/^#define COL_SHIFT 20$/;"	d
COL_SHIFT	libavcodec/i386/idct_mmx.c	33;"	d	file:
COL_SHIFT	libavcodec/i386/idct_mmx.c	555;"	d	file:
COL_SHIFT	libavcodec/i386/simple_idct_mmx.c	47;"	d	file:
COL_SHIFT	libavcodec/simple_idct.c	43;"	d	file:
COL_SHIFT	libavcodec/simple_idct.c	53;"	d	file:
COL_SHIFTED_1	libavcodec/armv4l/simple_idct_arm.S	/^#define COL_SHIFTED_1 524288 \/* 1<< (COL_SHIFT-1) *\/$/;"	d
COM	libavcodec/mjpeg.c	/^    COM   = 0xfe,	\/* comment *\/$/;"	e	file:
COMMAND_SIZE	vhook/ppm.c	59;"	d	file:
COMMON_H	libavcodec/common.h	7;"	d
COMPARE	libavcodec/libpostproc/postprocess_altivec_template.c	595;"	d	file:
COMPARE	libavcodec/libpostproc/postprocess_altivec_template.c	622;"	d	file:
COMPATIBLE_FRAME	libavcodec/vp3.c	1888;"	d	file:
COMPILE_3DNOW	libavcodec/libpostproc/postprocess.c	611;"	d	file:
COMPILE_ALTIVEC	libavcodec/libpostproc/postprocess.c	596;"	d	file:
COMPILE_C	libavcodec/libpostproc/postprocess.c	591;"	d	file:
COMPILE_MMX	libavcodec/libpostproc/postprocess.c	603;"	d	file:
COMPILE_MMX2	libavcodec/libpostproc/postprocess.c	607;"	d	file:
COMPUTE_MASK	libavcodec/liba52/bit_allocate.c	108;"	d	file:
COMPUTE_U	libavcodec/xan.c	68;"	d	file:
COMPUTE_V	libavcodec/xan.c	71;"	d	file:
COMPUTE_VR	libavcodec/libpostproc/postprocess_altivec_template.c	311;"	d	file:
COMPUTE_Y	libavcodec/xan.c	65;"	d	file:
COMP_MSZH	libavcodec/lcl.c	62;"	d	file:
COMP_MSZH_NOCOMP	libavcodec/lcl.c	63;"	d	file:
COMP_ZLIB_HICOMP	libavcodec/lcl.c	65;"	d	file:
COMP_ZLIB_HISPEED	libavcodec/lcl.c	64;"	d	file:
COMP_ZLIB_NORMAL	libavcodec/lcl.c	66;"	d	file:
CONFIG_AAC_DECODER	config.h	114;"	d
CONFIG_AAC_DECODER	config.mak	/^CONFIG_AAC_DECODER=yes$/;"	m
CONFIG_AASC_DECODER	config.h	112;"	d
CONFIG_AASC_DECODER	config.mak	/^CONFIG_AASC_DECODER=yes$/;"	m
CONFIG_AC3_DECODER	config.h	163;"	d
CONFIG_AC3_DECODER	config.mak	/^CONFIG_AC3_DECODER=yes$/;"	m
CONFIG_AC3_ENCODER	config.h	38;"	d
CONFIG_AC3_ENCODER	config.mak	/^CONFIG_AC3_ENCODER=yes$/;"	m
CONFIG_ALAC_DECODER	config.h	174;"	d
CONFIG_ALAC_DECODER	config.mak	/^CONFIG_ALAC_DECODER=yes$/;"	m
CONFIG_AMR_NB_DECODER	config.h	178;"	d
CONFIG_AMR_NB_DECODER	config.mak	/^CONFIG_AMR_NB_DECODER=yes$/;"	m
CONFIG_AMR_NB_ENCODER	config.h	179;"	d
CONFIG_AMR_NB_ENCODER	config.mak	/^CONFIG_AMR_NB_ENCODER=yes$/;"	m
CONFIG_AMR_WB_DECODER	config.h	180;"	d
CONFIG_AMR_WB_DECODER	config.mak	/^CONFIG_AMR_WB_DECODER=yes$/;"	m
CONFIG_AMR_WB_ENCODER	config.h	181;"	d
CONFIG_AMR_WB_ENCODER	config.mak	/^CONFIG_AMR_WB_ENCODER=yes$/;"	m
CONFIG_ASV1_DECODER	config.h	139;"	d
CONFIG_ASV1_DECODER	config.mak	/^CONFIG_ASV1_DECODER=yes$/;"	m
CONFIG_ASV1_ENCODER	config.h	73;"	d
CONFIG_ASV1_ENCODER	config.mak	/^CONFIG_ASV1_ENCODER=yes$/;"	m
CONFIG_ASV2_DECODER	config.h	140;"	d
CONFIG_ASV2_DECODER	config.mak	/^CONFIG_ASV2_DECODER=yes$/;"	m
CONFIG_ASV2_ENCODER	config.h	74;"	d
CONFIG_ASV2_ENCODER	config.mak	/^CONFIG_ASV2_ENCODER=yes$/;"	m
CONFIG_AUDIO_OSS	config.h	19;"	d
CONFIG_AUDIO_OSS	config.mak	/^CONFIG_AUDIO_OSS=yes$/;"	m
CONFIG_CINEPAK_DECODER	config.h	149;"	d
CONFIG_CINEPAK_DECODER	config.mak	/^CONFIG_CINEPAK_DECODER=yes$/;"	m
CONFIG_CLJR_DECODER	config.h	142;"	d
CONFIG_CLJR_DECODER	config.mak	/^CONFIG_CLJR_DECODER=yes$/;"	m
CONFIG_CYUV_DECODER	config.h	135;"	d
CONFIG_CYUV_DECODER	config.mak	/^CONFIG_CYUV_DECODER=yes$/;"	m
CONFIG_DECODERS	config.h	10;"	d
CONFIG_DECODERS	config.mak	/^CONFIG_DECODERS=yes$/;"	m
CONFIG_DTS	config.h	11;"	d
CONFIG_DTS	config.mak	/^CONFIG_DTS=yes$/;"	m
CONFIG_DTS_DECODER	config.h	164;"	d
CONFIG_DTS_DECODER	config.mak	/^CONFIG_DTS_DECODER=yes$/;"	m
CONFIG_DV1394	config.h	16;"	d
CONFIG_DV1394	config.mak	/^CONFIG_DV1394=yes$/;"	m
CONFIG_DVVIDEO_DECODER	config.h	120;"	d
CONFIG_DVVIDEO_DECODER	config.mak	/^CONFIG_DVVIDEO_DECODER=yes$/;"	m
CONFIG_DVVIDEO_ENCODER	config.h	78;"	d
CONFIG_DVVIDEO_ENCODER	config.mak	/^CONFIG_DVVIDEO_ENCODER=yes$/;"	m
CONFIG_EIGHTBPS_DECODER	config.h	154;"	d
CONFIG_EIGHTBPS_DECODER	config.mak	/^CONFIG_EIGHTBPS_DECODER=yes$/;"	m
CONFIG_ENCODERS	config.h	9;"	d
CONFIG_ENCODERS	config.mak	/^CONFIG_ENCODERS=yes$/;"	m
CONFIG_FAAC	config.h	29;"	d
CONFIG_FAAC	config.mak	/^CONFIG_FAAC=yes$/;"	m
CONFIG_FAAC_ENCODER	config.h	45;"	d
CONFIG_FAAC_ENCODER	config.mak	/^CONFIG_FAAC_ENCODER=yes$/;"	m
CONFIG_FAAD	config.h	27;"	d
CONFIG_FAAD	config.mak	/^CONFIG_FAAD=yes$/;"	m
CONFIG_FAADBIN	config.h	28;"	d
CONFIG_FAADBIN	config.mak	/^CONFIG_FAADBIN=yes$/;"	m
CONFIG_FFPLAY	config.mak	/^CONFIG_FFPLAY=yes$/;"	m
CONFIG_FFSERVER	config.h	35;"	d
CONFIG_FFSERVER	config.mak	/^CONFIG_FFSERVER=yes$/;"	m
CONFIG_FFV1_DECODER	config.h	133;"	d
CONFIG_FFV1_DECODER	config.mak	/^CONFIG_FFV1_DECODER=yes$/;"	m
CONFIG_FFV1_ENCODER	config.h	75;"	d
CONFIG_FFV1_ENCODER	config.mak	/^CONFIG_FFV1_ENCODER=yes$/;"	m
CONFIG_FFVHUFF_DECODER	config.h	132;"	d
CONFIG_FFVHUFF_DECODER	config.mak	/^CONFIG_FFVHUFF_DECODER=yes$/;"	m
CONFIG_FFVHUFF_ENCODER	config.h	72;"	d
CONFIG_FFVHUFF_ENCODER	config.mak	/^CONFIG_FFVHUFF_ENCODER=yes$/;"	m
CONFIG_FLAC_DECODER	config.h	172;"	d
CONFIG_FLAC_DECODER	config.mak	/^CONFIG_FLAC_DECODER=yes$/;"	m
CONFIG_FLIC_DECODER	config.h	156;"	d
CONFIG_FLIC_DECODER	config.mak	/^CONFIG_FLIC_DECODER=yes$/;"	m
CONFIG_FLV_DECODER	config.h	96;"	d
CONFIG_FLV_DECODER	config.mak	/^CONFIG_FLV_DECODER=yes$/;"	m
CONFIG_FLV_ENCODER	config.h	53;"	d
CONFIG_FLV_ENCODER	config.mak	/^CONFIG_FLV_ENCODER=yes$/;"	m
CONFIG_FOURXM_DECODER	config.h	143;"	d
CONFIG_FOURXM_DECODER	config.mak	/^CONFIG_FOURXM_DECODER=yes$/;"	m
CONFIG_FRAPS_DECODER	config.h	113;"	d
CONFIG_FRAPS_DECODER	config.mak	/^CONFIG_FRAPS_DECODER=yes$/;"	m
CONFIG_GPL	config.h	36;"	d
CONFIG_GPL	config.mak	/^CONFIG_GPL=yes$/;"	m
CONFIG_H261_DECODER	config.h	86;"	d
CONFIG_H261_DECODER	config.mak	/^CONFIG_H261_DECODER=yes$/;"	m
CONFIG_H261_ENCODER	config.h	50;"	d
CONFIG_H261_ENCODER	config.mak	/^CONFIG_H261_ENCODER=yes$/;"	m
CONFIG_H263I_DECODER	config.h	95;"	d
CONFIG_H263I_DECODER	config.mak	/^CONFIG_H263I_DECODER=yes$/;"	m
CONFIG_H263P_ENCODER	config.h	52;"	d
CONFIG_H263P_ENCODER	config.mak	/^CONFIG_H263P_ENCODER=yes$/;"	m
CONFIG_H263_DECODER	config.h	85;"	d
CONFIG_H263_DECODER	config.mak	/^CONFIG_H263_DECODER=yes$/;"	m
CONFIG_H263_ENCODER	config.h	51;"	d
CONFIG_H263_ENCODER	config.mak	/^CONFIG_H263_ENCODER=yes$/;"	m
CONFIG_H264_DECODER	config.h	136;"	d
CONFIG_H264_DECODER	config.mak	/^CONFIG_H264_DECODER=yes$/;"	m
CONFIG_H264_ENCODER	config.h	48;"	d
CONFIG_H264_ENCODER	config.mak	/^CONFIG_H264_ENCODER=yes$/;"	m
CONFIG_HAVE_DLFCN	config.h	18;"	d
CONFIG_HAVE_DLOPEN	config.h	17;"	d
CONFIG_HUFFYUV_DECODER	config.h	131;"	d
CONFIG_HUFFYUV_DECODER	config.mak	/^CONFIG_HUFFYUV_DECODER=yes$/;"	m
CONFIG_HUFFYUV_ENCODER	config.h	71;"	d
CONFIG_HUFFYUV_ENCODER	config.mak	/^CONFIG_HUFFYUV_ENCODER=yes$/;"	m
CONFIG_IDCIN_DECODER	config.h	153;"	d
CONFIG_IDCIN_DECODER	config.mak	/^CONFIG_IDCIN_DECODER=yes$/;"	m
CONFIG_INDEO2_DECODER	config.h	103;"	d
CONFIG_INDEO2_DECODER	config.mak	/^CONFIG_INDEO2_DECODER=yes$/;"	m
CONFIG_INDEO3_DECODER	config.h	104;"	d
CONFIG_INDEO3_DECODER	config.mak	/^CONFIG_INDEO3_DECODER=yes$/;"	m
CONFIG_INTERPLAY_DPCM_DECODER	config.h	168;"	d
CONFIG_INTERPLAY_DPCM_DECODER	config.mak	/^CONFIG_INTERPLAY_DPCM_DECODER=yes$/;"	m
CONFIG_INTERPLAY_VIDEO_DECODER	config.h	146;"	d
CONFIG_INTERPLAY_VIDEO_DECODER	config.mak	/^CONFIG_INTERPLAY_VIDEO_DECODER=yes$/;"	m
CONFIG_IPV6	config.h	21;"	d
CONFIG_LIBGSM_DECODER	config.h	177;"	d
CONFIG_LIBGSM_DECODER	config.mak	/^CONFIG_LIBGSM_DECODER=yes$/;"	m
CONFIG_LIBGSM_ENCODER	config.h	82;"	d
CONFIG_LIBGSM_ENCODER	config.mak	/^CONFIG_LIBGSM_ENCODER=yes$/;"	m
CONFIG_LIBOGG	config.h	24;"	d
CONFIG_LIBOGG	config.mak	/^CONFIG_LIBOGG=yes$/;"	m
CONFIG_LIBTHEORA	config.h	26;"	d
CONFIG_LIBTHEORA	config.mak	/^CONFIG_LIBTHEORA=yes$/;"	m
CONFIG_LIBVORBIS	config.h	25;"	d
CONFIG_LIBVORBIS	config.mak	/^CONFIG_LIBVORBIS=yes$/;"	m
CONFIG_LJPEG_ENCODER	config.h	64;"	d
CONFIG_LJPEG_ENCODER	config.mak	/^CONFIG_LJPEG_ENCODER=yes$/;"	m
CONFIG_LOCO_DECODER	config.h	110;"	d
CONFIG_LOCO_DECODER	config.mak	/^CONFIG_LOCO_DECODER=yes$/;"	m
CONFIG_MACE3_DECODER	config.h	129;"	d
CONFIG_MACE3_DECODER	config.mak	/^CONFIG_MACE3_DECODER=yes$/;"	m
CONFIG_MACE6_DECODER	config.h	130;"	d
CONFIG_MACE6_DECODER	config.mak	/^CONFIG_MACE6_DECODER=yes$/;"	m
CONFIG_MDEC_DECODER	config.h	144;"	d
CONFIG_MDEC_DECODER	config.mak	/^CONFIG_MDEC_DECODER=yes$/;"	m
CONFIG_MJPEGB_DECODER	config.h	122;"	d
CONFIG_MJPEGB_DECODER	config.mak	/^CONFIG_MJPEGB_DECODER=yes$/;"	m
CONFIG_MJPEG_DECODER	config.h	121;"	d
CONFIG_MJPEG_DECODER	config.mak	/^CONFIG_MJPEG_DECODER=yes$/;"	m
CONFIG_MJPEG_ENCODER	config.h	63;"	d
CONFIG_MJPEG_ENCODER	config.mak	/^CONFIG_MJPEG_ENCODER=yes$/;"	m
CONFIG_MP2_DECODER	config.h	125;"	d
CONFIG_MP2_DECODER	config.mak	/^CONFIG_MP2_DECODER=yes$/;"	m
CONFIG_MP2_ENCODER	config.h	39;"	d
CONFIG_MP2_ENCODER	config.mak	/^CONFIG_MP2_ENCODER=yes$/;"	m
CONFIG_MP3ADU_DECODER	config.h	127;"	d
CONFIG_MP3ADU_DECODER	config.mak	/^CONFIG_MP3ADU_DECODER=yes$/;"	m
CONFIG_MP3LAME	config.h	23;"	d
CONFIG_MP3LAME	config.mak	/^CONFIG_MP3LAME=yes$/;"	m
CONFIG_MP3LAME_ENCODER	config.h	40;"	d
CONFIG_MP3LAME_ENCODER	config.mak	/^CONFIG_MP3LAME_ENCODER=yes$/;"	m
CONFIG_MP3ON4_DECODER	config.h	128;"	d
CONFIG_MP3ON4_DECODER	config.mak	/^CONFIG_MP3ON4_DECODER=yes$/;"	m
CONFIG_MP3_DECODER	config.h	126;"	d
CONFIG_MP3_DECODER	config.mak	/^CONFIG_MP3_DECODER=yes$/;"	m
CONFIG_MPEG1VIDEO_DECODER	config.h	116;"	d
CONFIG_MPEG1VIDEO_DECODER	config.mak	/^CONFIG_MPEG1VIDEO_DECODER=yes$/;"	m
CONFIG_MPEG1VIDEO_ENCODER	config.h	47;"	d
CONFIG_MPEG1VIDEO_ENCODER	config.mak	/^CONFIG_MPEG1VIDEO_ENCODER=yes$/;"	m
CONFIG_MPEG2VIDEO_DECODER	config.h	117;"	d
CONFIG_MPEG2VIDEO_DECODER	config.mak	/^CONFIG_MPEG2VIDEO_DECODER=yes$/;"	m
CONFIG_MPEG2VIDEO_ENCODER	config.h	49;"	d
CONFIG_MPEG2VIDEO_ENCODER	config.mak	/^CONFIG_MPEG2VIDEO_ENCODER=yes$/;"	m
CONFIG_MPEG4AAC_DECODER	config.h	115;"	d
CONFIG_MPEG4AAC_DECODER	config.mak	/^CONFIG_MPEG4AAC_DECODER=yes$/;"	m
CONFIG_MPEG4_DECODER	config.h	87;"	d
CONFIG_MPEG4_DECODER	config.mak	/^CONFIG_MPEG4_DECODER=yes$/;"	m
CONFIG_MPEG4_ENCODER	config.h	56;"	d
CONFIG_MPEG4_ENCODER	config.mak	/^CONFIG_MPEG4_ENCODER=yes$/;"	m
CONFIG_MPEGAUDIO_HP	config.h	14;"	d
CONFIG_MPEGVIDEO_DECODER	config.h	118;"	d
CONFIG_MPEGVIDEO_DECODER	config.mak	/^CONFIG_MPEGVIDEO_DECODER=yes$/;"	m
CONFIG_MPEG_XVMC_DECODER	config.h	119;"	d
CONFIG_MPEG_XVMC_DECODER	config.mak	/^CONFIG_MPEG_XVMC_DECODER=yes$/;"	m
CONFIG_MSMPEG4V1_DECODER	config.h	88;"	d
CONFIG_MSMPEG4V1_DECODER	config.mak	/^CONFIG_MSMPEG4V1_DECODER=yes$/;"	m
CONFIG_MSMPEG4V1_ENCODER	config.h	57;"	d
CONFIG_MSMPEG4V1_ENCODER	config.mak	/^CONFIG_MSMPEG4V1_ENCODER=yes$/;"	m
CONFIG_MSMPEG4V2_DECODER	config.h	89;"	d
CONFIG_MSMPEG4V2_DECODER	config.mak	/^CONFIG_MSMPEG4V2_DECODER=yes$/;"	m
CONFIG_MSMPEG4V2_ENCODER	config.h	58;"	d
CONFIG_MSMPEG4V2_ENCODER	config.mak	/^CONFIG_MSMPEG4V2_ENCODER=yes$/;"	m
CONFIG_MSMPEG4V3_DECODER	config.h	90;"	d
CONFIG_MSMPEG4V3_DECODER	config.mak	/^CONFIG_MSMPEG4V3_DECODER=yes$/;"	m
CONFIG_MSMPEG4V3_ENCODER	config.h	59;"	d
CONFIG_MSMPEG4V3_ENCODER	config.mak	/^CONFIG_MSMPEG4V3_ENCODER=yes$/;"	m
CONFIG_MSRLE_DECODER	config.h	150;"	d
CONFIG_MSRLE_DECODER	config.mak	/^CONFIG_MSRLE_DECODER=yes$/;"	m
CONFIG_MSVIDEO1_DECODER	config.h	151;"	d
CONFIG_MSVIDEO1_DECODER	config.mak	/^CONFIG_MSVIDEO1_DECODER=yes$/;"	m
CONFIG_MSZH_DECODER	config.h	160;"	d
CONFIG_MSZH_DECODER	config.mak	/^CONFIG_MSZH_DECODER=yes$/;"	m
CONFIG_NETWORK	config.h	20;"	d
CONFIG_NETWORK	config.mak	/^CONFIG_NETWORK=yes$/;"	m
CONFIG_OGGTHEORA_DECODER	config.h	44;"	d
CONFIG_OGGTHEORA_DECODER	config.mak	/^CONFIG_OGGTHEORA_DECODER=yes$/;"	m
CONFIG_OGGTHEORA_ENCODER	config.h	43;"	d
CONFIG_OGGTHEORA_ENCODER	config.mak	/^CONFIG_OGGTHEORA_ENCODER=yes$/;"	m
CONFIG_OGGVORBIS_DECODER	config.h	42;"	d
CONFIG_OGGVORBIS_DECODER	config.mak	/^CONFIG_OGGVORBIS_DECODER=yes$/;"	m
CONFIG_OGGVORBIS_ENCODER	config.h	41;"	d
CONFIG_OGGVORBIS_ENCODER	config.mak	/^CONFIG_OGGVORBIS_ENCODER=yes$/;"	m
CONFIG_PAM_ENCODER	config.h	70;"	d
CONFIG_PAM_ENCODER	config.mak	/^CONFIG_PAM_ENCODER=yes$/;"	m
CONFIG_PBM_ENCODER	config.h	69;"	d
CONFIG_PBM_ENCODER	config.mak	/^CONFIG_PBM_ENCODER=yes$/;"	m
CONFIG_PGMYUV_ENCODER	config.h	68;"	d
CONFIG_PGMYUV_ENCODER	config.mak	/^CONFIG_PGMYUV_ENCODER=yes$/;"	m
CONFIG_PGM_ENCODER	config.h	67;"	d
CONFIG_PGM_ENCODER	config.mak	/^CONFIG_PGM_ENCODER=yes$/;"	m
CONFIG_PNG_DECODER	config.h	124;"	d
CONFIG_PNG_DECODER	config.mak	/^CONFIG_PNG_DECODER=yes$/;"	m
CONFIG_PNG_ENCODER	config.h	65;"	d
CONFIG_PNG_ENCODER	config.mak	/^CONFIG_PNG_ENCODER=yes$/;"	m
CONFIG_PP	config.h	12;"	d
CONFIG_PP	config.mak	/^CONFIG_PP=yes$/;"	m
CONFIG_PPM_ENCODER	config.h	66;"	d
CONFIG_PPM_ENCODER	config.mak	/^CONFIG_PPM_ENCODER=yes$/;"	m
CONFIG_QDRAW_DECODER	config.h	107;"	d
CONFIG_QDRAW_DECODER	config.mak	/^CONFIG_QDRAW_DECODER=yes$/;"	m
CONFIG_QPEG_DECODER	config.h	109;"	d
CONFIG_QPEG_DECODER	config.mak	/^CONFIG_QPEG_DECODER=yes$/;"	m
CONFIG_QTRLE_DECODER	config.h	171;"	d
CONFIG_QTRLE_DECODER	config.mak	/^CONFIG_QTRLE_DECODER=yes$/;"	m
CONFIG_RAWVIDEO_DECODER	config.h	84;"	d
CONFIG_RAWVIDEO_DECODER	config.mak	/^CONFIG_RAWVIDEO_DECODER=yes$/;"	m
CONFIG_RAWVIDEO_ENCODER	config.h	83;"	d
CONFIG_RAWVIDEO_ENCODER	config.mak	/^CONFIG_RAWVIDEO_ENCODER=yes$/;"	m
CONFIG_RA_144_DECODER	config.h	165;"	d
CONFIG_RA_144_DECODER	config.mak	/^CONFIG_RA_144_DECODER=yes$/;"	m
CONFIG_RA_288_DECODER	config.h	166;"	d
CONFIG_RA_288_DECODER	config.mak	/^CONFIG_RA_288_DECODER=yes$/;"	m
CONFIG_ROQ_DECODER	config.h	145;"	d
CONFIG_ROQ_DECODER	config.mak	/^CONFIG_ROQ_DECODER=yes$/;"	m
CONFIG_ROQ_DPCM_DECODER	config.h	167;"	d
CONFIG_ROQ_DPCM_DECODER	config.mak	/^CONFIG_ROQ_DPCM_DECODER=yes$/;"	m
CONFIG_RPZA_DECODER	config.h	148;"	d
CONFIG_RPZA_DECODER	config.mak	/^CONFIG_RPZA_DECODER=yes$/;"	m
CONFIG_RV10_DECODER	config.h	97;"	d
CONFIG_RV10_DECODER	config.mak	/^CONFIG_RV10_DECODER=yes$/;"	m
CONFIG_RV10_ENCODER	config.h	54;"	d
CONFIG_RV10_ENCODER	config.mak	/^CONFIG_RV10_ENCODER=yes$/;"	m
CONFIG_RV20_DECODER	config.h	98;"	d
CONFIG_RV20_DECODER	config.mak	/^CONFIG_RV20_DECODER=yes$/;"	m
CONFIG_RV20_ENCODER	config.h	55;"	d
CONFIG_RV20_ENCODER	config.mak	/^CONFIG_RV20_ENCODER=yes$/;"	m
CONFIG_SDL	config.mak	/^CONFIG_SDL=yes$/;"	m
CONFIG_SHORTEN_DECODER	config.h	173;"	d
CONFIG_SHORTEN_DECODER	config.mak	/^CONFIG_SHORTEN_DECODER=yes$/;"	m
CONFIG_SMC_DECODER	config.h	155;"	d
CONFIG_SMC_DECODER	config.mak	/^CONFIG_SMC_DECODER=yes$/;"	m
CONFIG_SNOW_DECODER	config.h	134;"	d
CONFIG_SNOW_DECODER	config.mak	/^CONFIG_SNOW_DECODER=yes$/;"	m
CONFIG_SNOW_ENCODER	config.h	76;"	d
CONFIG_SNOW_ENCODER	config.mak	/^CONFIG_SNOW_ENCODER=yes$/;"	m
CONFIG_SOL_DPCM_DECODER	config.h	170;"	d
CONFIG_SOL_DPCM_DECODER	config.mak	/^CONFIG_SOL_DPCM_DECODER=yes$/;"	m
CONFIG_SONIC_DECODER	config.h	162;"	d
CONFIG_SONIC_DECODER	config.mak	/^CONFIG_SONIC_DECODER=yes$/;"	m
CONFIG_SONIC_ENCODER	config.h	79;"	d
CONFIG_SONIC_ENCODER	config.mak	/^CONFIG_SONIC_ENCODER=yes$/;"	m
CONFIG_SONIC_LS_ENCODER	config.h	80;"	d
CONFIG_SONIC_LS_ENCODER	config.mak	/^CONFIG_SONIC_LS_ENCODER=yes$/;"	m
CONFIG_SP5X_DECODER	config.h	123;"	d
CONFIG_SP5X_DECODER	config.mak	/^CONFIG_SP5X_DECODER=yes$/;"	m
CONFIG_SVQ1_DECODER	config.h	99;"	d
CONFIG_SVQ1_DECODER	config.mak	/^CONFIG_SVQ1_DECODER=yes$/;"	m
CONFIG_SVQ1_ENCODER	config.h	62;"	d
CONFIG_SVQ1_ENCODER	config.mak	/^CONFIG_SVQ1_ENCODER=yes$/;"	m
CONFIG_SVQ3_DECODER	config.h	100;"	d
CONFIG_SVQ3_DECODER	config.mak	/^CONFIG_SVQ3_DECODER=yes$/;"	m
CONFIG_THEORA_DECODER	config.h	138;"	d
CONFIG_THEORA_DECODER	config.mak	/^CONFIG_THEORA_DECODER=yes$/;"	m
CONFIG_TRUEMOTION1_DECODER	config.h	157;"	d
CONFIG_TRUEMOTION1_DECODER	config.mak	/^CONFIG_TRUEMOTION1_DECODER=yes$/;"	m
CONFIG_TSCC_DECODER	config.h	105;"	d
CONFIG_TSCC_DECODER	config.mak	/^CONFIG_TSCC_DECODER=yes$/;"	m
CONFIG_ULTI_DECODER	config.h	106;"	d
CONFIG_ULTI_DECODER	config.mak	/^CONFIG_ULTI_DECODER=yes$/;"	m
CONFIG_VC9_DECODER	config.h	93;"	d
CONFIG_VC9_DECODER	config.mak	/^CONFIG_VC9_DECODER=yes$/;"	m
CONFIG_VCR1_DECODER	config.h	141;"	d
CONFIG_VCR1_DECODER	config.mak	/^CONFIG_VCR1_DECODER=yes$/;"	m
CONFIG_VIDEO4LINUX	config.h	15;"	d
CONFIG_VIDEO4LINUX	config.mak	/^CONFIG_VIDEO4LINUX=yes$/;"	m
CONFIG_VMDAUDIO_DECODER	config.h	159;"	d
CONFIG_VMDAUDIO_DECODER	config.mak	/^CONFIG_VMDAUDIO_DECODER=yes$/;"	m
CONFIG_VMDVIDEO_DECODER	config.h	158;"	d
CONFIG_VMDVIDEO_DECODER	config.mak	/^CONFIG_VMDVIDEO_DECODER=yes$/;"	m
CONFIG_VORBIS_DECODER	config.h	176;"	d
CONFIG_VORBIS_DECODER	config.mak	/^CONFIG_VORBIS_DECODER=yes$/;"	m
CONFIG_VP3_DECODER	config.h	137;"	d
CONFIG_VP3_DECODER	config.mak	/^CONFIG_VP3_DECODER=yes$/;"	m
CONFIG_VQA_DECODER	config.h	152;"	d
CONFIG_VQA_DECODER	config.mak	/^CONFIG_VQA_DECODER=yes$/;"	m
CONFIG_WIN32	libavcodec/common.h	10;"	d
CONFIG_WMAV1_DECODER	config.h	101;"	d
CONFIG_WMAV1_DECODER	config.mak	/^CONFIG_WMAV1_DECODER=yes$/;"	m
CONFIG_WMAV2_DECODER	config.h	102;"	d
CONFIG_WMAV2_DECODER	config.mak	/^CONFIG_WMAV2_DECODER=yes$/;"	m
CONFIG_WMV1_DECODER	config.h	91;"	d
CONFIG_WMV1_DECODER	config.mak	/^CONFIG_WMV1_DECODER=yes$/;"	m
CONFIG_WMV1_ENCODER	config.h	60;"	d
CONFIG_WMV1_ENCODER	config.mak	/^CONFIG_WMV1_ENCODER=yes$/;"	m
CONFIG_WMV2_DECODER	config.h	92;"	d
CONFIG_WMV2_DECODER	config.mak	/^CONFIG_WMV2_DECODER=yes$/;"	m
CONFIG_WMV2_ENCODER	config.h	61;"	d
CONFIG_WMV2_ENCODER	config.mak	/^CONFIG_WMV2_ENCODER=yes$/;"	m
CONFIG_WMV3_DECODER	config.h	94;"	d
CONFIG_WMV3_DECODER	config.mak	/^CONFIG_WMV3_DECODER=yes$/;"	m
CONFIG_WNV1_DECODER	config.h	111;"	d
CONFIG_WNV1_DECODER	config.mak	/^CONFIG_WNV1_DECODER=yes$/;"	m
CONFIG_WS_SND1_DECODER	config.h	175;"	d
CONFIG_WS_SND1_DECODER	config.mak	/^CONFIG_WS_SND1_DECODER=yes$/;"	m
CONFIG_X264_ENCODER	config.h	81;"	d
CONFIG_X264_ENCODER	config.mak	/^CONFIG_X264_ENCODER=yes$/;"	m
CONFIG_XAN_DPCM_DECODER	config.h	169;"	d
CONFIG_XAN_DPCM_DECODER	config.mak	/^CONFIG_XAN_DPCM_DECODER=yes$/;"	m
CONFIG_XAN_WC3_DECODER	config.h	147;"	d
CONFIG_XAN_WC3_DECODER	config.mak	/^CONFIG_XAN_WC3_DECODER=yes$/;"	m
CONFIG_XL_DECODER	config.h	108;"	d
CONFIG_XL_DECODER	config.mak	/^CONFIG_XL_DECODER=yes$/;"	m
CONFIG_XVID	config.h	30;"	d
CONFIG_XVID	config.mak	/^CONFIG_XVID=yes$/;"	m
CONFIG_XVID_ENCODER	config.h	46;"	d
CONFIG_XVID_ENCODER	config.mak	/^CONFIG_XVID_ENCODER=yes$/;"	m
CONFIG_ZLIB	config.h	22;"	d
CONFIG_ZLIB	config.mak	/^CONFIG_ZLIB=yes$/;"	m
CONFIG_ZLIB_DECODER	config.h	161;"	d
CONFIG_ZLIB_DECODER	config.mak	/^CONFIG_ZLIB_DECODER=yes$/;"	m
CONFIG_ZLIB_ENCODER	config.h	77;"	d
CONFIG_ZLIB_ENCODER	config.mak	/^CONFIG_ZLIB_ENCODER=yes$/;"	m
CONST_1	libavcodec/sparc/dsputil_vis.c	95;"	d	file:
CONST_1024	libavcodec/sparc/dsputil_vis.c	103;"	d	file:
CONST_128	libavcodec/sparc/dsputil_vis.c	100;"	d	file:
CONST_2	libavcodec/sparc/dsputil_vis.c	96;"	d	file:
CONST_256	libavcodec/sparc/dsputil_vis.c	101;"	d	file:
CONST_3	libavcodec/sparc/dsputil_vis.c	97;"	d	file:
CONST_512	libavcodec/sparc/dsputil_vis.c	102;"	d	file:
CONST_6	libavcodec/sparc/dsputil_vis.c	98;"	d	file:
CONST_BITS	libavcodec/jfdctfst.c	302;"	d	file:
CONST_BITS	libavcodec/jfdctfst.c	75;"	d	file:
CONST_BITS	libavcodec/jfdctint.c	94;"	d	file:
CONST_BITS	libavcodec/jfdctint.c	97;"	d	file:
CONST_BITS	libavcodec/jrevdct.c	1126;"	d	file:
CONST_BITS	libavcodec/jrevdct.c	48;"	d	file:
CONST_BITS	libavcodec/mpegvideo.c	81;"	d	file:
CONST_SCALE	libavcodec/jrevdct.c	103;"	d	file:
CONTEXT_SIZE	libavcodec/ffv1.c	35;"	d	file:
CONVERT	libavcodec/liba52/downmix.c	26;"	d	file:
CONVERT_BIAS	libavcodec/dtsdec.c	42;"	d	file:
CONVERT_BIAS	libavcodec/dtsdec.c	45;"	d	file:
CONVERT_LEVEL	libavcodec/dtsdec.c	41;"	d	file:
CONVERT_LEVEL	libavcodec/dtsdec.c	44;"	d	file:
COPY	libavcodec/mpegvideo.c	499;"	d	file:
COPY	libavcodec/mpegvideo.c	517;"	d	file:
COPY	libavcodec/mpegvideo.c	535;"	d	file:
COPY	libavcodec/mpegvideo.c	548;"	d	file:
COPY	libavcodec/ppc/idct_altivec.c	183;"	d	file:
COPY3_IF_LT	libavcodec/common.h	441;"	d
COPY3_IF_LT	libavcodec/common.h	451;"	d
COPY_3	vhook/drawtext.c	68;"	d	file:
COPY_BUFFER_SIZE	qt-faststart.c	64;"	d	file:
COPY_FROM_CURRENT	libavcodec/interplayvideo.c	84;"	d	file:
COPY_FROM_PREVIOUS	libavcodec/interplayvideo.c	99;"	d	file:
COPY_FROM_SECOND_LAST	libavcodec/interplayvideo.c	114;"	d	file:
CORE_VO_TYPE	libavcodec/mpeg4data.h	13;"	d
COS0_0	libavcodec/mpegaudiodec.c	541;"	d	file:
COS0_1	libavcodec/mpegaudiodec.c	542;"	d	file:
COS0_10	libavcodec/mpegaudiodec.c	551;"	d	file:
COS0_11	libavcodec/mpegaudiodec.c	552;"	d	file:
COS0_12	libavcodec/mpegaudiodec.c	553;"	d	file:
COS0_13	libavcodec/mpegaudiodec.c	554;"	d	file:
COS0_14	libavcodec/mpegaudiodec.c	555;"	d	file:
COS0_15	libavcodec/mpegaudiodec.c	556;"	d	file:
COS0_2	libavcodec/mpegaudiodec.c	543;"	d	file:
COS0_3	libavcodec/mpegaudiodec.c	544;"	d	file:
COS0_4	libavcodec/mpegaudiodec.c	545;"	d	file:
COS0_5	libavcodec/mpegaudiodec.c	546;"	d	file:
COS0_6	libavcodec/mpegaudiodec.c	547;"	d	file:
COS0_7	libavcodec/mpegaudiodec.c	548;"	d	file:
COS0_8	libavcodec/mpegaudiodec.c	549;"	d	file:
COS0_9	libavcodec/mpegaudiodec.c	550;"	d	file:
COS1_0	libavcodec/mpegaudiodec.c	558;"	d	file:
COS1_1	libavcodec/mpegaudiodec.c	559;"	d	file:
COS1_2	libavcodec/mpegaudiodec.c	560;"	d	file:
COS1_3	libavcodec/mpegaudiodec.c	561;"	d	file:
COS1_4	libavcodec/mpegaudiodec.c	562;"	d	file:
COS1_5	libavcodec/mpegaudiodec.c	563;"	d	file:
COS1_6	libavcodec/mpegaudiodec.c	564;"	d	file:
COS1_7	libavcodec/mpegaudiodec.c	565;"	d	file:
COS2_0	libavcodec/mpegaudiodec.c	567;"	d	file:
COS2_1	libavcodec/mpegaudiodec.c	568;"	d	file:
COS2_2	libavcodec/mpegaudiodec.c	569;"	d	file:
COS2_3	libavcodec/mpegaudiodec.c	570;"	d	file:
COS3_0	libavcodec/mpegaudiodec.c	572;"	d	file:
COS3_1	libavcodec/mpegaudiodec.c	573;"	d	file:
COS4_0	libavcodec/mpegaudiodec.c	575;"	d	file:
COS_4_16	libavcodec/ps2/idct_mmi.c	38;"	d	file:
COS_TABLE_BITS	tests/audiogen.c	29;"	d	file:
COUNT	libavcodec/h264.c	7023;"	d	file:
CPAIR	libavcodec/smc.c	39;"	d	file:
CPL0_TAG	libavcodec/vqavideo.c	89;"	d	file:
CPLZ_TAG	libavcodec/vqavideo.c	90;"	d	file:
CQUAD	libavcodec/smc.c	40;"	d	file:
CRC16_POLY	libavcodec/ac3enc.c	1241;"	d	file:
CRCState	libavformat/crc.c	/^typedef struct CRCState {$/;"	s	file:
CRCState	libavformat/crc.c	/^} CRCState;$/;"	t	file:
CS4	libavcodec/ps2/idct_mmi.c	25;"	d	file:
CSHIFT	tests/audiogen.c	52;"	d	file:
CTF	libavcodec/ppc/fdct_altivec.c	402;"	d	file:
CTF	libavcodec/ppc/fdct_altivec.c	417;"	d	file:
CTF0	libavcodec/ppc/fdct_altivec.c	293;"	d	file:
CTF0	libavcodec/ppc/fdct_altivec.c	308;"	d	file:
CTFX	libavcodec/ppc/fdct_altivec.c	323;"	d	file:
CTFX	libavcodec/ppc/fdct_altivec.c	334;"	d	file:
CTS	libavcodec/ppc/fdct_altivec.c	473;"	d	file:
CTS	libavcodec/ppc/fdct_altivec.c	491;"	d	file:
CUBIC_BLEND_DEINT_FILTER	libavcodec/libpostproc/postprocess_internal.h	52;"	d
CUBIC_IPOL_DEINT_FILTER	libavcodec/libpostproc/postprocess_internal.h	53;"	d
CVID_TAG	libavformat/segafilm.c	33;"	d	file:
C_CCIR_TO_JPEG	libavcodec/imgconvert.c	1040;"	d	file:
C_FIX	libavcodec/simple_idct.c	421;"	d	file:
C_FIX	libavcodec/simple_idct.c	500;"	d	file:
C_FIX	libavcodec/simple_idct.c	504;"	d	file:
C_JPEG_TO_CCIR	libavcodec/imgconvert.c	/^static inline int C_JPEG_TO_CCIR(int y) {$/;"	f	file:
C_SHIFT	libavcodec/simple_idct.c	427;"	d	file:
C_SHIFT	libavcodec/simple_idct.c	499;"	d	file:
C_SHIFT	libavcodec/simple_idct.c	508;"	d	file:
CachedImage	vhook/imlib2.c	/^} CachedImage;$/;"	t	file:
CamtasiaContext	libavcodec/tscc.c	/^} CamtasiaContext;$/;"	t	file:
CinepakContext	libavcodec/cinepak.c	/^typedef struct CinepakContext {$/;"	s	file:
CinepakContext	libavcodec/cinepak.c	/^} CinepakContext;$/;"	t	file:
CodecID	libavcodec/avcodec.h	/^enum CodecID {$/;"	g
CodecTag	libavformat/avi.h	/^typedef struct CodecTag {$/;"	s
CodecTag	libavformat/avi.h	/^} CodecTag;$/;"	t
CodecType	libavcodec/avcodec.h	/^enum CodecType {$/;"	g
CoefVLCTable	libavcodec/wmadec.c	/^typedef struct CoefVLCTable {$/;"	s	file:
CoefVLCTable	libavcodec/wmadec.c	/^} CoefVLCTable;$/;"	t	file:
Coeff	libavcodec/vp3.c	/^typedef struct Coeff {$/;"	s	file:
Coeff	libavcodec/vp3.c	/^} Coeff;$/;"	t	file:
ColumnIDCT	libavcodec/i386/vp3dsp_mmx.c	150;"	d	file:
Configure	libavformat/framehook.c	/^    FrameHookConfigureFn Configure;$/;"	m	struct:_FrameHookEntry	file:
Configure	vhook/drawtext.c	/^int Configure(void **ctxp, int argc, char *argv[])$/;"	f
Configure	vhook/fish.c	/^int Configure(void **ctxp, int argc, char *argv[])$/;"	f
Configure	vhook/imlib2.c	/^int Configure(void **ctxp, int argc, char *argv[])$/;"	f
Configure	vhook/null.c	/^int Configure(void **ctxp, int argc, char *argv[])$/;"	f
Configure	vhook/ppm.c	/^int Configure(void **ctxp, int argc, char *argv[])$/;"	f
Configure	vhook/watermark.c	/^int Configure(void **ctxp, int argc, char *argv[])$/;"	f
ContextInfo	vhook/drawtext.c	/^} ContextInfo;$/;"	t	file:
ContextInfo	vhook/fish.c	/^} ContextInfo;$/;"	t	file:
ContextInfo	vhook/imlib2.c	/^} ContextInfo;$/;"	t	file:
ContextInfo	vhook/null.c	/^} ContextInfo;$/;"	t	file:
ContextInfo	vhook/ppm.c	/^ContextInfo;$/;"	t	file:
ContextInfo	vhook/watermark.c	/^} ContextInfo;$/;"	t	file:
ConvertEntry	libavcodec/imgconvert.c	/^typedef struct ConvertEntry {$/;"	s	file:
ConvertEntry	libavcodec/imgconvert.c	/^} ConvertEntry;$/;"	t	file:
CyuvDecodeContext	libavcodec/cyuv.c	/^typedef struct CyuvDecodeContext {$/;"	s	file:
CyuvDecodeContext	libavcodec/cyuv.c	/^} CyuvDecodeContext;$/;"	t	file:
DAC	libavcodec/mjpeg.c	/^    DAC   = 0xcc,	\/* define arithmetic-coding conditioning *\/$/;"	e	file:
DATABLOCK1	libavcodec/ra144.c	23;"	d	file:
DATACHUNK1	libavcodec/ra144.c	24;"	d	file:
DCTBLOCK	libavcodec/jrevdct.c	/^typedef DCTELEM DCTBLOCK[DCTSIZE2];$/;"	t	file:
DCTELEM	libavcodec/dsputil.h	/^typedef short DCTELEM;$/;"	t
DCTSIZE	libavcodec/jfdctfst.c	43;"	d	file:
DCTSIZE	libavcodec/jfdctint.c	37;"	d	file:
DCTSIZE	libavcodec/jrevdct.c	39;"	d	file:
DCTSIZE	libavcodec/jrevdct.c	915;"	d	file:
DCTSIZE	libavcodec/jrevdct.c	916;"	d	file:
DCTSIZE2	libavcodec/jrevdct.c	40;"	d	file:
DCTSTRIDE	libavcodec/jrevdct.c	917;"	d	file:
DCT_8_INV_COL8	libavcodec/ps2/idct_mmi.c	107;"	d	file:
DCT_8_INV_COL8_ADD	libavcodec/ps2/idct_mmi.c	269;"	d	file:
DCT_8_INV_COL8_PMS	libavcodec/ps2/idct_mmi.c	220;"	d	file:
DCT_8_INV_COL8_PUT	libavcodec/ps2/idct_mmi.c	248;"	d	file:
DCT_8_INV_COL8_STORE	libavcodec/ps2/idct_mmi.c	188;"	d	file:
DCT_8_INV_ROW1	libavcodec/ps2/idct_mmi.c	77;"	d	file:
DCT_common_init	libavcodec/mpegvideo.c	/^int DCT_common_init(MpegEncContext *s)$/;"	f
DC_128_PRED	libavcodec/h264data.h	40;"	d
DC_128_PRED8x8	libavcodec/h264data.h	50;"	d
DC_COEFF	libavcodec/vp3.c	1891;"	d	file:
DC_COND_IDCT	libavcodec/i386/simple_idct_mmx.c	469;"	d	file:
DC_COND_ROW_IDCT	libavcodec/i386/simple_idct_mmx.c	361;"	d	file:
DC_END	libavcodec/mpegvideo.h	527;"	d
DC_ERROR	libavcodec/mpegvideo.h	524;"	d
DC_MARKER	libavcodec/mpeg4data.h	28;"	d
DC_MAX	libavcodec/msmpeg4.c	844;"	d	file:
DC_PRED	libavcodec/h264data.h	30;"	d
DC_PRED8x8	libavcodec/h264data.h	43;"	d
DC_VLC_BITS	libavcodec/h263.c	49;"	d	file:
DC_VLC_BITS	libavcodec/mpeg12.c	47;"	d	file:
DC_VLC_BITS	libavcodec/msmpeg4.c	41;"	d	file:
DC_VLC_BITS	libavcodec/rv10.c	32;"	d	file:
DC_VLC_BITS	libavcodec/vc9.c	44;"	d	file:
DCtab_chrom	libavcodec/mpeg4data.h	/^const uint8_t DCtab_chrom[13][2] =$/;"	v
DCtab_lum	libavcodec/mpeg4data.h	/^const uint8_t DCtab_lum[13][2] =$/;"	v
DEBUG	libavcodec/common.h	170;"	d
DEBUG	libavcodec/shorten.c	27;"	d	file:
DEBUG	libavformat/nsvdec.c	22;"	d	file:
DEBUG_BLOCK_CODING	libavcodec/vp3.c	69;"	d	file:
DEBUG_DC_PRED	libavcodec/vp3.c	74;"	d	file:
DEBUG_DEQUANTIZERS	libavcodec/vp3.c	68;"	d	file:
DEBUG_IDCT	libavcodec/vp3.c	75;"	d	file:
DEBUG_INIT	libavcodec/vp3.c	67;"	d	file:
DEBUG_INTERPLAY	libavcodec/interplayvideo.c	48;"	d	file:
DEBUG_IPMOVIE	libavformat/ipmovie.c	37;"	d	file:
DEBUG_MODES	libavcodec/vp3.c	70;"	d	file:
DEBUG_SEEK	libavformat/utils.c	1125;"	d	file:
DEBUG_TOKEN	libavcodec/vp3.c	72;"	d	file:
DEBUG_VECTORS	libavcodec/vp3.c	71;"	d	file:
DEBUG_VLC	libavcodec/vp3.c	73;"	d	file:
DEBUG_VP3	libavcodec/vp3.c	66;"	d	file:
DECODER_BUFFER_SIZE	libavformat/ogg.c	18;"	d	file:
DECODER_BUFFER_SIZE	libavformat/ogg2.c	38;"	d	file:
DECODE_SLICE_ERROR	libavcodec/mpeg12.c	2511;"	d	file:
DECODE_SLICE_OK	libavcodec/mpeg12.c	2512;"	d	file:
DEF	ffserver.c	2491;"	d	file:
DEF	ffserver.c	2493;"	d	file:
DEF	libavcodec/i386/dsputil_mmx.c	134;"	d	file:
DEF	libavcodec/i386/dsputil_mmx.c	141;"	d	file:
DEF	libavcodec/i386/dsputil_mmx.c	148;"	d	file:
DEF	libavcodec/i386/dsputil_mmx.c	155;"	d	file:
DEF	libavcodec/i386/dsputil_mmx.c	163;"	d	file:
DEF	libavcodec/i386/dsputil_mmx.c	169;"	d	file:
DEF	libavcodec/i386/dsputil_mmx.c	175;"	d	file:
DEF	libavcodec/i386/dsputil_mmx.c	182;"	d	file:
DEF	libavcodec/i386/dsputil_mmx_rnd.h	/^static __attribute__((unused)) void DEF(avg, pixels16_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f
DEF	libavcodec/i386/dsputil_mmx_rnd.h	/^static __attribute__((unused)) void DEF(avg, pixels8_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f
DEF	libavcodec/i386/dsputil_mmx_rnd.h	/^static void DEF(avg, pixels16)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
DEF	libavcodec/i386/dsputil_mmx_rnd.h	/^static void DEF(avg, pixels16_x2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
DEF	libavcodec/i386/dsputil_mmx_rnd.h	/^static void DEF(avg, pixels16_xy2)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f
DEF	libavcodec/i386/dsputil_mmx_rnd.h	/^static void DEF(avg, pixels16_y2)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f
DEF	libavcodec/i386/dsputil_mmx_rnd.h	/^static void DEF(avg, pixels4)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
DEF	libavcodec/i386/dsputil_mmx_rnd.h	/^static void DEF(avg, pixels8)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
DEF	libavcodec/i386/dsputil_mmx_rnd.h	/^static void DEF(avg, pixels8_x2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
DEF	libavcodec/i386/dsputil_mmx_rnd.h	/^static void DEF(avg, pixels8_xy2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
DEF	libavcodec/i386/dsputil_mmx_rnd.h	/^static void DEF(avg, pixels8_y2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
DEF	libavcodec/i386/dsputil_mmx_rnd.h	/^static void DEF(put, pixels16_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f
DEF	libavcodec/i386/dsputil_mmx_rnd.h	/^static void DEF(put, pixels16_x2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
DEF	libavcodec/i386/dsputil_mmx_rnd.h	/^static void DEF(put, pixels16_xy2)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f
DEF	libavcodec/i386/dsputil_mmx_rnd.h	/^static void DEF(put, pixels16_y2)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f
DEF	libavcodec/i386/dsputil_mmx_rnd.h	/^static void DEF(put, pixels8_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f
DEF	libavcodec/i386/dsputil_mmx_rnd.h	/^static void DEF(put, pixels8_x2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
DEF	libavcodec/i386/dsputil_mmx_rnd.h	/^static void DEF(put, pixels8_xy2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
DEF	libavcodec/i386/dsputil_mmx_rnd.h	/^static void DEF(put, pixels8_y2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
DEF	libavformat/rtsp.h	24;"	d
DEF	libavformat/rtsp.h	26;"	d
DEFAULT_BLOCK_SIZE	libavcodec/shorten.c	42;"	d	file:
DEFAULT_FRAME_RATE_BASE	libavcodec/avcodec.h	653;"	d
DEFAULT_HEIGHT	tests/rotozoom.c	104;"	d	file:
DEFAULT_HEIGHT	tests/videogen.c	78;"	d	file:
DEFAULT_INTER_INDEX	libavcodec/msmpeg4.c	57;"	d	file:
DEFAULT_NB_PICT	tests/rotozoom.c	105;"	d	file:
DEFAULT_NB_PICT	tests/videogen.c	79;"	d	file:
DEFAULT_ONID	libavformat/mpegtsenc.c	182;"	d	file:
DEFAULT_PASS_LOGFILENAME	ffmpeg.c	280;"	d	file:
DEFAULT_PES_HEADER_FREQ	libavformat/mpegtsenc.c	187;"	d	file:
DEFAULT_PES_PAYLOAD_SIZE	libavformat/mpegtsenc.c	188;"	d	file:
DEFAULT_PMT_START_PID	libavformat/mpegtsenc.c	176;"	d	file:
DEFAULT_PROVIDER_NAME	libavformat/mpegtsenc.c	178;"	d	file:
DEFAULT_SERVICE_NAME	libavformat/mpegtsenc.c	179;"	d	file:
DEFAULT_SID	libavformat/mpegtsenc.c	184;"	d	file:
DEFAULT_START_PID	libavformat/mpegtsenc.c	177;"	d	file:
DEFAULT_TSID	libavformat/mpegtsenc.c	183;"	d	file:
DEFAULT_WIDTH	tests/rotozoom.c	103;"	d	file:
DEFAULT_WIDTH	tests/videogen.c	77;"	d	file:
DEFFUNC	libavcodec/sh4/dsputil_align.c	259;"	d	file:
DEFREG	libavcodec/sh4/idct_sh4.c	108;"	d	file:
DEFREG	libavcodec/sh4/idct_sh4.c	76;"	d	file:
DEF_OLD_QPEL	libavcodec/dsputil.h	103;"	d
DEINT_CUBIC	libavcodec/libpostproc/postprocess_template.c	1636;"	d	file:
DEINT_FF	libavcodec/libpostproc/postprocess_template.c	1707;"	d	file:
DEINT_INPLACE_LINE_LUM	libavcodec/imgconvert.c	2253;"	d	file:
DEINT_L5	libavcodec/libpostproc/postprocess_template.c	1793;"	d	file:
DEINT_LINE_LUM	libavcodec/imgconvert.c	2276;"	d	file:
DEINT_LINE_LUM	libavformat/grab.c	548;"	d	file:
DEINT_LINE_LUM	libavformat/grab.c	623;"	d	file:
DELTA_BIT_NEW	libavcodec/liba52/a52_internal.h	102;"	d
DELTA_BIT_NONE	libavcodec/liba52/a52_internal.h	103;"	d
DELTA_BIT_RESERVED	libavcodec/liba52/a52_internal.h	104;"	d
DELTA_BIT_REUSE	libavcodec/liba52/a52_internal.h	101;"	d
DEP_LIBS	Makefile	/^DEP_LIBS=libavcodec\/$(LIBPREF)avcodec$(LIBSUF) libavformat\/$(LIBPREF)avformat$(LIBSUF)$/;"	m
DEP_LIBS	Makefile	/^DEP_LIBS=libavcodec\/$(SLIBPREF)avcodec$(SLIBSUF) libavformat\/$(SLIBPREF)avformat$(SLIBSUF)$/;"	m
DERING	libavcodec/libpostproc/postprocess_internal.h	26;"	d
DERING_CORE	libavcodec/libpostproc/postprocess_template.c	1378;"	d	file:
DESCALE	libavcodec/jfdctfst.c	104;"	d	file:
DESCALE	libavcodec/jfdctfst.c	105;"	d	file:
DESCALE	libavcodec/jfdctfst.c	303;"	d	file:
DESCALE	libavcodec/jfdctint.c	44;"	d	file:
DESCALE	libavcodec/jfdctint.c	46;"	d	file:
DESCALE	libavcodec/jrevdct.c	119;"	d	file:
DESCALE	libavcodec/sh4/idct_sh4.c	119;"	d	file:
DESCALE	libavcodec/sh4/idct_sh4.c	121;"	d	file:
DEV_ORDER	libavcodec/mpegaudiodec.c	251;"	d	file:
DHP	libavcodec/mjpeg.c	/^    DHP   = 0xde,	\/* define hierarchical progression *\/$/;"	e	file:
DHT	libavcodec/mjpeg.c	/^    DHT   = 0xc4,	\/* define huffman tables *\/$/;"	e	file:
DIAG_DOWN_LEFT_PRED	libavcodec/h264data.h	31;"	d
DIAG_DOWN_RIGHT_PRED	libavcodec/h264data.h	32;"	d
DIFF_GT_MMX	libavcodec/i386/dsputil_mmx.c	699;"	d	file:
DIV	libavcodec/liba52/a52_internal.h	134;"	d
DIV	libavcodec/liba52/a52_internal.h	159;"	d
DK3_GET_NEXT_NIBBLE	libavcodec/adpcm.c	535;"	d	file:
DNL	libavcodec/mjpeg.c	/^    DNL   = 0xdc,	\/* define number of lines *\/$/;"	e	file:
DO1	libavformat/crc.c	30;"	d	file:
DO16	libavformat/crc.c	34;"	d	file:
DO2	libavformat/crc.c	31;"	d	file:
DO4	libavformat/crc.c	32;"	d	file:
DO8	libavformat/crc.c	33;"	d	file:
DOC	Makefile	/^DOC=documentation$/;"	m
DO_2BITS	libavformat/asf.c	408;"	d	file:
DO_2BITS	libavformat/asf.c	531;"	d	file:
DPCMContext	libavcodec/dpcm.c	/^typedef struct DPCMContext {$/;"	s	file:
DPCMContext	libavcodec/dpcm.c	/^} DPCMContext;$/;"	t	file:
DQDOUBLE_BEDGE_BOTTOMLEFT	libavcodec/vc9.c	106;"	d	file:
DQDOUBLE_BEDGE_BOTTOMRIGHT	libavcodec/vc9.c	105;"	d	file:
DQDOUBLE_BEDGE_TOPLEFT	libavcodec/vc9.c	103;"	d	file:
DQDOUBLE_BEDGE_TOPRIGHT	libavcodec/vc9.c	104;"	d	file:
DQPROFILE_ALL_MBS	libavcodec/vc9.c	88;"	d	file:
DQPROFILE_DOUBLE_EDGES	libavcodec/vc9.c	86;"	d	file:
DQPROFILE_FOUR_EDGES	libavcodec/vc9.c	85;"	d	file:
DQPROFILE_FOUR_EDGES	libavcodec/vc9.c	94;"	d	file:
DQPROFILE_SINGLE_EDGE	libavcodec/vc9.c	87;"	d	file:
DQSINGLE_BEDGE_BOTTOM	libavcodec/vc9.c	98;"	d	file:
DQSINGLE_BEDGE_LEFT	libavcodec/vc9.c	95;"	d	file:
DQSINGLE_BEDGE_RIGHT	libavcodec/vc9.c	97;"	d	file:
DQSINGLE_BEDGE_TOP	libavcodec/vc9.c	96;"	d	file:
DQT	libavcodec/mjpeg.c	/^    DQT   = 0xdb,	\/* define quantization tables *\/$/;"	e	file:
DRI	libavcodec/mjpeg.c	/^    DRI   = 0xdd,	\/* define restart interval *\/$/;"	e	file:
DSPContext	libavcodec/dsputil.h	/^typedef struct DSPContext {$/;"	s
DSPContext	libavcodec/dsputil.h	/^} DSPContext;$/;"	t
DSPDEPS	tests/Makefile	/^DSPDEPS = $(SRC_PATH)\/libavcodec\/i386\/dsputil_mmx.c \\$/;"	m
DSPUTIL_H	libavcodec/dsputil.h	29;"	d
DST_0	libavcodec/sparc/dsputil_vis.c	91;"	d	file:
DST_1	libavcodec/sparc/dsputil_vis.c	92;"	d	file:
DST_2	libavcodec/sparc/dsputil_vis.c	93;"	d	file:
DST_3	libavcodec/sparc/dsputil_vis.c	94;"	d	file:
DTS_ID	libavformat/mpeg.c	91;"	d	file:
DUMMY_DURATION	libavformat/swf.c	25;"	d	file:
DUMMY_FILE_SIZE	libavformat/swf.c	24;"	d	file:
DUMP	libavcodec/imgresample.c	166;"	d	file:
DUP4	libavcodec/sparc/dsputil_vis.c	61;"	d	file:
DUP8	libavcodec/sparc/dsputil_vis.c	62;"	d	file:
DURATION_MAX_READ_SIZE	libavformat/utils.c	1489;"	d	file:
DV1394_API_VERSION	libavformat/dv1394.h	39;"	d
DV1394_DEBUG	libavformat/dv1394.c	31;"	d	file:
DV1394_DEFAULT_CARD	libavformat/dv1394.h	30;"	d
DV1394_DEFAULT_CHANNEL	libavformat/dv1394.h	29;"	d
DV1394_GET_STATUS	libavformat/dv1394.h	/^	DV1394_GET_STATUS,$/;"	e
DV1394_INIT	libavformat/dv1394.h	/^	DV1394_INIT,$/;"	e
DV1394_INVALID	libavformat/dv1394.h	/^	DV1394_INVALID = 0,$/;"	e
DV1394_MAX_FRAMES	libavformat/dv1394.h	199;"	d
DV1394_NTSC	libavformat/dv1394.h	/^	DV1394_NTSC = 0,$/;"	e	enum:pal_or_ntsc
DV1394_NTSC_FRAME_SIZE	libavformat/dv1394.h	206;"	d
DV1394_NTSC_HEIGHT	libavformat/dv1394.h	34;"	d
DV1394_NTSC_PACKETS_PER_FRAME	libavformat/dv1394.h	202;"	d
DV1394_PAL	libavformat/dv1394.h	/^	DV1394_PAL$/;"	e	enum:pal_or_ntsc
DV1394_PAL_FRAME_SIZE	libavformat/dv1394.h	207;"	d
DV1394_PAL_HEIGHT	libavformat/dv1394.h	35;"	d
DV1394_PAL_PACKETS_PER_FRAME	libavformat/dv1394.h	203;"	d
DV1394_RECEIVE_FRAMES	libavformat/dv1394.h	/^	DV1394_RECEIVE_FRAMES,$/;"	e
DV1394_RING_FRAMES	libavformat/dv1394.h	31;"	d
DV1394_SHUTDOWN	libavformat/dv1394.h	/^	DV1394_SHUTDOWN,$/;"	e
DV1394_START_RECEIVE	libavformat/dv1394.h	/^	DV1394_START_RECEIVE,$/;"	e
DV1394_SUBMIT_FRAMES	libavformat/dv1394.h	/^	DV1394_SUBMIT_FRAMES,$/;"	e
DV1394_WAIT_FRAMES	libavformat/dv1394.h	/^	DV1394_WAIT_FRAMES,$/;"	e
DV1394_WIDTH	libavformat/dv1394.h	33;"	d
DVDemuxContext	libavformat/dv.c	/^struct DVDemuxContext {$/;"	s	file:
DVDemuxContext	libavformat/dv.h	/^typedef struct DVDemuxContext DVDemuxContext;$/;"	t
DVMuxContext	libavformat/dv.c	/^struct DVMuxContext {$/;"	s	file:
DVMuxContext	libavformat/dv.h	/^typedef struct DVMuxContext DVMuxContext;$/;"	t
DVVideoContext	libavcodec/dv.c	/^typedef struct DVVideoContext {$/;"	s	file:
DVVideoContext	libavcodec/dv.c	/^} DVVideoContext;$/;"	t	file:
DV_VLC_MAP_LEV_SIZE	libavcodec/dv.c	54;"	d	file:
DV_VLC_MAP_LEV_SIZE	libavcodec/dv.c	57;"	d	file:
DV_VLC_MAP_RUN_SIZE	libavcodec/dv.c	53;"	d	file:
DV_VLC_MAP_RUN_SIZE	libavcodec/dv.c	56;"	d	file:
DVprofile	libavcodec/dvdata.h	/^typedef struct DVprofile {$/;"	s
DVprofile	libavcodec/dvdata.h	/^} DVprofile;$/;"	t
DWTELEM	libavcodec/snow.c	33;"	d	file:
DataRateData	ffserver.c	/^} DataRateData;$/;"	t	file:
DynBuffer	libavformat/aviobuf.c	/^typedef struct DynBuffer {$/;"	s	file:
DynBuffer	libavformat/aviobuf.c	/^} DynBuffer;$/;"	t	file:
EAGAIN	berrno.h	25;"	d
EAGAIN	berrno.h	27;"	d
EA_BITS_PER_SAMPLE	libavformat/electronicarts.c	35;"	d	file:
EA_PREAMBLE_SIZE	libavformat/electronicarts.c	36;"	d	file:
EA_SAMPLE_RATE	libavformat/electronicarts.c	34;"	d	file:
EBML_ID_DOCTYPE	libavformat/matroska.c	44;"	d	file:
EBML_ID_DOCTYPEREADVERSION	libavformat/matroska.c	46;"	d	file:
EBML_ID_DOCTYPEVERSION	libavformat/matroska.c	45;"	d	file:
EBML_ID_EBMLMAXIDLENGTH	libavformat/matroska.c	42;"	d	file:
EBML_ID_EBMLMAXSIZELENGTH	libavformat/matroska.c	43;"	d	file:
EBML_ID_EBMLREADVERSION	libavformat/matroska.c	41;"	d	file:
EBML_ID_EBMLVERSION	libavformat/matroska.c	40;"	d	file:
EBML_ID_HEADER	libavformat/matroska.c	37;"	d	file:
EBML_ID_VOID	libavformat/matroska.c	49;"	d	file:
EBML_MAX_DEPTH	libavformat/matroska.c	212;"	d	file:
EBML_VERSION	libavformat/matroska.c	34;"	d	file:
EDGE_WIDTH	libavcodec/mpegvideo.h	42;"	d
EIGHT_BIT_SAMPLES	libavcodec/jrevdct.c	37;"	d	file:
EINTR	berrno.h	15;"	d
EINTR	berrno.h	17;"	d
EINVAL	berrno.h	35;"	d
EINVAL	berrno.h	37;"	d
EIO	berrno.h	20;"	d
EIO	berrno.h	22;"	d
END_NOT_FOUND	libavcodec/mpegvideo.h	760;"	d
ENERGYSIZE	libavcodec/shorten.c	47;"	d	file:
ENODATA	libavcodec/common.h	34;"	d
ENOENT	berrno.h	10;"	d
ENOENT	berrno.h	12;"	d
ENOMEM	berrno.h	30;"	d
ENOMEM	berrno.h	32;"	d
EOI	libavcodec/mjpeg.c	/^    EOI   = 0xd9,	\/* end of image *\/$/;"	e	file:
EPIPE	berrno.h	40;"	d
EPIPE	berrno.h	42;"	d
EXESUF	config.mak	/^EXESUF=${BUILDSUF}$/;"	m
EXP	libavcodec/mjpeg.c	/^    EXP   = 0xdf,	\/* expand reference components *\/$/;"	e	file:
EXP_D15	libavcodec/ac3.h	35;"	d
EXP_D15	libavcodec/liba52/a52_internal.h	97;"	d
EXP_D25	libavcodec/ac3.h	36;"	d
EXP_D25	libavcodec/liba52/a52_internal.h	98;"	d
EXP_D45	libavcodec/ac3.h	37;"	d
EXP_D45	libavcodec/liba52/a52_internal.h	99;"	d
EXP_DIFF_THRESHOLD	libavcodec/ac3enc.c	66;"	d	file:
EXP_NEW	libavcodec/ac3.h	33;"	d
EXP_REUSE	libavcodec/ac3.h	32;"	d
EXP_REUSE	libavcodec/liba52/a52_internal.h	96;"	d
EXTENDED_PAR	libavcodec/mpeg4data.h	21;"	d
EXTENDED_SAR	libavcodec/h264data.h	52;"	d
EXTRACT	libavcodec/libpostproc/postprocess_altivec_template.c	554;"	d	file:
EXTRACT	libavcodec/libpostproc/postprocess_altivec_template.c	575;"	d	file:
EXTRALIBS	config.mak	/^EXTRALIBS=-lm -ldts -lz -lpthread -ldl$/;"	m
EXT_START_CODE	libavcodec/mpeg12.c	44;"	d	file:
EXT_START_CODE	libavcodec/parser.c	159;"	d	file:
EaDemuxContext	libavformat/electronicarts.c	/^typedef struct EaDemuxContext {$/;"	s	file:
EaDemuxContext	libavformat/electronicarts.c	/^} EaDemuxContext;$/;"	t	file:
Eight	libavcodec/i386/vp3dsp_mmx.c	287;"	d	file:
EightBpsContext	libavcodec/8bps.c	/^typedef struct EightBpsContext {$/;"	s	file:
EightBpsContext	libavcodec/8bps.c	/^} EightBpsContext;$/;"	t	file:
EncBlockInfo	libavcodec/dv.c	/^typedef struct EncBlockInfo {$/;"	s	file:
EncBlockInfo	libavcodec/dv.c	/^} EncBlockInfo;$/;"	t	file:
Exp1to3	libavcodec/mace.c	/^static void Exp1to3(MACEContext *ctx,$/;"	f	file:
Exp1to6	libavcodec/mace.c	/^static void Exp1to6(MACEContext *ctx,$/;"	f	file:
F	libavcodec/g726.c	/^	int* F;               \/**< special table #2 *\/$/;"	m	struct:G726Tables	file:
F	libavcodec/i386/idct_mmx.c	323;"	d	file:
F	tests/tiny_psnr.c	25;"	d	file:
F2	libavcodec/libpostproc/postprocess_altivec_template.c	723;"	d	file:
F2	libavcodec/libpostproc/postprocess_altivec_template.c	803;"	d	file:
FAACContext	libavcodec/faad.c	/^} FAACContext;$/;"	t	file:
FAADAPI	libavcodec/faad.c	32;"	d	file:
FAAN_POSTSCALE	libavcodec/faandct.h	28;"	d
FASTDIV	libavcodec/common.h	271;"	d
FASTDIV	libavcodec/common.h	282;"	d
FASTDIV	libavcodec/common.h	284;"	d
FAST_L2_DIFF	libavcodec/libpostproc/postprocess_template.c	2246;"	d	file:
FCENTER	libavcodec/imgresample.c	37;"	d	file:
FDCTCOL	libavcodec/ppc/fdct_altivec.c	135;"	d	file:
FDCTROW	libavcodec/ppc/fdct_altivec.c	78;"	d	file:
FDSC_TAG	libavformat/segafilm.c	31;"	d	file:
FE	tests/audiogen.c	9;"	d	file:
FELEM	libavcodec/resample2.c	34;"	d	file:
FELEM	libavcodec/resample2.c	41;"	d	file:
FELEM2	libavcodec/resample2.c	35;"	d	file:
FELEM2	libavcodec/resample2.c	42;"	d	file:
FELEM_MAX	libavcodec/resample2.c	36;"	d	file:
FELEM_MAX	libavcodec/resample2.c	43;"	d	file:
FELEM_MIN	libavcodec/resample2.c	37;"	d	file:
FELEM_MIN	libavcodec/resample2.c	44;"	d	file:
FETCH_NEXT_STREAM_BYTE	libavcodec/aasc.c	38;"	d	file:
FETCH_NEXT_STREAM_BYTE	libavcodec/msrle.c	50;"	d	file:
FFLIBS	Makefile	/^FFLIBS = -L.\/libavformat -lavformat$(BUILDSUF) -L.\/libavcodec -lavcodec$(BUILDSUF)$/;"	m
FFMAX	libavcodec/common.h	265;"	d
FFMContext	libavformat/ffm.c	/^typedef struct FFMContext {$/;"	s	file:
FFMContext	libavformat/ffm.c	/^} FFMContext;$/;"	t	file:
FFMIN	libavcodec/common.h	266;"	d
FFMPEG_AVI_H	libavformat/avi.h	2;"	d
FFMPEG_CONFIGURATION	config.h	2;"	d
FFMPEG_DEINT_FILTER	libavcodec/libpostproc/postprocess_internal.h	55;"	d
FFMPEG_VERSION	libavcodec/avcodec.h	19;"	d
FFMPEG_VERSION_INT	libavcodec/avcodec.h	18;"	d
FFMStream	libavformat/ffm.c	/^typedef struct FFMStream {$/;"	s	file:
FFMStream	libavformat/ffm.c	/^} FFMStream;$/;"	t	file:
FFM_HEADER_SIZE	libavformat/ffm.c	23;"	d	file:
FFM_PACKET_SIZE	libavformat/avformat.h	625;"	d
FFPLAY_O	Makefile	/^FFPLAY_O=ffplay.o$/;"	m
FFRTSPCallback	libavformat/rtsp.h	/^typedef int FFRTSPCallback(enum RTSPCallbackAction action, $/;"	t
FFSERVER_H	ffserver.h	2;"	d
FFSLDFLAGS	config.mak	/^FFSLDFLAGS=-Wl,-E$/;"	m
FFStream	ffserver.c	/^typedef struct FFStream {$/;"	s	file:
FFStream	ffserver.c	/^} FFStream;$/;"	t	file:
FFTComplex	libavcodec/dsputil.h	/^typedef struct FFTComplex {$/;"	s
FFTComplex	libavcodec/dsputil.h	/^} FFTComplex;$/;"	t
FFTContext	libavcodec/dsputil.h	/^typedef struct FFTContext {$/;"	s
FFTContext	libavcodec/dsputil.h	/^} FFTContext;$/;"	t
FFTSample	libavcodec/dsputil.h	/^typedef float FFTSample;$/;"	t
FFV1Context	libavcodec/ffv1.c	/^typedef struct FFV1Context{$/;"	s	file:
FFV1Context	libavcodec/ffv1.c	/^}FFV1Context;$/;"	t	file:
FF_AA_AUTO	libavcodec/avcodec.h	1625;"	d
FF_AA_FASTINT	libavcodec/avcodec.h	1626;"	d
FF_AA_FLOAT	libavcodec/avcodec.h	1628;"	d
FF_AA_INT	libavcodec/avcodec.h	1627;"	d
FF_ALLOC_EVENT	ffplay.c	203;"	d	file:
FF_ALPHA_SEMI_TRANSP	libavcodec/avcodec.h	2146;"	d
FF_ALPHA_TRANSP	libavcodec/avcodec.h	2145;"	d
FF_ASPECT_EXTENDED	libavcodec/avcodec.h	742;"	d
FF_BUFFER_HINTS_PRESERVE	libavcodec/avcodec.h	643;"	d
FF_BUFFER_HINTS_READABLE	libavcodec/avcodec.h	642;"	d
FF_BUFFER_HINTS_REUSABLE	libavcodec/avcodec.h	644;"	d
FF_BUFFER_HINTS_VALID	libavcodec/avcodec.h	641;"	d
FF_BUFFER_TYPE_COPY	libavcodec/avcodec.h	631;"	d
FF_BUFFER_TYPE_INTERNAL	libavcodec/avcodec.h	628;"	d
FF_BUFFER_TYPE_SHARED	libavcodec/avcodec.h	630;"	d
FF_BUFFER_TYPE_USER	libavcodec/avcodec.h	629;"	d
FF_BUG_AC_VLC	libavcodec/avcodec.h	928;"	d
FF_BUG_AMV	libavcodec/avcodec.h	927;"	d
FF_BUG_AUTODETECT	libavcodec/avcodec.h	922;"	d
FF_BUG_DC_CLIP	libavcodec/avcodec.h	935;"	d
FF_BUG_DIRECT_BLOCKSIZE	libavcodec/avcodec.h	932;"	d
FF_BUG_EDGE	libavcodec/avcodec.h	933;"	d
FF_BUG_HPEL_CHROMA	libavcodec/avcodec.h	934;"	d
FF_BUG_MS	libavcodec/avcodec.h	936;"	d
FF_BUG_NO_PADDING	libavcodec/avcodec.h	926;"	d
FF_BUG_OLD_MSMPEG4	libavcodec/avcodec.h	923;"	d
FF_BUG_QPEL_CHROMA	libavcodec/avcodec.h	929;"	d
FF_BUG_QPEL_CHROMA2	libavcodec/avcodec.h	931;"	d
FF_BUG_STD_QPEL	libavcodec/avcodec.h	930;"	d
FF_BUG_UMP4	libavcodec/avcodec.h	925;"	d
FF_BUG_XVID_ILACE	libavcodec/avcodec.h	924;"	d
FF_B_TYPE	libavcodec/avcodec.h	636;"	d
FF_CMP_BIT	libavcodec/avcodec.h	1340;"	d
FF_CMP_CHROMA	libavcodec/avcodec.h	1349;"	d
FF_CMP_DCT	libavcodec/avcodec.h	1338;"	d
FF_CMP_DCTMAX	libavcodec/avcodec.h	1348;"	d
FF_CMP_NSSE	libavcodec/avcodec.h	1345;"	d
FF_CMP_PSNR	libavcodec/avcodec.h	1339;"	d
FF_CMP_RD	libavcodec/avcodec.h	1341;"	d
FF_CMP_SAD	libavcodec/avcodec.h	1335;"	d
FF_CMP_SATD	libavcodec/avcodec.h	1337;"	d
FF_CMP_SSE	libavcodec/avcodec.h	1336;"	d
FF_CMP_VSAD	libavcodec/avcodec.h	1343;"	d
FF_CMP_VSSE	libavcodec/avcodec.h	1344;"	d
FF_CMP_W53	libavcodec/avcodec.h	1346;"	d
FF_CMP_W97	libavcodec/avcodec.h	1347;"	d
FF_CMP_ZERO	libavcodec/avcodec.h	1342;"	d
FF_CODER_TYPE_AC	libavcodec/avcodec.h	1480;"	d
FF_CODER_TYPE_VLC	libavcodec/avcodec.h	1479;"	d
FF_COLOR_GRAY	libavcodec/imgconvert.c	46;"	d	file:
FF_COLOR_RGB	libavcodec/imgconvert.c	45;"	d	file:
FF_COLOR_YUV	libavcodec/imgconvert.c	47;"	d	file:
FF_COLOR_YUV_JPEG	libavcodec/imgconvert.c	48;"	d	file:
FF_COMMON_FRAME	libavcodec/avcodec.h	417;"	d
FF_COMPLIANCE_EXPERIMENTAL	libavcodec/avcodec.h	963;"	d
FF_COMPLIANCE_INOFFICIAL	libavcodec/avcodec.h	962;"	d
FF_COMPLIANCE_NORMAL	libavcodec/avcodec.h	961;"	d
FF_COMPLIANCE_STRICT	libavcodec/avcodec.h	960;"	d
FF_COMPLIANCE_VERY_STRICT	libavcodec/avcodec.h	959;"	d
FF_DCT_ALTIVEC	libavcodec/avcodec.h	1122;"	d
FF_DCT_AUTO	libavcodec/avcodec.h	1117;"	d
FF_DCT_FAAN	libavcodec/avcodec.h	1123;"	d
FF_DCT_FASTINT	libavcodec/avcodec.h	1118;"	d
FF_DCT_INT	libavcodec/avcodec.h	1119;"	d
FF_DCT_MLIB	libavcodec/avcodec.h	1121;"	d
FF_DCT_MMX	libavcodec/avcodec.h	1120;"	d
FF_DEBUG_BITSTREAM	libavcodec/avcodec.h	1266;"	d
FF_DEBUG_BUGS	libavcodec/avcodec.h	1276;"	d
FF_DEBUG_DCT_COEFF	libavcodec/avcodec.h	1270;"	d
FF_DEBUG_ER	libavcodec/avcodec.h	1274;"	d
FF_DEBUG_MB_TYPE	libavcodec/avcodec.h	1267;"	d
FF_DEBUG_MMCO	libavcodec/avcodec.h	1275;"	d
FF_DEBUG_MV	libavcodec/avcodec.h	1269;"	d
FF_DEBUG_PICT_INFO	libavcodec/avcodec.h	1264;"	d
FF_DEBUG_PTS	libavcodec/avcodec.h	1273;"	d
FF_DEBUG_QP	libavcodec/avcodec.h	1268;"	d
FF_DEBUG_RC	libavcodec/avcodec.h	1265;"	d
FF_DEBUG_SKIP	libavcodec/avcodec.h	1271;"	d
FF_DEBUG_STARTCODE	libavcodec/avcodec.h	1272;"	d
FF_DEBUG_VIS_MB_TYPE	libavcodec/avcodec.h	1278;"	d
FF_DEBUG_VIS_MV_B_BACK	libavcodec/avcodec.h	1288;"	d
FF_DEBUG_VIS_MV_B_FOR	libavcodec/avcodec.h	1287;"	d
FF_DEBUG_VIS_MV_P_FOR	libavcodec/avcodec.h	1286;"	d
FF_DEBUG_VIS_QP	libavcodec/avcodec.h	1277;"	d
FF_DEFAULT_QUANT_BIAS	libavcodec/avcodec.h	1436;"	d
FF_DTG_AFD_14_9	libavcodec/avcodec.h	1416;"	d
FF_DTG_AFD_16_9	libavcodec/avcodec.h	1415;"	d
FF_DTG_AFD_16_9_SP_14_9	libavcodec/avcodec.h	1418;"	d
FF_DTG_AFD_4_3	libavcodec/avcodec.h	1414;"	d
FF_DTG_AFD_4_3_SP_14_9	libavcodec/avcodec.h	1417;"	d
FF_DTG_AFD_SAME	libavcodec/avcodec.h	1413;"	d
FF_DTG_AFD_SP_4_3	libavcodec/avcodec.h	1419;"	d
FF_EC_DEBLOCK	libavcodec/avcodec.h	1204;"	d
FF_EC_GUESS_MVS	libavcodec/avcodec.h	1203;"	d
FF_ER_AGGRESSIVE	libavcodec/avcodec.h	983;"	d
FF_ER_CAREFULL	libavcodec/avcodec.h	981;"	d
FF_ER_COMPLIANT	libavcodec/avcodec.h	982;"	d
FF_ER_VERY_AGGRESSIVE	libavcodec/avcodec.h	984;"	d
FF_IDCT_ALTIVEC	libavcodec/avcodec.h	1178;"	d
FF_IDCT_ARM	libavcodec/avcodec.h	1177;"	d
FF_IDCT_AUTO	libavcodec/avcodec.h	1170;"	d
FF_IDCT_H264	libavcodec/avcodec.h	1181;"	d
FF_IDCT_INT	libavcodec/avcodec.h	1171;"	d
FF_IDCT_LIBMPEG2MMX	libavcodec/avcodec.h	1174;"	d
FF_IDCT_MLIB	libavcodec/avcodec.h	1176;"	d
FF_IDCT_PS2	libavcodec/avcodec.h	1175;"	d
FF_IDCT_SH4	libavcodec/avcodec.h	1179;"	d
FF_IDCT_SIMPLE	libavcodec/avcodec.h	1172;"	d
FF_IDCT_SIMPLEARM	libavcodec/avcodec.h	1180;"	d
FF_IDCT_SIMPLEMMX	libavcodec/avcodec.h	1173;"	d
FF_IDCT_VP3	libavcodec/avcodec.h	1182;"	d
FF_INPUT_BUFFER_PADDING_SIZE	libavcodec/avcodec.h	256;"	d
FF_I_TYPE	libavcodec/avcodec.h	634;"	d
FF_LAMBDA_MAX	libavcodec/avcodec.h	1468;"	d
FF_LAMBDA_SCALE	libavcodec/avcodec.h	1466;"	d
FF_LAMBDA_SHIFT	libavcodec/avcodec.h	1465;"	d
FF_LEVEL_UNKNOWN	libavcodec/avcodec.h	1720;"	d
FF_LIBMPEG2_IDCT_PERM	libavcodec/dsputil.h	317;"	d
FF_LOSS_ALPHA	libavcodec/avcodec.h	2136;"	d
FF_LOSS_CHROMA	libavcodec/avcodec.h	2138;"	d
FF_LOSS_COLORQUANT	libavcodec/avcodec.h	2137;"	d
FF_LOSS_COLORSPACE	libavcodec/avcodec.h	2135;"	d
FF_LOSS_DEPTH	libavcodec/avcodec.h	2134;"	d
FF_LOSS_RESOLUTION	libavcodec/avcodec.h	2133;"	d
FF_MAX_B_FRAMES	libavcodec/avcodec.h	292;"	d
FF_MB_DECISION_BITS	libavcodec/avcodec.h	1519;"	d
FF_MB_DECISION_RD	libavcodec/avcodec.h	1520;"	d
FF_MB_DECISION_SIMPLE	libavcodec/avcodec.h	1518;"	d
FF_MIN_BUFFER_SIZE	libavcodec/avcodec.h	262;"	d
FF_MM_3DNOW	libavcodec/avcodec.h	1219;"	d
FF_MM_3DNOWEXT	libavcodec/avcodec.h	1223;"	d
FF_MM_FORCE	libavcodec/avcodec.h	1215;"	d
FF_MM_MMX	libavcodec/avcodec.h	1218;"	d
FF_MM_MMXEXT	libavcodec/avcodec.h	1220;"	d
FF_MM_SSE	libavcodec/avcodec.h	1221;"	d
FF_MM_SSE2	libavcodec/avcodec.h	1222;"	d
FF_NO_IDCT_PERM	libavcodec/dsputil.h	316;"	d
FF_OPT_MAX_DEPTH	libavcodec/avcodec.h	1828;"	d
FF_OPT_TYPE_BOOL	libavcodec/avcodec.h	1808;"	d
FF_OPT_TYPE_DOUBLE	libavcodec/avcodec.h	1809;"	d
FF_OPT_TYPE_FLAG	libavcodec/avcodec.h	1814;"	d
FF_OPT_TYPE_INT	libavcodec/avcodec.h	1810;"	d
FF_OPT_TYPE_MASK	libavcodec/avcodec.h	1812;"	d
FF_OPT_TYPE_RCOVERRIDE	libavcodec/avcodec.h	1815;"	d
FF_OPT_TYPE_STRING	libavcodec/avcodec.h	1811;"	d
FF_PARTTRANS_IDCT_PERM	libavcodec/dsputil.h	320;"	d
FF_PIXEL_PACKED	libavcodec/imgconvert.c	51;"	d	file:
FF_PIXEL_PALETTE	libavcodec/imgconvert.c	52;"	d	file:
FF_PIXEL_PLANAR	libavcodec/imgconvert.c	50;"	d	file:
FF_PRED_LEFT	libavcodec/avcodec.h	1239;"	d
FF_PRED_MEDIAN	libavcodec/avcodec.h	1241;"	d
FF_PRED_PLANE	libavcodec/avcodec.h	1240;"	d
FF_PROFILE_UNKNOWN	libavcodec/avcodec.h	1712;"	d
FF_P_TYPE	libavcodec/avcodec.h	635;"	d
FF_QP2LAMBDA	libavcodec/avcodec.h	1467;"	d
FF_QSCALE_TYPE_MPEG1	libavcodec/avcodec.h	625;"	d
FF_QSCALE_TYPE_MPEG2	libavcodec/avcodec.h	626;"	d
FF_QUALITY_SCALE	libavcodec/avcodec.h	1470;"	d
FF_QUIT_EVENT	ffplay.c	205;"	d	file:
FF_REFRESH_EVENT	ffplay.c	204;"	d	file:
FF_SIMPLE_IDCT_PERM	libavcodec/dsputil.h	318;"	d
FF_SI_TYPE	libavcodec/avcodec.h	638;"	d
FF_SP_TYPE	libavcodec/avcodec.h	639;"	d
FF_S_TYPE	libavcodec/avcodec.h	637;"	d
FF_TRANSPOSE_IDCT_PERM	libavcodec/dsputil.h	319;"	d
FILE	Makefile	/^FILE=ffmpeg-$(shell grep "\\#define FFMPEG_VERSION " libavcodec\/avcodec.h | \\$/;"	m
FILM_TAG	libavformat/segafilm.c	30;"	d	file:
FILTER4	libavcodec/imgresample.c	150;"	d	file:
FILTER_BITS	libavcodec/imgresample.c	43;"	d	file:
FILTER_SHIFT	libavcodec/resample2.c	32;"	d	file:
FILTER_SHIFT	libavcodec/resample2.c	39;"	d	file:
FIND_MIN_MAX	libavcodec/libpostproc/postprocess_template.c	1202;"	d	file:
FIND_MIN_MAX	libavcodec/libpostproc/postprocess_template.c	1217;"	d	file:
FINF_TAG	libavformat/westwood.c	43;"	d	file:
FIX	ffmpeg.c	2306;"	d	file:
FIX	libavcodec/imgconvert.c	2493;"	d	file:
FIX	libavcodec/imgconvert.c	997;"	d	file:
FIX	libavcodec/jrevdct.c	1125;"	d	file:
FIX	libavcodec/jrevdct.c	112;"	d	file:
FIX	libavcodec/mpegaudio.c	34;"	d	file:
FIX	libavcodec/mpegaudio.c	801;"	d	file:
FIX	libavcodec/mpegaudiodec.c	67;"	d	file:
FIX	tests/rotozoom.c	36;"	d	file:
FIX	tests/videogen.c	10;"	d	file:
FIX	vhook/fish.c	51;"	d	file:
FIXHR	libavcodec/mpegaudiodec.c	72;"	d	file:
FIXP	tests/rotozoom.c	10;"	d	file:
FIXR	libavcodec/mpegaudiodec.c	69;"	d	file:
FIX_0_211164243	libavcodec/jrevdct.c	150;"	d	file:
FIX_0_275899380	libavcodec/jrevdct.c	151;"	d	file:
FIX_0_298631336	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_0_298631336 2446$/;"	d
FIX_0_298631336	libavcodec/jfdctint.c	109;"	d	file:
FIX_0_298631336	libavcodec/jfdctint.c	122;"	d	file:
FIX_0_298631336	libavcodec/jrevdct.c	152;"	d	file:
FIX_0_298631336_ID	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_0_298631336_ID      0$/;"	d
FIX_0_382683433	libavcodec/jfdctfst.c	86;"	d	file:
FIX_0_382683433	libavcodec/jfdctfst.c	91;"	d	file:
FIX_0_390180644	libavcodec/jfdctint.c	110;"	d	file:
FIX_0_390180644	libavcodec/jfdctint.c	123;"	d	file:
FIX_0_390180644	libavcodec/jrevdct.c	153;"	d	file:
FIX_0_509795579	libavcodec/jrevdct.c	154;"	d	file:
FIX_0_541196100	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_0_541196100 4433$/;"	d
FIX_0_541196100	libavcodec/jfdctfst.c	304;"	d	file:
FIX_0_541196100	libavcodec/jfdctfst.c	87;"	d	file:
FIX_0_541196100	libavcodec/jfdctfst.c	92;"	d	file:
FIX_0_541196100	libavcodec/jfdctint.c	111;"	d	file:
FIX_0_541196100	libavcodec/jfdctint.c	124;"	d	file:
FIX_0_541196100	libavcodec/jrevdct.c	155;"	d	file:
FIX_0_541196100_ID	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_0_541196100_ID      4$/;"	d
FIX_0_601344887	libavcodec/jrevdct.c	156;"	d	file:
FIX_0_707106781	libavcodec/jfdctfst.c	88;"	d	file:
FIX_0_707106781	libavcodec/jfdctfst.c	93;"	d	file:
FIX_0_765366865	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_0_765366865 6270$/;"	d
FIX_0_765366865	libavcodec/jfdctint.c	112;"	d	file:
FIX_0_765366865	libavcodec/jfdctint.c	125;"	d	file:
FIX_0_765366865	libavcodec/jrevdct.c	157;"	d	file:
FIX_0_765366865_ID	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_0_765366865_ID      8$/;"	d
FIX_0_785694958	libavcodec/jrevdct.c	158;"	d	file:
FIX_0_899976223	libavcodec/jfdctint.c	113;"	d	file:
FIX_0_899976223	libavcodec/jfdctint.c	126;"	d	file:
FIX_0_899976223	libavcodec/jrevdct.c	159;"	d	file:
FIX_0xFFFF	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_0xFFFF 0xFFFF	$/;"	d
FIX_0xFFFF_ID	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_0xFFFF_ID          48$/;"	d
FIX_1_061594337	libavcodec/jrevdct.c	160;"	d	file:
FIX_1_082392200	libavcodec/4xm.c	131;"	d	file:
FIX_1_111140466	libavcodec/jrevdct.c	161;"	d	file:
FIX_1_175875602	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_1_175875602 9633$/;"	d
FIX_1_175875602	libavcodec/jfdctint.c	114;"	d	file:
FIX_1_175875602	libavcodec/jfdctint.c	127;"	d	file:
FIX_1_175875602	libavcodec/jrevdct.c	162;"	d	file:
FIX_1_175875602_ID	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_1_175875602_ID     12$/;"	d
FIX_1_306562965	libavcodec/jfdctfst.c	305;"	d	file:
FIX_1_306562965	libavcodec/jfdctfst.c	89;"	d	file:
FIX_1_306562965	libavcodec/jfdctfst.c	94;"	d	file:
FIX_1_306562965	libavcodec/jrevdct.c	163;"	d	file:
FIX_1_387039845	libavcodec/jrevdct.c	164;"	d	file:
FIX_1_414213562	libavcodec/4xm.c	132;"	d	file:
FIX_1_451774981	libavcodec/jrevdct.c	165;"	d	file:
FIX_1_501321110	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_1_501321110 12299$/;"	d
FIX_1_501321110	libavcodec/jfdctint.c	115;"	d	file:
FIX_1_501321110	libavcodec/jfdctint.c	128;"	d	file:
FIX_1_501321110	libavcodec/jrevdct.c	166;"	d	file:
FIX_1_501321110_ID	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_1_501321110_ID     16$/;"	d
FIX_1_662939225	libavcodec/jrevdct.c	167;"	d	file:
FIX_1_847759065	libavcodec/4xm.c	133;"	d	file:
FIX_1_847759065	libavcodec/jfdctint.c	116;"	d	file:
FIX_1_847759065	libavcodec/jfdctint.c	129;"	d	file:
FIX_1_847759065	libavcodec/jrevdct.c	168;"	d	file:
FIX_1_961570560	libavcodec/jfdctint.c	117;"	d	file:
FIX_1_961570560	libavcodec/jfdctint.c	130;"	d	file:
FIX_1_961570560	libavcodec/jrevdct.c	169;"	d	file:
FIX_2_053119869	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_2_053119869 16819$/;"	d
FIX_2_053119869	libavcodec/jfdctint.c	118;"	d	file:
FIX_2_053119869	libavcodec/jfdctint.c	131;"	d	file:
FIX_2_053119869	libavcodec/jrevdct.c	170;"	d	file:
FIX_2_053119869_ID	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_2_053119869_ID     20$/;"	d
FIX_2_172734803	libavcodec/jrevdct.c	171;"	d	file:
FIX_2_562915447	libavcodec/jfdctint.c	119;"	d	file:
FIX_2_562915447	libavcodec/jfdctint.c	132;"	d	file:
FIX_2_562915447	libavcodec/jrevdct.c	172;"	d	file:
FIX_2_613125930	libavcodec/4xm.c	134;"	d	file:
FIX_3_072711026	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_3_072711026 25172$/;"	d
FIX_3_072711026	libavcodec/jfdctint.c	120;"	d	file:
FIX_3_072711026	libavcodec/jfdctint.c	133;"	d	file:
FIX_3_072711026	libavcodec/jrevdct.c	173;"	d	file:
FIX_3_072711026_ID	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_3_072711026_ID     24$/;"	d
FIX_M_0_390180644	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_M_0_390180644 -3196$/;"	d
FIX_M_0_390180644_ID	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_M_0_390180644_ID   28$/;"	d
FIX_M_0_899976223	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_M_0_899976223 -7373$/;"	d
FIX_M_0_899976223_ID	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_M_0_899976223_ID   32$/;"	d
FIX_M_1_847759065	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_M_1_847759065 -15137$/;"	d
FIX_M_1_847759065_ID	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_M_1_847759065_ID   36$/;"	d
FIX_M_1_961570560	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_M_1_961570560 -16069$/;"	d
FIX_M_1_961570560_ID	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_M_1_961570560_ID   40$/;"	d
FIX_M_2_562915447	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_M_2_562915447 -20995$/;"	d
FIX_M_2_562915447_ID	libavcodec/armv4l/jrevdct_arm.S	/^#define FIX_M_2_562915447_ID   44$/;"	d
FLACContext	libavcodec/flac.c	/^typedef struct FLACContext {$/;"	s	file:
FLACContext	libavcodec/flac.c	/^} FLACContext;$/;"	t	file:
FLAC_STREAMINFO_SIZE	libavcodec/flac.c	45;"	d	file:
FLAC_STREAMINFO_SIZE	libavformat/oggparseflac.c	24;"	d	file:
FLAGMASK_UNUSED	libavcodec/lcl.c	71;"	d	file:
FLAG_CHROMA	libavcodec/motion_est.c	77;"	d	file:
FLAG_DATA_SIZE	libavformat/nut.c	57;"	d	file:
FLAG_DIRECT	libavcodec/motion_est.c	78;"	d	file:
FLAG_INTERFRAME	libavcodec/truemotion1.c	80;"	d	file:
FLAG_INTERPOLATED	libavcodec/truemotion1.c	81;"	d	file:
FLAG_INVALID	libavformat/nut.c	59;"	d	file:
FLAG_KEYFRAME	libavcodec/truemotion1.c	79;"	d	file:
FLAG_KEY_FRAME	libavformat/ffm.c	28;"	d	file:
FLAG_KEY_FRAME	libavformat/nut.c	58;"	d	file:
FLAG_MOVETO	libavformat/swf.c	44;"	d	file:
FLAG_MULTITHREAD	libavcodec/lcl.c	68;"	d	file:
FLAG_NULLFRAME	libavcodec/lcl.c	69;"	d	file:
FLAG_PNGFILTER	libavcodec/lcl.c	70;"	d	file:
FLAG_QPEL	libavcodec/motion_est.c	76;"	d	file:
FLAG_QPEL	libavcodec/snow.c	2034;"	d	file:
FLAG_SETFILL0	libavformat/swf.c	45;"	d	file:
FLAG_SETFILL1	libavformat/swf.c	46;"	d	file:
FLAG_SPRITE	libavcodec/truemotion1.c	78;"	d	file:
FLIC_CHUNK_MAGIC_1	libavformat/flic.c	36;"	d	file:
FLIC_CHUNK_MAGIC_2	libavformat/flic.c	37;"	d	file:
FLIC_DEFAULT_PTS_INC	libavformat/flic.c	39;"	d	file:
FLIC_FILE_MAGIC_1	libavformat/flic.c	34;"	d	file:
FLIC_FILE_MAGIC_2	libavformat/flic.c	35;"	d	file:
FLIC_HEADER_SIZE	libavformat/flic.c	41;"	d	file:
FLIC_MC_PTS_INC	libavformat/flic.c	38;"	d	file:
FLIC_PREAMBLE_SIZE	libavformat/flic.c	42;"	d	file:
FLI_256_COLOR	libavcodec/flicvideo.c	45;"	d	file:
FLI_BLACK	libavcodec/flicvideo.c	49;"	d	file:
FLI_BRUN	libavcodec/flicvideo.c	50;"	d	file:
FLI_COLOR	libavcodec/flicvideo.c	47;"	d	file:
FLI_COPY	libavcodec/flicvideo.c	51;"	d	file:
FLI_DELTA	libavcodec/flicvideo.c	46;"	d	file:
FLI_LC	libavcodec/flicvideo.c	48;"	d	file:
FLI_MINI	libavcodec/flicvideo.c	52;"	d	file:
FLOAT	libavcodec/faandct.c	32;"	d	file:
FLOAT_AA	libavcodec/mpegaudiodec.c	1976;"	d	file:
FLOAT_n	libavcodec/ppc/dsputil_altivec.h	81;"	d
FLOAT_p	libavcodec/ppc/dsputil_altivec.h	82;"	d
FLVContext	libavformat/flvenc.c	/^typedef struct FLVContext {$/;"	s	file:
FLVContext	libavformat/flvenc.c	/^} FLVContext;$/;"	t	file:
FMT_H261	libavcodec/mpegvideo.h	/^    FMT_H261,$/;"	e	enum:OutputFormat
FMT_H263	libavcodec/mpegvideo.h	/^    FMT_H263,$/;"	e	enum:OutputFormat
FMT_H264	libavcodec/mpegvideo.h	/^    FMT_H264,$/;"	e	enum:OutputFormat
FMT_MJPEG	libavcodec/mpegvideo.h	/^    FMT_MJPEG, $/;"	e	enum:OutputFormat
FMT_MPEG1	libavcodec/mpegvideo.h	/^    FMT_MPEG1,$/;"	e	enum:OutputFormat
FMT_RGB24	libavcodec/imgconvert.c	1520;"	d	file:
FMT_RGB24	libavcodec/imgconvert_template.h	856;"	d
FMT_RGBA32	libavcodec/imgconvert.c	1543;"	d	file:
FMT_RGBA32	libavcodec/imgconvert_template.h	857;"	d
FN	libavcodec/ac3enc.c	1475;"	d	file:
FNSIZE	libavcodec/shorten.c	59;"	d	file:
FN_BITSHIFT	libavcodec/shorten.c	66;"	d	file:
FN_BLOCKSIZE	libavcodec/shorten.c	65;"	d	file:
FN_DIFF0	libavcodec/shorten.c	60;"	d	file:
FN_DIFF1	libavcodec/shorten.c	61;"	d	file:
FN_DIFF2	libavcodec/shorten.c	62;"	d	file:
FN_DIFF3	libavcodec/shorten.c	63;"	d	file:
FN_QLPC	libavcodec/shorten.c	67;"	d	file:
FN_QUIT	libavcodec/shorten.c	64;"	d	file:
FN_VERBATIM	libavcodec/shorten.c	69;"	d	file:
FN_ZERO	libavcodec/shorten.c	68;"	d	file:
FORCE_QUANT	libavcodec/libpostproc/postprocess_internal.h	59;"	d
FORM_TAG	libavformat/wc3movie.c	32;"	d	file:
FORM_TAG	libavformat/westwood.c	40;"	d	file:
FOURCC_MSZH	libavcodec/lcl.c	76;"	d	file:
FOURCC_ZLIB	libavcodec/lcl.c	77;"	d	file:
FOUROF	libavcodec/ppc/mpegvideo_altivec.c	101;"	d	file:
FOUROF	libavcodec/ppc/mpegvideo_altivec.c	104;"	d	file:
FOUROF	libavcodec/ppc/mpegvideo_altivec.c	520;"	d	file:
FPS_TAG	libavcodec/fraps.c	35;"	d	file:
FRAC_BITS	libavcodec/mpegaudio.c	31;"	d	file:
FRAC_BITS	libavcodec/mpegaudiodec.c	44;"	d	file:
FRAC_BITS	libavcodec/mpegaudiodec.c	47;"	d	file:
FRAC_BITS	libavcodec/snow.c	37;"	d	file:
FRAC_BITS	libavformat/swf.c	260;"	d	file:
FRAC_BITS	tests/audiogen.c	26;"	d	file:
FRAC_BITS	tests/videogen.c	151;"	d	file:
FRAC_ONE	libavcodec/mpegaudiodec.c	63;"	d	file:
FRAC_ONE	tests/audiogen.c	27;"	d	file:
FRAC_ONE	tests/videogen.c	152;"	d	file:
FRAC_RND	libavcodec/mpegaudiodec.c	70;"	d	file:
FRAGMENT_PIXELS	libavcodec/vp3.c	43;"	d	file:
FRAME_CODED	libavcodec/vp3.c	1890;"	d	file:
FRAME_HEADER_SIZE	libavformat/asf.c	27;"	d	file:
FRAME_HEADER_SIZE	libavformat/ffm.c	27;"	d	file:
FRAME_PTS_INC	libavformat/idcin.c	72;"	d	file:
FRAME_SKIPPED	libavcodec/mpegvideo.h	32;"	d
FREE_ATOM	qt-faststart.c	49;"	d	file:
FTYP_ATOM	qt-faststart.c	57;"	d	file:
FULLPEL_MODE	libavcodec/svq3.c	46;"	d	file:
FULL_Y_RANGE	libavcodec/libpostproc/postprocess_internal.h	47;"	d
F_INIT	libavcodec/libpostproc/postprocess_altivec_template.c	717;"	d	file:
F_tbl16	libavcodec/g726.c	/^static int F_tbl16[] =$/;"	v	file:
F_tbl24	libavcodec/g726.c	/^static int F_tbl24[] =$/;"	v	file:
F_tbl32	libavcodec/g726.c	/^static int F_tbl32[] = $/;"	v	file:
F_tbl40	libavcodec/g726.c	/^static int F_tbl40[] = $/;"	v	file:
FaacAudioContext	libavcodec/faac.c	/^typedef struct FaacAudioContext {$/;"	s	file:
FaacAudioContext	libavcodec/faac.c	/^} FaacAudioContext;$/;"	t	file:
Faac_encode_close	libavcodec/faac.c	/^int Faac_encode_close(AVCodecContext *avctx)$/;"	f
Faac_encode_frame	libavcodec/faac.c	/^int Faac_encode_frame(AVCodecContext *avctx,$/;"	f
Faac_encode_init	libavcodec/faac.c	/^static int Faac_encode_init(AVCodecContext *avctx)$/;"	f	file:
FeedData	ffserver.c	/^typedef struct FeedData {$/;"	s	file:
FeedData	ffserver.c	/^} FeedData;$/;"	t	file:
FifoBuffer	libavformat/avformat.h	/^typedef struct FifoBuffer {$/;"	s
FifoBuffer	libavformat/avformat.h	/^} FifoBuffer;$/;"	t
FilmDemuxContext	libavformat/segafilm.c	/^typedef struct FilmDemuxContext {$/;"	s	file:
FilmDemuxContext	libavformat/segafilm.c	/^} FilmDemuxContext;$/;"	t	file:
FlicDecodeContext	libavcodec/flicvideo.c	/^typedef struct FlicDecodeContext {$/;"	s	file:
FlicDecodeContext	libavcodec/flicvideo.c	/^} FlicDecodeContext;$/;"	t	file:
FlicDemuxContext	libavformat/flic.c	/^typedef struct FlicDemuxContext {$/;"	s	file:
FlicDemuxContext	libavformat/flic.c	/^} FlicDemuxContext;$/;"	t	file:
Float11	libavcodec/g726.c	/^typedef struct Float11 {$/;"	s	file:
Float11	libavcodec/g726.c	/^} Float11;$/;"	t	file:
FourXContext	libavcodec/4xm.c	/^typedef struct FourXContext{$/;"	s	file:
FourXContext	libavcodec/4xm.c	/^} FourXContext;$/;"	t	file:
FourxmDemuxContext	libavformat/4xm.c	/^typedef struct FourxmDemuxContext {$/;"	s	file:
FourxmDemuxContext	libavformat/4xm.c	/^} FourxmDemuxContext;$/;"	t	file:
FrameCode	libavformat/nut.c	/^} FrameCode;$/;"	t	file:
FrameHookConfigure	libavformat/framehook.h	/^typedef int (FrameHookConfigure)(void **ctxp, int argc, char *argv[]);$/;"	t
FrameHookConfigureFn	libavformat/framehook.h	/^typedef FrameHookConfigure *FrameHookConfigureFn;$/;"	t
FrameHookEntry	libavformat/framehook.c	/^} FrameHookEntry;$/;"	t	file:
FrameHookProcess	libavformat/framehook.h	/^typedef void (FrameHookProcess)(void *ctx, struct AVPicture *pict, enum PixelFormat pix_fmt, int width, int height, int64_t pts);$/;"	t
FrameHookProcessFn	libavformat/framehook.h	/^typedef FrameHookProcess *FrameHookProcessFn;$/;"	t
FrameHookRelease	libavformat/framehook.h	/^typedef void (FrameHookRelease)(void *ctx);$/;"	t
FrameHookReleaseFn	libavformat/framehook.h	/^typedef FrameHookRelease *FrameHookReleaseFn;$/;"	t
FrapsContext	libavcodec/fraps.c	/^typedef struct FrapsContext{$/;"	s	file:
FrapsContext	libavcodec/fraps.c	/^} FrapsContext;$/;"	t	file:
G	libavcodec/huffyuv.c	38;"	d	file:
G	libavcodec/huffyuv.c	42;"	d	file:
G726Context	libavcodec/g726.c	/^typedef struct G726Context {$/;"	s	file:
G726Context	libavcodec/g726.c	/^} G726Context;$/;"	t	file:
G726Tables	libavcodec/g726.c	/^typedef struct G726Tables {$/;"	s	file:
G726Tables	libavcodec/g726.c	/^} G726Tables;$/;"	t	file:
G726Tables_pool	libavcodec/g726.c	/^static G726Tables G726Tables_pool[] = $/;"	v	file:
GCE_DISPOSAL_BACKGROUND	libavformat/gifdec.c	30;"	d	file:
GCE_DISPOSAL_INPLACE	libavformat/gifdec.c	29;"	d	file:
GCE_DISPOSAL_NONE	libavformat/gifdec.c	28;"	d	file:
GCE_DISPOSAL_RESTORE	libavformat/gifdec.c	31;"	d	file:
GET_BLOCK_COUNT	libavcodec/smc.c	61;"	d	file:
GET_CACHE	libavcodec/bitstream.h	429;"	d
GET_CACHE	libavcodec/bitstream.h	491;"	d
GET_CACHE	libavcodec/bitstream.h	556;"	d
GET_DATA	libavcodec/bitstream.c	95;"	d	file:
GET_LIST_HEADER	libavformat/4xm.c	50;"	d	file:
GET_MODE_BUFFER_SIZE	libavcodec/libpostproc/postprocess.c	108;"	d	file:
GET_MQUANT	libavcodec/vc9.c	1689;"	d	file:
GET_MVDATA	libavcodec/vc9.c	1716;"	d	file:
GET_NEXT_INDEX	libavcodec/truemotion1.c	508;"	d	file:
GET_PIXEL	vhook/drawtext.c	82;"	d	file:
GET_RL_VLC	libavcodec/bitstream.h	760;"	d
GET_VLC	libavcodec/bitstream.h	729;"	d
GIFContext	libavformat/gif.c	/^} GIFContext;$/;"	t	file:
GIF_CHUNKS	libavformat/gif.c	44;"	d	file:
GLOBAL	libavcodec/jfdctfst.c	301;"	d	file:
GLOBAL	libavcodec/jfdctfst.c	44;"	d	file:
GLOBAL	libavcodec/jfdctint.c	39;"	d	file:
GLOBAL	libavcodec/jrevdct.c	42;"	d	file:
GLZWDecode	libavformat/gifdec.c	/^static int GLZWDecode(GifState * s, uint8_t * buf, int len)$/;"	f	file:
GLZWDecodeInit	libavformat/gifdec.c	/^static void GLZWDecodeInit(GifState * s, int csize)$/;"	f	file:
GMC1_PERF_COND	libavcodec/ppc/gmc_altivec.c	31;"	d	file:
GMC_SPRITE	libavcodec/mpeg4data.h	25;"	d
GNUC_PREREQ	libavcodec/alpha/asm.h	26;"	d
GNUC_PREREQ	libavcodec/alpha/asm.h	29;"	d
GOP_STARTCODE	libavcodec/mpeg4data.h	39;"	d
GOP_START_CODE	libavcodec/mpeg12.c	40;"	d	file:
GOP_START_CODE	libavformat/raw.c	252;"	d	file:
GRAY_SHAPE	libavcodec/mpeg4data.h	10;"	d
GSM_BLOCK_SIZE	libavcodec/libgsm.c	29;"	d	file:
GSM_FRAME_SIZE	libavcodec/libgsm.c	30;"	d	file:
GUID	libavformat/asf.h	/^} GUID;$/;"	t
GetBitContext	libavcodec/bitstream.h	/^typedef struct GetBitContext {$/;"	s
GetBitContext	libavcodec/bitstream.h	/^} GetBitContext;$/;"	t
GetCode	libavformat/gifdec.c	/^static inline int GetCode(GifState * s)$/;"	f	file:
GifState	libavformat/gifdec.c	/^typedef struct GifState {$/;"	s	file:
GifState	libavformat/gifdec.c	/^} GifState;$/;"	t	file:
GranuleDef	libavcodec/mpegaudiodec.c	/^typedef struct GranuleDef {$/;"	s	file:
GranuleDef	libavcodec/mpegaudiodec.c	/^} GranuleDef;$/;"	t	file:
H	tests/rotozoom.c	224;"	d	file:
H261Context	libavcodec/h261.c	/^typedef struct H261Context{$/;"	s	file:
H261Context	libavcodec/h261.c	/^}H261Context;$/;"	t	file:
H261_CBP_VLC_BITS	libavcodec/h261.c	36;"	d	file:
H261_MBA_VLC_BITS	libavcodec/h261.c	33;"	d	file:
H261_MTYPE_VLC_BITS	libavcodec/h261.c	34;"	d	file:
H261_MV_VLC_BITS	libavcodec/h261.c	35;"	d	file:
H263_LOOP_FILTER	libavcodec/i386/dsputil_mmx.c	526;"	d	file:
H263_MBTYPE_B_VLC_BITS	libavcodec/h263.c	53;"	d	file:
H264Context	libavcodec/h264.c	/^typedef struct H264Context{$/;"	s	file:
H264Context	libavcodec/h264.c	/^}H264Context;$/;"	t	file:
H264_CHROMA_MC	libavcodec/dsputil.c	1388;"	d	file:
H264_CHROMA_MC	libavcodec/sh4/qpel.c	458;"	d	file:
H264_CHROMA_MC8_TMPL	libavcodec/i386/dsputil_h264_template_mmx.c	/^static void H264_CHROMA_MC8_TMPL(uint8_t *dst\/*align 8*\/, uint8_t *src\/*align 1*\/, int stride, int h, int x, int y)$/;"	f	file:
H264_CHROMA_MC8_TMPL	libavcodec/i386/dsputil_mmx.c	3087;"	d	file:
H264_CHROMA_MC8_TMPL	libavcodec/i386/dsputil_mmx.c	3090;"	d	file:
H264_CHROMA_MC8_TMPL	libavcodec/i386/dsputil_mmx.c	3093;"	d	file:
H264_CHROMA_MC8_TMPL	libavcodec/i386/dsputil_mmx.c	3096;"	d	file:
H264_CHROMA_MC8_TMPL	libavcodec/i386/dsputil_mmx.c	3099;"	d	file:
H264_CHROMA_MC8_TMPL	libavcodec/i386/dsputil_mmx.c	3102;"	d	file:
H264_CHROMA_OP	libavcodec/i386/dsputil_mmx.c	3086;"	d	file:
H264_CHROMA_OP	libavcodec/i386/dsputil_mmx.c	3089;"	d	file:
H264_CHROMA_OP	libavcodec/i386/dsputil_mmx.c	3092;"	d	file:
H264_CHROMA_OP	libavcodec/i386/dsputil_mmx.c	3095;"	d	file:
H264_CHROMA_OP	libavcodec/i386/dsputil_mmx.c	3098;"	d	file:
H264_CHROMA_OP	libavcodec/i386/dsputil_mmx.c	3101;"	d	file:
H264_DEBLOCK_MASK	libavcodec/i386/dsputil_mmx.c	710;"	d	file:
H264_DEBLOCK_P0_Q0	libavcodec/i386/dsputil_mmx.c	726;"	d	file:
H264_DEBLOCK_Q1	libavcodec/i386/dsputil_mmx.c	772;"	d	file:
H264_FILTER_CHROMA4	libavcodec/i386/dsputil_mmx.c	905;"	d	file:
H264_LOWPASS	libavcodec/dsputil.c	2023;"	d	file:
H264_LOWPASS	libavcodec/sh4/qpel.c	1141;"	d	file:
H264_MC	libavcodec/dsputil.c	2225;"	d	file:
H264_MC	libavcodec/i386/dsputil_mmx.c	2919;"	d	file:
H264_MC	libavcodec/ppc/dsputil_h264_altivec.c	68;"	d	file:
H264_MC	libavcodec/sh4/qpel.c	1385;"	d	file:
H264_WEIGHT	libavcodec/dsputil.c	2385;"	d	file:
H264_WEIGHT	libavcodec/dsputil.c	2452;"	d	file:
HADAMARD48	libavcodec/i386/dsputil_mmx.c	1663;"	d	file:
HALFBLOCK	libavcodec/ra144.c	30;"	d	file:
HALFPEL_MODE	libavcodec/svq3.c	47;"	d	file:
HAS_ADVANCED_PROFILE	libavcodec/vc9.c	48;"	d	file:
HAS_ARG	cmdutils.h	7;"	d
HAS_CBP	libavcodec/mpegvideo.h	169;"	d
HAVE_3DNOW	libavcodec/libpostproc/postprocess.c	617;"	d	file:
HAVE_3DNOW	libavcodec/libpostproc/postprocess.c	623;"	d	file:
HAVE_3DNOW	libavcodec/libpostproc/postprocess.c	643;"	d	file:
HAVE_3DNOW	libavcodec/libpostproc/postprocess.c	653;"	d	file:
HAVE_3DNOW	libavcodec/libpostproc/postprocess.c	663;"	d	file:
HAVE_ALTIVEC	libavcodec/libpostproc/postprocess.c	618;"	d	file:
HAVE_ALTIVEC	libavcodec/libpostproc/postprocess.c	631;"	d	file:
HAVE_AV_CONFIG_H	cmdutils.c	19;"	d	file:
HAVE_AV_CONFIG_H	ffmpeg.c	19;"	d	file:
HAVE_AV_CONFIG_H	ffplay.c	19;"	d	file:
HAVE_AV_CONFIG_H	ffserver.c	19;"	d	file:
HAVE_AV_CONFIG_H	libavcodec/apiexample.c	16;"	d	file:
HAVE_AV_CONFIG_H	libavcodec/dtsdec.c	23;"	d	file:
HAVE_FREETYPE2	config.mak	/^HAVE_FREETYPE2=yes$/;"	m
HAVE_IMLIB2	config.mak	/^HAVE_IMLIB2=yes$/;"	m
HAVE_LOCALTIME_R	config.h	4;"	d
HAVE_LRINTF	config.h	7;"	d
HAVE_MALLOC_H	config.h	31;"	d
HAVE_MEMALIGN	config.h	32;"	d
HAVE_MMX	libavcodec/libpostproc/postprocess.c	615;"	d	file:
HAVE_MMX	libavcodec/libpostproc/postprocess.c	621;"	d	file:
HAVE_MMX	libavcodec/libpostproc/postprocess.c	641;"	d	file:
HAVE_MMX	libavcodec/libpostproc/postprocess.c	651;"	d	file:
HAVE_MMX	libavcodec/libpostproc/postprocess.c	661;"	d	file:
HAVE_MMX2	libavcodec/i386/mpegvideo_mmx.c	675;"	d	file:
HAVE_MMX2	libavcodec/i386/mpegvideo_mmx.c	680;"	d	file:
HAVE_MMX2	libavcodec/libpostproc/postprocess.c	616;"	d	file:
HAVE_MMX2	libavcodec/libpostproc/postprocess.c	622;"	d	file:
HAVE_MMX2	libavcodec/libpostproc/postprocess.c	642;"	d	file:
HAVE_MMX2	libavcodec/libpostproc/postprocess.c	652;"	d	file:
HAVE_MMX2	libavcodec/libpostproc/postprocess.c	662;"	d	file:
HAVE_PTHREADS	config.h	5;"	d
HAVE_PTHREADS	config.mak	/^HAVE_PTHREADS=yes$/;"	m
HAVE_THREADS	config.h	6;"	d
HAVE_VHOOK	config.h	8;"	d
HAVE_X11	ffplay.c	49;"	d	file:
HEADER_SIZE	libavcodec/a52dec.c	147;"	d	file:
HEADER_SIZE	libavcodec/ac3dec.c	79;"	d	file:
HEADER_SIZE	libavcodec/dtsdec.c	38;"	d	file:
HEADER_SIZE	libavcodec/mpegaudiodec.c	86;"	d	file:
HEAD_TAG	libavformat/4xm.c	33;"	d	file:
HEIGHT	libavcodec/motion_test.c	33;"	d	file:
HIGH_BAND_MAX_SIZE	libavcodec/wmadec.c	46;"	d	file:
HOOKS	vhook/Makefile	/^HOOKS=null.so fish.so ppm.so watermark.so$/;"	m
HOR_DOWN_PRED	libavcodec/h264data.h	34;"	d
HOR_PRED	libavcodec/h264data.h	29;"	d
HOR_PRED8x8	libavcodec/h264data.h	44;"	d
HOR_UP_PRED	libavcodec/h264data.h	36;"	d
HSV	vhook/fish.c	/^} HSV;$/;"	t	file:
HTTPContext	ffserver.c	/^typedef struct HTTPContext {$/;"	s	file:
HTTPContext	ffserver.c	/^} HTTPContext;$/;"	t	file:
HTTPContext	libavformat/http.c	/^} HTTPContext;$/;"	t	file:
HTTPSTATE_READY	ffserver.c	/^    HTTPSTATE_READY,$/;"	e	enum:HTTPState	file:
HTTPSTATE_RECEIVE_DATA	ffserver.c	/^    HTTPSTATE_RECEIVE_DATA,       $/;"	e	enum:HTTPState	file:
HTTPSTATE_SEND_DATA	ffserver.c	/^    HTTPSTATE_SEND_DATA,          \/* sending TCP or UDP data *\/$/;"	e	enum:HTTPState	file:
HTTPSTATE_SEND_DATA_HEADER	ffserver.c	/^    HTTPSTATE_SEND_DATA_HEADER,$/;"	e	enum:HTTPState	file:
HTTPSTATE_SEND_DATA_TRAILER	ffserver.c	/^    HTTPSTATE_SEND_DATA_TRAILER,$/;"	e	enum:HTTPState	file:
HTTPSTATE_SEND_HEADER	ffserver.c	/^    HTTPSTATE_SEND_HEADER,$/;"	e	enum:HTTPState	file:
HTTPSTATE_WAIT_FEED	ffserver.c	/^    HTTPSTATE_WAIT_FEED,          \/* wait for data from the feed *\/$/;"	e	enum:HTTPState	file:
HTTPSTATE_WAIT_REQUEST	ffserver.c	/^    HTTPSTATE_WAIT_REQUEST,$/;"	e	enum:HTTPState	file:
HTTPState	ffserver.c	/^enum HTTPState {$/;"	g	file:
HTTP_MAX_CONNECTIONS	ffserver.c	45;"	d	file:
HTTP_REQUEST_TIMEOUT	ffserver.c	84;"	d	file:
HUFFMAN_TABLE_SIZE	libavcodec/idcinvideo.c	55;"	d	file:
HUFFMAN_TABLE_SIZE	libavformat/idcin.c	71;"	d	file:
HUF_TOKENS	libavcodec/idcinvideo.c	56;"	d	file:
HYuvContext	libavcodec/huffyuv.c	/^typedef struct HYuvContext{$/;"	s	file:
HYuvContext	libavcodec/huffyuv.c	/^}HYuvContext;$/;"	t	file:
H_A_DEBLOCK	libavcodec/libpostproc/postprocess_internal.h	44;"	d
H_DEBLOCK	libavcodec/libpostproc/postprocess_internal.h	25;"	d
H_X1_FILTER	libavcodec/libpostproc/postprocess_internal.h	43;"	d
HuffTable	libavcodec/mpegaudiodec.c	/^typedef struct HuffTable {$/;"	s	file:
HuffTable	libavcodec/mpegaudiodec.c	/^} HuffTable;$/;"	t	file:
I	libavcodec/i386/vp3dsp_mmx.c	291;"	d	file:
I	libavcodec/i386/vp3dsp_mmx.c	297;"	d	file:
I	libavcodec/i386/vp3dsp_mmx.c	299;"	d	file:
I	libavcodec/i386/vp3dsp_mmx.c	305;"	d	file:
I	libavcodec/i386/vp3dsp_mmx.c	307;"	d	file:
I	libavcodec/i386/vp3dsp_mmx.c	312;"	d	file:
I	libavcodec/i386/vp3dsp_mmx.c	314;"	d	file:
I	libavcodec/i386/vp3dsp_mmx.c	319;"	d	file:
I	libavcodec/i386/vp3dsp_sse2.c	812;"	d	file:
IComplex	libavcodec/ac3enc.c	/^typedef struct IComplex {$/;"	s	file:
IComplex	libavcodec/ac3enc.c	/^} IComplex;$/;"	t	file:
ID3_GENRE_MAX	libavformat/mp3.c	24;"	d	file:
ID3_HEADER_SIZE	libavformat/mp3.c	21;"	d	file:
ID3_TAG_SIZE	libavformat/mp3.c	22;"	d	file:
IDCT	libavcodec/i386/simple_idct_mmx.c	1018;"	d	file:
IDCT	libavcodec/i386/simple_idct_mmx.c	1019;"	d	file:
IDCT	libavcodec/i386/simple_idct_mmx.c	1084;"	d	file:
IDCT	libavcodec/i386/simple_idct_mmx.c	1085;"	d	file:
IDCT	libavcodec/i386/simple_idct_mmx.c	1153;"	d	file:
IDCT	libavcodec/i386/simple_idct_mmx.c	1154;"	d	file:
IDCT	libavcodec/i386/simple_idct_mmx.c	1229;"	d	file:
IDCT	libavcodec/i386/simple_idct_mmx.c	1230;"	d	file:
IDCT	libavcodec/i386/simple_idct_mmx.c	707;"	d	file:
IDCT	libavcodec/i386/simple_idct_mmx.c	708;"	d	file:
IDCT	libavcodec/i386/simple_idct_mmx.c	797;"	d	file:
IDCT	libavcodec/i386/simple_idct_mmx.c	798;"	d	file:
IDCT	libavcodec/i386/simple_idct_mmx.c	873;"	d	file:
IDCT	libavcodec/i386/simple_idct_mmx.c	874;"	d	file:
IDCT	libavcodec/i386/simple_idct_mmx.c	941;"	d	file:
IDCT	libavcodec/i386/simple_idct_mmx.c	942;"	d	file:
IDCT	libavcodec/ppc/idct_altivec.c	90;"	d	file:
IDCT_HALF	libavcodec/ppc/idct_altivec.c	54;"	d	file:
ID_STRING	libavformat/nut.c	52;"	d	file:
II_BITRATE	libavcodec/msmpeg4.c	54;"	d	file:
IMGTYPE_RGB24	libavcodec/lcl.c	57;"	d	file:
IMGTYPE_YUV111	libavcodec/lcl.c	55;"	d	file:
IMGTYPE_YUV211	libavcodec/lcl.c	59;"	d	file:
IMGTYPE_YUV411	libavcodec/lcl.c	58;"	d	file:
IMGTYPE_YUV420	libavcodec/lcl.c	60;"	d	file:
IMGTYPE_YUV422	libavcodec/lcl.c	56;"	d	file:
IMODE_COLSKIP	libavcodec/vc9.c	921;"	d	file:
IMODE_DIFF2	libavcodec/vc9.c	917;"	d	file:
IMODE_DIFF6	libavcodec/vc9.c	919;"	d	file:
IMODE_NORM2	libavcodec/vc9.c	916;"	d	file:
IMODE_NORM6	libavcodec/vc9.c	918;"	d	file:
IMODE_RAW	libavcodec/vc9.c	915;"	d	file:
IMODE_ROWSKIP	libavcodec/vc9.c	920;"	d	file:
IMbInfo	libavcodec/h264data.h	/^typedef struct IMbInfo{$/;"	s
IMbInfo	libavcodec/h264data.h	/^} IMbInfo;$/;"	t
INBUF_SIZE	libavcodec/apiexample.c	21;"	d	file:
INBUF_SIZE	libavcodec/dtsdec.c	36;"	d	file:
INCL_DOS	ffplay.c	32;"	d	file:
INDEPENDENT	libavcodec/flac.c	/^    INDEPENDENT,$/;"	e	enum:decorrelation_type	file:
INDEX_STARTCODE	libavformat/nut.c	49;"	d	file:
INDX_TAG	libavformat/wc3movie.c	39;"	d	file:
INFINITY	ffmpeg.c	48;"	d	file:
INFO_STARTCODE	libavformat/nut.c	50;"	d	file:
INIT_VLC	libavcodec/vc9.c	52;"	d	file:
INIT_VLC	libavcodec/vc9.c	61;"	d	file:
INIT_VLC_LE	libavcodec/bitstream.h	720;"	d
INIT_VLC_USE_STATIC	libavcodec/bitstream.h	719;"	d
INSTALLSTRIP	config.mak	/^INSTALLSTRIP=-s$/;"	m
INSTALLVHOOK	Makefile	/^INSTALLVHOOK=install-vhook$/;"	m
INT16_MAX	libavcodec/common.h	112;"	d
INT16_MIN	libavcodec/common.h	108;"	d
INT64_MAX	libavcodec/common.h	120;"	d
INT64_MIN	libavcodec/common.h	116;"	d
INTEGER_H	libavcodec/integer.h	28;"	d
INTERNAL_BUFFER_SIZE	libavcodec/utils.c	199;"	d	file:
INTER_INTRA_VLC_BITS	libavcodec/msmpeg4.c	43;"	d	file:
INTER_MCBPC_VLC_BITS	libavcodec/h263.c	46;"	d	file:
INTRA_MCBPC_VLC_BITS	libavcodec/h263.c	45;"	d	file:
INT_AA	libavcodec/mpegaudiodec.c	1936;"	d	file:
INT_BIT	libavcodec/common.h	139;"	d
INT_BIT	libavcodec/common.h	141;"	d
INVALID_VLC	libavcodec/golomb.h	29;"	d
IOBUFFER_INIT_SIZE	ffserver.c	78;"	d	file:
IOBUF_SIZE	libavcodec/png.c	54;"	d	file:
IOBUF_SIZE	libavformat/png.c	54;"	d	file:
IO_BUFFER_SIZE	libavformat/aviobuf.c	23;"	d	file:
IO_BUF_SIZE	libavformat/jpeg.c	83;"	d	file:
IPAddressACL	ffserver.c	/^typedef struct IPAddressACL {$/;"	s	file:
IPAddressACL	ffserver.c	/^} IPAddressACL;$/;"	t	file:
IPAddressAction	ffserver.c	/^enum IPAddressAction {$/;"	g	file:
IPMOVIE_SIGNATURE	libavformat/ipmovie.c	45;"	d	file:
IPMOVIE_SIGNATURE_SIZE	libavformat/ipmovie.c	46;"	d	file:
IPMVEContext	libavformat/ipmovie.c	/^typedef struct IPMVEContext {$/;"	s	file:
IPMVEContext	libavformat/ipmovie.c	/^} IPMVEContext;$/;"	t	file:
IP_ALLOW	ffserver.c	/^    IP_ALLOW = 1,$/;"	e	enum:IPAddressAction	file:
IP_DENY	ffserver.c	/^    IP_DENY,$/;"	e	enum:IPAddressAction	file:
IR2_CODES	libavcodec/indeo2data.h	1;"	d
ISLEAP	libavformat/cutils.c	150;"	d	file:
ISO_11172_END_CODE	libavformat/mpeg.c	79;"	d	file:
ISQRT2	libavcodec/mpegaudiodec.c	1787;"	d	file:
IS_16X16	libavcodec/mpegvideo.h	157;"	d
IS_16X8	libavcodec/mpegvideo.h	158;"	d
IS_3IV1	libavcodec/h263.c	114;"	d	file:
IS_3IV1	libavcodec/h263.c	116;"	d	file:
IS_8X16	libavcodec/mpegvideo.h	159;"	d
IS_8X8	libavcodec/mpegvideo.h	160;"	d
IS_ACPRED	libavcodec/mpegvideo.h	165;"	d
IS_DIR	libavcodec/mpegvideo.h	167;"	d
IS_DIRECT	libavcodec/mpegvideo.h	155;"	d
IS_FIL	libavcodec/h261.c	41;"	d	file:
IS_GMC	libavcodec/mpegvideo.h	156;"	d
IS_INTER	libavcodec/mpegvideo.h	151;"	d
IS_INTERLACED	libavcodec/mpegvideo.h	154;"	d
IS_INTRA	libavcodec/mpegvideo.h	150;"	d
IS_INTRA16x16	libavcodec/mpegvideo.h	148;"	d
IS_INTRA4x4	libavcodec/mpegvideo.h	147;"	d
IS_INTRA_PCM	libavcodec/mpegvideo.h	153;"	d
IS_PCM	libavcodec/mpegvideo.h	149;"	d
IS_QUANT	libavcodec/mpegvideo.h	166;"	d
IS_REF0	libavcodec/h264data.h	310;"	d
IS_SKIP	libavcodec/mpegvideo.h	152;"	d
IS_SUB_4X4	libavcodec/mpegvideo.h	164;"	d
IS_SUB_4X8	libavcodec/mpegvideo.h	163;"	d
IS_SUB_8X4	libavcodec/mpegvideo.h	162;"	d
IS_SUB_8X8	libavcodec/mpegvideo.h	161;"	d
IS_ZERO_MV	libavcodec/mpeg12data.h	265;"	d
ITER	libavcodec/libpostproc/postprocess_altivec_template.c	142;"	d	file:
ITER	libavcodec/libpostproc/postprocess_altivec_template.c	160;"	d	file:
ITER	libavcodec/libpostproc/postprocess_altivec_template.c	758;"	d	file:
ITER	libavcodec/libpostproc/postprocess_altivec_template.c	802;"	d	file:
I_TYPE	libavcodec/mpegvideo.h	64;"	d
IdStrMap	libavformat/img2.c	/^} IdStrMap;$/;"	t	file:
IdcinContext	libavcodec/idcinvideo.c	/^typedef struct IdcinContext {$/;"	s	file:
IdcinContext	libavcodec/idcinvideo.c	/^} IdcinContext;$/;"	t	file:
IdcinDemuxContext	libavformat/idcin.c	/^typedef struct IdcinDemuxContext {$/;"	s	file:
IdcinDemuxContext	libavformat/idcin.c	/^} IdcinDemuxContext;$/;"	t	file:
IdctAdjustBeforeShift	libavcodec/i386/vp3dsp_mmx.c	27;"	d	file:
IdctAdjustBeforeShift	libavcodec/vp3dsp.c	30;"	d	file:
ImgReSampleContext	libavcodec/avcodec.h	/^typedef struct ImgReSampleContext ImgReSampleContext;$/;"	t
ImgReSampleContext	libavcodec/imgresample.c	/^struct ImgReSampleContext {$/;"	s	file:
Indeo3DecodeContext	libavcodec/indeo3.c	/^typedef struct Indeo3DecodeContext {$/;"	s	file:
Indeo3DecodeContext	libavcodec/indeo3.c	/^} Indeo3DecodeContext;$/;"	t	file:
InternalBuffer	libavcodec/utils.c	/^typedef struct InternalBuffer{$/;"	s	file:
InternalBuffer	libavcodec/utils.c	/^}InternalBuffer;$/;"	t	file:
IpvideoContext	libavcodec/interplayvideo.c	/^typedef struct IpvideoContext {$/;"	s	file:
IpvideoContext	libavcodec/interplayvideo.c	/^} IpvideoContext;$/;"	t	file:
Ir2Context	libavcodec/indeo2.c	/^typedef struct Ir2Context{$/;"	s	file:
Ir2Context	libavcodec/indeo2.c	/^} Ir2Context;$/;"	t	file:
J	libavcodec/i386/vp3dsp_mmx.c	292;"	d	file:
J	libavcodec/i386/vp3dsp_mmx.c	298;"	d	file:
J	libavcodec/i386/vp3dsp_mmx.c	300;"	d	file:
J	libavcodec/i386/vp3dsp_mmx.c	306;"	d	file:
J	libavcodec/i386/vp3dsp_mmx.c	308;"	d	file:
J	libavcodec/i386/vp3dsp_mmx.c	313;"	d	file:
J	libavcodec/i386/vp3dsp_mmx.c	315;"	d	file:
J	libavcodec/i386/vp3dsp_mmx.c	320;"	d	file:
JPEG_MARKER	libavcodec/mjpeg.c	/^} JPEG_MARKER;$/;"	t	file:
JPG	libavcodec/mjpeg.c	/^    JPG   = 0xc8,	\/* reserved for JPEG extension *\/$/;"	e	file:
JPG0	libavcodec/mjpeg.c	/^    JPG0  = 0xf0,$/;"	e	file:
JPG1	libavcodec/mjpeg.c	/^    JPG1  = 0xf1,$/;"	e	file:
JPG10	libavcodec/mjpeg.c	/^    JPG10 = 0xfa,$/;"	e	file:
JPG11	libavcodec/mjpeg.c	/^    JPG11 = 0xfb,$/;"	e	file:
JPG12	libavcodec/mjpeg.c	/^    JPG12 = 0xfc,$/;"	e	file:
JPG13	libavcodec/mjpeg.c	/^    JPG13 = 0xfd,$/;"	e	file:
JPG2	libavcodec/mjpeg.c	/^    JPG2  = 0xf2,$/;"	e	file:
JPG3	libavcodec/mjpeg.c	/^    JPG3  = 0xf3,$/;"	e	file:
JPG4	libavcodec/mjpeg.c	/^    JPG4  = 0xf4,$/;"	e	file:
JPG5	libavcodec/mjpeg.c	/^    JPG5  = 0xf5,$/;"	e	file:
JPG6	libavcodec/mjpeg.c	/^    JPG6  = 0xf6,$/;"	e	file:
JPG7	libavcodec/mjpeg.c	/^    JPG7  = 0xf7,$/;"	e	file:
JPG8	libavcodec/mjpeg.c	/^    JPG8  = 0xf8,$/;"	e	file:
JPG9	libavcodec/mjpeg.c	/^    JPG9  = 0xf9,$/;"	e	file:
JUMPALIGN	libavcodec/i386/dsputil_mmx.c	51;"	d	file:
JUNK_ATOM	qt-faststart.c	50;"	d	file:
JpegOpaque	libavformat/jpeg.c	/^typedef struct JpegOpaque {$/;"	s	file:
JpegOpaque	libavformat/jpeg.c	/^} JpegOpaque;$/;"	t	file:
KEYFRAMES_ONLY	libavcodec/vp3.c	64;"	d	file:
KEYFRAME_STARTCODE	libavformat/nut.c	48;"	d	file:
L2_DIFF_CORE	libavcodec/libpostproc/postprocess_template.c	2321;"	d	file:
LAST_SKIP_BITS	libavcodec/bitstream.h	415;"	d
LAST_SKIP_BITS	libavcodec/bitstream.h	482;"	d
LAST_SKIP_BITS	libavcodec/bitstream.h	547;"	d
LAST_SKIP_CACHE	libavcodec/bitstream.h	416;"	d
LAST_SKIP_CACHE	libavcodec/bitstream.h	483;"	d
LAST_SKIP_CACHE	libavcodec/bitstream.h	548;"	d
LATTICE_FACTOR	libavcodec/sonic.c	69;"	d	file:
LATTICE_SHIFT	libavcodec/sonic.c	67;"	d	file:
LBUTTERFLY2	libavcodec/i386/dsputil_mmx.c	1655;"	d	file:
LD	libavcodec/sh4/qpel.c	6;"	d	file:
LD16	libavcodec/dsputil.h	499;"	d
LD16	libavcodec/dsputil.h	507;"	d
LD32	libavcodec/dsputil.h	500;"	d
LD32	libavcodec/dsputil.h	508;"	d
LD64	libavcodec/dsputil.h	501;"	d
LD64	libavcodec/dsputil.h	509;"	d
LDCONFIG	config.mak	/^LDCONFIG=ldconfig$/;"	m
LDFLAGS	config.mak	/^LDFLAGS=-Wl,--warn-common -rdynamic$/;"	m
LD_W0	libavcodec/ppc/fdct_altivec.c	64;"	d	file:
LD_W1	libavcodec/ppc/fdct_altivec.c	65;"	d	file:
LD_W2	libavcodec/ppc/fdct_altivec.c	66;"	d	file:
LD_W3	libavcodec/ppc/fdct_altivec.c	67;"	d	file:
LD_W4	libavcodec/ppc/fdct_altivec.c	68;"	d	file:
LD_W5	libavcodec/ppc/fdct_altivec.c	69;"	d	file:
LD_W6	libavcodec/ppc/fdct_altivec.c	70;"	d	file:
LD_W7	libavcodec/ppc/fdct_altivec.c	71;"	d	file:
LD_W8	libavcodec/ppc/fdct_altivec.c	72;"	d	file:
LD_W9	libavcodec/ppc/fdct_altivec.c	73;"	d	file:
LD_WA	libavcodec/ppc/fdct_altivec.c	74;"	d	file:
LD_WB	libavcodec/ppc/fdct_altivec.c	75;"	d	file:
LEAPS_COUNT	libavformat/cutils.c	151;"	d	file:
LEFT	libavcodec/huffyuv.c	/^    LEFT= 0,$/;"	e	enum:Predictor	file:
LEFT_DC_PRED	libavcodec/h264data.h	38;"	d
LEFT_DC_PRED8x8	libavcodec/h264data.h	48;"	d
LEFT_SIDE	libavcodec/flac.c	/^    LEFT_SIDE,$/;"	e	enum:decorrelation_type	file:
LEFT_SIDE	libavcodec/sonic.c	41;"	d	file:
LEGACY_REGS	libavcodec/bswap.h	14;"	d
LEGACY_REGS	libavcodec/bswap.h	16;"	d
LEVEL	libavcodec/liba52/a52_internal.h	130;"	d
LEVEL	libavcodec/liba52/a52_internal.h	141;"	d
LEVEL_3DB	libavcodec/liba52/a52_internal.h	92;"	d
LEVEL_45DB	libavcodec/liba52/a52_internal.h	93;"	d
LEVEL_6DB	libavcodec/liba52/a52_internal.h	94;"	d
LEVEL_FIX	libavcodec/libpostproc/postprocess_internal.h	27;"	d
LEVEL_PLUS3DB	libavcodec/liba52/a52_internal.h	91;"	d
LEVEL_PLUS6DB	libavcodec/liba52/a52_internal.h	90;"	d
LE_16	libavcodec/avcodec.h	2360;"	d
LE_32	libavcodec/avcodec.h	2361;"	d
LE_DEF	libavformat/raw.c	578;"	d	file:
LE_DEF	libavformat/raw.c	581;"	d	file:
LIB	libavcodec/Makefile	/^LIB= $(LIBPREF)avcodec$(LIBSUF)$/;"	m
LIB	libavformat/Makefile	/^LIB= $(LIBPREF)avformat$(LIBSUF)$/;"	m
LIBAVCODEC_ALPHA_ASM_H	libavcodec/alpha/asm.h	21;"	d
LIBAVCODEC_BUILD	libavcodec/avcodec.h	20;"	d
LIBAVCODEC_IDENT	libavcodec/avcodec.h	27;"	d
LIBAVCODEC_VERSION	libavcodec/avcodec.h	23;"	d
LIBAVCODEC_VERSION_INT	libavcodec/avcodec.h	22;"	d
LIBAVFORMAT_BUILD	libavformat/avformat.h	8;"	d
LIBAVFORMAT_IDENT	libavformat/avformat.h	12;"	d
LIBAVFORMAT_VERSION	libavformat/avformat.h	11;"	d
LIBAVFORMAT_VERSION_INT	libavformat/avformat.h	10;"	d
LIBAV_REFFILE	tests/Makefile	/^LIBAV_REFFILE=$(SRC_PATH)\/tests\/libav.regression.ref$/;"	m
LIBMPEG2_BITSTREAM_READER_HACK	libavcodec/bitstream.h	15;"	d
LIBPREF	config.mak	/^LIBPREF=lib$/;"	m
LIBSUF	config.mak	/^LIBSUF=${BUILDSUF}.a$/;"	m
LIFT	libavcodec/snow.c	713;"	d	file:
LIFTS	libavcodec/snow.c	766;"	d	file:
LINEAR_BLEND_DEINT_FILTER	libavcodec/libpostproc/postprocess_internal.h	51;"	d
LINEAR_IPOL_DEINT_FILTER	libavcodec/libpostproc/postprocess_internal.h	50;"	d
LINE_BUF_HEIGHT	libavcodec/imgresample.c	45;"	d	file:
LINE_NOUV_AVG	libavformat/grab.c	526;"	d	file:
LINE_NOUV_AVG	libavformat/grab.c	613;"	d	file:
LINE_NO_UV	libavformat/grab.c	452;"	d	file:
LINE_NO_UV	libavformat/grab.c	589;"	d	file:
LINE_WITHUV_AVG	libavformat/grab.c	476;"	d	file:
LINE_WITHUV_AVG	libavformat/grab.c	595;"	d	file:
LINE_WITH_UV	libavformat/grab.c	424;"	d	file:
LINE_WITH_UV	libavformat/grab.c	575;"	d	file:
LIST_NOT_USED	libavcodec/h264.c	198;"	d	file:
LIST_TAG	libavformat/4xm.c	32;"	d	file:
LOAD4	libavcodec/i386/dsputil_mmx.c	1706;"	d	file:
LOAD4	libavcodec/ppc/mpegvideo_altivec.c	90;"	d	file:
LOAD_COMMON	libavcodec/motion_est_template.c	27;"	d	file:
LOAD_COMMON2	libavcodec/motion_est_template.c	551;"	d	file:
LOAD_DOUBLE_LINE	libavcodec/libpostproc/postprocess_altivec_template.c	1004;"	d	file:
LOAD_DOUBLE_LINE	libavcodec/libpostproc/postprocess_altivec_template.c	1018;"	d	file:
LOAD_DOUBLE_LINE	libavcodec/libpostproc/postprocess_altivec_template.c	1112;"	d	file:
LOAD_DOUBLE_LINE	libavcodec/libpostproc/postprocess_altivec_template.c	1124;"	d	file:
LOAD_LEFT_EDGE	libavcodec/h264.c	1878;"	d	file:
LOAD_LINE	libavcodec/libpostproc/postprocess_altivec_template.c	139;"	d	file:
LOAD_LINE	libavcodec/libpostproc/postprocess_altivec_template.c	220;"	d	file:
LOAD_LINE	libavcodec/libpostproc/postprocess_altivec_template.c	263;"	d	file:
LOAD_LINE	libavcodec/libpostproc/postprocess_altivec_template.c	400;"	d	file:
LOAD_LINE	libavcodec/libpostproc/postprocess_altivec_template.c	423;"	d	file:
LOAD_LINE	libavcodec/libpostproc/postprocess_altivec_template.c	525;"	d	file:
LOAD_LINE	libavcodec/libpostproc/postprocess_altivec_template.c	542;"	d	file:
LOAD_LINE	libavcodec/libpostproc/postprocess_altivec_template.c	823;"	d	file:
LOAD_LINE	libavcodec/libpostproc/postprocess_altivec_template.c	851;"	d	file:
LOAD_LINE	libavcodec/libpostproc/postprocess_altivec_template.c	97;"	d	file:
LOAD_LINE_ALIGNED	libavcodec/libpostproc/postprocess_altivec_template.c	110;"	d	file:
LOAD_LINE_ALIGNED	libavcodec/libpostproc/postprocess_altivec_template.c	140;"	d	file:
LOAD_LINE_ALIGNED	libavcodec/libpostproc/postprocess_altivec_template.c	230;"	d	file:
LOAD_LINE_ALIGNED	libavcodec/libpostproc/postprocess_altivec_template.c	264;"	d	file:
LOAD_TOP_EDGE	libavcodec/h264.c	1884;"	d	file:
LOAD_TOP_RIGHT_EDGE	libavcodec/h264.c	1872;"	d	file:
LOCOContext	libavcodec/loco.c	/^typedef struct LOCOContext{$/;"	s	file:
LOCOContext	libavcodec/loco.c	/^} LOCOContext;$/;"	t	file:
LOCO_CRGB	libavcodec/loco.c	/^enum LOCO_MODE {LOCO_UNKN=0, LOCO_CYUY2=-1, LOCO_CRGB=-2, LOCO_CRGBA=-3, LOCO_CYV12=-4,$/;"	e	enum:LOCO_MODE	file:
LOCO_CRGBA	libavcodec/loco.c	/^enum LOCO_MODE {LOCO_UNKN=0, LOCO_CYUY2=-1, LOCO_CRGB=-2, LOCO_CRGBA=-3, LOCO_CYV12=-4,$/;"	e	enum:LOCO_MODE	file:
LOCO_CYUY2	libavcodec/loco.c	/^enum LOCO_MODE {LOCO_UNKN=0, LOCO_CYUY2=-1, LOCO_CRGB=-2, LOCO_CRGBA=-3, LOCO_CYV12=-4,$/;"	e	enum:LOCO_MODE	file:
LOCO_CYV12	libavcodec/loco.c	/^enum LOCO_MODE {LOCO_UNKN=0, LOCO_CYUY2=-1, LOCO_CRGB=-2, LOCO_CRGBA=-3, LOCO_CYV12=-4,$/;"	e	enum:LOCO_MODE	file:
LOCO_MODE	libavcodec/loco.c	/^enum LOCO_MODE {LOCO_UNKN=0, LOCO_CYUY2=-1, LOCO_CRGB=-2, LOCO_CRGBA=-3, LOCO_CYV12=-4,$/;"	g	file:
LOCO_RGB	libavcodec/loco.c	/^ LOCO_YUY2=1, LOCO_UYVY=2, LOCO_RGB=3, LOCO_RGBA=4, LOCO_YV12=5};$/;"	e	enum:LOCO_MODE	file:
LOCO_RGBA	libavcodec/loco.c	/^ LOCO_YUY2=1, LOCO_UYVY=2, LOCO_RGB=3, LOCO_RGBA=4, LOCO_YV12=5};$/;"	e	enum:LOCO_MODE	file:
LOCO_UNKN	libavcodec/loco.c	/^enum LOCO_MODE {LOCO_UNKN=0, LOCO_CYUY2=-1, LOCO_CRGB=-2, LOCO_CRGBA=-3, LOCO_CYV12=-4,$/;"	e	enum:LOCO_MODE	file:
LOCO_UYVY	libavcodec/loco.c	/^ LOCO_YUY2=1, LOCO_UYVY=2, LOCO_RGB=3, LOCO_RGBA=4, LOCO_YV12=5};$/;"	e	enum:LOCO_MODE	file:
LOCO_YUY2	libavcodec/loco.c	/^ LOCO_YUY2=1, LOCO_UYVY=2, LOCO_RGB=3, LOCO_RGBA=4, LOCO_YV12=5};$/;"	e	enum:LOCO_MODE	file:
LOCO_YV12	libavcodec/loco.c	/^ LOCO_YUY2=1, LOCO_UYVY=2, LOCO_RGB=3, LOCO_RGBA=4, LOCO_YV12=5};$/;"	e	enum:LOCO_MODE	file:
LOG2_MB_SIZE	libavcodec/snow.c	390;"	d	file:
LOG2_OBMC_MAX	libavcodec/snow.c	184;"	d	file:
LOSSLESS_QLOG	libavcodec/snow.c	36;"	d	file:
LOWPASS5_DEINT_FILTER	libavcodec/libpostproc/postprocess_internal.h	56;"	d
LP	libavcodec/sh4/dsputil_align.c	26;"	d	file:
LP2_CHECK	libavcodec/indeo3.c	294;"	d	file:
LPCM_ID	libavformat/mpeg.c	92;"	d	file:
LPCQSIZE	libavcodec/shorten.c	46;"	d	file:
LPCQUANT	libavcodec/shorten.c	56;"	d	file:
LSP_POW_BITS	libavcodec/wmadec.c	57;"	d	file:
LUMA_DC_BLOCK_INDEX	libavcodec/h264.c	42;"	d	file:
LUM_DERING	libavcodec/libpostproc/postprocess_internal.h	33;"	d
LUM_H_DEBLOCK	libavcodec/libpostproc/postprocess_internal.h	30;"	d
LUM_LEVEL_FIX	libavcodec/libpostproc/postprocess_internal.h	35;"	d
LUM_V_DEBLOCK	libavcodec/libpostproc/postprocess_internal.h	29;"	d
LV1_CHECK	libavcodec/indeo3.c	269;"	d	file:
LX0	libavcodec/snow.c	819;"	d	file:
LX0	libavcodec/snow.c	849;"	d	file:
LX1	libavcodec/snow.c	820;"	d	file:
LX1	libavcodec/snow.c	850;"	d	file:
LclContext	libavcodec/lcl.c	/^typedef struct LclContext {$/;"	s	file:
LclContext	libavcodec/lcl.c	/^} LclContext;$/;"	t	file:
MAC16	libavcodec/simple_idct.c	59;"	d	file:
MAC16	libavcodec/simple_idct.c	69;"	d	file:
MACEContext	libavcodec/mace.c	/^typedef struct MACEContext {$/;"	s	file:
MACEContext	libavcodec/mace.c	/^} MACEContext;$/;"	t	file:
MACEtab1	libavcodec/mace.c	/^static const uint16_t MACEtab1[] = { 0xfff3, 0x0008, 0x004c, 0x00de, 0x00de, 0x004c, 0x0008, 0xfff3 };$/;"	v	file:
MACEtab2	libavcodec/mace.c	/^static const uint16_t MACEtab2[][8] = {$/;"	v	file:
MACEtab3	libavcodec/mace.c	/^static const uint16_t MACEtab3[] = { 0xffee, 0x008c, 0x008c, 0xffee };$/;"	v	file:
MACEtab4	libavcodec/mace.c	/^static const uint16_t MACEtab4[][8] = {$/;"	v	file:
MACS	libavcodec/mpegaudiodec.c	773;"	d	file:
MACS	libavcodec/mpegaudiodec.c	783;"	d	file:
MAIN_STARTCODE	libavformat/nut.c	46;"	d	file:
MAIN_VO_TYPE	libavcodec/mpeg4data.h	14;"	d
MAKE	config.mak	/^MAKE=make$/;"	m
MAKE_OP	libavcodec/alpha/dsputil_alpha.c	229;"	d	file:
MANGLE	libavcodec/common.h	223;"	d
MANGLE	libavcodec/common.h	225;"	d
MANGLE	libavcodec/common.h	229;"	d
MANGLE	libavcodec/common.h	231;"	d
MANGLE	libavcodec/libpostproc/mangle.h	15;"	d
MANGLE	libavcodec/libpostproc/mangle.h	17;"	d
MANGLE	libavcodec/libpostproc/mangle.h	21;"	d
MANGLE	libavcodec/libpostproc/mangle.h	23;"	d
MANPAGE	Makefile	/^MANPAGE=doc\/ffmpeg.1$/;"	m
MASK_7f	libavcodec/sparc/dsputil_vis.c	111;"	d	file:
MASK_ABS	libavcodec/common.h	426;"	d
MASK_ABS	libavcodec/common.h	434;"	d
MASK_MSHW	libavcodec/armv4l/simple_idct_arm.S	/^#define MASK_MSHW 0xFFFF0000$/;"	d
MASK_fe	libavcodec/sparc/dsputil_vis.c	99;"	d	file:
MATROSKA_ASPECT_RATIO_MODE_FIXED	libavformat/matroska.c	/^  MATROSKA_ASPECT_RATIO_MODE_FIXED = 0x2,$/;"	e	file:
MATROSKA_ASPECT_RATIO_MODE_FREE	libavformat/matroska.c	/^  MATROSKA_ASPECT_RATIO_MODE_FREE  = 0x0,$/;"	e	file:
MATROSKA_ASPECT_RATIO_MODE_KEEP	libavformat/matroska.c	/^  MATROSKA_ASPECT_RATIO_MODE_KEEP  = 0x1,$/;"	e	file:
MATROSKA_CODEC_ID_AUDIO_AC3	libavformat/matroska.c	203;"	d	file:
MATROSKA_CODEC_ID_AUDIO_ACM	libavformat/matroska.c	196;"	d	file:
MATROSKA_CODEC_ID_AUDIO_ACM	libavformat/matroska.c	206;"	d	file:
MATROSKA_CODEC_ID_AUDIO_DTS	libavformat/matroska.c	204;"	d	file:
MATROSKA_CODEC_ID_AUDIO_MPEG1_L1	libavformat/matroska.c	197;"	d	file:
MATROSKA_CODEC_ID_AUDIO_MPEG1_L2	libavformat/matroska.c	198;"	d	file:
MATROSKA_CODEC_ID_AUDIO_MPEG1_L3	libavformat/matroska.c	199;"	d	file:
MATROSKA_CODEC_ID_AUDIO_MPEG2	libavformat/matroska.c	207;"	d	file:
MATROSKA_CODEC_ID_AUDIO_MPEG4	libavformat/matroska.c	208;"	d	file:
MATROSKA_CODEC_ID_AUDIO_PCM_FLOAT	libavformat/matroska.c	202;"	d	file:
MATROSKA_CODEC_ID_AUDIO_PCM_INT_BE	libavformat/matroska.c	200;"	d	file:
MATROSKA_CODEC_ID_AUDIO_PCM_INT_LE	libavformat/matroska.c	201;"	d	file:
MATROSKA_CODEC_ID_AUDIO_VORBIS	libavformat/matroska.c	205;"	d	file:
MATROSKA_CODEC_ID_VIDEO_MJPEG	libavformat/matroska.c	193;"	d	file:
MATROSKA_CODEC_ID_VIDEO_MPEG1	libavformat/matroska.c	191;"	d	file:
MATROSKA_CODEC_ID_VIDEO_MPEG2	libavformat/matroska.c	192;"	d	file:
MATROSKA_CODEC_ID_VIDEO_MPEG4_AP	libavformat/matroska.c	188;"	d	file:
MATROSKA_CODEC_ID_VIDEO_MPEG4_ASP	libavformat/matroska.c	187;"	d	file:
MATROSKA_CODEC_ID_VIDEO_MPEG4_AVC	libavformat/matroska.c	189;"	d	file:
MATROSKA_CODEC_ID_VIDEO_MPEG4_SP	libavformat/matroska.c	186;"	d	file:
MATROSKA_CODEC_ID_VIDEO_MSMPEG4V3	libavformat/matroska.c	190;"	d	file:
MATROSKA_CODEC_ID_VIDEO_UNCOMPRESSED	libavformat/matroska.c	185;"	d	file:
MATROSKA_CODEC_ID_VIDEO_VFW_FOURCC	libavformat/matroska.c	184;"	d	file:
MATROSKA_EYE_MODE_BOTH	libavformat/matroska.c	/^  MATROSKA_EYE_MODE_BOTH  = 0x3,$/;"	e	file:
MATROSKA_EYE_MODE_LEFT	libavformat/matroska.c	/^  MATROSKA_EYE_MODE_LEFT  = 0x2,$/;"	e	file:
MATROSKA_EYE_MODE_MONO	libavformat/matroska.c	/^  MATROSKA_EYE_MODE_MONO  = 0x0,$/;"	e	file:
MATROSKA_EYE_MODE_RIGHT	libavformat/matroska.c	/^  MATROSKA_EYE_MODE_RIGHT = 0x1,$/;"	e	file:
MATROSKA_ID_AUDIOBITDEPTH	libavformat/matroska.c	109;"	d	file:
MATROSKA_ID_AUDIOCHANNELS	libavformat/matroska.c	110;"	d	file:
MATROSKA_ID_AUDIOSAMPLINGFREQ	libavformat/matroska.c	108;"	d	file:
MATROSKA_ID_BLOCK	libavformat/matroska.c	138;"	d	file:
MATROSKA_ID_BLOCKDURATION	libavformat/matroska.c	139;"	d	file:
MATROSKA_ID_BLOCKGROUP	libavformat/matroska.c	135;"	d	file:
MATROSKA_ID_BLOCKREFERENCE	libavformat/matroska.c	140;"	d	file:
MATROSKA_ID_CLUSTER	libavformat/matroska.c	64;"	d	file:
MATROSKA_ID_CLUSTERTIMECODE	libavformat/matroska.c	134;"	d	file:
MATROSKA_ID_CODECDOWNLOADURL	libavformat/matroska.c	86;"	d	file:
MATROSKA_ID_CODECID	libavformat/matroska.c	82;"	d	file:
MATROSKA_ID_CODECINFOURL	libavformat/matroska.c	85;"	d	file:
MATROSKA_ID_CODECNAME	libavformat/matroska.c	84;"	d	file:
MATROSKA_ID_CODECPRIVATE	libavformat/matroska.c	83;"	d	file:
MATROSKA_ID_CUECLUSTERPOSITION	libavformat/matroska.c	121;"	d	file:
MATROSKA_ID_CUES	libavformat/matroska.c	61;"	d	file:
MATROSKA_ID_CUETIME	libavformat/matroska.c	116;"	d	file:
MATROSKA_ID_CUETRACK	libavformat/matroska.c	120;"	d	file:
MATROSKA_ID_CUETRACKPOSITION	libavformat/matroska.c	117;"	d	file:
MATROSKA_ID_DATEUTC	libavformat/matroska.c	71;"	d	file:
MATROSKA_ID_DURATION	libavformat/matroska.c	68;"	d	file:
MATROSKA_ID_INFO	libavformat/matroska.c	59;"	d	file:
MATROSKA_ID_MUXINGAPP	libavformat/matroska.c	70;"	d	file:
MATROSKA_ID_POINTENTRY	libavformat/matroska.c	113;"	d	file:
MATROSKA_ID_SEEKENTRY	libavformat/matroska.c	127;"	d	file:
MATROSKA_ID_SEEKHEAD	libavformat/matroska.c	63;"	d	file:
MATROSKA_ID_SEEKID	libavformat/matroska.c	130;"	d	file:
MATROSKA_ID_SEEKPOSITION	libavformat/matroska.c	131;"	d	file:
MATROSKA_ID_SEGMENT	libavformat/matroska.c	56;"	d	file:
MATROSKA_ID_TAGS	libavformat/matroska.c	62;"	d	file:
MATROSKA_ID_TIMECODESCALE	libavformat/matroska.c	67;"	d	file:
MATROSKA_ID_TRACKAUDIO	libavformat/matroska.c	80;"	d	file:
MATROSKA_ID_TRACKDEFAULTDURATION	libavformat/matroska.c	94;"	d	file:
MATROSKA_ID_TRACKENTRY	libavformat/matroska.c	74;"	d	file:
MATROSKA_ID_TRACKFLAGDEFAULT	libavformat/matroska.c	90;"	d	file:
MATROSKA_ID_TRACKFLAGENABLED	libavformat/matroska.c	89;"	d	file:
MATROSKA_ID_TRACKFLAGLACING	libavformat/matroska.c	91;"	d	file:
MATROSKA_ID_TRACKLANGUAGE	libavformat/matroska.c	88;"	d	file:
MATROSKA_ID_TRACKMAXCACHE	libavformat/matroska.c	93;"	d	file:
MATROSKA_ID_TRACKMINCACHE	libavformat/matroska.c	92;"	d	file:
MATROSKA_ID_TRACKNAME	libavformat/matroska.c	87;"	d	file:
MATROSKA_ID_TRACKNUMBER	libavformat/matroska.c	77;"	d	file:
MATROSKA_ID_TRACKS	libavformat/matroska.c	60;"	d	file:
MATROSKA_ID_TRACKTYPE	libavformat/matroska.c	79;"	d	file:
MATROSKA_ID_TRACKUID	libavformat/matroska.c	78;"	d	file:
MATROSKA_ID_TRACKVIDEO	libavformat/matroska.c	81;"	d	file:
MATROSKA_ID_VIDEOASPECTRATIO	libavformat/matroska.c	104;"	d	file:
MATROSKA_ID_VIDEOCOLOURSPACE	libavformat/matroska.c	105;"	d	file:
MATROSKA_ID_VIDEODISPLAYHEIGHT	libavformat/matroska.c	99;"	d	file:
MATROSKA_ID_VIDEODISPLAYWIDTH	libavformat/matroska.c	98;"	d	file:
MATROSKA_ID_VIDEOFLAGINTERLACED	libavformat/matroska.c	102;"	d	file:
MATROSKA_ID_VIDEOFRAMERATE	libavformat/matroska.c	97;"	d	file:
MATROSKA_ID_VIDEOPIXELHEIGHT	libavformat/matroska.c	101;"	d	file:
MATROSKA_ID_VIDEOPIXELWIDTH	libavformat/matroska.c	100;"	d	file:
MATROSKA_ID_VIDEOSTEREOMODE	libavformat/matroska.c	103;"	d	file:
MATROSKA_ID_WRITINGAPP	libavformat/matroska.c	69;"	d	file:
MATROSKA_TRACK_DEFAULT	libavformat/matroska.c	/^  MATROSKA_TRACK_DEFAULT = (1<<1),$/;"	e	file:
MATROSKA_TRACK_ENABLED	libavformat/matroska.c	/^  MATROSKA_TRACK_ENABLED = (1<<0),$/;"	e	file:
MATROSKA_TRACK_LACING	libavformat/matroska.c	/^  MATROSKA_TRACK_LACING  = (1<<2),$/;"	e	file:
MATROSKA_TRACK_SHIFT	libavformat/matroska.c	/^  MATROSKA_TRACK_SHIFT   = (1<<16)$/;"	e	file:
MATROSKA_TRACK_TYPE_AUDIO	libavformat/matroska.c	/^  MATROSKA_TRACK_TYPE_AUDIO    = 0x2,$/;"	e	file:
MATROSKA_TRACK_TYPE_COMPLEX	libavformat/matroska.c	/^  MATROSKA_TRACK_TYPE_COMPLEX  = 0x3,$/;"	e	file:
MATROSKA_TRACK_TYPE_CONTROL	libavformat/matroska.c	/^  MATROSKA_TRACK_TYPE_CONTROL  = 0x20,$/;"	e	file:
MATROSKA_TRACK_TYPE_LOGO	libavformat/matroska.c	/^  MATROSKA_TRACK_TYPE_LOGO     = 0x10,$/;"	e	file:
MATROSKA_TRACK_TYPE_SUBTITLE	libavformat/matroska.c	/^  MATROSKA_TRACK_TYPE_SUBTITLE = 0x11,$/;"	e	file:
MATROSKA_TRACK_TYPE_VIDEO	libavformat/matroska.c	/^  MATROSKA_TRACK_TYPE_VIDEO    = 0x1,$/;"	e	file:
MATROSKA_VIDEOTRACK_INTERLACED	libavformat/matroska.c	/^  MATROSKA_VIDEOTRACK_INTERLACED = (MATROSKA_TRACK_SHIFT<<0)$/;"	e	file:
MAX	libavcodec/dct-test.c	20;"	d	file:
MAX	libavcodec/libpostproc/postprocess.c	104;"	d	file:
MAXBITS	libavformat/gifdec.c	25;"	d	file:
MAXINT64	libavformat/avformat.h	23;"	d
MAXSIZE_TEXT	vhook/drawtext.c	44;"	d	file:
MAX_AUDIOQ_SIZE	ffplay.c	59;"	d	file:
MAX_AUDIO_PACKET_SIZE	ffmpeg.c	471;"	d	file:
MAX_BLOCKSIZE	libavcodec/flac.c	44;"	d	file:
MAX_BLOCKSIZE	libavcodec/shorten.c	34;"	d	file:
MAX_CHANNELS	libavcodec/flac.c	43;"	d	file:
MAX_CHANNELS	libavcodec/shorten.c	33;"	d	file:
MAX_CHANNELS	libavcodec/sonic.c	38;"	d	file:
MAX_CHANNELS	libavcodec/wmadec.c	53;"	d	file:
MAX_CODEBOOK_SIZE	libavcodec/vqavideo.c	83;"	d	file:
MAX_CODEBOOK_VECTORS	libavcodec/vqavideo.c	80;"	d	file:
MAX_CODED_SUPERFRAME_SIZE	libavcodec/wmadec.c	51;"	d	file:
MAX_COMPONENTS	libavcodec/mjpeg.c	810;"	d	file:
MAX_DECOMPOSITIONS	libavcodec/snow.c	31;"	d	file:
MAX_DISTANCE	libavformat/nut.c	54;"	d	file:
MAX_FCODE	libavcodec/mpegvideo.h	49;"	d
MAX_FILES	ffmpeg.c	70;"	d	file:
MAX_FRAME_HEADER	libavformat/yuv4mpeg.c	186;"	d	file:
MAX_LEVEL	libavcodec/mpegvideo.h	62;"	d
MAX_MB_BYTES	libavcodec/mpegvideo.h	71;"	d
MAX_MMCO_COUNT	libavcodec/h264.c	55;"	d	file:
MAX_MV	libavcodec/mpegvideo.h	50;"	d
MAX_NEG_CROP	libavcodec/dsputil.h	64;"	d
MAX_PACKET_READAHEAD	libavformat/mpegts.c	1224;"	d	file:
MAX_PAGE_SIZE	libavformat/ogg2.c	37;"	d	file:
MAX_PAYLOAD_SIZE	libavformat/mpeg.c	22;"	d	file:
MAX_PES_HEADER_SIZE	libavformat/mpegts.c	654;"	d	file:
MAX_PICTURE_COUNT	libavcodec/mpegvideo.h	54;"	d
MAX_PLANES	libavcodec/ffv1.c	34;"	d	file:
MAX_PLANES	libavcodec/snow.c	32;"	d	file:
MAX_PPS_COUNT	libavcodec/h264.c	53;"	d	file:
MAX_READ_SIZE	libavformat/utils.c	1687;"	d	file:
MAX_RESYNC_SIZE	libavformat/mpegts.c	31;"	d	file:
MAX_RUN	libavcodec/mpegvideo.h	61;"	d
MAX_SAB_SIZE	libavcodec/motion_est_template.c	688;"	d	file:
MAX_SCAN_PACKETS	libavformat/mpegts.c	27;"	d	file:
MAX_SECTION_SIZE	libavformat/mpegts.h	23;"	d
MAX_SHORT_DISTANCE	libavformat/nut.c	55;"	d	file:
MAX_SIZE	libavformat/amr.c	127;"	d	file:
MAX_SIZE	libavformat/au.c	155;"	d	file:
MAX_SIZE	libavformat/sol.c	125;"	d	file:
MAX_SIZE	libavformat/wav.c	318;"	d	file:
MAX_SPS_COUNT	libavcodec/h264.c	52;"	d	file:
MAX_STREAMS	libavformat/avformat.h	267;"	d
MAX_STREAM_DURATION	libavformat/utils.c	1690;"	d	file:
MAX_STRIPS	libavcodec/cinepak.c	44;"	d	file:
MAX_SYNC_SIZE	libavformat/mpeg.c	1248;"	d	file:
MAX_THREADS	libavcodec/mpegvideo.h	52;"	d
MAX_VECTORS	libavcodec/vqavideo.c	82;"	d	file:
MAX_VIDEOQ_SIZE	ffplay.c	58;"	d	file:
MAX_YUV4_HEADER	libavformat/yuv4mpeg.c	185;"	d	file:
MBAC_BITRATE	libavcodec/msmpeg4.c	55;"	d	file:
MBA_STARTCODE	libavcodec/h261.c	40;"	d	file:
MBA_STUFFING	libavcodec/h261.c	39;"	d	file:
MBINCR_VLC_BITS	libavcodec/mpeg12.c	49;"	d	file:
MB_BTYPE_VLC_BITS	libavcodec/mpeg12.c	52;"	d	file:
MB_INTRA_VLC_BITS	libavcodec/msmpeg4.c	52;"	d	file:
MB_INTRA_VLC_BITS	libavcodec/vc9.c	42;"	d	file:
MB_NON_INTRA_VLC_BITS	libavcodec/msmpeg4.c	51;"	d	file:
MB_PAT_VLC_BITS	libavcodec/mpeg12.c	50;"	d	file:
MB_PTYPE_VLC_BITS	libavcodec/mpeg12.c	51;"	d	file:
MB_SIZE	libavcodec/snow.c	391;"	d	file:
MB_TYPE_16x16	libavcodec/avcodec.h	369;"	d
MB_TYPE_16x8	libavcodec/avcodec.h	370;"	d
MB_TYPE_8x16	libavcodec/avcodec.h	371;"	d
MB_TYPE_8x8	libavcodec/avcodec.h	372;"	d
MB_TYPE_ACPRED	libavcodec/avcodec.h	375;"	d
MB_TYPE_B_VLC_BITS	libavcodec/h263.c	51;"	d	file:
MB_TYPE_CBP	libavcodec/avcodec.h	386;"	d
MB_TYPE_DIRECT2	libavcodec/avcodec.h	374;"	d
MB_TYPE_GMC	libavcodec/avcodec.h	376;"	d
MB_TYPE_H261_FIL	libavcodec/h261data.h	5;"	d
MB_TYPE_INTERLACED	libavcodec/avcodec.h	373;"	d
MB_TYPE_INTRA	libavcodec/mpegvideo.h	146;"	d
MB_TYPE_INTRA16x16	libavcodec/avcodec.h	367;"	d
MB_TYPE_INTRA4x4	libavcodec/avcodec.h	366;"	d
MB_TYPE_INTRA_PCM	libavcodec/avcodec.h	368;"	d
MB_TYPE_L0	libavcodec/avcodec.h	382;"	d
MB_TYPE_L0L1	libavcodec/avcodec.h	384;"	d
MB_TYPE_L1	libavcodec/avcodec.h	383;"	d
MB_TYPE_P0L0	libavcodec/avcodec.h	378;"	d
MB_TYPE_P0L1	libavcodec/avcodec.h	380;"	d
MB_TYPE_P1L0	libavcodec/avcodec.h	379;"	d
MB_TYPE_P1L1	libavcodec/avcodec.h	381;"	d
MB_TYPE_QUANT	libavcodec/avcodec.h	385;"	d
MB_TYPE_REF0	libavcodec/h264data.h	309;"	d
MB_TYPE_SKIP	libavcodec/avcodec.h	377;"	d
MB_TYPE_ZERO_MV	libavcodec/mpeg12data.h	264;"	d
MC_avg_no_round_o_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_no_round_o_16_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_avg_no_round_o_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_no_round_o_8_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_avg_no_round_x_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_no_round_x_16_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_avg_no_round_x_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_no_round_x_8_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_avg_no_round_xy_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_no_round_xy_16_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_avg_no_round_xy_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_no_round_xy_8_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_avg_no_round_y_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_no_round_y_16_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_avg_no_round_y_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_no_round_y_8_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_avg_o_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_o_16_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_avg_o_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_o_8_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_avg_x_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_x_16_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_avg_x_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_x_8_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_avg_xy_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_xy_16_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_avg_xy_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_xy_8_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_avg_y_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_y_16_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_avg_y_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_y_8_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_put_no_round_o_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_no_round_o_16_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_put_no_round_o_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_no_round_o_8_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_put_no_round_x_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_no_round_x_16_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_put_no_round_x_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_no_round_x_8_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_put_no_round_xy_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_no_round_xy_16_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_put_no_round_xy_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_no_round_xy_8_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_put_no_round_y_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_no_round_y_16_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_put_no_round_y_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_no_round_y_8_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_put_o_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_o_16_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_put_o_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_o_8_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_put_x_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_x_16_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_put_x_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_x_8_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_put_xy_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_xy_16_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_put_xy_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_xy_8_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_put_y_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_y_16_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MC_put_y_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_y_8_vis (uint8_t * dest, const uint8_t * _ref,$/;"	f	file:
MDAT_ATOM	qt-faststart.c	51;"	d	file:
MDCTContext	libavcodec/dsputil.h	/^typedef struct MDCTContext {$/;"	s
MDCTContext	libavcodec/dsputil.h	/^} MDCTContext;$/;"	t
MDCT_NBITS	libavcodec/ac3enc.c	62;"	d	file:
MDECContext	libavcodec/mdec.c	/^typedef struct MDECContext{$/;"	s	file:
MDECContext	libavcodec/mdec.c	/^} MDECContext;$/;"	t	file:
MEDIAN	libavcodec/huffyuv.c	/^    MEDIAN,$/;"	e	enum:Predictor	file:
MEDIAN	libavcodec/libpostproc/postprocess_template.c	2034;"	d	file:
MEDIAN_DEINT_FILTER	libavcodec/libpostproc/postprocess_internal.h	54;"	d
MEMALIGN_HACK	config.h	33;"	d
MERGE	libavcodec/mpegvideo.c	5195;"	d	file:
MERGE1	libavcodec/sh4/dsputil_align.c	38;"	d	file:
MERGE2	libavcodec/sh4/dsputil_align.c	39;"	d	file:
MERGE_S16	libavcodec/ppc/fdct_altivec.c	227;"	d	file:
MERGE_S16	libavcodec/ppc/fdct_altivec.c	268;"	d	file:
METADATA_TYPE_STREAMINFO	libavcodec/flac.c	72;"	d	file:
ME_EPZS	libavcodec/avcodec.h	/^    ME_EPZS,$/;"	e	enum:Motion_Est_ID
ME_FULL	libavcodec/avcodec.h	/^    ME_FULL,$/;"	e	enum:Motion_Est_ID
ME_LOG	libavcodec/avcodec.h	/^    ME_LOG,$/;"	e	enum:Motion_Est_ID
ME_MAP_MV_BITS	libavcodec/mpegvideo.h	58;"	d
ME_MAP_SHIFT	libavcodec/mpegvideo.h	57;"	d
ME_MAP_SIZE	libavcodec/mpegvideo.h	56;"	d
ME_PHODS	libavcodec/avcodec.h	/^    ME_PHODS,$/;"	e	enum:Motion_Est_ID
ME_X1	libavcodec/avcodec.h	/^    ME_X1$/;"	e	enum:Motion_Est_ID
ME_ZERO	libavcodec/avcodec.h	/^    ME_ZERO = 1,$/;"	e	enum:Motion_Est_ID
MID	libavcodec/mpegvideo.c	2993;"	d	file:
MID_SIDE	libavcodec/flac.c	/^    MID_SIDE,$/;"	e	enum:decorrelation_type	file:
MID_SIDE	libavcodec/sonic.c	40;"	d	file:
MID_STATE	libavcodec/snow.c	24;"	d	file:
MIN	libavcodec/libpostproc/postprocess.c	103;"	d	file:
MININT64	libavformat/avformat.h	27;"	d
MIN_CACHE_BITS	libavcodec/bitstream.h	382;"	d
MIN_CACHE_BITS	libavcodec/bitstream.h	438;"	d
MIN_CACHE_BITS	libavcodec/bitstream.h	500;"	d
MIN_DEQUANT_VAL	libavcodec/vp3.c	218;"	d	file:
MJpegContext	libavcodec/mjpeg.c	/^typedef struct MJpegContext {$/;"	s	file:
MJpegContext	libavcodec/mjpeg.c	/^} MJpegContext;$/;"	t	file:
MJpegDecodeContext	libavcodec/mjpeg.c	/^typedef struct MJpegDecodeContext {$/;"	s	file:
MJpegDecodeContext	libavcodec/mjpeg.c	/^} MJpegDecodeContext;$/;"	t	file:
MKBETAG	libavcodec/common.h	422;"	d
MKTAG	libavcodec/common.h	421;"	d
MMABS	libavcodec/i386/dsputil_mmx.c	1671;"	d	file:
MMABS_MMX2	libavcodec/i386/dsputil_mmx.c	1684;"	d	file:
MMABS_SUM	libavcodec/i386/dsputil_mmx.c	1677;"	d	file:
MMABS_SUM_MMX2	libavcodec/i386/dsputil_mmx.c	1689;"	d	file:
MMCO	libavcodec/h264.c	/^typedef struct MMCO{$/;"	s	file:
MMCO	libavcodec/h264.c	/^} MMCO;$/;"	t	file:
MMCOOpcode	libavcodec/h264.c	/^typedef enum MMCOOpcode{$/;"	g	file:
MMCOOpcode	libavcodec/h264.c	/^} MMCOOpcode;$/;"	t	file:
MMCO_END	libavcodec/h264.c	/^    MMCO_END=0,$/;"	e	enum:MMCOOpcode	file:
MMCO_LONG	libavcodec/h264.c	/^    MMCO_LONG,$/;"	e	enum:MMCOOpcode	file:
MMCO_LONG2UNUSED	libavcodec/h264.c	/^    MMCO_LONG2UNUSED,$/;"	e	enum:MMCOOpcode	file:
MMCO_RESET	libavcodec/h264.c	/^    MMCO_RESET, $/;"	e	enum:MMCOOpcode	file:
MMCO_SET_MAX_LONG	libavcodec/h264.c	/^    MMCO_SET_MAX_LONG,$/;"	e	enum:MMCOOpcode	file:
MMCO_SHORT2LONG	libavcodec/h264.c	/^    MMCO_SHORT2LONG,$/;"	e	enum:MMCOOpcode	file:
MMCO_SHORT2UNUSED	libavcodec/h264.c	/^    MMCO_SHORT2UNUSED,$/;"	e	enum:MMCOOpcode	file:
MMS_IO	libavcodec/amr.c	60;"	d	file:
MM_3DNOW	libavcodec/dsputil.h	394;"	d
MM_3DNOWEXT	libavcodec/dsputil.h	398;"	d
MM_ACCEL_DJBFFT	libavcodec/liba52/mm_accel.h	28;"	d
MM_ACCEL_H	libavcodec/liba52/mm_accel.h	25;"	d
MM_ACCEL_PPC_ALTIVEC	libavcodec/liba52/mm_accel.h	38;"	d
MM_ACCEL_X86_3DNOW	libavcodec/liba52/mm_accel.h	32;"	d
MM_ACCEL_X86_3DNOWEXT	libavcodec/liba52/mm_accel.h	35;"	d
MM_ACCEL_X86_MMX	libavcodec/liba52/mm_accel.h	31;"	d
MM_ACCEL_X86_MMXEXT	libavcodec/liba52/mm_accel.h	33;"	d
MM_ACCEL_X86_SSE	libavcodec/liba52/mm_accel.h	34;"	d
MM_ALTIVEC	libavcodec/dsputil.h	457;"	d
MM_MMX	libavcodec/dsputil.h	393;"	d
MM_MMXEXT	libavcodec/dsputil.h	395;"	d
MM_SSE	libavcodec/dsputil.h	396;"	d
MM_SSE2	libavcodec/dsputil.h	397;"	d
MODE_3G2	libavformat/movenc.c	35;"	d	file:
MODE_3GP	libavformat/movenc.c	32;"	d	file:
MODE_COPY	libavcodec/vp3.c	172;"	d	file:
MODE_EXT_I_STEREO	libavcodec/mpegaudiodec.c	153;"	d	file:
MODE_EXT_MS_STEREO	libavcodec/mpegaudiodec.c	152;"	d	file:
MODE_GOLDEN_MV	libavcodec/vp3.c	167;"	d	file:
MODE_INTER_FOURMV	libavcodec/vp3.c	168;"	d	file:
MODE_INTER_LAST_MV	libavcodec/vp3.c	164;"	d	file:
MODE_INTER_NO_MV	libavcodec/vp3.c	161;"	d	file:
MODE_INTER_PLUS_MV	libavcodec/vp3.c	163;"	d	file:
MODE_INTER_PRIOR_LAST	libavcodec/vp3.c	165;"	d	file:
MODE_INTRA	libavcodec/vp3.c	162;"	d	file:
MODE_MOV	libavformat/movenc.c	31;"	d	file:
MODE_MP4	libavformat/movenc.c	30;"	d	file:
MODE_PSP	libavformat/movenc.c	33;"	d	file:
MODE_USING_GOLDEN	libavcodec/vp3.c	166;"	d	file:
MOOV_ATOM	qt-faststart.c	52;"	d	file:
MOTION_MARKER	libavcodec/mpeg4data.h	27;"	d
MOVContext	libavformat/mov.c	/^typedef struct MOVContext {$/;"	s	file:
MOVContext	libavformat/mov.c	/^} MOVContext;$/;"	t	file:
MOVContext	libavformat/movenc.c	/^typedef struct MOVContext {$/;"	s	file:
MOVContext	libavformat/movenc.c	/^} MOVContext;$/;"	t	file:
MOVE_TAG	libavformat/wc3movie.c	33;"	d	file:
MOVI_TAG	libavformat/4xm.c	35;"	d	file:
MOVIentry	libavformat/movenc.c	/^typedef struct MOVIentry {$/;"	s	file:
MOVIentry	libavformat/movenc.c	/^} MOVIentry;$/;"	t	file:
MOVIndex	libavformat/movenc.c	/^typedef struct MOVIndex {$/;"	s	file:
MOVParseTableEntry	libavformat/mov.c	/^typedef struct MOVParseTableEntry {$/;"	s	file:
MOVParseTableEntry	libavformat/mov.c	/^} MOVParseTableEntry;$/;"	t	file:
MOVQ_BFE	libavcodec/i386/dsputil_mmx.c	59;"	d	file:
MOVQ_BONE	libavcodec/i386/dsputil_mmx.c	65;"	d	file:
MOVQ_BONE	libavcodec/i386/dsputil_mmx.c	70;"	d	file:
MOVQ_WONE	libavcodec/i386/dsputil_mmx.c	54;"	d	file:
MOVQ_WTWO	libavcodec/i386/dsputil_mmx.c	66;"	d	file:
MOVQ_WTWO	libavcodec/i386/dsputil_mmx.c	76;"	d	file:
MOVQ_ZERO	libavcodec/i386/dsputil_mmx.c	52;"	d	file:
MOVStreamContext	libavformat/mov.c	/^typedef struct MOVStreamContext {$/;"	s	file:
MOVStreamContext	libavformat/mov.c	/^} MOVStreamContext;$/;"	t	file:
MOVTrack	libavformat/movenc.c	/^} MOVTrack;$/;"	t	file:
MOV_INDEX_CLUSTER_SIZE	libavformat/movenc.c	27;"	d	file:
MOV_MINOLTA_FIX	libavformat/mov.c	75;"	d	file:
MOV_SEEK	libavformat/mov.c	67;"	d	file:
MOV_SPLIT_CHUNKS	libavformat/mov.c	71;"	d	file:
MOV_atom_t	libavformat/mov.c	/^} MOV_atom_t;$/;"	t	file:
MOV_ctab_t	libavformat/mov.c	/^} MOV_ctab_t;$/;"	t	file:
MOV_esds_t	libavformat/mov.c	/^} MOV_esds_t;$/;"	t	file:
MOV_sample_to_chunk_tbl	libavformat/mov.c	/^typedef struct MOV_sample_to_chunk_tbl {$/;"	s	file:
MOV_sample_to_chunk_tbl	libavformat/mov.c	/^} MOV_sample_to_chunk_tbl;$/;"	t	file:
MP3On4DecodeContext	libavcodec/mpegaudiodec.c	/^typedef struct MP3On4DecodeContext {$/;"	s	file:
MP3On4DecodeContext	libavcodec/mpegaudiodec.c	/^} MP3On4DecodeContext;$/;"	t	file:
MP3_PACKET_SIZE	libavformat/mp3.c	291;"	d	file:
MP3lame_encode_close	libavcodec/mp3lameaudio.c	/^int MP3lame_encode_close(AVCodecContext *avctx)$/;"	f
MP3lame_encode_frame	libavcodec/mp3lameaudio.c	/^int MP3lame_encode_frame(AVCodecContext *avctx,$/;"	f
MP3lame_encode_init	libavcodec/mp3lameaudio.c	/^static int MP3lame_encode_init(AVCodecContext *avctx)$/;"	f	file:
MP4ContentIdDescrTag	libavformat/mov.c	186;"	d	file:
MP4DecConfigDescrTag	libavformat/mov.c	183;"	d	file:
MP4DecSpecificDescrTag	libavformat/mov.c	184;"	d	file:
MP4ESDescrTag	libavformat/mov.c	182;"	d	file:
MP4ESIDIncDescrTag	libavformat/mov.c	192;"	d	file:
MP4ESIDRefDescrTag	libavformat/mov.c	193;"	d	file:
MP4ExtDescrTagsEnd	libavformat/mov.c	198;"	d	file:
MP4ExtDescrTagsStart	libavformat/mov.c	197;"	d	file:
MP4ExtProfileLevelDescrTag	libavformat/mov.c	196;"	d	file:
MP4FileIODescrTag	libavformat/mov.c	194;"	d	file:
MP4FileODescrTag	libavformat/mov.c	195;"	d	file:
MP4IODescrTag	libavformat/mov.c	181;"	d	file:
MP4IPIPtrDescrTag	libavformat/mov.c	188;"	d	file:
MP4IPMPDescrTag	libavformat/mov.c	190;"	d	file:
MP4IPMPPtrDescrTag	libavformat/mov.c	189;"	d	file:
MP4ODescrTag	libavformat/mov.c	180;"	d	file:
MP4RegistrationDescrTag	libavformat/mov.c	191;"	d	file:
MP4SLConfigDescrTag	libavformat/mov.c	185;"	d	file:
MP4SupplContentIdDescrTag	libavformat/mov.c	187;"	d	file:
MPADecodeContext	libavcodec/mpegaudiodec.c	/^typedef struct MPADecodeContext {$/;"	s	file:
MPADecodeContext	libavcodec/mpegaudiodec.c	/^} MPADecodeContext;$/;"	t	file:
MPA_DUAL	libavcodec/mpegaudio.h	18;"	d
MPA_FRAME_SIZE	libavcodec/mpegaudio.h	7;"	d
MPA_HEADER_SIZE	libavcodec/parser.c	508;"	d	file:
MPA_INT	libavcodec/mpegaudiodec.c	/^typedef int16_t MPA_INT;$/;"	t	file:
MPA_INT	libavcodec/mpegaudiodec.c	/^typedef int32_t MPA_INT;$/;"	t	file:
MPA_JSTEREO	libavcodec/mpegaudio.h	17;"	d
MPA_MAX_CHANNELS	libavcodec/mpegaudio.h	12;"	d
MPA_MAX_CODED_FRAME_SIZE	libavcodec/mpegaudio.h	10;"	d
MPA_MONO	libavcodec/mpegaudio.h	19;"	d
MPA_STEREO	libavcodec/mpegaudio.h	16;"	d
MPA_encode_close	libavcodec/mpegaudio.c	/^static int MPA_encode_close(AVCodecContext *avctx)$/;"	f	file:
MPA_encode_frame	libavcodec/mpegaudio.c	/^static int MPA_encode_frame(AVCodecContext *avctx,$/;"	f	file:
MPA_encode_init	libavcodec/mpegaudio.c	/^static int MPA_encode_init(AVCodecContext *avctx)$/;"	f	file:
MPEG1_FRAME_RATE_BASE	libavcodec/parser.c	261;"	d	file:
MPEGTS_HEADER	libavformat/mpegts.c	/^    MPEGTS_HEADER = 0,$/;"	e	enum:MpegTSState	file:
MPEGTS_PAYLOAD	libavformat/mpegts.c	/^    MPEGTS_PAYLOAD,$/;"	e	enum:MpegTSState	file:
MPEGTS_PES	libavformat/mpegts.c	/^    MPEGTS_PES,$/;"	e	enum:MpegTSFilterType	file:
MPEGTS_PESHEADER_FILL	libavformat/mpegts.c	/^    MPEGTS_PESHEADER_FILL,$/;"	e	enum:MpegTSState	file:
MPEGTS_SECTION	libavformat/mpegts.c	/^    MPEGTS_SECTION,$/;"	e	enum:MpegTSFilterType	file:
MPEGTS_SKIP	libavformat/mpegts.c	/^    MPEGTS_SKIP,$/;"	e	enum:MpegTSState	file:
MPEG_BUF_SIZE	libavcodec/mpegvideo.h	44;"	d
MPV_common_defaults	libavcodec/mpegvideo.c	/^static void MPV_common_defaults(MpegEncContext *s){$/;"	f	file:
MPV_common_end	libavcodec/mpegvideo.c	/^void MPV_common_end(MpegEncContext *s)$/;"	f
MPV_common_init	libavcodec/mpegvideo.c	/^int MPV_common_init(MpegEncContext *s)$/;"	f
MPV_common_init_armv4l	libavcodec/armv4l/mpegvideo_arm.c	/^void MPV_common_init_armv4l(MpegEncContext *s)$/;"	f
MPV_common_init_axp	libavcodec/alpha/mpegvideo_alpha.c	/^void MPV_common_init_axp(MpegEncContext *s)$/;"	f
MPV_common_init_mlib	libavcodec/mlib/dsputil_mlib.c	/^void MPV_common_init_mlib(MpegEncContext *s)$/;"	f
MPV_common_init_mmi	libavcodec/ps2/mpegvideo_mmi.c	/^void MPV_common_init_mmi(MpegEncContext *s)$/;"	f
MPV_common_init_mmx	libavcodec/i386/mpegvideo_mmx.c	/^void MPV_common_init_mmx(MpegEncContext *s)$/;"	f
MPV_common_init_ppc	libavcodec/ppc/mpegvideo_ppc.c	/^void MPV_common_init_ppc(MpegEncContext *s)$/;"	f
MPV_decode_defaults	libavcodec/mpegvideo.c	/^void MPV_decode_defaults(MpegEncContext *s){$/;"	f
MPV_decode_mb	libavcodec/mpegvideo.c	/^void MPV_decode_mb(MpegEncContext *s, DCTELEM block[12][64]){$/;"	f
MPV_decode_mb_internal	libavcodec/mpegvideo.c	/^static always_inline void MPV_decode_mb_internal(MpegEncContext *s, DCTELEM block[12][64], int lowres_flag)$/;"	f	file:
MPV_encode_defaults	libavcodec/mpegvideo.c	/^static void MPV_encode_defaults(MpegEncContext *s){$/;"	f	file:
MPV_encode_end	libavcodec/mpegvideo.c	/^int MPV_encode_end(AVCodecContext *avctx)$/;"	f
MPV_encode_init	libavcodec/mpegvideo.c	/^int MPV_encode_init(AVCodecContext *avctx)$/;"	f
MPV_encode_picture	libavcodec/mpegvideo.c	/^int MPV_encode_picture(AVCodecContext *avctx,$/;"	f
MPV_frame_end	libavcodec/mpegvideo.c	/^void MPV_frame_end(MpegEncContext *s)$/;"	f
MPV_frame_start	libavcodec/mpegvideo.c	/^int MPV_frame_start(MpegEncContext *s, AVCodecContext *avctx)$/;"	f
MPV_motion	libavcodec/mpegvideo.c	/^static inline void MPV_motion(MpegEncContext *s, $/;"	f	file:
MPV_motion_lowres	libavcodec/mpegvideo.c	/^static inline void MPV_motion_lowres(MpegEncContext *s, $/;"	f	file:
MP_XVMC_RENDER_MAGIC	xvmc_render.h	14;"	d
MP_XVMC_STATE_DISPLAY_PENDING	xvmc_render.h	10;"	d
MP_XVMC_STATE_PREDICTION	xvmc_render.h	12;"	d
MT_16X8	libavcodec/mpeg12.c	1047;"	d	file:
MT_DMV	libavcodec/mpeg12.c	1048;"	d	file:
MT_FIELD	libavcodec/mpeg12.c	1045;"	d	file:
MT_FRAME	libavcodec/mpeg12.c	1046;"	d	file:
MUL	libavcodec/liba52/a52_internal.h	131;"	d
MUL	libavcodec/liba52/a52_internal.h	144;"	d
MUL	libavcodec/liba52/a52_internal.h	147;"	d
MUL	libavcodec/liba52/a52_internal.h	154;"	d
MUL	libavcodec/mpegaudio.c	33;"	d	file:
MUL16	libavcodec/ac3enc.c	328;"	d	file:
MUL16	libavcodec/fft-test.c	15;"	d	file:
MUL16	libavcodec/fft.c	136;"	d	file:
MUL16	libavcodec/ppc/fft_altivec.c	44;"	d	file:
MUL16	libavcodec/simple_idct.c	63;"	d	file:
MUL16	libavcodec/simple_idct.c	72;"	d	file:
MUL64	libavcodec/mpegaudiodec.c	66;"	d	file:
MULH	libavcodec/mpegaudiodec.c	/^static always_inline int MULH(int a, int b){$/;"	f	file:
MULL	libavcodec/mpegaudiodec.c	65;"	d	file:
MULS	libavcodec/mpegaudiodec.c	777;"	d	file:
MULS	libavcodec/mpegaudiodec.c	786;"	d	file:
MULS	libavcodec/mpegaudiodec.c	804;"	d	file:
MULTIPLY	libavcodec/4xm.c	136;"	d	file:
MULTIPLY	libavcodec/jfdctfst.c	113;"	d	file:
MULTIPLY	libavcodec/jfdctint.c	145;"	d	file:
MULTIPLY	libavcodec/jfdctint.c	147;"	d	file:
MULTIPLY	libavcodec/jrevdct.c	134;"	d	file:
MULTIPLY	libavcodec/jrevdct.c	137;"	d	file:
MULTIPLY	libavcodec/jrevdct.c	142;"	d	file:
MULTIPLY16C16	libavcodec/jfdctint.c	41;"	d	file:
MULTI_PAYLOAD_CONSTANT	libavformat/asf-enc.c	183;"	d	file:
MUL_C	libavcodec/liba52/a52_internal.h	133;"	d
MUL_C	libavcodec/liba52/a52_internal.h	158;"	d
MUL_L	libavcodec/liba52/a52_internal.h	132;"	d
MUL_L	libavcodec/liba52/a52_internal.h	145;"	d
MUL_L	libavcodec/liba52/a52_internal.h	150;"	d
MUL_L	libavcodec/liba52/a52_internal.h	155;"	d
MVTable	libavcodec/msmpeg4data.h	/^typedef struct MVTable {$/;"	s
MVTable	libavcodec/msmpeg4data.h	/^} MVTable;$/;"	t
MV_CHANGED	libavcodec/error_resilience.c	316;"	d	file:
MV_DIRECT	libavcodec/mpegvideo.h	408;"	d
MV_DIR_BACKWARD	libavcodec/mpegvideo.h	406;"	d
MV_DIR_FORWARD	libavcodec/mpegvideo.h	407;"	d
MV_END	libavcodec/mpegvideo.h	528;"	d
MV_ERROR	libavcodec/mpegvideo.h	525;"	d
MV_FROZEN	libavcodec/error_resilience.c	315;"	d	file:
MV_PMODE_1MV	libavcodec/vc9.c	112;"	d	file:
MV_PMODE_1MV_HPEL	libavcodec/vc9.c	113;"	d	file:
MV_PMODE_1MV_HPEL_BILIN	libavcodec/vc9.c	111;"	d	file:
MV_PMODE_INTENSITY_COMP	libavcodec/vc9.c	115;"	d	file:
MV_PMODE_MIXED_MV	libavcodec/vc9.c	114;"	d	file:
MV_TYPE_16X16	libavcodec/mpegvideo.h	410;"	d
MV_TYPE_16X8	libavcodec/mpegvideo.h	412;"	d
MV_TYPE_8X8	libavcodec/mpegvideo.h	411;"	d
MV_TYPE_DMV	libavcodec/mpegvideo.h	414;"	d
MV_TYPE_FIELD	libavcodec/mpegvideo.h	413;"	d
MV_UNCHANGED	libavcodec/error_resilience.c	317;"	d	file:
MV_VLC_BITS	libavcodec/h263.c	48;"	d	file:
MV_VLC_BITS	libavcodec/mpeg12.c	48;"	d	file:
MV_VLC_BITS	libavcodec/msmpeg4.c	48;"	d	file:
MY_PI	tests/rotozoom.c	11;"	d	file:
M_E	libavcodec/ratecontrol.c	34;"	d	file:
M_PI	libavcodec/common.h	14;"	d
M_PI	libavcodec/eval.c	42;"	d	file:
M_PI	output_example.c	31;"	d	file:
MatroskaAspectRatioMode	libavformat/matroska.c	/^} MatroskaAspectRatioMode;$/;"	t	file:
MatroskaAudioTrack	libavformat/matroska.c	/^typedef struct MatroskaAudioTrack {$/;"	s	file:
MatroskaAudioTrack	libavformat/matroska.c	/^} MatroskaAudioTrack;$/;"	t	file:
MatroskaDemuxContext	libavformat/matroska.c	/^typedef struct MatroskaDemuxContext {$/;"	s	file:
MatroskaDemuxContext	libavformat/matroska.c	/^} MatroskaDemuxContext;$/;"	t	file:
MatroskaDemuxIndex	libavformat/matroska.c	/^typedef struct MatroskaDemuxIndex {$/;"	s	file:
MatroskaDemuxIndex	libavformat/matroska.c	/^} MatroskaDemuxIndex;$/;"	t	file:
MatroskaEyeMode	libavformat/matroska.c	/^} MatroskaEyeMode;$/;"	t	file:
MatroskaLevel	libavformat/matroska.c	/^typedef struct MatroskaLevel {$/;"	s	file:
MatroskaLevel	libavformat/matroska.c	/^} MatroskaLevel;$/;"	t	file:
MatroskaSubtitleTrack	libavformat/matroska.c	/^typedef struct MatroskaSubtitleTrack {$/;"	s	file:
MatroskaSubtitleTrack	libavformat/matroska.c	/^} MatroskaSubtitleTrack;$/;"	t	file:
MatroskaTrack	libavformat/matroska.c	/^} MatroskaTrack;$/;"	t	file:
MatroskaTrackFlags	libavformat/matroska.c	/^} MatroskaTrackFlags;$/;"	t	file:
MatroskaTrackType	libavformat/matroska.c	/^} MatroskaTrackType;$/;"	t	file:
MatroskaVideoTrack	libavformat/matroska.c	/^typedef struct MatroskaVideoTrack {$/;"	s	file:
MatroskaVideoTrack	libavformat/matroska.c	/^} MatroskaVideoTrack;$/;"	t	file:
MatroskaVideoTrackFlags	libavformat/matroska.c	/^} MatroskaVideoTrackFlags;$/;"	t	file:
Minima	libavcodec/motion_est.c	/^typedef struct Minima{$/;"	s	file:
Minima	libavcodec/motion_est.c	/^}Minima;$/;"	t	file:
ModPred	libavcodec/indeo3.c	/^    unsigned char *ModPred;$/;"	m	struct:Indeo3DecodeContext	file:
ModeAlphabet	libavcodec/vp3.c	/^static int ModeAlphabet[7][CODING_MODE_COUNT] =$/;"	v	file:
MorphToPM	ffplay.c	/^ void MorphToPM()$/;"	f
MotionEstContext	libavcodec/mpegvideo.h	/^typedef struct MotionEstContext{$/;"	s
MotionEstContext	libavcodec/mpegvideo.h	/^}MotionEstContext;$/;"	t
Motion_Est_ID	libavcodec/avcodec.h	/^enum Motion_Est_ID {$/;"	g
Mp3AudioContext	libavcodec/mp3lameaudio.c	/^typedef struct Mp3AudioContext {$/;"	s	file:
Mp3AudioContext	libavcodec/mp3lameaudio.c	/^} Mp3AudioContext;$/;"	t	file:
Mpeg1Context	libavcodec/mpeg12.c	/^typedef struct Mpeg1Context {$/;"	s	file:
Mpeg1Context	libavcodec/mpeg12.c	/^} Mpeg1Context;$/;"	t	file:
MpegAudioContext	libavcodec/mpegaudio.c	/^typedef struct MpegAudioContext {$/;"	s	file:
MpegAudioContext	libavcodec/mpegaudio.c	/^} MpegAudioContext;$/;"	t	file:
MpegAudioParseContext	libavcodec/parser.c	/^typedef struct MpegAudioParseContext {$/;"	s	file:
MpegAudioParseContext	libavcodec/parser.c	/^} MpegAudioParseContext;$/;"	t	file:
MpegDemuxContext	libavformat/mpeg.c	/^typedef struct MpegDemuxContext {$/;"	s	file:
MpegDemuxContext	libavformat/mpeg.c	/^} MpegDemuxContext;$/;"	t	file:
MpegEncContext	libavcodec/mpegvideo.h	/^typedef struct MpegEncContext {$/;"	s
MpegEncContext	libavcodec/mpegvideo.h	/^} MpegEncContext;$/;"	t
MpegMuxContext	libavformat/mpeg.c	/^} MpegMuxContext;$/;"	t	file:
MpegTSContext	libavformat/mpegts.c	/^struct MpegTSContext {$/;"	s	file:
MpegTSContext	libavformat/mpegts.h	/^typedef struct MpegTSContext MpegTSContext;$/;"	t
MpegTSFilter	libavformat/mpegts.c	/^typedef struct MpegTSFilter {$/;"	s	file:
MpegTSFilter	libavformat/mpegts.c	/^} MpegTSFilter;$/;"	t	file:
MpegTSFilterType	libavformat/mpegts.c	/^enum MpegTSFilterType {$/;"	g	file:
MpegTSPESFilter	libavformat/mpegts.c	/^typedef struct MpegTSPESFilter {$/;"	s	file:
MpegTSPESFilter	libavformat/mpegts.c	/^} MpegTSPESFilter;$/;"	t	file:
MpegTSSection	libavformat/mpegtsenc.c	/^typedef struct MpegTSSection {$/;"	s	file:
MpegTSSection	libavformat/mpegtsenc.c	/^} MpegTSSection;$/;"	t	file:
MpegTSSectionFilter	libavformat/mpegts.c	/^typedef struct MpegTSSectionFilter {$/;"	s	file:
MpegTSSectionFilter	libavformat/mpegts.c	/^} MpegTSSectionFilter;$/;"	t	file:
MpegTSService	libavformat/mpegts.c	/^typedef struct MpegTSService {$/;"	s	file:
MpegTSService	libavformat/mpegts.c	/^} MpegTSService;$/;"	t	file:
MpegTSService	libavformat/mpegtsenc.c	/^typedef struct MpegTSService {$/;"	s	file:
MpegTSService	libavformat/mpegtsenc.c	/^} MpegTSService;$/;"	t	file:
MpegTSState	libavformat/mpegts.c	/^enum MpegTSState {$/;"	g	file:
MpegTSWrite	libavformat/mpegtsenc.c	/^typedef struct MpegTSWrite {$/;"	s	file:
MpegTSWrite	libavformat/mpegtsenc.c	/^} MpegTSWrite;$/;"	t	file:
MpegTSWriteStream	libavformat/mpegtsenc.c	/^typedef struct MpegTSWriteStream {$/;"	s	file:
MpegTSWriteStream	libavformat/mpegtsenc.c	/^} MpegTSWriteStream;$/;"	t	file:
MsrleContext	libavcodec/msrle.c	/^typedef struct MsrleContext {$/;"	s	file:
MsrleContext	libavcodec/msrle.c	/^} MsrleContext;$/;"	t	file:
Msvideo1Context	libavcodec/msvideo1.c	/^typedef struct Msvideo1Context {$/;"	s	file:
Msvideo1Context	libavcodec/msvideo1.c	/^} Msvideo1Context;$/;"	t	file:
N	libavcodec/ac3enc.c	63;"	d	file:
N1	libavcodec/snow.c	823;"	d	file:
N1	libavcodec/snow.c	836;"	d	file:
N1	libavcodec/snow.c	852;"	d	file:
N1	libavcodec/snow.c	865;"	d	file:
N1	libavcodec/snow.c	879;"	d	file:
N1	libavcodec/snow.c	893;"	d	file:
N1	libavcodec/snow.c	906;"	d	file:
N1	libavcodec/snow.c	919;"	d	file:
N2	libavcodec/snow.c	826;"	d	file:
N2	libavcodec/snow.c	839;"	d	file:
N2	libavcodec/snow.c	855;"	d	file:
N2	libavcodec/snow.c	868;"	d	file:
N2	libavcodec/snow.c	882;"	d	file:
N2	libavcodec/snow.c	896;"	d	file:
N2	libavcodec/snow.c	909;"	d	file:
N2	libavcodec/snow.c	922;"	d	file:
N3	libavcodec/snow.c	829;"	d	file:
N3	libavcodec/snow.c	842;"	d	file:
N3	libavcodec/snow.c	858;"	d	file:
N3	libavcodec/snow.c	871;"	d	file:
N3	libavcodec/snow.c	885;"	d	file:
N3	libavcodec/snow.c	899;"	d	file:
N3	libavcodec/snow.c	912;"	d	file:
N3	libavcodec/snow.c	925;"	d	file:
N4	libavcodec/snow.c	832;"	d	file:
N4	libavcodec/snow.c	845;"	d	file:
N4	libavcodec/snow.c	861;"	d	file:
N4	libavcodec/snow.c	874;"	d	file:
N4	libavcodec/snow.c	888;"	d	file:
N4	libavcodec/snow.c	902;"	d	file:
N4	libavcodec/snow.c	915;"	d	file:
N4	libavcodec/snow.c	928;"	d	file:
NAL_DPA	libavcodec/h264.c	144;"	d	file:
NAL_DPB	libavcodec/h264.c	145;"	d	file:
NAL_DPC	libavcodec/h264.c	146;"	d	file:
NAL_FILTER_DATA	libavcodec/h264.c	152;"	d	file:
NAL_IDR_SLICE	libavcodec/h264.c	147;"	d	file:
NAL_PICTURE_DELIMITER	libavcodec/h264.c	151;"	d	file:
NAL_PPS	libavcodec/h264.c	150;"	d	file:
NAL_SEI	libavcodec/h264.c	148;"	d	file:
NAL_SLICE	libavcodec/h264.c	143;"	d	file:
NAL_SPS	libavcodec/h264.c	149;"	d	file:
NAN	libavcodec/eval.c	38;"	d	file:
NBIT_VO_TYPE	libavcodec/mpeg4data.h	15;"	d
NBLOCKS	libavcodec/ra144.c	28;"	d	file:
NB_BLOCKS	libavcodec/ac3.h	28;"	d
NB_CHANNELS	tests/audiogen.c	8;"	d	file:
NB_COMPONENTS	libavcodec/imgresample.c	32;"	d	file:
NB_DV_VLC	libavcodec/dvdata.h	52;"	d
NB_ITS	libavcodec/dct-test.c	56;"	d	file:
NB_ITS	libavcodec/motion_test.c	64;"	d	file:
NB_ITS_SPEED	libavcodec/dct-test.c	57;"	d	file:
NB_LSP_COEFS	libavcodec/wmadec.c	48;"	d	file:
NB_OBJS	tests/videogen.c	171;"	d	file:
NB_PASSES	libavcodec/png.c	52;"	d	file:
NB_PASSES	libavformat/png.c	52;"	d	file:
NB_PHASES	libavcodec/imgresample.c	35;"	d	file:
NB_PID_MAX	libavformat/mpegts.h	22;"	d
NB_RL_TABLES	libavcodec/msmpeg4data.h	585;"	d
NB_TAPS	libavcodec/imgresample.c	36;"	d	file:
NDEBUG	ffmpeg.c	44;"	d	file:
NDEBUG	libavcodec/cabac.h	27;"	d
NDEBUG	libavcodec/common.h	238;"	d
NDEBUG	libavcodec/flac.c	40;"	d	file:
NDEBUG	libavcodec/h264.c	36;"	d	file:
NDEBUG	libavcodec/integer.c	185;"	d	file:
NDEBUG	libavcodec/motion_est.c	36;"	d	file:
NDEBUG	libavcodec/oggvorbis.c	11;"	d	file:
NDEBUG	libavcodec/ratecontrol.c	30;"	d	file:
NDEBUG	libavcodec/snow.c	28;"	d	file:
NDEBUG	libavcodec/svq1.c	48;"	d	file:
NDEBUG	libavcodec/vc9.c	36;"	d	file:
NDEBUG	libavcodec/xvmcvideo.c	27;"	d	file:
NDEBUG	libavformat/asf-enc.c	23;"	d	file:
NDEBUG	libavformat/asf.c	24;"	d	file:
NDEBUG	libavformat/avidec.c	23;"	d	file:
NDEBUG	libavformat/flvenc.c	21;"	d	file:
NDEBUG	libavformat/movenc.c	24;"	d	file:
NDEBUG	libavformat/mpeg.c	25;"	d	file:
NDEBUG	libavformat/nut.c	39;"	d	file:
NDEBUG	libavformat/ogg.c	15;"	d	file:
NDEBUG	libavformat/swf.c	57;"	d	file:
NDEBUG	libavformat/utils.c	21;"	d	file:
NEG_SSR32	libavcodec/bitstream.h	/^static inline  int32_t NEG_SSR32( int32_t a, int8_t s){$/;"	f
NEG_SSR32	libavcodec/bitstream.h	36;"	d
NEG_USR32	libavcodec/bitstream.h	/^static inline uint32_t NEG_USR32(uint32_t a, int8_t s){$/;"	f
NEG_USR32	libavcodec/bitstream.h	37;"	d
NEWPOSTPROCESS_H	libavcodec/libpostproc/postprocess.h	20;"	d
NEXT	libavcodec/libpostproc/postprocess_template.c	2811;"	d	file:
NMAX	libavformat/crc.c	27;"	d	file:
NOISE_TAB_SIZE	libavcodec/wmadec.c	55;"	d	file:
NOISE_W	tests/videogen.c	149;"	d	file:
NOISE_X	tests/videogen.c	147;"	d	file:
NOISE_Y	tests/videogen.c	148;"	d	file:
NO_DCBZL	libavcodec/ppc/dsputil_ppc.h	26;"	d
NO_DCBZL	libavcodec/ppc/dsputil_ppc.h	30;"	d
NSEGS	libavcodec/pcm.c	31;"	d	file:
NSKIPSIZE	libavcodec/shorten.c	54;"	d	file:
NSVContext	libavformat/nsvdec.c	/^} NSVContext;$/;"	t	file:
NSVStatus	libavformat/nsvdec.c	/^enum NSVStatus {$/;"	g	file:
NSVStream	libavformat/nsvdec.c	/^typedef struct NSVStream {$/;"	s	file:
NSVStream	libavformat/nsvdec.c	/^} NSVStream;$/;"	t	file:
NSV_FOUND_BEEF	libavformat/nsvdec.c	/^    NSV_FOUND_BEEF,$/;"	e	enum:NSVStatus	file:
NSV_FOUND_NSVF	libavformat/nsvdec.c	/^    NSV_FOUND_NSVF,$/;"	e	enum:NSVStatus	file:
NSV_FOUND_NSVS	libavformat/nsvdec.c	/^    NSV_FOUND_NSVS,$/;"	e	enum:NSVStatus	file:
NSV_GOT_AUDIO	libavformat/nsvdec.c	/^    NSV_GOT_AUDIO,$/;"	e	enum:NSVStatus	file:
NSV_GOT_VIDEO	libavformat/nsvdec.c	/^    NSV_GOT_VIDEO,$/;"	e	enum:NSVStatus	file:
NSV_HAS_READ_NSVF	libavformat/nsvdec.c	/^    NSV_HAS_READ_NSVF,$/;"	e	enum:NSVStatus	file:
NSV_HAS_READ_NSVS	libavformat/nsvdec.c	/^    NSV_HAS_READ_NSVS,$/;"	e	enum:NSVStatus	file:
NSV_MAX_RESYNC	libavformat/nsvdec.c	31;"	d	file:
NSV_MAX_RESYNC_TRIES	libavformat/nsvdec.c	32;"	d	file:
NSV_ST_AUDIO	libavformat/nsvdec.c	141;"	d	file:
NSV_ST_SUBT	libavformat/nsvdec.c	142;"	d	file:
NSV_ST_VIDEO	libavformat/nsvdec.c	140;"	d	file:
NSV_UNSYNC	libavformat/nsvdec.c	/^    NSV_UNSYNC,$/;"	e	enum:NSVStatus	file:
NSVf_end	libavformat/nsvdec.c	/^    int  NSVf_end;$/;"	m	file:
NUTContext	libavformat/nut.c	/^} NUTContext;$/;"	t	file:
NWRAP	libavcodec/shorten.c	53;"	d	file:
O	libavcodec/i386/vp3dsp_sse2.c	813;"	d	file:
OA	libavcodec/sh4/idct_sh4.c	210;"	d	file:
OBJS	Makefile	/^OBJS = ffmpeg.o ffserver.o cmdutils.o $(FFPLAY_O)$/;"	m
OBJS	libavcodec/Makefile	/^OBJS := $(OBJS) $(ASM_OBJS)$/;"	m
OBJS	libavcodec/Makefile	/^OBJS= bitstream.o utils.o mem.o allcodecs.o \\$/;"	m
OBJS	libavformat/Makefile	/^OBJS= utils.o cutils.o os_support.o allformats.o$/;"	m
OBMC_FILTER	libavcodec/mpegvideo.c	2943;"	d	file:
OBMC_FILTER4	libavcodec/mpegvideo.c	2945;"	d	file:
OBMC_MAX	libavcodec/snow.c	185;"	d	file:
OGGVORBIS_FRAME_SIZE	libavcodec/oggvorbis.c	14;"	d	file:
OGG_FLAG_BOS	libavformat/ogg2.h	73;"	d
OGG_FLAG_CONT	libavformat/ogg2.h	72;"	d
OGG_FLAG_EOS	libavformat/ogg2.h	74;"	d
OGG_H	libavformat/ogg2.h	26;"	d
ONE	libavcodec/jrevdct.c	101;"	d	file:
ONEITERBUTTERFLY	libavcodec/ppc/dsputil_altivec.c	1338;"	d	file:
ONEITERBUTTERFLY	libavcodec/ppc/dsputil_altivec.c	1374;"	d	file:
ONEITERBUTTERFLY	libavcodec/ppc/dsputil_altivec.c	1483;"	d	file:
ONEITERBUTTERFLY	libavcodec/ppc/dsputil_altivec.c	1527;"	d	file:
ONE_HALF	ffmpeg.c	2305;"	d	file:
ONE_HALF	libavcodec/imgconvert.c	996;"	d	file:
ONE_HALF	tests/rotozoom.c	35;"	d	file:
ONE_HALF	tests/videogen.c	9;"	d	file:
ONE_HALF	vhook/fish.c	50;"	d	file:
OP	libavcodec/alpha/dsputil_alpha.c	166;"	d	file:
OP	libavcodec/libpostproc/postprocess_altivec_template.c	889;"	d	file:
OP	libavcodec/libpostproc/postprocess_altivec_template.c	899;"	d	file:
OP	libavcodec/libpostproc/postprocess_altivec_template.c	901;"	d	file:
OP	libavcodec/libpostproc/postprocess_altivec_template.c	911;"	d	file:
OP	libavcodec/libpostproc/postprocess_altivec_template.c	919;"	d	file:
OP	libavcodec/libpostproc/postprocess_altivec_template.c	935;"	d	file:
OP	libavcodec/libpostproc/postprocess_altivec_template.c	940;"	d	file:
OP	libavcodec/libpostproc/postprocess_altivec_template.c	956;"	d	file:
OP	libavcodec/sh4/dsputil_align.c	271;"	d	file:
OP	libavcodec/sh4/dsputil_align.c	288;"	d	file:
OP	libavcodec/sh4/dsputil_align.c	289;"	d	file:
OP	libavcodec/sh4/dsputil_align.c	306;"	d	file:
OP	libavcodec/sh4/dsputil_align.c	65;"	d	file:
OP	libavcodec/sh4/dsputil_align.c	77;"	d	file:
OP	libavcodec/sh4/dsputil_align.c	78;"	d	file:
OP	libavcodec/sh4/dsputil_align.c	90;"	d	file:
OPCODE_AUDIO_FRAME	libavformat/ipmovie.c	70;"	d	file:
OPCODE_CREATE_GRADIENT	libavformat/ipmovie.c	73;"	d	file:
OPCODE_CREATE_TIMER	libavformat/ipmovie.c	64;"	d	file:
OPCODE_END_OF_CHUNK	libavformat/ipmovie.c	63;"	d	file:
OPCODE_END_OF_STREAM	libavformat/ipmovie.c	62;"	d	file:
OPCODE_INIT_AUDIO_BUFFERS	libavformat/ipmovie.c	65;"	d	file:
OPCODE_INIT_VIDEO_BUFFERS	libavformat/ipmovie.c	67;"	d	file:
OPCODE_INIT_VIDEO_MODE	libavformat/ipmovie.c	72;"	d	file:
OPCODE_PREAMBLE_SIZE	libavformat/ipmovie.c	48;"	d	file:
OPCODE_SEND_BUFFER	libavformat/ipmovie.c	69;"	d	file:
OPCODE_SET_DECODING_MAP	libavformat/ipmovie.c	77;"	d	file:
OPCODE_SET_PALETTE	libavformat/ipmovie.c	74;"	d	file:
OPCODE_SET_PALETTE_COMPRESSED	libavformat/ipmovie.c	75;"	d	file:
OPCODE_SILENCE_FRAME	libavformat/ipmovie.c	71;"	d	file:
OPCODE_START_STOP_AUDIO	libavformat/ipmovie.c	66;"	d	file:
OPCODE_UNKNOWN_06	libavformat/ipmovie.c	68;"	d	file:
OPCODE_UNKNOWN_0E	libavformat/ipmovie.c	76;"	d	file:
OPCODE_UNKNOWN_10	libavformat/ipmovie.c	78;"	d	file:
OPCODE_UNKNOWN_12	libavformat/ipmovie.c	80;"	d	file:
OPCODE_UNKNOWN_13	libavformat/ipmovie.c	81;"	d	file:
OPCODE_UNKNOWN_14	libavformat/ipmovie.c	82;"	d	file:
OPCODE_UNKNOWN_15	libavformat/ipmovie.c	83;"	d	file:
OPCODE_VIDEO_DATA	libavformat/ipmovie.c	79;"	d	file:
OPEN_READER	libavcodec/bitstream.h	384;"	d
OPEN_READER	libavcodec/bitstream.h	440;"	d
OPEN_READER	libavcodec/bitstream.h	502;"	d
OPTFLAGS	config.mak	/^OPTFLAGS=-O3 -g -Wall -Wno-switch  -march=pentium4$/;"	m
OPTIONS_ARRAY_SIZE	libavcodec/libpostproc/postprocess.c	109;"	d	file:
OPT_AUDIO	cmdutils.h	12;"	d
OPT_BOOL	cmdutils.h	8;"	d
OPT_EXPERT	cmdutils.h	9;"	d
OPT_FLOAT	cmdutils.h	15;"	d
OPT_GRAB	cmdutils.h	13;"	d
OPT_INT	cmdutils.h	14;"	d
OPT_STRING	cmdutils.h	10;"	d
OPT_VIDEO	cmdutils.h	11;"	d
OP_C	libavcodec/sh4/dsputil_align.c	92;"	d	file:
OP_C0	libavcodec/sh4/dsputil_align.c	114;"	d	file:
OP_C4	libavcodec/sh4/dsputil_align.c	49;"	d	file:
OP_C40	libavcodec/sh4/dsputil_align.c	57;"	d	file:
OP_U8_ALTIVEC	libavcodec/ppc/dsputil_h264_altivec.c	28;"	d	file:
OP_U8_ALTIVEC	libavcodec/ppc/dsputil_h264_altivec.c	38;"	d	file:
OP_U8_ALTIVEC	libavcodec/ppc/dsputil_h264_altivec.c	48;"	d	file:
OP_U8_ALTIVEC	libavcodec/ppc/dsputil_h264_altivec.c	58;"	d	file:
OP_X	libavcodec/sh4/dsputil_align.c	128;"	d	file:
OP_X0	libavcodec/sh4/dsputil_align.c	215;"	d	file:
OP_X2	libavcodec/alpha/dsputil_alpha.c	173;"	d	file:
OP_XY	libavcodec/sh4/dsputil_align.c	217;"	d	file:
OP_XY0	libavcodec/sh4/dsputil_align.c	216;"	d	file:
OP_XY2	libavcodec/alpha/dsputil_alpha.c	198;"	d	file:
OP_Y	libavcodec/sh4/dsputil_align.c	177;"	d	file:
OP_Y0	libavcodec/sh4/dsputil_align.c	150;"	d	file:
OP_Y2	libavcodec/alpha/dsputil_alpha.c	184;"	d	file:
OUTPUT_PIXEL_PAIR	libavcodec/truemotion1.c	587;"	d	file:
OUT_BUFFER_SIZE	libavcodec/shorten.c	36;"	d	file:
OUT_INT	libavcodec/mpegaudiodec.c	/^typedef int16_t OUT_INT;$/;"	t	file:
OUT_INT	libavcodec/mpegaudiodec.c	/^typedef int32_t OUT_INT;$/;"	t	file:
OUT_MAX	libavcodec/mpegaudiodec.c	53;"	d	file:
OUT_MAX	libavcodec/mpegaudiodec.c	58;"	d	file:
OUT_MIN	libavcodec/mpegaudiodec.c	54;"	d	file:
OUT_MIN	libavcodec/mpegaudiodec.c	59;"	d	file:
OUT_SHIFT	libavcodec/mpegaudiodec.c	55;"	d	file:
OUT_SHIFT	libavcodec/mpegaudiodec.c	60;"	d	file:
OggContext	libavformat/ogg.c	/^typedef struct OggContext {$/;"	s	file:
OggContext	libavformat/ogg.c	/^} OggContext ;$/;"	t	file:
OggVorbisContext	libavcodec/oggvorbis.c	/^typedef struct OggVorbisContext {$/;"	s	file:
OggVorbisContext	libavcodec/oggvorbis.c	/^} OggVorbisContext ;$/;"	t	file:
OptionDef	cmdutils.h	/^} OptionDef;$/;"	t
OutputFormat	libavcodec/mpegvideo.h	/^enum OutputFormat {$/;"	g
P	libavcodec/mpegaudio.c	153;"	d	file:
PACKET_HEADER_MIN_SIZE	libavformat/asf-enc.c	144;"	d	file:
PACKET_ID	libavformat/ffm.c	24;"	d	file:
PACKET_SIZE	libavformat/asf.h	18;"	d
PACKET_START_CODE_MASK	libavformat/mpeg.c	77;"	d	file:
PACKET_START_CODE_PREFIX	libavformat/mpeg.c	78;"	d	file:
PACK_AND_STORE	libavcodec/libpostproc/postprocess_altivec_template.c	331;"	d	file:
PACK_AND_STORE	libavcodec/libpostproc/postprocess_altivec_template.c	378;"	d	file:
PACK_AND_STORE	libavcodec/libpostproc/postprocess_altivec_template.c	964;"	d	file:
PACK_AND_STORE	libavcodec/libpostproc/postprocess_altivec_template.c	998;"	d	file:
PACK_AND_STORE_ALIGNED	libavcodec/libpostproc/postprocess_altivec_template.c	349;"	d	file:
PACK_AND_STORE_ALIGNED	libavcodec/libpostproc/postprocess_altivec_template.c	379;"	d	file:
PACK_START_CODE	libavformat/mpeg.c	74;"	d	file:
PAD	tests/dsptest.c	38;"	d	file:
PADDING_STREAM	libavformat/mpeg.c	84;"	d	file:
PALETTE_CONTROL_SIZE	libavcodec/xan.c	41;"	d	file:
PALETTE_COUNT	libavcodec/idcinvideo.c	57;"	d	file:
PALETTE_COUNT	libavcodec/interplayvideo.c	45;"	d	file:
PALETTE_COUNT	libavcodec/msvideo1.c	41;"	d	file:
PALETTE_COUNT	libavcodec/vmdav.c	51;"	d	file:
PALETTE_COUNT	libavcodec/vqavideo.c	74;"	d	file:
PALETTE_COUNT	libavcodec/xan.c	40;"	d	file:
PALETTE_COUNT	libavformat/ipmovie.c	85;"	d	file:
PALETTE_COUNT	libavformat/wc3movie.c	59;"	d	file:
PALETTE_SIZE	libavformat/wc3movie.c	58;"	d	file:
PALT_TAG	libavformat/wc3movie.c	38;"	d	file:
PART_NOT_AVAILABLE	libavcodec/h264.c	199;"	d	file:
PASS1_BITS	libavcodec/jfdctint.c	95;"	d	file:
PASS1_BITS	libavcodec/jfdctint.c	98;"	d	file:
PASS1_BITS	libavcodec/jrevdct.c	96;"	d	file:
PASS1_BITS	libavcodec/jrevdct.c	98;"	d	file:
PAT_PID	libavformat/mpegts.h	26;"	d
PAT_RETRANS_TIME	libavformat/mpegtsenc.c	192;"	d	file:
PAT_TID	libavformat/mpegts.h	30;"	d
PAVGB	libavcodec/i386/dsputil_mmx.c	137;"	d	file:
PAVGB	libavcodec/i386/dsputil_mmx.c	144;"	d	file:
PAVGB	libavcodec/i386/dsputil_mmx.c	151;"	d	file:
PAVGB	libavcodec/i386/dsputil_mmx.c	158;"	d	file:
PAVGB	libavcodec/i386/dsputil_mmx.c	165;"	d	file:
PAVGB	libavcodec/i386/dsputil_mmx.c	170;"	d	file:
PAVGB	libavcodec/i386/dsputil_mmx.c	178;"	d	file:
PAVGB	libavcodec/i386/dsputil_mmx.c	183;"	d	file:
PAVGB	libavcodec/libpostproc/postprocess_template.c	46;"	d	file:
PAVGB	libavcodec/libpostproc/postprocess_template.c	55;"	d	file:
PAVGBP	libavcodec/i386/dsputil_mmx.c	136;"	d	file:
PAVGBP	libavcodec/i386/dsputil_mmx.c	143;"	d	file:
PAVGBP	libavcodec/i386/dsputil_mmx.c	150;"	d	file:
PAVGBP	libavcodec/i386/dsputil_mmx.c	157;"	d	file:
PAVGBP_MMX	libavcodec/i386/dsputil_mmx.c	118;"	d	file:
PAVGBP_MMX_NO_RND	libavcodec/i386/dsputil_mmx.c	104;"	d	file:
PAVGB_MMX	libavcodec/i386/dsputil_mmx.c	95;"	d	file:
PAVGB_MMX_NO_RND	libavcodec/i386/dsputil_mmx.c	87;"	d	file:
PAYLOAD_HEADER_SIZE_MULTIPLE_PAYLOADS	libavformat/asf-enc.c	168;"	d	file:
PAYLOAD_HEADER_SIZE_SINGLE_PAYLOAD	libavformat/asf-enc.c	160;"	d	file:
PCMDEF	libavformat/raw.c	554;"	d	file:
PCMDEF	libavformat/raw.c	559;"	d	file:
PCMDecode	libavcodec/pcm.c	/^typedef struct PCMDecode {$/;"	s	file:
PCMDecode	libavcodec/pcm.c	/^} PCMDecode;$/;"	t	file:
PCMINPUTDEF	libavformat/raw.c	538;"	d	file:
PCM_CODEC	libavcodec/allcodecs.c	518;"	d	file:
PCM_CODEC	libavcodec/allcodecs.c	523;"	d	file:
PCM_CODEC	libavcodec/allcodecs.c	552;"	d	file:
PCM_CODEC	libavcodec/avcodec.h	2029;"	d
PCM_CODEC	libavcodec/avcodec.h	2059;"	d
PCM_CODEC	libavcodec/pcm.c	363;"	d	file:
PCM_CODEC	libavcodec/pcm.c	394;"	d	file:
PESCallback	libavformat/mpegts.c	/^typedef void PESCallback(void *opaque, const uint8_t *buf, int len, int is_start);$/;"	t	file:
PESContext	libavformat/mpegts.c	/^typedef struct PESContext {$/;"	s	file:
PESContext	libavformat/mpegts.c	/^} PESContext;$/;"	t	file:
PES_START_SIZE	libavformat/mpegts.c	653;"	d	file:
PF_INET	libavformat/barpainet.h	10;"	d
PHASE_BITS	libavcodec/imgresample.c	34;"	d	file:
PI	libavcodec/fdctref.c	37;"	d	file:
PI	libavcodec/fdctref.c	39;"	d	file:
PIC	config.mak	/^PIC=-fPIC -DPIC$/;"	m
PICTURE_START_CODE	libavcodec/mpeg12.c	41;"	d	file:
PICTURE_START_CODE	libavcodec/parser.c	157;"	d	file:
PICTURE_START_CODE	libavformat/raw.c	253;"	d	file:
PICT_ATOM	qt-faststart.c	56;"	d	file:
PICT_BOTTOM_FIELD	libavcodec/mpegvideo.h	659;"	d
PICT_FRAME	libavcodec/mpegvideo.h	660;"	d
PICT_TOP_FIELD	libavcodec/mpegvideo.h	658;"	d
PIND_TAG	libavformat/westwood.c	54;"	d	file:
PINF_TAG	libavformat/westwood.c	52;"	d	file:
PINH_TAG	libavformat/westwood.c	53;"	d	file:
PIXOP	libavcodec/alpha/dsputil_alpha.c	249;"	d	file:
PIXOP2	libavcodec/dsputil.c	564;"	d	file:
PIXOP2	libavcodec/dsputil.c	706;"	d	file:
PIXOP2	libavcodec/sh4/qpel.c	8;"	d	file:
PIX_FMT_BGR24	libavcodec/avcodec.h	/^    PIX_FMT_BGR24,     \/\/\/< Packed pixel, 3 bytes per pixel, BGRBGR...$/;"	e	enum:PixelFormat
PIX_FMT_GRAY8	libavcodec/avcodec.h	/^    PIX_FMT_GRAY8,$/;"	e	enum:PixelFormat
PIX_FMT_MONOBLACK	libavcodec/avcodec.h	/^    PIX_FMT_MONOBLACK, \/\/\/< 0 is black $/;"	e	enum:PixelFormat
PIX_FMT_MONOWHITE	libavcodec/avcodec.h	/^    PIX_FMT_MONOWHITE, \/\/\/< 0 is white $/;"	e	enum:PixelFormat
PIX_FMT_NB	libavcodec/avcodec.h	/^    PIX_FMT_NB,$/;"	e	enum:PixelFormat
PIX_FMT_NONE	libavcodec/avcodec.h	/^    PIX_FMT_NONE= -1,$/;"	e	enum:PixelFormat
PIX_FMT_PAL8	libavcodec/avcodec.h	/^    PIX_FMT_PAL8,      \/\/\/< 8 bit with RGBA palette $/;"	e	enum:PixelFormat
PIX_FMT_RGB24	libavcodec/avcodec.h	/^    PIX_FMT_RGB24,     \/\/\/< Packed pixel, 3 bytes per pixel, RGBRGB...$/;"	e	enum:PixelFormat
PIX_FMT_RGB555	libavcodec/avcodec.h	/^    PIX_FMT_RGB555,    \/\/\/< always stored in cpu endianness, most significant bit to 1 $/;"	e	enum:PixelFormat
PIX_FMT_RGB565	libavcodec/avcodec.h	/^    PIX_FMT_RGB565,    \/\/\/< always stored in cpu endianness $/;"	e	enum:PixelFormat
PIX_FMT_RGBA32	libavcodec/avcodec.h	/^    PIX_FMT_RGBA32,    \/\/\/< Packed pixel, 4 bytes per pixel, BGRABGRA..., stored in cpu endianness$/;"	e	enum:PixelFormat
PIX_FMT_UYVY411	libavcodec/avcodec.h	/^    PIX_FMT_UYVY411,   \/\/\/< Packed pixel, Cb Y0 Y1 Cr Y2 Y3$/;"	e	enum:PixelFormat
PIX_FMT_UYVY422	libavcodec/avcodec.h	/^    PIX_FMT_UYVY422,   \/\/\/< Packed pixel, Cb Y0 Cr Y1 $/;"	e	enum:PixelFormat
PIX_FMT_XVMC_MPEG2_IDCT	libavcodec/avcodec.h	/^    PIX_FMT_XVMC_MPEG2_IDCT,$/;"	e	enum:PixelFormat
PIX_FMT_XVMC_MPEG2_MC	libavcodec/avcodec.h	/^    PIX_FMT_XVMC_MPEG2_MC,\/\/\/< XVideo Motion Acceleration via common packet passing(xvmc_render.h)$/;"	e	enum:PixelFormat
PIX_FMT_YUV410P	libavcodec/avcodec.h	/^    PIX_FMT_YUV410P,   \/\/\/< Planar YUV 4:1:0 (1 Cr & Cb sample per 4x4 Y samples)$/;"	e	enum:PixelFormat
PIX_FMT_YUV411P	libavcodec/avcodec.h	/^    PIX_FMT_YUV411P,   \/\/\/< Planar YUV 4:1:1 (1 Cr & Cb sample per 4x1 Y samples)$/;"	e	enum:PixelFormat
PIX_FMT_YUV420P	libavcodec/avcodec.h	/^    PIX_FMT_YUV420P,   \/\/\/< Planar YUV 4:2:0 (1 Cr & Cb sample per 2x2 Y samples)$/;"	e	enum:PixelFormat
PIX_FMT_YUV422	libavcodec/avcodec.h	/^    PIX_FMT_YUV422,    \/\/\/< Packed pixel, Y0 Cb Y1 Cr $/;"	e	enum:PixelFormat
PIX_FMT_YUV422P	libavcodec/avcodec.h	/^    PIX_FMT_YUV422P,   \/\/\/< Planar YUV 4:2:2 (1 Cr & Cb sample per 2x1 Y samples)$/;"	e	enum:PixelFormat
PIX_FMT_YUV444P	libavcodec/avcodec.h	/^    PIX_FMT_YUV444P,   \/\/\/< Planar YUV 4:4:4 (1 Cr & Cb sample per 1x1 Y samples)$/;"	e	enum:PixelFormat
PIX_FMT_YUVJ420P	libavcodec/avcodec.h	/^    PIX_FMT_YUVJ420P,  \/\/\/< Planar YUV 4:2:0 full scale (jpeg)$/;"	e	enum:PixelFormat
PIX_FMT_YUVJ422P	libavcodec/avcodec.h	/^    PIX_FMT_YUVJ422P,  \/\/\/< Planar YUV 4:2:2 full scale (jpeg)$/;"	e	enum:PixelFormat
PIX_FMT_YUVJ444P	libavcodec/avcodec.h	/^    PIX_FMT_YUVJ444P,  \/\/\/< Planar YUV 4:4:4 full scale (jpeg)$/;"	e	enum:PixelFormat
PIX_FUNC	tests/dsptest.c	51;"	d	file:
PIX_FUNC_C	tests/dsptest.c	46;"	d	file:
PIX_FUNC_MMX	tests/dsptest.c	56;"	d	file:
PIX_SAD	libavcodec/i386/motion_est_mmx.c	/^PIX_SAD(mmx)$/;"	f
PIX_SAD	libavcodec/i386/motion_est_mmx.c	269;"	d	file:
PKTFILESUFF	pktdumper.c	9;"	d	file:
PKT_FLAG_KEY	libavformat/avformat.h	43;"	d
PL	libavcodec/vp3.c	1903;"	d	file:
PLANE	libavcodec/huffyuv.c	/^    PLANE,$/;"	e	enum:Predictor	file:
PLANE_PRED8x8	libavcodec/h264data.h	46;"	d
PMAXUB	libavcodec/libpostproc/postprocess_template.c	48;"	d	file:
PMAXUB	libavcodec/libpostproc/postprocess_template.c	67;"	d	file:
PMAXUB	libavcodec/libpostproc/postprocess_template.c	69;"	d	file:
PMAXW	libavcodec/i386/mpegvideo_mmx_template.c	21;"	d	file:
PMAXW	libavcodec/i386/mpegvideo_mmx_template.c	24;"	d	file:
PMAXW	libavcodec/i386/mpegvideo_mmx_template.c	30;"	d	file:
PMINUB	libavcodec/libpostproc/postprocess_template.c	47;"	d	file:
PMINUB	libavcodec/libpostproc/postprocess_template.c	58;"	d	file:
PMINUB	libavcodec/libpostproc/postprocess_template.c	60;"	d	file:
PMT_TID	libavformat/mpegts.h	31;"	d
PMbInfo	libavcodec/h264data.h	/^typedef struct PMbInfo{$/;"	s
PMbInfo	libavcodec/h264data.h	/^} PMbInfo;$/;"	t
PNGContext	libavcodec/png.c	/^typedef struct PNGContext {$/;"	s	file:
PNGContext	libavcodec/png.c	/^} PNGContext;$/;"	t	file:
PNGDecodeState	libavformat/png.c	/^typedef struct PNGDecodeState {$/;"	s	file:
PNGDecodeState	libavformat/png.c	/^} PNGDecodeState;$/;"	t	file:
PNGEncodeState	libavformat/png.c	/^typedef struct PNGEncodeState {$/;"	s	file:
PNGEncodeState	libavformat/png.c	/^} PNGEncodeState;$/;"	t	file:
PNG_ALLIMAGE	libavcodec/png.c	49;"	d	file:
PNG_ALLIMAGE	libavformat/png.c	49;"	d	file:
PNG_COLOR_MASK_ALPHA	libavcodec/png.c	33;"	d	file:
PNG_COLOR_MASK_ALPHA	libavformat/png.c	33;"	d	file:
PNG_COLOR_MASK_COLOR	libavcodec/png.c	32;"	d	file:
PNG_COLOR_MASK_COLOR	libavformat/png.c	32;"	d	file:
PNG_COLOR_MASK_PALETTE	libavcodec/png.c	31;"	d	file:
PNG_COLOR_MASK_PALETTE	libavformat/png.c	31;"	d	file:
PNG_COLOR_TYPE_GRAY	libavcodec/png.c	35;"	d	file:
PNG_COLOR_TYPE_GRAY	libavformat/png.c	35;"	d	file:
PNG_COLOR_TYPE_GRAY_ALPHA	libavcodec/png.c	39;"	d	file:
PNG_COLOR_TYPE_GRAY_ALPHA	libavformat/png.c	39;"	d	file:
PNG_COLOR_TYPE_PALETTE	libavcodec/png.c	36;"	d	file:
PNG_COLOR_TYPE_PALETTE	libavformat/png.c	36;"	d	file:
PNG_COLOR_TYPE_RGB	libavcodec/png.c	37;"	d	file:
PNG_COLOR_TYPE_RGB	libavformat/png.c	37;"	d	file:
PNG_COLOR_TYPE_RGB_ALPHA	libavcodec/png.c	38;"	d	file:
PNG_COLOR_TYPE_RGB_ALPHA	libavformat/png.c	38;"	d	file:
PNG_FILTER_VALUE_AVG	libavcodec/png.c	44;"	d	file:
PNG_FILTER_VALUE_AVG	libavformat/png.c	44;"	d	file:
PNG_FILTER_VALUE_NONE	libavcodec/png.c	41;"	d	file:
PNG_FILTER_VALUE_NONE	libavformat/png.c	41;"	d	file:
PNG_FILTER_VALUE_PAETH	libavcodec/png.c	45;"	d	file:
PNG_FILTER_VALUE_PAETH	libavformat/png.c	45;"	d	file:
PNG_FILTER_VALUE_SUB	libavcodec/png.c	42;"	d	file:
PNG_FILTER_VALUE_SUB	libavformat/png.c	42;"	d	file:
PNG_FILTER_VALUE_UP	libavcodec/png.c	43;"	d	file:
PNG_FILTER_VALUE_UP	libavformat/png.c	43;"	d	file:
PNG_IDAT	libavcodec/png.c	48;"	d	file:
PNG_IDAT	libavformat/png.c	48;"	d	file:
PNG_IHDR	libavcodec/png.c	47;"	d	file:
PNG_IHDR	libavformat/png.c	47;"	d	file:
PNG_PLTE	libavcodec/png.c	50;"	d	file:
PNG_PLTE	libavformat/png.c	50;"	d	file:
PNMContext	libavcodec/pnm.c	/^typedef struct PNMContext {$/;"	s	file:
PNMContext	libavcodec/pnm.c	/^} PNMContext;$/;"	t	file:
PNOT_ATOM	qt-faststart.c	53;"	d	file:
POS_FRAC	libavcodec/imgresample.c	41;"	d	file:
POS_FRAC_BITS	libavcodec/imgresample.c	40;"	d	file:
POWERPC_GET_PMC1	libavcodec/ppc/dsputil_ppc.h	100;"	d
POWERPC_GET_PMC1	libavcodec/ppc/dsputil_ppc.h	82;"	d
POWERPC_GET_PMC2	libavcodec/ppc/dsputil_ppc.h	101;"	d
POWERPC_GET_PMC2	libavcodec/ppc/dsputil_ppc.h	83;"	d
POWERPC_GET_PMC3	libavcodec/ppc/dsputil_ppc.h	103;"	d
POWERPC_GET_PMC3	libavcodec/ppc/dsputil_ppc.h	106;"	d
POWERPC_GET_PMC3	libavcodec/ppc/dsputil_ppc.h	85;"	d
POWERPC_GET_PMC3	libavcodec/ppc/dsputil_ppc.h	88;"	d
POWERPC_GET_PMC4	libavcodec/ppc/dsputil_ppc.h	104;"	d
POWERPC_GET_PMC4	libavcodec/ppc/dsputil_ppc.h	107;"	d
POWERPC_GET_PMC4	libavcodec/ppc/dsputil_ppc.h	86;"	d
POWERPC_GET_PMC4	libavcodec/ppc/dsputil_ppc.h	89;"	d
POWERPC_GET_PMC5	libavcodec/ppc/dsputil_ppc.h	110;"	d
POWERPC_GET_PMC5	libavcodec/ppc/dsputil_ppc.h	113;"	d
POWERPC_GET_PMC5	libavcodec/ppc/dsputil_ppc.h	92;"	d
POWERPC_GET_PMC5	libavcodec/ppc/dsputil_ppc.h	95;"	d
POWERPC_GET_PMC6	libavcodec/ppc/dsputil_ppc.h	111;"	d
POWERPC_GET_PMC6	libavcodec/ppc/dsputil_ppc.h	114;"	d
POWERPC_GET_PMC6	libavcodec/ppc/dsputil_ppc.h	93;"	d
POWERPC_GET_PMC6	libavcodec/ppc/dsputil_ppc.h	96;"	d
POWERPC_NUM_PMC_ENABLED	libavcodec/ppc/dsputil_ppc.h	39;"	d
POWERPC_PERF_DECLARE	libavcodec/ppc/dsputil_ppc.h	117;"	d
POWERPC_PERF_DECLARE	libavcodec/ppc/dsputil_ppc.h	159;"	d
POWERPC_PERF_START_COUNT	libavcodec/ppc/dsputil_ppc.h	122;"	d
POWERPC_PERF_START_COUNT	libavcodec/ppc/dsputil_ppc.h	160;"	d
POWERPC_PERF_STOP_COUNT	libavcodec/ppc/dsputil_ppc.h	130;"	d
POWERPC_PERF_STOP_COUNT	libavcodec/ppc/dsputil_ppc.h	161;"	d
POWERP_PMC_DATATYPE	libavcodec/ppc/dsputil_ppc.h	81;"	d
POWERP_PMC_DATATYPE	libavcodec/ppc/dsputil_ppc.h	99;"	d
POW_FIX	libavcodec/mpegaudiodec.c	255;"	d	file:
POW_FRAC_BITS	libavcodec/mpegaudiodec.c	253;"	d	file:
POW_FRAC_ONE	libavcodec/mpegaudiodec.c	254;"	d	file:
POW_MULL	libavcodec/mpegaudiodec.c	256;"	d	file:
PPContext	libavcodec/libpostproc/postprocess_internal.h	/^typedef struct PPContext{$/;"	s
PPContext	libavcodec/libpostproc/postprocess_internal.h	/^} PPContext;$/;"	t
PPFilter	libavcodec/libpostproc/postprocess_internal.h	/^struct PPFilter{$/;"	s
PPLIB	libavcodec/libpostproc/Makefile	/^PPLIB = $(LIBPREF)postproc$(LIBSUF)$/;"	m
PPMode	libavcodec/libpostproc/postprocess_internal.h	/^typedef struct PPMode{$/;"	s
PPMode	libavcodec/libpostproc/postprocess_internal.h	/^} PPMode;$/;"	t
PPOBJS	libavcodec/libpostproc/Makefile	/^PPOBJS=postprocess.o$/;"	m
PPOBJS	libavformat/Makefile	/^PPOBJS=$/;"	m
PPS	libavcodec/h264.c	/^typedef struct PPS{$/;"	s	file:
PPS	libavcodec/h264.c	/^}PPS;$/;"	t	file:
PP_CPU_CAPS_3DNOW	libavcodec/libpostproc/postprocess.h	61;"	d
PP_CPU_CAPS_ALTIVEC	libavcodec/libpostproc/postprocess.h	62;"	d
PP_CPU_CAPS_MMX	libavcodec/libpostproc/postprocess.h	59;"	d
PP_CPU_CAPS_MMX2	libavcodec/libpostproc/postprocess.h	60;"	d
PP_FORMAT	libavcodec/libpostproc/postprocess.h	64;"	d
PP_FORMAT_411	libavcodec/libpostproc/postprocess.h	67;"	d
PP_FORMAT_420	libavcodec/libpostproc/postprocess.h	65;"	d
PP_FORMAT_422	libavcodec/libpostproc/postprocess.h	66;"	d
PP_FORMAT_444	libavcodec/libpostproc/postprocess.h	68;"	d
PP_PICT_TYPE_QP2	libavcodec/libpostproc/postprocess.h	70;"	d
PP_QUALITY_MAX	libavcodec/libpostproc/postprocess.h	32;"	d
PREDICT	libavcodec/mjpeg.c	288;"	d	file:
PREDICT_MODE	libavcodec/svq3.c	49;"	d	file:
PREFIX_h264_chroma_mc8_altivec	libavcodec/ppc/dsputil_h264_altivec.c	29;"	d	file:
PREFIX_h264_chroma_mc8_altivec	libavcodec/ppc/dsputil_h264_altivec.c	39;"	d	file:
PREFIX_h264_chroma_mc8_altivec	libavcodec/ppc/dsputil_h264_altivec.c	49;"	d	file:
PREFIX_h264_chroma_mc8_altivec	libavcodec/ppc/dsputil_h264_altivec.c	59;"	d	file:
PREFIX_h264_chroma_mc8_altivec	libavcodec/ppc/dsputil_h264_template_altivec.c	/^void PREFIX_h264_chroma_mc8_altivec(uint8_t * dst, uint8_t * src, int stride, int h, int x, int y) {$/;"	f
PREFIX_h264_chroma_mc8_num	libavcodec/ppc/dsputil_h264_altivec.c	30;"	d	file:
PREFIX_h264_chroma_mc8_num	libavcodec/ppc/dsputil_h264_altivec.c	40;"	d	file:
PREFIX_h264_chroma_mc8_num	libavcodec/ppc/dsputil_h264_altivec.c	50;"	d	file:
PREFIX_h264_chroma_mc8_num	libavcodec/ppc/dsputil_h264_altivec.c	60;"	d	file:
PREFIX_h264_qpel16_h_lowpass_altivec	libavcodec/ppc/dsputil_h264_altivec.c	31;"	d	file:
PREFIX_h264_qpel16_h_lowpass_altivec	libavcodec/ppc/dsputil_h264_altivec.c	41;"	d	file:
PREFIX_h264_qpel16_h_lowpass_altivec	libavcodec/ppc/dsputil_h264_altivec.c	51;"	d	file:
PREFIX_h264_qpel16_h_lowpass_altivec	libavcodec/ppc/dsputil_h264_altivec.c	61;"	d	file:
PREFIX_h264_qpel16_h_lowpass_altivec	libavcodec/ppc/dsputil_h264_template_altivec.c	/^static void PREFIX_h264_qpel16_h_lowpass_altivec(uint8_t * dst, uint8_t * src, int dstStride, int srcStride) {$/;"	f	file:
PREFIX_h264_qpel16_h_lowpass_num	libavcodec/ppc/dsputil_h264_altivec.c	32;"	d	file:
PREFIX_h264_qpel16_h_lowpass_num	libavcodec/ppc/dsputil_h264_altivec.c	42;"	d	file:
PREFIX_h264_qpel16_h_lowpass_num	libavcodec/ppc/dsputil_h264_altivec.c	52;"	d	file:
PREFIX_h264_qpel16_h_lowpass_num	libavcodec/ppc/dsputil_h264_altivec.c	62;"	d	file:
PREFIX_h264_qpel16_hv_lowpass_altivec	libavcodec/ppc/dsputil_h264_altivec.c	35;"	d	file:
PREFIX_h264_qpel16_hv_lowpass_altivec	libavcodec/ppc/dsputil_h264_altivec.c	45;"	d	file:
PREFIX_h264_qpel16_hv_lowpass_altivec	libavcodec/ppc/dsputil_h264_altivec.c	55;"	d	file:
PREFIX_h264_qpel16_hv_lowpass_altivec	libavcodec/ppc/dsputil_h264_altivec.c	65;"	d	file:
PREFIX_h264_qpel16_hv_lowpass_altivec	libavcodec/ppc/dsputil_h264_template_altivec.c	/^static void PREFIX_h264_qpel16_hv_lowpass_altivec(uint8_t * dst, int16_t * tmp, uint8_t * src, int dstStride, int tmpStride, int srcStride) {$/;"	f	file:
PREFIX_h264_qpel16_hv_lowpass_num	libavcodec/ppc/dsputil_h264_altivec.c	36;"	d	file:
PREFIX_h264_qpel16_hv_lowpass_num	libavcodec/ppc/dsputil_h264_altivec.c	46;"	d	file:
PREFIX_h264_qpel16_hv_lowpass_num	libavcodec/ppc/dsputil_h264_altivec.c	56;"	d	file:
PREFIX_h264_qpel16_hv_lowpass_num	libavcodec/ppc/dsputil_h264_altivec.c	66;"	d	file:
PREFIX_h264_qpel16_v_lowpass_altivec	libavcodec/ppc/dsputil_h264_altivec.c	33;"	d	file:
PREFIX_h264_qpel16_v_lowpass_altivec	libavcodec/ppc/dsputil_h264_altivec.c	43;"	d	file:
PREFIX_h264_qpel16_v_lowpass_altivec	libavcodec/ppc/dsputil_h264_altivec.c	53;"	d	file:
PREFIX_h264_qpel16_v_lowpass_altivec	libavcodec/ppc/dsputil_h264_altivec.c	63;"	d	file:
PREFIX_h264_qpel16_v_lowpass_altivec	libavcodec/ppc/dsputil_h264_template_altivec.c	/^static void PREFIX_h264_qpel16_v_lowpass_altivec(uint8_t * dst, uint8_t * src, int dstStride, int srcStride) {$/;"	f	file:
PREFIX_h264_qpel16_v_lowpass_num	libavcodec/ppc/dsputil_h264_altivec.c	34;"	d	file:
PREFIX_h264_qpel16_v_lowpass_num	libavcodec/ppc/dsputil_h264_altivec.c	44;"	d	file:
PREFIX_h264_qpel16_v_lowpass_num	libavcodec/ppc/dsputil_h264_altivec.c	54;"	d	file:
PREFIX_h264_qpel16_v_lowpass_num	libavcodec/ppc/dsputil_h264_altivec.c	64;"	d	file:
PREV	libavcodec/adx.c	/^} PREV;$/;"	t	file:
PREV	libavcodec/libpostproc/postprocess_template.c	2820;"	d	file:
PREV_PICT_TYPES_BUFFER_SIZE	libavcodec/mpegvideo.h	352;"	d
PRINT	libavformat/nsvdec.c	81;"	d	file:
PRINT	libavformat/nsvdec.c	83;"	d	file:
PRINT_IF_GUID	libavformat/asf.c	40;"	d	file:
PRINT_IF_GUID	libavformat/asf.c	69;"	d	file:
PRIVATE_STREAM_1	libavformat/mpeg.c	83;"	d	file:
PRIVATE_STREAM_2	libavformat/mpeg.c	85;"	d	file:
PROBE_BUF_SIZE	libavformat/utils.c	464;"	d	file:
PROFILE_ADVANCED	libavcodec/vc9.c	72;"	d	file:
PROFILE_COMPLEX	libavcodec/vc9.c	71;"	d	file:
PROFILE_MAIN	libavcodec/vc9.c	70;"	d	file:
PROFILE_SIMPLE	libavcodec/vc9.c	69;"	d	file:
PROG	Makefile	/^PROG=ffmpeg$(EXESUF)$/;"	m
PROGRAM_STREAM_MAP	libavformat/mpeg.c	82;"	d	file:
PROGTEST	Makefile	/^PROGTEST=output_example$(EXESUF)$/;"	m
PT00_TAG	libavformat/electronicarts.c	28;"	d	file:
PU	libavcodec/vp3.c	1901;"	d	file:
PUL	libavcodec/vp3.c	1900;"	d	file:
PUR	libavcodec/vp3.c	1902;"	d	file:
PUT	libavcodec/ps2/idct_mmi.c	241;"	d	file:
PUT_OP	libavcodec/i386/dsputil_mmx.c	3043;"	d	file:
PUT_OP_U8_ALTIVEC	libavcodec/ppc/dsputil_h264_altivec.c	25;"	d	file:
P_LEFT	libavcodec/motion_est.c	41;"	d	file:
P_LEFT	libavcodec/snow.c	2029;"	d	file:
P_MEDIAN	libavcodec/motion_est.c	44;"	d	file:
P_MEDIAN	libavcodec/snow.c	2032;"	d	file:
P_MV1	libavcodec/motion_est.c	45;"	d	file:
P_MV1	libavcodec/snow.c	2033;"	d	file:
P_TOP	libavcodec/motion_est.c	42;"	d	file:
P_TOP	libavcodec/snow.c	2030;"	d	file:
P_TOPRIGHT	libavcodec/motion_est.c	43;"	d	file:
P_TOPRIGHT	libavcodec/snow.c	2031;"	d	file:
P_TYPE	libavcodec/mpegvideo.h	65;"	d
PacketDesc	libavformat/mpeg.c	/^typedef struct PacketDesc {$/;"	s	file:
PacketDesc	libavformat/mpeg.c	/^} PacketDesc;$/;"	t	file:
PacketQueue	ffplay.c	/^typedef struct PacketQueue {$/;"	s	file:
PacketQueue	ffplay.c	/^} PacketQueue;$/;"	t	file:
ParseColor	vhook/drawtext.c	/^int ParseColor(char *text, unsigned char yuv_color[3])$/;"	f
ParseContext	libavcodec/mpegvideo.h	/^typedef struct ParseContext{$/;"	s
ParseContext	libavcodec/mpegvideo.h	/^} ParseContext;$/;"	t
ParseContext1	libavcodec/parser.c	/^typedef struct ParseContext1{$/;"	s	file:
ParseContext1	libavcodec/parser.c	/^} ParseContext1;$/;"	t	file:
Parser	libavcodec/eval.c	/^typedef struct Parser{$/;"	s	file:
Parser	libavcodec/eval.c	/^} Parser;$/;"	t	file:
Picture	libavcodec/mpegvideo.h	/^typedef struct Picture{$/;"	s
Picture	libavcodec/mpegvideo.h	/^} Picture;$/;"	t
PixFmtInfo	libavcodec/imgconvert.c	/^typedef struct PixFmtInfo {$/;"	s	file:
PixFmtInfo	libavcodec/imgconvert.c	/^} PixFmtInfo;$/;"	t	file:
PixelFormat	libavcodec/avcodec.h	/^enum PixelFormat {$/;"	g
PixelFormatTag	libavcodec/raw.c	/^} PixelFormatTag;$/;"	t	file:
PixleFormatTag	libavcodec/raw.c	/^typedef struct PixleFormatTag {$/;"	s	file:
Plane	libavcodec/snow.c	/^typedef struct Plane{$/;"	s	file:
Plane	libavcodec/snow.c	/^}Plane;$/;"	t	file:
PlaneContext	libavcodec/ffv1.c	/^typedef struct PlaneContext{$/;"	s	file:
PlaneContext	libavcodec/ffv1.c	/^} PlaneContext;$/;"	t	file:
Predictor	libavcodec/huffyuv.c	/^typedef enum Predictor{$/;"	g	file:
Predictor	libavcodec/huffyuv.c	/^} Predictor;$/;"	t	file:
Predictor	libavcodec/mpegvideo.h	/^typedef struct Predictor{$/;"	s
Predictor	libavcodec/mpegvideo.h	/^} Predictor;$/;"	t
Process	libavformat/framehook.c	/^    FrameHookProcessFn Process;$/;"	m	struct:_FrameHookEntry	file:
Process	vhook/drawtext.c	/^void Process(void *ctx, AVPicture *picture, enum PixelFormat pix_fmt, int width, int height, int64_t pts)$/;"	f
Process	vhook/fish.c	/^void Process(void *ctx, AVPicture *picture, enum PixelFormat pix_fmt, int width, int height, int64_t pts)$/;"	f
Process	vhook/imlib2.c	/^void Process(void *ctx, AVPicture *picture, enum PixelFormat pix_fmt, int width, int height, int64_t pts)$/;"	f
Process	vhook/null.c	/^void Process(void *ctx, AVPicture *picture, enum PixelFormat pix_fmt, int width, int height, int64_t pts)$/;"	f
Process	vhook/ppm.c	/^void Process(void *ctx, AVPicture *picture, enum PixelFormat pix_fmt, int width, int height, int64_t pts)$/;"	f
Process	vhook/watermark.c	/^void Process(void *ctx, $/;"	f
PutBitContext	libavcodec/bitstream.h	/^typedef struct PutBitContext {$/;"	s
PutBitContext	libavcodec/bitstream.h	/^} PutBitContext;$/;"	t
Q	libavcodec/liba52/tables.h	49;"	d
Q0	libavcodec/liba52/tables.h	113;"	d
Q0	libavcodec/liba52/tables.h	123;"	d
Q0	libavcodec/liba52/tables.h	165;"	d
Q0	libavcodec/liba52/tables.h	51;"	d
Q0	libavcodec/liba52/tables.h	76;"	d
Q0	libavcodec/liba52/tables.h	80;"	d
Q1	libavcodec/liba52/tables.h	114;"	d
Q1	libavcodec/liba52/tables.h	124;"	d
Q1	libavcodec/liba52/tables.h	166;"	d
Q1	libavcodec/liba52/tables.h	52;"	d
Q1	libavcodec/liba52/tables.h	77;"	d
Q1	libavcodec/liba52/tables.h	81;"	d
Q2	libavcodec/liba52/tables.h	115;"	d
Q2	libavcodec/liba52/tables.h	125;"	d
Q2	libavcodec/liba52/tables.h	167;"	d
Q2	libavcodec/liba52/tables.h	53;"	d
Q2	libavcodec/liba52/tables.h	78;"	d
Q2	libavcodec/liba52/tables.h	82;"	d
Q3	libavcodec/liba52/tables.h	116;"	d
Q3	libavcodec/liba52/tables.h	126;"	d
Q3	libavcodec/liba52/tables.h	168;"	d
Q3	libavcodec/liba52/tables.h	83;"	d
Q4	libavcodec/liba52/tables.h	117;"	d
Q4	libavcodec/liba52/tables.h	127;"	d
Q4	libavcodec/liba52/tables.h	169;"	d
Q4	libavcodec/liba52/tables.h	84;"	d
Q5	libavcodec/liba52/tables.h	128;"	d
Q5	libavcodec/liba52/tables.h	170;"	d
Q6	libavcodec/liba52/tables.h	129;"	d
Q6	libavcodec/liba52/tables.h	171;"	d
Q7	libavcodec/liba52/tables.h	130;"	d
Q7	libavcodec/liba52/tables.h	172;"	d
Q8	libavcodec/liba52/tables.h	131;"	d
Q8	libavcodec/liba52/tables.h	173;"	d
Q9	libavcodec/liba52/tables.h	132;"	d
Q9	libavcodec/liba52/tables.h	174;"	d
QA	libavcodec/liba52/tables.h	133;"	d
QA	libavcodec/liba52/tables.h	175;"	d
QBIAS_SHIFT	libavcodec/snow.c	460;"	d	file:
QEXPSHIFT	libavcodec/snow.c	575;"	d	file:
QMAT_SHIFT	libavcodec/mpegvideo.h	47;"	d
QMAT_SHIFT_MMX	libavcodec/mpegvideo.h	46;"	d
QP	libavcodec/libpostproc/postprocess_internal.h	/^	int QP;$/;"	m	struct:PPContext
QPEL	libavcodec/sh4/dsputil_align.c	322;"	d	file:
QPEL_BASE	libavcodec/i386/dsputil_mmx.c	1921;"	d	file:
QPEL_H264	libavcodec/i386/dsputil_mmx.c	2581;"	d	file:
QPEL_H264HV	libavcodec/i386/dsputil_mmx.c	2567;"	d	file:
QPEL_H264V	libavcodec/i386/dsputil_mmx.c	2549;"	d	file:
QPEL_MC	libavcodec/dsputil.c	1525;"	d	file:
QPEL_MC	libavcodec/sh4/qpel.c	616;"	d	file:
QPEL_OP	libavcodec/i386/dsputil_mmx.c	2186;"	d	file:
QPEL_V_LOW	libavcodec/i386/dsputil_mmx.c	1900;"	d	file:
QP_STORE_T	libavcodec/libpostproc/postprocess.h	34;"	d
QROOT	libavcodec/snow.c	35;"	d	file:
QSHIFT	libavcodec/snow.c	34;"	d	file:
QTFASTSTART	Makefile	/^QTFASTSTART=qt-faststart$(EXESUF)$/;"	m
QTPALETTE_H	libavformat/qtpalette.h	8;"	d
QT_ATOM	qt-faststart.c	47;"	d	file:
QUALITY_THRESHOLD	libavcodec/svq1.c	924;"	d	file:
QUANT_BIAS_SHIFT	libavcodec/mpegvideo.h	465;"	d
QUANT_FRAME_EXPLICIT	libavcodec/vc9.c	78;"	d	file:
QUANT_FRAME_IMPLICIT	libavcodec/vc9.c	77;"	d	file:
QUANT_MASK	libavcodec/pcm.c	30;"	d	file:
QUANT_NON_UNIFORM	libavcodec/vc9.c	79;"	d	file:
QUANT_SHIFT	libavcodec/h264data.h	475;"	d
QUANT_UNIFORM	libavcodec/vc9.c	80;"	d	file:
QUEUE_MASK	libavcodec/vmdav.c	73;"	d	file:
QUEUE_SIZE	libavcodec/vmdav.c	72;"	d	file:
QdrawContext	libavcodec/qdrw.c	/^typedef struct QdrawContext{$/;"	s	file:
QdrawContext	libavcodec/qdrw.c	/^} QdrawContext;$/;"	t	file:
QpegContext	libavcodec/qpeg.c	/^typedef struct QpegContext{$/;"	s	file:
QpegContext	libavcodec/qpeg.c	/^} QpegContext;$/;"	t	file:
QtrleContext	libavcodec/qtrle.c	/^typedef struct QtrleContext {$/;"	s	file:
QtrleContext	libavcodec/qtrle.c	/^} QtrleContext;$/;"	t	file:
R	libavcodec/huffyuv.c	39;"	d	file:
R	libavcodec/huffyuv.c	43;"	d	file:
R1	libavcodec/simple_idct.c	533;"	d	file:
R2	libavcodec/simple_idct.c	534;"	d	file:
R3	libavcodec/simple_idct.c	535;"	d	file:
RA144TABLES_H	libavcodec/ra144.h	21;"	d
RA288TABLES_H	libavcodec/ra288.h	21;"	d
RANLIB	config.mak	/^RANLIB=ranlib$/;"	m
RATE_VARIATION	libavcodec/sonic.c	73;"	d	file:
RATIONAL_H	libavcodec/rational.h	28;"	d
RAW_CD_SECTOR_DATA_SIZE	libavformat/psxstr.c	38;"	d	file:
RAW_CD_SECTOR_SIZE	libavformat/psxstr.c	37;"	d	file:
RAW_PACKET_SIZE	libavformat/raw.c	82;"	d	file:
RAW_PACKET_SIZE	libavformat/rm.c	744;"	d	file:
READ_DATA	libavformat/ffm.c	/^    READ_DATA,$/;"	e	file:
READ_HEADER	libavformat/ffm.c	/^    READ_HEADER,$/;"	e	file:
REAL_DEINT_CUBIC	libavcodec/libpostproc/postprocess_template.c	1615;"	d	file:
REAL_DEINT_FF	libavcodec/libpostproc/postprocess_template.c	1679;"	d	file:
REAL_DEINT_L5	libavcodec/libpostproc/postprocess_template.c	1760;"	d	file:
REAL_DERING_CORE	libavcodec/libpostproc/postprocess_template.c	1332;"	d	file:
REAL_FIND_MIN_MAX	libavcodec/libpostproc/postprocess_template.c	1204;"	d	file:
REAL_FIND_MIN_MAX	libavcodec/libpostproc/postprocess_template.c	1209;"	d	file:
REAL_L2_DIFF_CORE	libavcodec/libpostproc/postprocess_template.c	2286;"	d	file:
REAL_L2_DIFF_CORE	libavcodec/libpostproc/postprocess_template.c	2303;"	d	file:
REAL_MEDIAN	libavcodec/libpostproc/postprocess_template.c	2011;"	d	file:
REAL_PAVGB	libavcodec/libpostproc/postprocess_template.c	51;"	d	file:
REAL_PAVGB	libavcodec/libpostproc/postprocess_template.c	53;"	d	file:
REAL_SCALED_CPY	libavcodec/libpostproc/postprocess_template.c	3207;"	d	file:
REAL_SCALED_CPY	libavcodec/libpostproc/postprocess_template.c	3230;"	d	file:
REAL_SIMPLE_CPY	libavcodec/libpostproc/postprocess_template.c	3289;"	d	file:
RECON_SHIFT	libavcodec/dsputil.h	325;"	d
RECT_SHAPE	libavcodec/mpeg4data.h	7;"	d
REDIR_ASF	ffserver.c	/^    REDIR_ASF,$/;"	e	enum:RedirType	file:
REDIR_ASX	ffserver.c	/^    REDIR_ASX,$/;"	e	enum:RedirType	file:
REDIR_NONE	ffserver.c	/^    REDIR_NONE,$/;"	e	enum:RedirType	file:
REDIR_RAM	ffserver.c	/^    REDIR_RAM,$/;"	e	enum:RedirType	file:
REDIR_RTSP	ffserver.c	/^    REDIR_RTSP,$/;"	e	enum:RedirType	file:
REDIR_SDP	ffserver.c	/^    REDIR_SDP,$/;"	e	enum:RedirType	file:
REFFILE1	tests/Makefile	/^REFFILE1=$(SRC_PATH)\/tests\/ffmpeg.regression.ref$/;"	m
REFFILE2	tests/Makefile	/^REFFILE2=$(SRC_PATH)\/tests\/rotozoom.regression.ref$/;"	m
REF_0	libavcodec/sparc/dsputil_vis.c	75;"	d	file:
REF_0_1	libavcodec/sparc/dsputil_vis.c	76;"	d	file:
REF_2	libavcodec/sparc/dsputil_vis.c	77;"	d	file:
REF_2_1	libavcodec/sparc/dsputil_vis.c	78;"	d	file:
REF_4	libavcodec/sparc/dsputil_vis.c	79;"	d	file:
REF_4_1	libavcodec/sparc/dsputil_vis.c	80;"	d	file:
REF_6	libavcodec/sparc/dsputil_vis.c	81;"	d	file:
REF_6_1	libavcodec/sparc/dsputil_vis.c	82;"	d	file:
REF_S0	libavcodec/sparc/dsputil_vis.c	83;"	d	file:
REF_S0_1	libavcodec/sparc/dsputil_vis.c	84;"	d	file:
REF_S2	libavcodec/sparc/dsputil_vis.c	85;"	d	file:
REF_S2_1	libavcodec/sparc/dsputil_vis.c	86;"	d	file:
REF_S4	libavcodec/sparc/dsputil_vis.c	87;"	d	file:
REF_S4_1	libavcodec/sparc/dsputil_vis.c	88;"	d	file:
REF_S6	libavcodec/sparc/dsputil_vis.c	89;"	d	file:
REF_S6_1	libavcodec/sparc/dsputil_vis.c	90;"	d	file:
REG_S	libavcodec/i386/cputest.c	12;"	d	file:
REG_S	libavcodec/i386/cputest.c	9;"	d	file:
REG_SP	libavcodec/libpostproc/postprocess_template.c	32;"	d	file:
REG_SP	libavcodec/libpostproc/postprocess_template.c	41;"	d	file:
REG_a	libavcodec/i386/mmx.h	11;"	d
REG_a	libavcodec/i386/mmx.h	9;"	d
REG_a	libavcodec/libpostproc/postprocess_template.c	29;"	d	file:
REG_a	libavcodec/libpostproc/postprocess_template.c	38;"	d	file:
REG_b	libavcodec/i386/cputest.c	11;"	d	file:
REG_b	libavcodec/i386/cputest.c	8;"	d	file:
REG_c	libavcodec/libpostproc/postprocess_template.c	30;"	d	file:
REG_c	libavcodec/libpostproc/postprocess_template.c	39;"	d	file:
REG_d	libavcodec/libpostproc/postprocess_template.c	31;"	d	file:
REG_d	libavcodec/libpostproc/postprocess_template.c	40;"	d	file:
REGa	libavcodec/libpostproc/postprocess_template.c	26;"	d	file:
REGa	libavcodec/libpostproc/postprocess_template.c	35;"	d	file:
REGc	libavcodec/libpostproc/postprocess_template.c	27;"	d	file:
REGc	libavcodec/libpostproc/postprocess_template.c	36;"	d	file:
REGd	libavcodec/libpostproc/postprocess_template.c	28;"	d	file:
REGd	libavcodec/libpostproc/postprocess_template.c	37;"	d	file:
RENAME	libavcodec/i386/mpegvideo_mmx.c	676;"	d	file:
RENAME	libavcodec/i386/mpegvideo_mmx.c	681;"	d	file:
RENAME	libavcodec/i386/mpegvideo_mmx.c	683;"	d	file:
RENAME	libavcodec/i386/mpegvideo_mmx.c	687;"	d	file:
RENAME	libavcodec/i386/mpegvideo_mmx.c	689;"	d	file:
RENAME	libavcodec/libpostproc/postprocess.c	624;"	d	file:
RENAME	libavcodec/libpostproc/postprocess.c	630;"	d	file:
RENAME	libavcodec/libpostproc/postprocess.c	632;"	d	file:
RENAME	libavcodec/libpostproc/postprocess.c	640;"	d	file:
RENAME	libavcodec/libpostproc/postprocess.c	644;"	d	file:
RENAME	libavcodec/libpostproc/postprocess.c	650;"	d	file:
RENAME	libavcodec/libpostproc/postprocess.c	654;"	d	file:
RENAME	libavcodec/libpostproc/postprocess.c	660;"	d	file:
RENAME	libavcodec/libpostproc/postprocess.c	664;"	d	file:
RENAMEl	libavcodec/i386/mpegvideo_mmx.c	677;"	d	file:
RENAMEl	libavcodec/i386/mpegvideo_mmx.c	682;"	d	file:
RENAMEl	libavcodec/i386/mpegvideo_mmx.c	684;"	d	file:
RENAMEl	libavcodec/i386/mpegvideo_mmx.c	688;"	d	file:
RENAMEl	libavcodec/i386/mpegvideo_mmx.c	690;"	d	file:
RGBA_IN	libavcodec/imgconvert.c	1451;"	d	file:
RGBA_IN	libavcodec/imgconvert.c	1553;"	d	file:
RGBA_IN	libavcodec/imgconvert_template.h	851;"	d
RGBA_OUT	libavcodec/imgconvert.c	1460;"	d	file:
RGBA_OUT	libavcodec/imgconvert.c	1562;"	d	file:
RGBA_OUT	libavcodec/imgconvert_template.h	853;"	d
RGB_IN	libavcodec/imgconvert.c	1443;"	d	file:
RGB_IN	libavcodec/imgconvert.c	1474;"	d	file:
RGB_IN	libavcodec/imgconvert.c	1495;"	d	file:
RGB_IN	libavcodec/imgconvert.c	1513;"	d	file:
RGB_IN	libavcodec/imgconvert.c	1522;"	d	file:
RGB_IN	libavcodec/imgconvert.c	1545;"	d	file:
RGB_IN	libavcodec/imgconvert_template.h	850;"	d
RGB_NAME	libavcodec/imgconvert.c	1441;"	d	file:
RGB_NAME	libavcodec/imgconvert.c	1472;"	d	file:
RGB_NAME	libavcodec/imgconvert.c	1493;"	d	file:
RGB_NAME	libavcodec/imgconvert.c	1519;"	d	file:
RGB_NAME	libavcodec/imgconvert.c	1542;"	d	file:
RGB_NAME	libavcodec/imgconvert_template.h	855;"	d
RGB_OUT	libavcodec/imgconvert.c	1482;"	d	file:
RGB_OUT	libavcodec/imgconvert.c	1502;"	d	file:
RGB_OUT	libavcodec/imgconvert.c	1514;"	d	file:
RGB_OUT	libavcodec/imgconvert.c	1529;"	d	file:
RGB_OUT	libavcodec/imgconvert_template.h	21;"	d
RGB_OUT	libavcodec/imgconvert_template.h	852;"	d
RGB_TO_U	ffmpeg.c	2312;"	d	file:
RGB_TO_U	libavcodec/imgconvert.c	1056;"	d	file:
RGB_TO_U_CCIR	libavcodec/imgconvert.c	1068;"	d	file:
RGB_TO_V	ffmpeg.c	2316;"	d	file:
RGB_TO_V	libavcodec/imgconvert.c	1060;"	d	file:
RGB_TO_V_CCIR	libavcodec/imgconvert.c	1072;"	d	file:
RGB_TO_Y	ffmpeg.c	2308;"	d	file:
RGB_TO_Y	libavcodec/imgconvert.c	1052;"	d	file:
RGB_TO_YUV	vhook/drawtext.c	62;"	d	file:
RGB_TO_Y_CCIR	libavcodec/imgconvert.c	1064;"	d	file:
RICEContext	libavcodec/loco.c	/^typedef struct RICEContext{$/;"	s	file:
RICEContext	libavcodec/loco.c	/^}RICEContext;$/;"	t	file:
RIFF_HEADER_SIZE	libavformat/psxstr.c	41;"	d	file:
RIFF_TAG	libavformat/4xm.c	30;"	d	file:
RIFF_TAG	libavformat/psxstr.c	34;"	d	file:
RIGHT_SHIFT	libavcodec/jfdctfst.c	45;"	d	file:
RIGHT_SHIFT	libavcodec/jfdctint.c	40;"	d	file:
RIGHT_SHIFT	libavcodec/jrevdct.c	44;"	d	file:
RIGHT_SIDE	libavcodec/flac.c	/^    RIGHT_SIDE,$/;"	e	enum:decorrelation_type	file:
RIGHT_SIDE	libavcodec/sonic.c	42;"	d	file:
RLE_V2_CHECK	libavcodec/indeo3.c	303;"	d	file:
RLE_V3_CHECK	libavcodec/indeo3.c	281;"	d	file:
RLTable	libavcodec/mpegvideo.h	/^typedef struct RLTable {$/;"	s
RLTable	libavcodec/mpegvideo.h	/^} RLTable;$/;"	t
RL_VLC_ELEM	libavcodec/bitstream.h	/^typedef struct RL_VLC_ELEM {$/;"	s
RL_VLC_ELEM	libavcodec/bitstream.h	/^} RL_VLC_ELEM;$/;"	t
RMContext	libavformat/rm.c	/^} RMContext;$/;"	t	file:
RND_FRW_ROW	libavcodec/i386/fdct_mmx.c	36;"	d	file:
RN_SHIFT	libavcodec/simple_idct.c	531;"	d	file:
ROUND	libavcodec/liba52/a52_internal.h	124;"	d
ROUNDED_DIV	libavcodec/common.h	262;"	d
ROUNDER_0	libavcodec/ps2/idct_mmi.c	27;"	d	file:
ROUNDER_1	libavcodec/ps2/idct_mmi.c	28;"	d	file:
ROW0_MASK	libavcodec/simple_idct.c	87;"	d	file:
ROW0_MASK	libavcodec/simple_idct.c	89;"	d	file:
ROW_IDCT	libavcodec/i386/simple_idct_mmx.c	216;"	d	file:
ROW_IDCT	libavcodec/i386/simple_idct_mmx.c	633;"	d	file:
ROW_SHIFT	libavcodec/alpha/simple_idct_alpha.c	45;"	d	file:
ROW_SHIFT	libavcodec/armv4l/simple_idct_arm.S	/^#define ROW_SHIFT 11$/;"	d
ROW_SHIFT	libavcodec/i386/idct_mmx.c	32;"	d	file:
ROW_SHIFT	libavcodec/i386/idct_mmx.c	556;"	d	file:
ROW_SHIFT	libavcodec/i386/simple_idct_mmx.c	46;"	d	file:
ROW_SHIFT	libavcodec/simple_idct.c	42;"	d	file:
ROW_SHIFT	libavcodec/simple_idct.c	52;"	d	file:
ROW_SHIFT2MSHW	libavcodec/armv4l/simple_idct_arm.S	/^#define ROW_SHIFT2MSHW (16-11)$/;"	d
ROW_SHIFTED_1	libavcodec/armv4l/simple_idct_arm.S	/^#define ROW_SHIFTED_1 1024 \/* 1<< (ROW_SHIFT-1) *\/$/;"	d
RSHIFT	libavcodec/common.h	260;"	d
RST0	libavcodec/mjpeg.c	/^    RST0  = 0xd0,$/;"	e	file:
RST1	libavcodec/mjpeg.c	/^    RST1  = 0xd1,$/;"	e	file:
RST2	libavcodec/mjpeg.c	/^    RST2  = 0xd2,$/;"	e	file:
RST3	libavcodec/mjpeg.c	/^    RST3  = 0xd3,$/;"	e	file:
RST4	libavcodec/mjpeg.c	/^    RST4  = 0xd4,$/;"	e	file:
RST5	libavcodec/mjpeg.c	/^    RST5  = 0xd5,$/;"	e	file:
RST6	libavcodec/mjpeg.c	/^    RST6  = 0xd6,$/;"	e	file:
RST7	libavcodec/mjpeg.c	/^    RST7  = 0xd7,$/;"	e	file:
RTCP_APP	libavformat/rtp.h	/^  RTCP_APP  = 204$/;"	e
RTCP_BYE	libavformat/rtp.h	/^  RTCP_BYE  = 203,$/;"	e
RTCP_RR	libavformat/rtp.h	/^  RTCP_RR   = 201,$/;"	e
RTCP_SDES	libavformat/rtp.h	/^  RTCP_SDES = 202,$/;"	e
RTCP_SDES_CNAME	libavformat/rtp.h	/^  RTCP_SDES_CNAME  =  1,$/;"	e
RTCP_SDES_DOOR	libavformat/rtp.h	/^  RTCP_SDES_DOOR   = 10,$/;"	e
RTCP_SDES_EMAIL	libavformat/rtp.h	/^  RTCP_SDES_EMAIL  =  3,$/;"	e
RTCP_SDES_END	libavformat/rtp.h	/^  RTCP_SDES_END    =  0,$/;"	e
RTCP_SDES_IMG	libavformat/rtp.h	/^  RTCP_SDES_IMG    =  9,$/;"	e
RTCP_SDES_LOC	libavformat/rtp.h	/^  RTCP_SDES_LOC    =  5,$/;"	e
RTCP_SDES_NAME	libavformat/rtp.h	/^  RTCP_SDES_NAME   =  2,$/;"	e
RTCP_SDES_NOTE	libavformat/rtp.h	/^  RTCP_SDES_NOTE   =  7,$/;"	e
RTCP_SDES_PHONE	libavformat/rtp.h	/^  RTCP_SDES_PHONE  =  4,$/;"	e
RTCP_SDES_PRIV	libavformat/rtp.h	/^  RTCP_SDES_PRIV   =  8,$/;"	e
RTCP_SDES_SOURCE	libavformat/rtp.h	/^  RTCP_SDES_SOURCE = 11$/;"	e
RTCP_SDES_TOOL	libavformat/rtp.h	/^  RTCP_SDES_TOOL   =  6,$/;"	e
RTCP_SR	libavformat/rtp.h	/^  RTCP_SR   = 200,$/;"	e
RTCP_TX_RATIO_DEN	libavformat/rtp.h	51;"	d
RTCP_TX_RATIO_NUM	libavformat/rtp.h	50;"	d
RTPContext	libavformat/rtpproto.c	/^typedef struct RTPContext {$/;"	s	file:
RTPContext	libavformat/rtpproto.c	/^} RTPContext;$/;"	t	file:
RTPDemuxContext	libavformat/rtp.c	/^struct RTPDemuxContext {$/;"	s	file:
RTPDemuxContext	libavformat/rtp.h	/^typedef struct RTPDemuxContext RTPDemuxContext;$/;"	t
RTP_H	libavformat/rtp.h	20;"	d
RTP_MAX_PACKET_LENGTH	libavformat/rtp.h	23;"	d
RTP_MAX_SDES	libavformat/rtp.h	47;"	d
RTP_MIN_PACKET_LENGTH	libavformat/rtp.h	22;"	d
RTP_PT_PRIVATE	libavformat/rtp.h	45;"	d
RTP_RX_BUF_SIZE	libavformat/rtpproto.c	35;"	d	file:
RTP_TX_BUF_SIZE	libavformat/rtpproto.c	34;"	d	file:
RTP_VERSION	libavformat/rtp.h	46;"	d
RTSPActionServerSetup	libavformat/rtsp.h	/^typedef struct RTSPActionServerSetup {$/;"	s
RTSPActionServerSetup	libavformat/rtsp.h	/^} RTSPActionServerSetup;$/;"	t
RTSPCallbackAction	libavformat/rtsp.h	/^enum RTSPCallbackAction {$/;"	g
RTSPClientState	libavformat/rtsp.c	/^enum RTSPClientState {$/;"	g	file:
RTSPHeader	libavformat/rtsp.h	/^typedef struct RTSPHeader {$/;"	s
RTSPHeader	libavformat/rtsp.h	/^} RTSPHeader;$/;"	t
RTSPProtocol	libavformat/rtsp.h	/^enum RTSPProtocol {$/;"	g
RTSPSTATE_SEND_PACKET	ffserver.c	/^    RTSPSTATE_SEND_PACKET,$/;"	e	enum:HTTPState	file:
RTSPSTATE_SEND_REPLY	ffserver.c	/^    RTSPSTATE_SEND_REPLY,$/;"	e	enum:HTTPState	file:
RTSPSTATE_WAIT_REQUEST	ffserver.c	/^    RTSPSTATE_WAIT_REQUEST,$/;"	e	enum:HTTPState	file:
RTSPState	libavformat/rtsp.c	/^typedef struct RTSPState {$/;"	s	file:
RTSPState	libavformat/rtsp.c	/^} RTSPState;$/;"	t	file:
RTSPStatusCode	libavformat/rtsp.h	/^enum RTSPStatusCode {$/;"	g
RTSPStream	libavformat/rtsp.c	/^typedef struct RTSPStream {$/;"	s	file:
RTSPStream	libavformat/rtsp.c	/^} RTSPStream;$/;"	t	file:
RTSPTransportField	libavformat/rtsp.h	/^typedef struct RTSPTransportField {$/;"	s
RTSPTransportField	libavformat/rtsp.h	/^} RTSPTransportField;$/;"	t
RTSP_ACTION_CLIENT_SETUP	libavformat/rtsp.h	/^    RTSP_ACTION_CLIENT_SETUP,$/;"	e	enum:RTSPCallbackAction
RTSP_ACTION_CLIENT_TEARDOWN	libavformat/rtsp.h	/^    RTSP_ACTION_CLIENT_TEARDOWN,$/;"	e	enum:RTSPCallbackAction
RTSP_ACTION_SERVER_SETUP	libavformat/rtsp.h	/^    RTSP_ACTION_SERVER_SETUP,$/;"	e	enum:RTSPCallbackAction
RTSP_ACTION_SERVER_TEARDOWN	libavformat/rtsp.h	/^    RTSP_ACTION_SERVER_TEARDOWN,$/;"	e	enum:RTSPCallbackAction
RTSP_DEFAULT_AUDIO_SAMPLERATE	libavformat/rtsp.h	39;"	d
RTSP_DEFAULT_NB_AUDIO_CHANNELS	libavformat/rtsp.h	38;"	d
RTSP_DEFAULT_PORT	libavformat/rtsp.h	35;"	d
RTSP_H	libavformat/rtsp.h	20;"	d
RTSP_MAX_TRANSPORTS	libavformat/rtsp.h	36;"	d
RTSP_PROTOCOL_RTP_TCP	libavformat/rtsp.h	/^    RTSP_PROTOCOL_RTP_TCP = 1,$/;"	e	enum:RTSPProtocol
RTSP_PROTOCOL_RTP_UDP	libavformat/rtsp.h	/^    RTSP_PROTOCOL_RTP_UDP = 0,$/;"	e	enum:RTSPProtocol
RTSP_PROTOCOL_RTP_UDP_MULTICAST	libavformat/rtsp.h	/^    RTSP_PROTOCOL_RTP_UDP_MULTICAST = 2,$/;"	e	enum:RTSPProtocol
RTSP_REQUEST_TIMEOUT	ffserver.c	85;"	d	file:
RTSP_RTP_PORT_MAX	libavformat/rtsp.h	41;"	d
RTSP_RTP_PORT_MIN	libavformat/rtsp.h	40;"	d
RTSP_STATE_IDLE	libavformat/rtsp.c	/^    RTSP_STATE_IDLE,$/;"	e	enum:RTSPClientState	file:
RTSP_STATE_PAUSED	libavformat/rtsp.c	/^    RTSP_STATE_PAUSED,$/;"	e	enum:RTSPClientState	file:
RTSP_STATE_PLAYING	libavformat/rtsp.c	/^    RTSP_STATE_PLAYING,$/;"	e	enum:RTSPClientState	file:
RTSP_TCP_MAX_PACKET_SIZE	libavformat/rtsp.h	37;"	d
RUN7_VLC_BITS	libavcodec/h264.c	50;"	d	file:
RUN_VLC_BITS	libavcodec/h264.c	49;"	d	file:
R_FIX	libavcodec/simple_idct.c	532;"	d	file:
R_SHIFT	libavcodec/simple_idct.c	536;"	d	file:
RangeCoder	libavcodec/rangecoder.h	/^typedef struct RangeCoder{$/;"	s
RangeCoder	libavcodec/rangecoder.h	/^}RangeCoder;$/;"	t
RateControlContext	libavcodec/mpegvideo.h	/^typedef struct RateControlContext{$/;"	s
RateControlContext	libavcodec/mpegvideo.h	/^}RateControlContext;$/;"	t
RateControlEntry	libavcodec/mpegvideo.h	/^typedef struct RateControlEntry{$/;"	s
RateControlEntry	libavcodec/mpegvideo.h	/^}RateControlEntry;$/;"	t
RawDVContext	libavformat/dv.c	/^typedef struct RawDVContext {$/;"	s	file:
RawDVContext	libavformat/dv.c	/^} RawDVContext;$/;"	t	file:
RawVideoContext	libavcodec/raw.c	/^typedef struct RawVideoContext {$/;"	s	file:
RawVideoContext	libavcodec/raw.c	/^} RawVideoContext;$/;"	t	file:
RcOverride	libavcodec/avcodec.h	/^typedef struct RcOverride{$/;"	s
RcOverride	libavcodec/avcodec.h	/^} RcOverride;$/;"	t
ReSampleContext	libavcodec/avcodec.h	/^typedef struct ReSampleContext ReSampleContext;$/;"	t
ReSampleContext	libavcodec/resample.c	/^struct ReSampleContext {$/;"	s	file:
Real144_internal	libavcodec/ra144.c	/^} Real144_internal;$/;"	t	file:
Real288_internal	libavcodec/ra288.c	/^} Real288_internal;$/;"	t	file:
RedirType	ffserver.c	/^enum RedirType {$/;"	g	file:
Release	libavformat/framehook.c	/^    FrameHookReleaseFn Release;$/;"	m	struct:_FrameHookEntry	file:
Release	vhook/drawtext.c	/^void Release(void *ctx)$/;"	f
Release	vhook/fish.c	/^void Release(void *ctx)$/;"	f
Release	vhook/imlib2.c	/^void Release(void *ctx)$/;"	f
Release	vhook/null.c	/^void Release(void *ctx)$/;"	f
Release	vhook/ppm.c	/^void Release(void *ctx)$/;"	f
Release	vhook/watermark.c	/^void Release(void *ctx)$/;"	f
RoQ_AUDIO_SAMPLE_RATE	libavformat/idroq.c	32;"	d	file:
RoQ_CHUNKS_TO_SCAN	libavformat/idroq.c	33;"	d	file:
RoQ_CHUNK_PREAMBLE_SIZE	libavformat/idroq.c	31;"	d	file:
RoQ_ID_CCC	libavcodec/roqvideo.c	75;"	d	file:
RoQ_ID_FCC	libavcodec/roqvideo.c	73;"	d	file:
RoQ_ID_MOT	libavcodec/roqvideo.c	72;"	d	file:
RoQ_ID_SLD	libavcodec/roqvideo.c	74;"	d	file:
RoQ_INFO	libavcodec/roqvideo.c	66;"	d	file:
RoQ_INFO	libavformat/idroq.c	35;"	d	file:
RoQ_MAGIC_NUMBER	libavformat/idroq.c	30;"	d	file:
RoQ_QUAD_CODEBOOK	libavcodec/roqvideo.c	67;"	d	file:
RoQ_QUAD_CODEBOOK	libavformat/idroq.c	36;"	d	file:
RoQ_QUAD_VQ	libavcodec/roqvideo.c	68;"	d	file:
RoQ_QUAD_VQ	libavformat/idroq.c	37;"	d	file:
RoQ_SOUND_MONO	libavcodec/roqvideo.c	69;"	d	file:
RoQ_SOUND_MONO	libavformat/idroq.c	38;"	d	file:
RoQ_SOUND_STEREO	libavcodec/roqvideo.c	70;"	d	file:
RoQ_SOUND_STEREO	libavformat/idroq.c	39;"	d	file:
RoqContext	libavcodec/roqvideo.c	/^typedef struct RoqContext {$/;"	s	file:
RoqContext	libavcodec/roqvideo.c	/^} RoqContext;$/;"	t	file:
RoqDemuxContext	libavformat/idroq.c	/^typedef struct RoqDemuxContext {$/;"	s	file:
RoqDemuxContext	libavformat/idroq.c	/^} RoqDemuxContext;$/;"	t	file:
RowIDCT	libavcodec/i386/vp3dsp_mmx.c	127;"	d	file:
RpzaContext	libavcodec/rpza.c	/^typedef struct RpzaContext {$/;"	s	file:
RpzaContext	libavcodec/rpza.c	/^} RpzaContext;$/;"	t	file:
S	libavcodec/i386/idct_mmx.c	326;"	d	file:
SAB_CHECK_MV	libavcodec/motion_est_template.c	659;"	d	file:
SAME_HEADER_MASK	libavcodec/mpegaudio.h	22;"	d
SAME_HEADER_MASK	libavcodec/parser.c	511;"	d	file:
SAME_HEADER_MASK	libavcodec/parser.c	512;"	d	file:
SAMPLE	libavcodec/liba52/a52_internal.h	129;"	d
SAMPLE	libavcodec/liba52/a52_internal.h	140;"	d
SAMPLES_BUF_SIZE	libavcodec/mpegaudio.c	36;"	d	file:
SAMPLE_ARRAY_SIZE	ffplay.c	77;"	d	file:
SAMPLE_CORRECTION_PERCENT_MAX	ffplay.c	71;"	d	file:
SAMPLE_FACTOR	libavcodec/sonic.c	70;"	d	file:
SAMPLE_FMT_DBL	libavcodec/avcodec.h	/^    SAMPLE_FMT_DBL,             \/\/\/< double$/;"	e	enum:SampleFormat
SAMPLE_FMT_FLT	libavcodec/avcodec.h	/^    SAMPLE_FMT_FLT,             \/\/\/< float$/;"	e	enum:SampleFormat
SAMPLE_FMT_S16	libavcodec/avcodec.h	/^    SAMPLE_FMT_S16 = 0,         \/\/\/< signed 16 bits $/;"	e	enum:SampleFormat
SAMPLE_FMT_S32	libavcodec/avcodec.h	/^    SAMPLE_FMT_S32,             \/\/\/< signed 32 bits $/;"	e	enum:SampleFormat
SAMPLE_SHIFT	libavcodec/sonic.c	68;"	d	file:
SATURATE_S16	libavcodec/dpcm.c	47;"	d	file:
SBLIMIT	libavcodec/mpegaudio.h	14;"	d
SBUTTERFLY	libavcodec/i386/dsputil_mmx.c	1695;"	d	file:
SB_ALLOCATED	libavcodec/mpegaudio.c	497;"	d	file:
SB_FULLY_CODED	libavcodec/vp3.c	159;"	d	file:
SB_NOMORE	libavcodec/mpegaudio.c	498;"	d	file:
SB_NOTALLOCATED	libavcodec/mpegaudio.c	496;"	d	file:
SB_NOT_CODED	libavcodec/vp3.c	157;"	d	file:
SB_PARTIALLY_CODED	libavcodec/vp3.c	158;"	d	file:
SC	libavcodec/dv.c	682;"	d	file:
SCALE	libavcodec/faandct.c	34;"	d	file:
SCALE	libavcodec/faandct.c	36;"	d	file:
SCALE1	libavcodec/adx.c	44;"	d	file:
SCALE2	libavcodec/adx.c	45;"	d	file:
SCALEBITS	ffmpeg.c	2304;"	d	file:
SCALEBITS	libavcodec/imgconvert.c	995;"	d	file:
SCALEBITS	tests/rotozoom.c	34;"	d	file:
SCALEBITS	tests/videogen.c	8;"	d	file:
SCALEBITS	vhook/fish.c	49;"	d	file:
SCALED_CPY	libavcodec/libpostproc/postprocess_template.c	3189;"	d	file:
SCALED_CPY	libavcodec/libpostproc/postprocess_template.c	3257;"	d	file:
SCALEFACTOR	libavcodec/xan.c	62;"	d	file:
SCALER	libavcodec/vp3.c	892;"	d	file:
SCALEX	libavcodec/snow.c	818;"	d	file:
SCALEX	libavcodec/snow.c	851;"	d	file:
SCALEX	libavcodec/snow.c	877;"	d	file:
SCALEX	libavcodec/snow.c	891;"	d	file:
SCALE_GEN	libavcodec/mpegaudiodec.c	190;"	d	file:
SCDl_TAG	libavformat/electronicarts.c	29;"	d	file:
SCEl_TAG	libavformat/electronicarts.c	31;"	d	file:
SCHl_TAG	libavformat/electronicarts.c	27;"	d	file:
SDL_AUDIO_BUFFER_SIZE	ffplay.c	63;"	d	file:
SDL_CFLAGS	config.mak	/^SDL_CFLAGS=-I\/usr\/include\/SDL -D_REENTRANT$/;"	m
SDL_LIBS	config.mak	/^SDL_LIBS=-L\/usr\/lib -Wl,-rpath,\/usr\/lib -lSDL -lpthread$/;"	m
SDPParseState	libavformat/rtsp.c	/^typedef struct SDPParseState {$/;"	s	file:
SDPParseState	libavformat/rtsp.c	/^} SDPParseState;$/;"	t	file:
SDP_MAX_SIZE	libavformat/rtsp.c	1280;"	d	file:
SDT_PID	libavformat/mpegts.h	27;"	d
SDT_RETRANS_TIME	libavformat/mpegtsenc.c	191;"	d	file:
SDT_TID	libavformat/mpegts.h	32;"	d
SEG_MASK	libavcodec/pcm.c	33;"	d	file:
SEG_SHIFT	libavcodec/pcm.c	32;"	d	file:
SEQUENCE_END_CODE	libavformat/mpeg.c	76;"	d	file:
SEQ_END_CODE	libavcodec/mpeg12.c	38;"	d	file:
SEQ_START_CODE	libavcodec/mpeg12.c	39;"	d	file:
SEQ_START_CODE	libavcodec/parser.c	158;"	d	file:
SEQ_START_CODE	libavformat/raw.c	251;"	d	file:
SERIAL_FRAMESIZE	libavcodec/amr.c	113;"	d	file:
SERVER_REFFILE	tests/Makefile	/^SERVER_REFFILE=$(SRC_PATH)\/tests\/ffserver.regression.ref$/;"	m
SET_CMP_FUNC	libavcodec/dsputil.c	3829;"	d	file:
SET_PIXEL	vhook/drawtext.c	76;"	d	file:
SET_QPEL_FUNC	libavcodec/h263dec.c	564;"	d	file:
SET_QPEL_FUNC	libavcodec/i386/dsputil_mmx.c	3109;"	d	file:
SET_RND	libavcodec/i386/dsputil_mmx.c	135;"	d	file:
SET_RND	libavcodec/i386/dsputil_mmx.c	142;"	d	file:
SET_RND	libavcodec/i386/dsputil_mmx.c	149;"	d	file:
SET_RND	libavcodec/i386/dsputil_mmx.c	156;"	d	file:
SE_16BIT	libavcodec/dpcm.c	49;"	d	file:
SGIInfo	libavformat/sgi.c	/^typedef struct SGIInfo{$/;"	s	file:
SGIInfo	libavformat/sgi.c	/^} SGIInfo;$/;"	t	file:
SGI_GRAYSCALE	libavformat/sgi.c	30;"	d	file:
SGI_HEADER_SIZE	libavformat/sgi.c	28;"	d	file:
SGI_MAGIC	libavformat/sgi.c	26;"	d	file:
SGI_MULTI_CHAN	libavformat/sgi.c	35;"	d	file:
SGI_RGB	libavformat/sgi.c	31;"	d	file:
SGI_RGBA	libavformat/sgi.c	32;"	d	file:
SGI_SINGLE_CHAN	libavformat/sgi.c	34;"	d	file:
SHAPE_ID	libavformat/swf.c	55;"	d	file:
SHARED_PP	config.h	13;"	d
SHARED_PP	config.mak	/^SHARED_PP=yes$/;"	m
SHCFLAGS	config.mak	/^SHCFLAGS=-O3 -g -Wall -Wno-switch  -march=pentium4$/;"	m
SHFLAGS	config.mak	/^SHFLAGS=-shared$/;"	m
SHIFT1	libavcodec/snow.c	824;"	d	file:
SHIFT1	libavcodec/snow.c	837;"	d	file:
SHIFT1	libavcodec/snow.c	853;"	d	file:
SHIFT1	libavcodec/snow.c	866;"	d	file:
SHIFT1	libavcodec/snow.c	880;"	d	file:
SHIFT1	libavcodec/snow.c	894;"	d	file:
SHIFT1	libavcodec/snow.c	907;"	d	file:
SHIFT1	libavcodec/snow.c	920;"	d	file:
SHIFT2	libavcodec/snow.c	827;"	d	file:
SHIFT2	libavcodec/snow.c	840;"	d	file:
SHIFT2	libavcodec/snow.c	856;"	d	file:
SHIFT2	libavcodec/snow.c	869;"	d	file:
SHIFT2	libavcodec/snow.c	883;"	d	file:
SHIFT2	libavcodec/snow.c	897;"	d	file:
SHIFT2	libavcodec/snow.c	910;"	d	file:
SHIFT2	libavcodec/snow.c	923;"	d	file:
SHIFT3	libavcodec/snow.c	830;"	d	file:
SHIFT3	libavcodec/snow.c	843;"	d	file:
SHIFT3	libavcodec/snow.c	859;"	d	file:
SHIFT3	libavcodec/snow.c	872;"	d	file:
SHIFT3	libavcodec/snow.c	886;"	d	file:
SHIFT3	libavcodec/snow.c	900;"	d	file:
SHIFT3	libavcodec/snow.c	913;"	d	file:
SHIFT3	libavcodec/snow.c	926;"	d	file:
SHIFT4	libavcodec/snow.c	833;"	d	file:
SHIFT4	libavcodec/snow.c	846;"	d	file:
SHIFT4	libavcodec/snow.c	862;"	d	file:
SHIFT4	libavcodec/snow.c	875;"	d	file:
SHIFT4	libavcodec/snow.c	889;"	d	file:
SHIFT4	libavcodec/snow.c	903;"	d	file:
SHIFT4	libavcodec/snow.c	916;"	d	file:
SHIFT4	libavcodec/snow.c	929;"	d	file:
SHIFT_FRW_COL	libavcodec/i386/fdct_mmx.c	34;"	d	file:
SHIFT_FRW_ROW	libavcodec/i386/fdct_mmx.c	35;"	d	file:
SHIFT_INV_COL	libavcodec/ps2/idct_mmi.c	20;"	d	file:
SHIFT_INV_ROW	libavcodec/ps2/idct_mmi.c	19;"	d	file:
SHIFT_TEMPS	libavcodec/jfdctfst.c	46;"	d	file:
SHIFT_TEMPS	libavcodec/jfdctint.c	36;"	d	file:
SHORT_TERM_BANDWIDTH	ffserver.c	2212;"	d	file:
SHOT_TAG	libavformat/wc3movie.c	41;"	d	file:
SHOW_SBITS	libavcodec/bitstream.h	426;"	d
SHOW_SBITS	libavcodec/bitstream.h	488;"	d
SHOW_SBITS	libavcodec/bitstream.h	553;"	d
SHOW_UBITS	libavcodec/bitstream.h	419;"	d
SHOW_UBITS	libavcodec/bitstream.h	422;"	d
SHOW_UBITS	libavcodec/bitstream.h	485;"	d
SHOW_UBITS	libavcodec/bitstream.h	550;"	d
SIGN	libavcodec/libpostproc/postprocess.c	106;"	d	file:
SIGN_BIT	libavcodec/pcm.c	29;"	d	file:
SIGN_EXTENDED32	libavcodec/alac.c	255;"	d	file:
SIGN_ONLY	libavcodec/alac.c	257;"	d	file:
SIMPLE_CPY	libavcodec/libpostproc/postprocess_template.c	3295;"	d	file:
SIMPLE_IDCT	config.h	34;"	d
SIMPLE_VO_TYPE	libavcodec/mpeg4data.h	12;"	d
SINGLE_PAYLOAD_DATA_LENGTH	libavformat/asf-enc.c	177;"	d	file:
SIZE	libavcodec/cabac.c	152;"	d	file:
SIZE	libavcodec/h264.c	7024;"	d	file:
SIZE	libavcodec/rangecoder.c	138;"	d	file:
SIZE	tests/tiny_psnr.c	26;"	d	file:
SIZE_TAG	libavformat/wc3movie.c	37;"	d	file:
SIZTABLE	libavformat/gifdec.c	26;"	d	file:
SI_TYPE	libavcodec/mpegvideo.h	68;"	d
SKIP_ATOM	qt-faststart.c	54;"	d	file:
SKIP_BITS	libavcodec/bitstream.h	409;"	d
SKIP_BITS	libavcodec/bitstream.h	476;"	d
SKIP_BITS	libavcodec/bitstream.h	541;"	d
SKIP_CACHE	libavcodec/bitstream.h	395;"	d
SKIP_CACHE	libavcodec/bitstream.h	401;"	d
SKIP_CACHE	libavcodec/bitstream.h	470;"	d
SKIP_CACHE	libavcodec/bitstream.h	524;"	d
SKIP_CACHE	libavcodec/bitstream.h	532;"	d
SKIP_COUNTER	libavcodec/bitstream.h	406;"	d
SKIP_COUNTER	libavcodec/bitstream.h	473;"	d
SKIP_COUNTER	libavcodec/bitstream.h	538;"	d
SKIP_TYPE_COL	libavcodec/wmv2.c	30;"	d	file:
SKIP_TYPE_MPEG	libavcodec/wmv2.c	28;"	d	file:
SKIP_TYPE_NONE	libavcodec/wmv2.c	27;"	d	file:
SKIP_TYPE_ROW	libavcodec/wmv2.c	29;"	d	file:
SLIB	libavcodec/Makefile	/^SLIB= $(SLIBPREF)avcodec$(SLIBSUF)$/;"	m
SLIB	libavformat/Makefile	/^SLIB= $(SLIBPREF)avformat$(SLIBSUF)$/;"	m
SLIBPREF	config.mak	/^SLIBPREF=lib$/;"	m
SLIBSUF	config.mak	/^SLIBSUF=${BUILDSUF}.so$/;"	m
SLICE_END	libavcodec/mpegvideo.h	696;"	d
SLICE_ERROR	libavcodec/mpegvideo.h	695;"	d
SLICE_FLAG_ALLOW_FIELD	libavcodec/avcodec.h	1502;"	d
SLICE_FLAG_ALLOW_PLANE	libavcodec/avcodec.h	1503;"	d
SLICE_FLAG_CODED_ORDER	libavcodec/avcodec.h	1501;"	d
SLICE_MAX_START_CODE	libavcodec/mpeg12.c	43;"	d	file:
SLICE_MAX_START_CODE	libavcodec/parser.c	161;"	d	file:
SLICE_MIN_START_CODE	libavcodec/mpeg12.c	42;"	d	file:
SLICE_MIN_START_CODE	libavcodec/parser.c	160;"	d	file:
SLICE_NOEND	libavcodec/mpegvideo.h	697;"	d
SLICE_OK	libavcodec/mpegvideo.h	694;"	d
SND0_TAG	libavformat/westwood.c	44;"	d	file:
SND2_TAG	libavformat/westwood.c	45;"	d	file:
SNR_INC1	libavcodec/ac3enc.c	666;"	d	file:
SOF0	libavcodec/mjpeg.c	/^    SOF0  = 0xc0,	\/* baseline *\/$/;"	e	file:
SOF1	libavcodec/mjpeg.c	/^    SOF1  = 0xc1,	\/* extended sequential, huffman *\/$/;"	e	file:
SOF10	libavcodec/mjpeg.c	/^    SOF10 = 0xca,	\/* progressive, arithmetic *\/$/;"	e	file:
SOF11	libavcodec/mjpeg.c	/^    SOF11 = 0xcb,	\/* lossless, arithmetic *\/$/;"	e	file:
SOF13	libavcodec/mjpeg.c	/^    SOF13 = 0xcd,	\/* differential sequential, arithmetic *\/$/;"	e	file:
SOF14	libavcodec/mjpeg.c	/^    SOF14 = 0xce,	\/* differential progressive, arithmetic *\/$/;"	e	file:
SOF15	libavcodec/mjpeg.c	/^    SOF15 = 0xcf,	\/* differential lossless, arithmetic *\/$/;"	e	file:
SOF2	libavcodec/mjpeg.c	/^    SOF2  = 0xc2,	\/* progressive, huffman *\/$/;"	e	file:
SOF3	libavcodec/mjpeg.c	/^    SOF3  = 0xc3,	\/* lossless, huffman *\/$/;"	e	file:
SOF5	libavcodec/mjpeg.c	/^    SOF5  = 0xc5,	\/* differential sequential, huffman *\/$/;"	e	file:
SOF6	libavcodec/mjpeg.c	/^    SOF6  = 0xc6,	\/* differential progressive, huffman *\/$/;"	e	file:
SOF7	libavcodec/mjpeg.c	/^    SOF7  = 0xc7,	\/* differential lossless, huffman *\/$/;"	e	file:
SOF9	libavcodec/mjpeg.c	/^    SOF9  = 0xc9,	\/* extended sequential, arithmetic *\/$/;"	e	file:
SOI	libavcodec/mjpeg.c	/^    SOI   = 0xd8,	\/* start of image *\/$/;"	e	file:
SOLID_PIXEL_VECTORS	libavcodec/vqavideo.c	81;"	d	file:
SOL_16BIT	libavformat/sol.c	47;"	d	file:
SOL_DPCM	libavformat/sol.c	46;"	d	file:
SOL_STEREO	libavformat/sol.c	48;"	d	file:
SOND_TAG	libavformat/wc3movie.c	35;"	d	file:
SOS	libavcodec/mjpeg.c	/^    SOS   = 0xda,	\/* start of scan *\/$/;"	e	file:
SO_SNDBUF	libavformat/barpainet.h	11;"	d
SP5X_H	libavcodec/sp5x.h	21;"	d
SPPLIB	libavcodec/libpostproc/Makefile	/^SPPLIB = $(SLIBPREF)postproc$(SLIBSUF)$/;"	m
SPPMAJOR	libavcodec/libpostproc/Makefile	/^SPPMAJOR = 0$/;"	m
SPPOBJS	libavcodec/libpostproc/Makefile	/^SPPOBJS=postprocess_pic.o$/;"	m
SPPVERSION	libavcodec/libpostproc/Makefile	/^SPPVERSION = $(SPPMAJOR).0.1$/;"	m
SPREADW	libavcodec/i386/mpegvideo_mmx_template.c	20;"	d	file:
SPREADW	libavcodec/i386/mpegvideo_mmx_template.c	23;"	d	file:
SPREADW	libavcodec/i386/mpegvideo_mmx_template.c	27;"	d	file:
SPRITE_TRAJ_VLC_BITS	libavcodec/h263.c	50;"	d	file:
SPS	libavcodec/h264.c	/^typedef struct SPS{$/;"	s	file:
SPS	libavcodec/h264.c	/^}SPS;$/;"	t	file:
SP_TYPE	libavcodec/mpegvideo.h	69;"	d
SQ	libavcodec/dsputil.c	3523;"	d	file:
SQ	libavcodec/motion_est.c	39;"	d	file:
SQRT2	libavcodec/mpegaudiotab.h	17;"	d
SQRT_2	libavcodec/ppc/fdct_altivec.c	41;"	d	file:
SRCS	Makefile	/^SRCS = $(OBJS:.o=.c) $(ASM_OBJS:.o=.s)$/;"	m
SRCS	libavcodec/Makefile	/^SRCS := $(OBJS:.o=.c) $(ASM_OBJS:.o=.S)$/;"	m
SRCS	libavformat/Makefile	/^SRCS := $(OBJS:.o=.c) $(PPOBJS:.o=.cpp)$/;"	m
SRCS	vhook/Makefile	/^SRCS := $(HOOKS:.so=.c)$/;"	m
SRC_PATH	config.mak	/^SRC_PATH='\/home\/kysucix\/dev\/cvs\/ffmpeg'$/;"	m
SSE2_Column_IDCT	libavcodec/i386/vp3dsp_sse2.c	58;"	d	file:
SSE2_Dequantize	libavcodec/i386/vp3dsp_sse2.c	473;"	d	file:
SSE2_Row_IDCT	libavcodec/i386/vp3dsp_sse2.c	229;"	d	file:
SSE2_Transpose	libavcodec/i386/vp3dsp_sse2.c	387;"	d	file:
SSE2_dequant_const	libavcodec/i386/vp3dsp_sse2.c	/^static unsigned short __align16 SSE2_dequant_const[] =$/;"	v	file:
SSE2_idct_data	libavcodec/i386/vp3dsp_sse2.c	/^static unsigned short __align16 SSE2_idct_data[7 * 8] =$/;"	v	file:
ST32	libavcodec/dsputil.h	503;"	d
ST32	libavcodec/dsputil.h	511;"	d
STAB_TAG	libavformat/segafilm.c	32;"	d	file:
START_TIMER	libavcodec/common.h	499;"	d
START_TIMER	libavcodec/common.h	519;"	d
STATIC_SPRITE	libavcodec/mpeg4data.h	24;"	d
STCO_ATOM	qt-faststart.c	60;"	d	file:
STOP_TIMER	libavcodec/common.h	503;"	d
STOP_TIMER	libavcodec/common.h	520;"	d
STORE	libavcodec/alpha/dsputil_alpha.c	259;"	d	file:
STORE	libavcodec/alpha/dsputil_alpha.c	262;"	d	file:
STORE	libavcodec/alpha/dsputil_alpha.c	263;"	d	file:
STORE	libavcodec/alpha/dsputil_alpha.c	270;"	d	file:
STORE	libavcodec/alpha/dsputil_alpha.c	274;"	d	file:
STORE	libavcodec/alpha/dsputil_alpha.c	277;"	d	file:
STORE	libavcodec/alpha/dsputil_alpha.c	278;"	d	file:
STORE	libavcodec/libpostproc/postprocess_altivec_template.c	488;"	d	file:
STORE4	libavcodec/i386/dsputil_mmx.c	1712;"	d	file:
STORE_DOUBLE_LINE	libavcodec/libpostproc/postprocess_altivec_template.c	1172;"	d	file:
STORE_LINE	libavcodec/libpostproc/postprocess_altivec_template.c	780;"	d	file:
STORE_LINE	libavcodec/libpostproc/postprocess_altivec_template.c	801;"	d	file:
STREAM_DURATION	output_example.c	37;"	d	file:
STREAM_FRAME_RATE	output_example.c	38;"	d	file:
STREAM_NB_FRAMES	output_example.c	39;"	d	file:
STREAM_STARTCODE	libavformat/nut.c	47;"	d	file:
STREAM_TYPE_AUDIO_AAC	libavformat/mpeg.c	100;"	d	file:
STREAM_TYPE_AUDIO_AAC	libavformat/mpegts.h	40;"	d
STREAM_TYPE_AUDIO_AC3	libavformat/mpeg.c	104;"	d	file:
STREAM_TYPE_AUDIO_AC3	libavformat/mpegts.h	44;"	d
STREAM_TYPE_AUDIO_DTS	libavformat/mpeg.c	105;"	d	file:
STREAM_TYPE_AUDIO_DTS	libavformat/mpegts.h	45;"	d
STREAM_TYPE_AUDIO_MPEG1	libavformat/mpeg.c	96;"	d	file:
STREAM_TYPE_AUDIO_MPEG1	libavformat/mpegts.h	36;"	d
STREAM_TYPE_AUDIO_MPEG2	libavformat/mpeg.c	97;"	d	file:
STREAM_TYPE_AUDIO_MPEG2	libavformat/mpegts.h	37;"	d
STREAM_TYPE_LIVE	ffserver.c	/^    STREAM_TYPE_LIVE,$/;"	e	enum:StreamType	file:
STREAM_TYPE_PRIVATE_DATA	libavformat/mpeg.c	99;"	d	file:
STREAM_TYPE_PRIVATE_DATA	libavformat/mpegts.h	39;"	d
STREAM_TYPE_PRIVATE_SECTION	libavformat/mpeg.c	98;"	d	file:
STREAM_TYPE_PRIVATE_SECTION	libavformat/mpegts.h	38;"	d
STREAM_TYPE_REDIRECT	ffserver.c	/^    STREAM_TYPE_REDIRECT,$/;"	e	enum:StreamType	file:
STREAM_TYPE_STATUS	ffserver.c	/^    STREAM_TYPE_STATUS,$/;"	e	enum:StreamType	file:
STREAM_TYPE_VIDEO_H264	libavformat/mpeg.c	102;"	d	file:
STREAM_TYPE_VIDEO_H264	libavformat/mpegts.h	42;"	d
STREAM_TYPE_VIDEO_MPEG1	libavformat/mpeg.c	94;"	d	file:
STREAM_TYPE_VIDEO_MPEG1	libavformat/mpegts.h	34;"	d
STREAM_TYPE_VIDEO_MPEG2	libavformat/mpeg.c	95;"	d	file:
STREAM_TYPE_VIDEO_MPEG2	libavformat/mpegts.h	35;"	d
STREAM_TYPE_VIDEO_MPEG4	libavformat/mpeg.c	101;"	d	file:
STREAM_TYPE_VIDEO_MPEG4	libavformat/mpegts.h	41;"	d
STRIDE_ALIGN	libavcodec/dsputil.h	419;"	d
STRIDE_ALIGN	libavcodec/dsputil.h	429;"	d
STRIDE_ALIGN	libavcodec/dsputil.h	437;"	d
STRIDE_ALIGN	libavcodec/dsputil.h	445;"	d
STRIDE_ALIGN	libavcodec/dsputil.h	451;"	d
STRIDE_ALIGN	libavcodec/dsputil.h	468;"	d
STRIDE_ALIGN	libavcodec/dsputil.h	475;"	d
STRIDE_ALIGN	libavcodec/dsputil.h	482;"	d
STRIDE_ALIGN	libavcodec/dsputil.h	489;"	d
STRIP	config.mak	/^STRIP=strip$/;"	m
STRK_TAG	libavformat/4xm.c	37;"	d	file:
STR_AUDIO	libavformat/psxstr.c	53;"	d	file:
STR_MAGIC	libavformat/psxstr.c	48;"	d	file:
STR_VIDEO	libavformat/psxstr.c	54;"	d	file:
ST_DC	libavcodec/common.h	/^    ST_DC,$/;"	e
ST_INTER_AC	libavcodec/common.h	/^    ST_INTER_AC,$/;"	e
ST_INTER_MB	libavcodec/common.h	/^    ST_INTER_MB,$/;"	e
ST_INTRA_AC	libavcodec/common.h	/^    ST_INTRA_AC,$/;"	e
ST_INTRA_MB	libavcodec/common.h	/^    ST_INTRA_MB,$/;"	e
ST_MV	libavcodec/common.h	/^    ST_MV,$/;"	e
ST_NB	libavcodec/common.h	/^    ST_NB,$/;"	e
ST_UNKNOWN	libavcodec/common.h	/^    ST_UNKNOWN,$/;"	e
SUM	libavcodec/i386/dsputil_mmx.c	1363;"	d	file:
SUM	libavcodec/i386/dsputil_mmx.c	1417;"	d	file:
SUM	libavcodec/i386/dsputil_mmx.c	1425;"	d	file:
SUM	libavcodec/i386/dsputil_mmx.c	1458;"	d	file:
SUM	libavcodec/i386/dsputil_mmx.c	1467;"	d	file:
SUM	libavcodec/i386/dsputil_mmx.c	1537;"	d	file:
SUM	libavcodec/i386/dsputil_mmx.c	1546;"	d	file:
SUM	libavcodec/i386/dsputil_mmx.c	1595;"	d	file:
SUM8	libavcodec/mpegaudiodec.c	808;"	d	file:
SUM8P2	libavcodec/mpegaudiodec.c	820;"	d	file:
SVQ1Context	libavcodec/svq1.c	/^typedef struct SVQ1Context {$/;"	s	file:
SVQ1Context	libavcodec/svq1.c	/^} SVQ1Context;$/;"	t	file:
SVQ1_ADD_CODEBOOK	libavcodec/svq1.c	191;"	d	file:
SVQ1_BLOCK_INTER	libavcodec/svq1.c	61;"	d	file:
SVQ1_BLOCK_INTER_4V	libavcodec/svq1.c	62;"	d	file:
SVQ1_BLOCK_INTRA	libavcodec/svq1.c	63;"	d	file:
SVQ1_BLOCK_SKIP	libavcodec/svq1.c	60;"	d	file:
SVQ1_CALC_CODEBOOK_ENTRIES	libavcodec/svq1.c	240;"	d	file:
SVQ1_DO_CODEBOOK_INTRA	libavcodec/svq1.c	214;"	d	file:
SVQ1_DO_CODEBOOK_NONINTRA	libavcodec/svq1.c	226;"	d	file:
SVQ1_PROCESS_VECTOR	libavcodec/svq1.c	175;"	d	file:
SVQ1_VLC_H	libavcodec/svq1_vlc.h	2;"	d
SWAP	libavcodec/ppc/mpegvideo_altivec.c	32;"	d	file:
SWFContext	libavformat/swf.c	/^} SWFContext;$/;"	t	file:
SWF_VIDEO_CODEC_FLV1	libavformat/swf.c	48;"	d	file:
SYNC_TIMEOUT	ffserver.c	87;"	d	file:
SYSTEM_HEADER_START_CODE	libavformat/mpeg.c	75;"	d	file:
S_TYPE	libavcodec/mpegvideo.h	67;"	d
SampleFormat	libavcodec/avcodec.h	/^enum SampleFormat {$/;"	g
ScanTable	libavcodec/mpegvideo.h	/^typedef struct ScanTable{$/;"	s
ScanTable	libavcodec/mpegvideo.h	/^} ScanTable;$/;"	t
SectionCallback	libavformat/mpegts.c	/^typedef void SectionCallback(void *opaque, const uint8_t *buf, int len);$/;"	t	file:
SectionHeader	libavformat/mpegts.c	/^typedef struct SectionHeader {$/;"	s	file:
SectionHeader	libavformat/mpegts.c	/^} SectionHeader;$/;"	t	file:
SetServiceCallback	libavformat/mpegts.c	/^typedef void SetServiceCallback(void *opaque, int ret);$/;"	t	file:
ShortenContext	libavcodec/shorten.c	/^typedef struct ShortenContext {$/;"	s	file:
ShortenContext	libavcodec/shorten.c	/^} ShortenContext;$/;"	t	file:
SmcContext	libavcodec/smc.c	/^typedef struct SmcContext {$/;"	s	file:
SmcContext	libavcodec/smc.c	/^} SmcContext;$/;"	t	file:
SnowContext	libavcodec/snow.c	/^typedef struct SnowContext{$/;"	s	file:
SnowContext	libavcodec/snow.c	/^}SnowContext;$/;"	t	file:
SonicContext	libavcodec/sonic.c	/^typedef struct SonicContext {$/;"	s	file:
SonicContext	libavcodec/sonic.c	/^} SonicContext;$/;"	t	file:
StrChannel	libavformat/psxstr.c	/^typedef struct StrChannel {$/;"	s	file:
StrChannel	libavformat/psxstr.c	/^} StrChannel;$/;"	t	file:
StrDemuxContext	libavformat/psxstr.c	/^typedef struct StrDemuxContext {$/;"	s	file:
StrDemuxContext	libavformat/psxstr.c	/^} StrDemuxContext;$/;"	t	file:
StreamContext	libavformat/nut.c	/^} StreamContext;$/;"	t	file:
StreamInfo	libavformat/mpeg.c	/^} StreamInfo;$/;"	t	file:
StreamInfo	libavformat/rm.c	/^} StreamInfo;$/;"	t	file:
StreamType	ffserver.c	/^enum StreamType {$/;"	g	file:
SubBand	libavcodec/snow.c	/^typedef struct SubBand{$/;"	s	file:
SubBand	libavcodec/snow.c	/^}SubBand;$/;"	t	file:
T1	libavcodec/i386/idct_mmx.c	393;"	d	file:
T1	libavcodec/i386/idct_mmx.c	533;"	d	file:
T2	libavcodec/i386/idct_mmx.c	394;"	d	file:
T2	libavcodec/i386/idct_mmx.c	534;"	d	file:
T3	libavcodec/i386/idct_mmx.c	395;"	d	file:
T3	libavcodec/i386/idct_mmx.c	535;"	d	file:
TABLE_4_3_SIZE	libavcodec/mpegaudiodec.c	174;"	d	file:
TABLE_SSE2	libavcodec/i386/fdct_mmx.c	143;"	d	file:
TAB_i_04	libavcodec/ps2/idct_mmi.c	30;"	d	file:
TAB_i_17	libavcodec/ps2/idct_mmi.c	31;"	d	file:
TAB_i_26	libavcodec/ps2/idct_mmi.c	32;"	d	file:
TAB_i_35	libavcodec/ps2/idct_mmi.c	33;"	d	file:
TAG_DEFINESHAPE	libavformat/swf.c	29;"	d	file:
TAG_END	libavformat/swf.c	27;"	d	file:
TAG_FREECHARACTER	libavformat/swf.c	30;"	d	file:
TAG_JPEG2	libavformat/swf.c	35;"	d	file:
TAG_LONG	libavformat/swf.c	41;"	d	file:
TAG_PLACEOBJECT	libavformat/swf.c	31;"	d	file:
TAG_PLACEOBJECT2	libavformat/swf.c	36;"	d	file:
TAG_REMOVEOBJECT	libavformat/swf.c	32;"	d	file:
TAG_SHOWFRAME	libavformat/swf.c	28;"	d	file:
TAG_STREAMBLOCK	libavformat/swf.c	34;"	d	file:
TAG_STREAMHEAD	libavformat/swf.c	33;"	d	file:
TAG_STREAMHEAD2	libavformat/swf.c	37;"	d	file:
TAG_VIDEOFRAME	libavformat/swf.c	39;"	d	file:
TAG_VIDEOSTREAM	libavformat/swf.c	38;"	d	file:
TARGET_OS	config.mak	/^TARGET_OS=Linux$/;"	m
TB_NSVF	libavformat/nsvdec.c	136;"	d	file:
TB_NSVS	libavformat/nsvdec.c	137;"	d	file:
TCOEFF_VLC_BITS	libavcodec/h261.c	37;"	d	file:
TCPContext	libavformat/tcp.c	/^typedef struct TCPContext {$/;"	s	file:
TCPContext	libavformat/tcp.c	/^} TCPContext;$/;"	t	file:
TEM	libavcodec/mjpeg.c	/^    TEM   = 0x01,	\/* temporary private use for arithmetic coding *\/$/;"	e	file:
TEMP_NOISE_FILTER	libavcodec/libpostproc/postprocess_internal.h	58;"	d
TEMP_STRIDE	libavcodec/libpostproc/postprocess.c	111;"	d	file:
TEST	Makefile	/^TEST=\/usr\/bin\/test$/;"	m
TEST	Makefile	/^TEST=test$/;"	m
TESTCPU_MAIN	tests/dsptest.c	19;"	d	file:
TESTCPU_MAIN	tests/dsptest.c	36;"	d	file:
TESTS	libavcodec/Makefile	/^TESTS= imgresample-test dct-test motion-test fft-test$/;"	m
TEXT_TAG	libavformat/wc3movie.c	43;"	d	file:
TEX_VLC_BITS	libavcodec/dv.c	50;"	d	file:
TEX_VLC_BITS	libavcodec/h263.c	52;"	d	file:
TEX_VLC_BITS	libavcodec/mpeg12.c	53;"	d	file:
TEX_VLC_BITS	libavcodec/msmpeg4.c	50;"	d	file:
TG1	libavcodec/ps2/idct_mmi.c	22;"	d	file:
TG2	libavcodec/ps2/idct_mmi.c	23;"	d	file:
TG3	libavcodec/ps2/idct_mmi.c	24;"	d	file:
TG_1_16	libavcodec/ps2/idct_mmi.c	35;"	d	file:
TG_2_16	libavcodec/ps2/idct_mmi.c	36;"	d	file:
TG_3_16	libavcodec/ps2/idct_mmi.c	37;"	d	file:
THIRDPEL_MODE	libavcodec/svq3.c	48;"	d	file:
THRESHOLD_MULTIPLIER	libavcodec/svq1.c	925;"	d	file:
TMP0	libavcodec/sparc/dsputil_vis.c	104;"	d	file:
TMP1	libavcodec/sparc/dsputil_vis.c	105;"	d	file:
TMP10	libavcodec/sparc/dsputil_vis.c	115;"	d	file:
TMP12	libavcodec/sparc/dsputil_vis.c	116;"	d	file:
TMP14	libavcodec/sparc/dsputil_vis.c	117;"	d	file:
TMP16	libavcodec/sparc/dsputil_vis.c	118;"	d	file:
TMP18	libavcodec/sparc/dsputil_vis.c	119;"	d	file:
TMP2	libavcodec/sparc/dsputil_vis.c	106;"	d	file:
TMP20	libavcodec/sparc/dsputil_vis.c	120;"	d	file:
TMP22	libavcodec/sparc/dsputil_vis.c	121;"	d	file:
TMP24	libavcodec/sparc/dsputil_vis.c	122;"	d	file:
TMP26	libavcodec/sparc/dsputil_vis.c	123;"	d	file:
TMP28	libavcodec/sparc/dsputil_vis.c	124;"	d	file:
TMP3	libavcodec/sparc/dsputil_vis.c	107;"	d	file:
TMP30	libavcodec/sparc/dsputil_vis.c	125;"	d	file:
TMP32	libavcodec/sparc/dsputil_vis.c	126;"	d	file:
TMP4	libavcodec/sparc/dsputil_vis.c	108;"	d	file:
TMP5	libavcodec/sparc/dsputil_vis.c	109;"	d	file:
TMP6	libavcodec/sparc/dsputil_vis.c	113;"	d	file:
TMP8	libavcodec/sparc/dsputil_vis.c	114;"	d	file:
TOP_DC_PRED	libavcodec/h264data.h	39;"	d
TOP_DC_PRED8x8	libavcodec/h264data.h	49;"	d
TOTAL_ZEROS_VLC_BITS	libavcodec/h264.c	47;"	d	file:
TPEL_WIDTH	libavcodec/dsputil.c	1367;"	d	file:
TRACE	libavcodec/vc9.c	49;"	d	file:
TRANSPOSE4	libavcodec/i386/dsputil_mmx.c	1700;"	d	file:
TRANSPOSE4	libavcodec/ppc/mpegvideo_altivec.c	40;"	d	file:
TRANSPOSE8	libavcodec/ppc/mpegvideo_altivec.c	53;"	d	file:
TRANSP_INDEX	libavcodec/imgconvert.c	1401;"	d	file:
TRK__TAG	libavformat/4xm.c	34;"	d	file:
TRUEMOTION1DATA_H	libavcodec/truemotion1data.h	10;"	d
TS_FEC_PACKET_SIZE	libavformat/mpegts.h	20;"	d
TS_PACKET_SIZE	libavformat/mpegts.h	21;"	d
TUNECPU	config.h	3;"	d
TWOMATRIXES	libavcodec/mjpeg.c	40;"	d	file:
TYPESIZE	libavcodec/shorten.c	44;"	d	file:
TYPE_S16HL	libavcodec/shorten.c	50;"	d	file:
TYPE_S16LH	libavcodec/shorten.c	51;"	d	file:
T_ASYN	libavformat/nsvdec.c	133;"	d	file:
T_KEYF	libavformat/nsvdec.c	134;"	d	file:
T_NONE	libavformat/nsvdec.c	131;"	d	file:
T_NSVF	libavformat/nsvdec.c	128;"	d	file:
T_NSVS	libavformat/nsvdec.c	129;"	d	file:
T_SUBT	libavformat/nsvdec.c	132;"	d	file:
T_TOC2	libavformat/nsvdec.c	130;"	d	file:
TheoraContext	libavcodec/oggtheora.c	/^typedef struct TheoraContext {$/;"	s	file:
TheoraContext	libavcodec/oggtheora.c	/^} TheoraContext;$/;"	t	file:
Theora_decode_end	libavcodec/oggtheora.c	/^Theora_decode_end(AVCodecContext *ctx)$/;"	f	file:
Theora_decode_frame	libavcodec/oggtheora.c	/^Theora_decode_frame(AVCodecContext *ctx, void *outdata, int *outdata_size,$/;"	f	file:
Theora_decode_init	libavcodec/oggtheora.c	/^Theora_decode_init(AVCodecContext *ctx)$/;"	f	file:
ThreadContext	libavcodec/beosthread.c	/^typedef struct ThreadContext{$/;"	s	file:
ThreadContext	libavcodec/beosthread.c	/^}ThreadContext;$/;"	t	file:
ThreadContext	libavcodec/pthread.c	/^typedef struct ThreadContext {$/;"	s	file:
ThreadContext	libavcodec/pthread.c	/^} ThreadContext;$/;"	t	file:
ThreadContext	libavcodec/w32thread.c	/^typedef struct ThreadContext{$/;"	s	file:
ThreadContext	libavcodec/w32thread.c	/^}ThreadContext;$/;"	t	file:
Time2Sample	libavformat/mov.c	/^typedef struct Time2Sample{$/;"	s	file:
Time2Sample	libavformat/mov.c	/^}Time2Sample;$/;"	t	file:
Track	libavformat/matroska.c	/^typedef struct Track {$/;"	s	file:
Transpose	libavcodec/i386/vp3dsp_mmx.c	222;"	d	file:
TrueMotion1Context	libavcodec/truemotion1.c	/^typedef struct TrueMotion1Context {$/;"	s	file:
TrueMotion1Context	libavcodec/truemotion1.c	/^} TrueMotion1Context;$/;"	t	file:
TsccContext	libavcodec/tscc.c	/^typedef struct TsccContext {$/;"	s	file:
UDPContext	libavformat/udp.c	/^} UDPContext;$/;"	t	file:
UDP_TX_BUF_SIZE	libavformat/udp.c	45;"	d	file:
UINT64_MAX	libavcodec/common.h	124;"	d
UINT8	tests/rotozoom.c	/^typedef unsigned char UINT8;$/;"	t	file:
ULONGSIZE	libavcodec/shorten.c	38;"	d	file:
UNALIGNED_STORES_ARE_BAD	libavcodec/bitstream.h	134;"	d
UNI_AC_ENC_INDEX	libavcodec/mpegvideo.h	477;"	d
UNI_MPEG4_ENC_INDEX	libavcodec/h263.c	100;"	d	file:
UNPACK	libavcodec/sh4/dsputil_align.c	29;"	d	file:
UPDATE_CACHE	libavcodec/bitstream.h	392;"	d
UPDATE_CACHE	libavcodec/bitstream.h	398;"	d
UPDATE_CACHE	libavcodec/bitstream.h	452;"	d
UPDATE_CACHE	libavcodec/bitstream.h	461;"	d
UPDATE_CACHE	libavcodec/bitstream.h	514;"	d
UPDATE_LEAK	libavcodec/liba52/bit_allocate.c	98;"	d	file:
URLContext	libavformat/avio.h	/^struct URLContext {$/;"	s
URLContext	libavformat/avio.h	/^typedef struct URLContext URLContext;$/;"	t
URLInterruptCB	libavformat/avio.h	/^typedef int URLInterruptCB(void);$/;"	t
URLPollEntry	libavformat/avio.h	/^typedef struct URLPollEntry {$/;"	s
URLPollEntry	libavformat/avio.h	/^} URLPollEntry;$/;"	t
URLProtocol	libavformat/avio.h	/^typedef struct URLProtocol {$/;"	s
URLProtocol	libavformat/avio.h	/^} URLProtocol;$/;"	t
URL_EOF	libavformat/avio.h	116;"	d
URL_RDONLY	libavformat/avio.h	27;"	d
URL_RDWR	libavformat/avio.h	29;"	d
URL_SIZE	libavformat/http.c	39;"	d	file:
URL_WRONLY	libavformat/avio.h	28;"	d
USER_DATA_STARTCODE	libavcodec/mpeg4data.h	38;"	d
USER_START_CODE	libavcodec/mpeg12.c	45;"	d	file:
USES_LIST	libavcodec/mpegvideo.h	168;"	d
USE_HIGHPRECISION	libavcodec/mpegaudiodec.c	40;"	d	file:
U_B	libavcodec/xan.c	81;"	d	file:
U_G	libavcodec/xan.c	80;"	d	file:
U_R	libavcodec/xan.c	79;"	d	file:
Ubuf	libavcodec/indeo3.c	/^  unsigned char *Ubuf;$/;"	m	file:
UltimotionDecodeContext	libavcodec/ulti.c	/^typedef struct UltimotionDecodeContext {$/;"	s	file:
UltimotionDecodeContext	libavcodec/ulti.c	/^} UltimotionDecodeContext;$/;"	t	file:
V	libavformat/nsvdec.c	371;"	d	file:
V	libavformat/nsvdec.c	386;"	d	file:
V1_INTER_CBPC_VLC_BITS	libavcodec/msmpeg4.c	45;"	d	file:
V1_INTRA_CBPC_VLC_BITS	libavcodec/msmpeg4.c	44;"	d	file:
V2LPCQOFFSET	libavcodec/shorten.c	57;"	d	file:
V2_INTRA_CBPC_VLC_BITS	libavcodec/msmpeg4.c	46;"	d	file:
V2_MB_TYPE_VLC_BITS	libavcodec/msmpeg4.c	47;"	d	file:
V2_MV_VLC_BITS	libavcodec/msmpeg4.c	49;"	d	file:
VC9Context	libavcodec/vc9.c	/^typedef struct VC9Context{$/;"	s	file:
VC9Context	libavcodec/vc9.c	/^} VC9Context;$/;"	t	file:
VC9DATA_H	libavcodec/vc9data.h	7;"	d
VC9_4MV_BLOCK_PATTERN_VLC_BITS	libavcodec/vc9.c	171;"	d	file:
VC9_BFRACTION_VLC_BITS	libavcodec/vc9.c	156;"	d	file:
VC9_CBPCY_P_VLC_BITS	libavcodec/vc9.c	169;"	d	file:
VC9_IMODE_VLC_BITS	libavcodec/vc9.c	158;"	d	file:
VC9_MV_DIFF_VLC_BITS	libavcodec/vc9.c	167;"	d	file:
VC9_NORM2_VLC_BITS	libavcodec/vc9.c	160;"	d	file:
VC9_NORM6_VLC_BITS	libavcodec/vc9.c	162;"	d	file:
VC9_SUBBLKPAT_VLC_BITS	libavcodec/vc9.c	175;"	d	file:
VC9_TTBLK_VLC_BITS	libavcodec/vc9.c	173;"	d	file:
VC9_TTMB_VLC_BITS	libavcodec/vc9.c	165;"	d	file:
VCR1Context	libavcodec/vcr1.c	/^typedef struct VCR1Context{$/;"	s	file:
VCR1Context	libavcodec/vcr1.c	/^} VCR1Context;$/;"	t	file:
VERBATIM_BYTE_SIZE	libavcodec/shorten.c	72;"	d	file:
VERBATIM_CKSIZE_SIZE	libavcodec/shorten.c	71;"	d	file:
VERSION	config.mak	/^VERSION=0.4.9-pre1$/;"	m
VERT_LEFT_PRED	libavcodec/h264data.h	35;"	d
VERT_PRED	libavcodec/h264data.h	28;"	d
VERT_PRED8x8	libavcodec/h264data.h	45;"	d
VERT_RIGHT_PRED	libavcodec/h264data.h	33;"	d
VGA__TAG	libavformat/wc3movie.c	42;"	d	file:
VHOOK	Makefile	/^VHOOK=videohook$/;"	m
VIDEO_DATA_CHUNK_SIZE	libavformat/psxstr.c	39;"	d	file:
VIDEO_DATA_HEADER_SIZE	libavformat/psxstr.c	40;"	d	file:
VIDEO_ID	libavformat/mpeg.c	89;"	d	file:
VIDEO_ID	libavformat/swf.c	54;"	d	file:
VIDEO_PICTURE_QUEUE_SIZE	ffplay.c	88;"	d	file:
VISUAL_OBJ_STARTCODE	libavcodec/mpeg4data.h	40;"	d
VIS_GSR_ALIGNADDR_MASK	libavcodec/sparc/vis.h	150;"	d
VIS_GSR_ALIGNADDR_SHIFT	libavcodec/sparc/vis.h	151;"	d
VIS_GSR_SCALEFACT_MASK	libavcodec/sparc/vis.h	152;"	d
VIS_GSR_SCALEFACT_SHIFT	libavcodec/sparc/vis.h	153;"	d
VLC	libavcodec/bitstream.h	/^typedef struct VLC {$/;"	s
VLC	libavcodec/bitstream.h	/^} VLC;$/;"	t
VLC_BITS	libavcodec/asv1.c	32;"	d	file:
VLC_BITS	libavcodec/huffyuv.c	34;"	d	file:
VLC_TYPE	libavcodec/bitstream.h	119;"	d
VMD_HEADER_SIZE	libavcodec/vmdav.c	50;"	d	file:
VMD_HEADER_SIZE	libavformat/sierravmd.c	30;"	d	file:
VOP_STARTCODE	libavcodec/mpeg4data.h	41;"	d
VOS_STARTCODE	libavcodec/mpeg4data.h	37;"	d
VObj	tests/videogen.c	/^typedef struct VObj {$/;"	s	file:
VObj	tests/videogen.c	/^} VObj;$/;"	t	file:
VP3DATA_H	libavcodec/vp3data.h	2;"	d
VPATH	Makefile	/^VPATH=$(SRC_PATH)$/;"	m
VPATH	doc/Makefile	/^VPATH=$(SRC_PATH)\/doc$/;"	m
VPATH	libavcodec/Makefile	/^VPATH=$(SRC_PATH)\/libavcodec$/;"	m
VPATH	libavcodec/libpostproc/Makefile	/^VPATH=$(SRC_PATH)\/libavcodec\/libpostproc$/;"	m
VPATH	libavformat/Makefile	/^VPATH=$(SRC_PATH)\/libavformat$/;"	m
VPATH	tests/Makefile	/^VPATH=$(SRC_PATH)\/tests$/;"	m
VPATH	vhook/Makefile	/^VPATH=$(SRC_PATH)\/vhook$/;"	m
VPTZ_TAG	libavcodec/vqavideo.c	91;"	d	file:
VP_START	libavcodec/mpegvideo.h	522;"	d
VQA_DEBUG	libavcodec/vqavideo.c	93;"	d	file:
VQA_FRAMERATE	libavformat/westwood.c	57;"	d	file:
VQA_HEADER_SIZE	libavcodec/vqavideo.c	75;"	d	file:
VQA_HEADER_SIZE	libavformat/westwood.c	56;"	d	file:
VQA_PREAMBLE_SIZE	libavformat/westwood.c	59;"	d	file:
VQA_VIDEO_PTS_INC	libavformat/westwood.c	58;"	d	file:
VQFR_TAG	libavformat/westwood.c	46;"	d	file:
VQHD_TAG	libavformat/westwood.c	42;"	d	file:
VTRK_TAG	libavformat/4xm.c	36;"	d	file:
V_A_DEBLOCK	libavcodec/libpostproc/postprocess_internal.h	40;"	d
V_B	libavcodec/xan.c	85;"	d	file:
V_DEBLOCK	libavcodec/libpostproc/postprocess_internal.h	24;"	d
V_DEBUG	libavcodec/vorbis.c	22;"	d	file:
V_G	libavcodec/xan.c	84;"	d	file:
V_MAX_VLCS	libavcodec/vorbis.c	34;"	d	file:
V_NB_BITS	libavcodec/vorbis.c	33;"	d	file:
V_R	libavcodec/xan.c	83;"	d	file:
V_X1_FILTER	libavcodec/libpostproc/postprocess_internal.h	39;"	d
Vbuf	libavcodec/indeo3.c	/^  unsigned char *Vbuf;$/;"	m	file:
VideoData	libavformat/grab.c	/^} VideoData;$/;"	t	file:
VideoData	libavformat/img.c	/^} VideoData;$/;"	t	file:
VideoData	libavformat/img2.c	/^} VideoData;$/;"	t	file:
VideoPicture	ffplay.c	/^typedef struct VideoPicture {$/;"	s	file:
VideoPicture	ffplay.c	/^} VideoPicture;$/;"	t	file:
VideoState	ffplay.c	/^typedef struct VideoState {$/;"	s	file:
VideoState	ffplay.c	/^} VideoState;$/;"	t	file:
VideoXLContext	libavcodec/xl.c	/^typedef struct VideoXLContext{$/;"	s	file:
VideoXLContext	libavcodec/xl.c	/^} VideoXLContext;$/;"	t	file:
VlcState	libavcodec/ffv1.c	/^typedef struct VlcState{$/;"	s	file:
VlcState	libavcodec/ffv1.c	/^} VlcState;$/;"	t	file:
VmdAudioContext	libavcodec/vmdav.c	/^typedef struct VmdAudioContext {$/;"	s	file:
VmdAudioContext	libavcodec/vmdav.c	/^} VmdAudioContext;$/;"	t	file:
VmdDemuxContext	libavformat/sierravmd.c	/^typedef struct VmdDemuxContext {$/;"	s	file:
VmdDemuxContext	libavformat/sierravmd.c	/^} VmdDemuxContext;$/;"	t	file:
VmdVideoContext	libavcodec/vmdav.c	/^typedef struct VmdVideoContext {$/;"	s	file:
VmdVideoContext	libavcodec/vmdav.c	/^} VmdVideoContext;$/;"	t	file:
Vp3DecodeContext	libavcodec/vp3.c	/^typedef struct Vp3DecodeContext {$/;"	s	file:
Vp3DecodeContext	libavcodec/vp3.c	/^} Vp3DecodeContext;$/;"	t	file:
Vp3Fragment	libavcodec/vp3.c	/^typedef struct Vp3Fragment {$/;"	s	file:
Vp3Fragment	libavcodec/vp3.c	/^} Vp3Fragment;$/;"	t	file:
VqaContext	libavcodec/vqavideo.c	/^typedef struct VqaContext {$/;"	s	file:
VqaContext	libavcodec/vqavideo.c	/^} VqaContext;$/;"	t	file:
W	libavcodec/g726.c	/^	int* W;               \/**< special table #1 ;-) *\/$/;"	m	struct:G726Tables	file:
W	tests/rotozoom.c	223;"	d	file:
W0	libavcodec/ppc/fdct_altivec.c	44;"	d	file:
W1	libavcodec/alpha/simple_idct_alpha.c	38;"	d	file:
W1	libavcodec/armv4l/simple_idct_arm.S	/^#define W1  22725$/;"	d
W1	libavcodec/ppc/fdct_altivec.c	45;"	d	file:
W1	libavcodec/simple_idct.c	35;"	d	file:
W1	libavcodec/simple_idct.c	45;"	d	file:
W2	libavcodec/alpha/simple_idct_alpha.c	39;"	d	file:
W2	libavcodec/armv4l/simple_idct_arm.S	/^#define W2  21407$/;"	d
W2	libavcodec/ppc/fdct_altivec.c	46;"	d	file:
W2	libavcodec/simple_idct.c	36;"	d	file:
W2	libavcodec/simple_idct.c	46;"	d	file:
W3	libavcodec/alpha/simple_idct_alpha.c	40;"	d	file:
W3	libavcodec/armv4l/simple_idct_arm.S	/^#define W3  19266$/;"	d
W3	libavcodec/ppc/fdct_altivec.c	47;"	d	file:
W3	libavcodec/simple_idct.c	37;"	d	file:
W3	libavcodec/simple_idct.c	47;"	d	file:
W4	libavcodec/alpha/simple_idct_alpha.c	41;"	d	file:
W4	libavcodec/armv4l/simple_idct_arm.S	/^#define W4  16383$/;"	d
W4	libavcodec/ppc/fdct_altivec.c	48;"	d	file:
W4	libavcodec/simple_idct.c	38;"	d	file:
W4	libavcodec/simple_idct.c	48;"	d	file:
W5	libavcodec/alpha/simple_idct_alpha.c	42;"	d	file:
W5	libavcodec/armv4l/simple_idct_arm.S	/^#define W5  12873$/;"	d
W5	libavcodec/ppc/fdct_altivec.c	49;"	d	file:
W5	libavcodec/simple_idct.c	39;"	d	file:
W5	libavcodec/simple_idct.c	49;"	d	file:
W6	libavcodec/alpha/simple_idct_alpha.c	43;"	d	file:
W6	libavcodec/armv4l/simple_idct_arm.S	/^#define W6  8867$/;"	d
W6	libavcodec/ppc/fdct_altivec.c	50;"	d	file:
W6	libavcodec/simple_idct.c	40;"	d	file:
W6	libavcodec/simple_idct.c	50;"	d	file:
W7	libavcodec/alpha/simple_idct_alpha.c	44;"	d	file:
W7	libavcodec/armv4l/simple_idct_arm.S	/^#define W7  4520$/;"	d
W7	libavcodec/ppc/fdct_altivec.c	51;"	d	file:
W7	libavcodec/simple_idct.c	41;"	d	file:
W7	libavcodec/simple_idct.c	51;"	d	file:
W8	libavcodec/ppc/fdct_altivec.c	52;"	d	file:
W9	libavcodec/ppc/fdct_altivec.c	53;"	d	file:
WA	libavcodec/ppc/fdct_altivec.c	54;"	d	file:
WARPER8_16	libavcodec/dsputil.h	569;"	d
WARPER8_16_SQ	libavcodec/dsputil.h	575;"	d
WAVContext	libavformat/wav.c	/^} WAVContext;$/;"	t	file:
WAVE_FORMAT_PCM	libavcodec/shorten.c	40;"	d	file:
WB	libavcodec/ppc/fdct_altivec.c	55;"	d	file:
WC3_AUDIO_BITS	libavformat/wc3movie.c	53;"	d	file:
WC3_AUDIO_CHANNELS	libavformat/wc3movie.c	52;"	d	file:
WC3_DEFAULT_HEIGHT	libavformat/wc3movie.c	48;"	d	file:
WC3_DEFAULT_WIDTH	libavformat/wc3movie.c	47;"	d	file:
WC3_FRAME_PTS_INC	libavformat/wc3movie.c	56;"	d	file:
WC3_PREAMBLE_SIZE	libavformat/wc3movie.c	30;"	d	file:
WC3_SAMPLE_RATE	libavformat/wc3movie.c	51;"	d	file:
WFRAC_BITS	libavcodec/mpegaudio.c	32;"	d	file:
WFRAC_BITS	libavcodec/mpegaudiodec.c	45;"	d	file:
WFRAC_BITS	libavcodec/mpegaudiodec.c	48;"	d	file:
WIDE_ATOM	qt-faststart.c	55;"	d	file:
WIDTH	libavcodec/motion_test.c	32;"	d	file:
WIN32_LEAN_AND_MEAN	libavcodec/w32thread.c	24;"	d	file:
WMADecodeContext	libavcodec/wmadec.c	/^typedef struct WMADecodeContext {$/;"	s	file:
WMADecodeContext	libavcodec/wmadec.c	/^} WMADecodeContext;$/;"	t	file:
WMV1_SCANTABLE_COUNT	libavcodec/msmpeg4data.h	1821;"	d
WMV2_INTER_CBP_TABLE_COUNT	libavcodec/msmpeg4data.h	1878;"	d
WNV1Context	libavcodec/wnv1.c	/^typedef struct WNV1Context{$/;"	s	file:
WNV1Context	libavcodec/wnv1.c	/^} WNV1Context;$/;"	t	file:
WORD_0	libavcodec/ppc/dsputil_altivec.h	59;"	d
WORD_1	libavcodec/ppc/dsputil_altivec.h	60;"	d
WORD_2	libavcodec/ppc/dsputil_altivec.h	61;"	d
WORD_3	libavcodec/ppc/dsputil_altivec.h	62;"	d
WORD_VEC	libavcodec/alpha/asm.h	/^static inline uint64_t WORD_VEC(uint64_t x)$/;"	f
WORD_s0	libavcodec/ppc/dsputil_altivec.h	63;"	d
WORD_s1	libavcodec/ppc/dsputil_altivec.h	64;"	d
WORD_s2	libavcodec/ppc/dsputil_altivec.h	65;"	d
WORD_s3	libavcodec/ppc/dsputil_altivec.h	66;"	d
WSHIFT	libavcodec/mpegaudio.c	308;"	d	file:
WSSNDContext	libavcodec/ws-snd1.c	/^} WSSNDContext;$/;"	t	file:
WVQA_TAG	libavformat/westwood.c	41;"	d	file:
W_AM	libavcodec/snow.c	1099;"	d	file:
W_AM	libavcodec/snow.c	1116;"	d	file:
W_AM	libavcodec/snow.c	1132;"	d	file:
W_AM	libavcodec/snow.c	1150;"	d	file:
W_AO	libavcodec/snow.c	1100;"	d	file:
W_AO	libavcodec/snow.c	1117;"	d	file:
W_AO	libavcodec/snow.c	1133;"	d	file:
W_AO	libavcodec/snow.c	1151;"	d	file:
W_AS	libavcodec/snow.c	1101;"	d	file:
W_AS	libavcodec/snow.c	1118;"	d	file:
W_AS	libavcodec/snow.c	1134;"	d	file:
W_AS	libavcodec/snow.c	1152;"	d	file:
W_BM	libavcodec/snow.c	1104;"	d	file:
W_BM	libavcodec/snow.c	1120;"	d	file:
W_BM	libavcodec/snow.c	1136;"	d	file:
W_BM	libavcodec/snow.c	1154;"	d	file:
W_BO	libavcodec/snow.c	1105;"	d	file:
W_BO	libavcodec/snow.c	1121;"	d	file:
W_BO	libavcodec/snow.c	1137;"	d	file:
W_BO	libavcodec/snow.c	1155;"	d	file:
W_BS	libavcodec/snow.c	1106;"	d	file:
W_BS	libavcodec/snow.c	1122;"	d	file:
W_BS	libavcodec/snow.c	1138;"	d	file:
W_BS	libavcodec/snow.c	1156;"	d	file:
W_CM	libavcodec/snow.c	1108;"	d	file:
W_CM	libavcodec/snow.c	1124;"	d	file:
W_CM	libavcodec/snow.c	1140;"	d	file:
W_CM	libavcodec/snow.c	1158;"	d	file:
W_CO	libavcodec/snow.c	1109;"	d	file:
W_CO	libavcodec/snow.c	1125;"	d	file:
W_CO	libavcodec/snow.c	1141;"	d	file:
W_CO	libavcodec/snow.c	1159;"	d	file:
W_CS	libavcodec/snow.c	1110;"	d	file:
W_CS	libavcodec/snow.c	1126;"	d	file:
W_CS	libavcodec/snow.c	1142;"	d	file:
W_CS	libavcodec/snow.c	1160;"	d	file:
W_DM	libavcodec/snow.c	1112;"	d	file:
W_DM	libavcodec/snow.c	1128;"	d	file:
W_DM	libavcodec/snow.c	1144;"	d	file:
W_DM	libavcodec/snow.c	1162;"	d	file:
W_DO	libavcodec/snow.c	1113;"	d	file:
W_DO	libavcodec/snow.c	1129;"	d	file:
W_DO	libavcodec/snow.c	1145;"	d	file:
W_DO	libavcodec/snow.c	1163;"	d	file:
W_DS	libavcodec/snow.c	1114;"	d	file:
W_DS	libavcodec/snow.c	1130;"	d	file:
W_DS	libavcodec/snow.c	1146;"	d	file:
W_DS	libavcodec/snow.c	1164;"	d	file:
W_tbl16	libavcodec/g726.c	/^static int W_tbl16[] = $/;"	v	file:
W_tbl24	libavcodec/g726.c	/^static int W_tbl24[] = $/;"	v	file:
W_tbl32	libavcodec/g726.c	/^static int W_tbl32[] = $/;"	v	file:
W_tbl40	libavcodec/g726.c	/^static int W_tbl40[] = $/;"	v	file:
Wc3DemuxContext	libavformat/wc3movie.c	/^typedef struct Wc3DemuxContext {$/;"	s	file:
Wc3DemuxContext	libavformat/wc3movie.c	/^} Wc3DemuxContext;$/;"	t	file:
Wmv2Context	libavcodec/wmv2.c	/^typedef struct Wmv2Context{$/;"	s	file:
Wmv2Context	libavcodec/wmv2.c	/^}Wmv2Context;$/;"	t	file:
WsAudDemuxContext	libavformat/westwood.c	/^typedef struct WsAudDemuxContext {$/;"	s	file:
WsAudDemuxContext	libavformat/westwood.c	/^} WsAudDemuxContext;$/;"	t	file:
WsVqaDemuxContext	libavformat/westwood.c	/^typedef struct WsVqaDemuxContext {$/;"	s	file:
WsVqaDemuxContext	libavformat/westwood.c	/^} WsVqaDemuxContext;$/;"	t	file:
X264Context	libavcodec/x264.c	/^typedef struct X264Context {$/;"	s	file:
X264Context	libavcodec/x264.c	/^} X264Context;$/;"	t	file:
X264_close	libavcodec/x264.c	/^X264_close(AVCodecContext *avctx)$/;"	f	file:
X264_frame	libavcodec/x264.c	/^X264_frame(AVCodecContext *ctx, uint8_t *buf, int bufsize, void *data)$/;"	f
X264_init	libavcodec/x264.c	/^X264_init(AVCodecContext *avctx)$/;"	f
X264_log	libavcodec/x264.c	/^X264_log(void *p, int level, const char *fmt, va_list args)$/;"	f	file:
XCHG	libavcodec/h264.c	2806;"	d	file:
XCHG	libavcodec/h264.c	2887;"	d	file:
XSIZE	libavcodec/imgresample.c	634;"	d	file:
XSIZE1	libavcodec/imgresample.c	639;"	d	file:
XVMC_decode_mb	libavcodec/xvmcvideo.c	/^void XVMC_decode_mb(MpegEncContext *s){$/;"	f
XVMC_field_end	libavcodec/xvmcvideo.c	/^void XVMC_field_end(MpegEncContext *s){$/;"	f
XVMC_field_start	libavcodec/xvmcvideo.c	/^int XVMC_field_start(MpegEncContext*s, AVCodecContext *avctx){$/;"	f
XVMC_init_block	libavcodec/xvmcvideo.c	/^inline void XVMC_init_block(MpegEncContext *s){$/;"	f
XVMC_pack_pblocks	libavcodec/xvmcvideo.c	/^void XVMC_pack_pblocks(MpegEncContext *s, int cbp){$/;"	f
XanContext	libavcodec/xan.c	/^typedef struct XanContext {$/;"	s	file:
XanContext	libavcodec/xan.c	/^} XanContext;$/;"	t	file:
Y4M_FRAME_MAGIC	libavformat/yuv4mpeg.c	22;"	d	file:
Y4M_LINE_MAX	libavformat/yuv4mpeg.c	23;"	d	file:
Y4M_MAGIC	libavformat/yuv4mpeg.c	21;"	d	file:
YSIZE	libavcodec/imgresample.c	635;"	d	file:
YSIZE1	libavcodec/imgresample.c	640;"	d	file:
YUVBufs	libavcodec/indeo3.c	/^} YUVBufs;$/;"	t	file:
YUV_TO_RGB1	libavcodec/imgconvert.c	1017;"	d	file:
YUV_TO_RGB1_CCIR	libavcodec/imgconvert.c	999;"	d	file:
YUV_TO_RGB1_CCIR	vhook/fish.c	53;"	d	file:
YUV_TO_RGB2	libavcodec/imgconvert.c	1026;"	d	file:
YUV_TO_RGB2_CCIR	libavcodec/imgconvert.c	1009;"	d	file:
YUV_TO_RGB2_CCIR	vhook/fish.c	63;"	d	file:
Y_B	libavcodec/xan.c	77;"	d	file:
Y_CCIR_TO_JPEG	libavcodec/imgconvert.c	1034;"	d	file:
Y_G	libavcodec/xan.c	76;"	d	file:
Y_JPEG_TO_CCIR	libavcodec/imgconvert.c	1037;"	d	file:
Y_R	libavcodec/xan.c	75;"	d	file:
Ybuf	libavcodec/indeo3.c	/^  unsigned char *Ybuf;$/;"	m	file:
ZERO	libavcodec/sparc/dsputil_vis.c	110;"	d	file:
Z_COND_IDCT	libavcodec/i386/simple_idct_mmx.c	557;"	d	file:
Z_THRESHOLD	libavcodec/motion_est.c	543;"	d	file:
_3g2_oformat	libavformat/movenc.c	/^static AVOutputFormat _3g2_oformat = {$/;"	v	file:
_3gp_oformat	libavformat/movenc.c	/^static AVOutputFormat _3gp_oformat = {$/;"	v	file:
_4XMV_TAG	libavformat/4xm.c	31;"	d	file:
_CMD_UTILS_H	cmdutils.h	2;"	d
_CachedImage	vhook/imlib2.c	/^typedef struct _CachedImage {$/;"	s	file:
_DSPUTIL_ALTIVEC_	libavcodec/ppc/dsputil_altivec.h	22;"	d
_DSPUTIL_PPC_	libavcodec/ppc/dsputil_ppc.h	20;"	d
_DV_1394_H	libavformat/dv1394.h	27;"	d
_FRAMEHOOK_H	libavformat/framehook.h	2;"	d
_FrameHookEntry	libavformat/framehook.c	/^typedef struct _FrameHookEntry {$/;"	s	file:
_GCC_FIXES_	libavcodec/ppc/gcc_fixes.h	8;"	d
_ISOC9X_SOURCE	libavcodec/dsputil.h	613;"	d
_LINUX_TIME_H	libavformat/grab.c	25;"	d	file:
_OS_SUPPORT_H	libavformat/os_support.h	2;"	d
_PC__TAG	libavformat/wc3movie.c	34;"	d	file:
_TAG	libavformat/electronicarts.c	32;"	d	file:
__BSWAP_H__	libavcodec/bswap.h	7;"	d
__MANGLE_H	libavcodec/libpostproc/mangle.h	8;"	d
__a_evaluation	libavcodec/armv4l/simple_idct_arm.S	/^__a_evaluation:$/;"	l
__a_evaluation2	libavcodec/armv4l/simple_idct_arm.S	/^__a_evaluation2:$/;"	l
__align16	libavcodec/dsputil.h	387;"	d
__align8	libavcodec/dsputil.h	418;"	d
__align8	libavcodec/dsputil.h	428;"	d
__align8	libavcodec/dsputil.h	436;"	d
__align8	libavcodec/dsputil.h	444;"	d
__align8	libavcodec/dsputil.h	450;"	d
__align8	libavcodec/dsputil.h	467;"	d
__align8	libavcodec/dsputil.h	474;"	d
__align8	libavcodec/dsputil.h	481;"	d
__align8	libavcodec/dsputil.h	488;"	d
__align8	libavcodec/h264.c	/^    DCTELEM mb[16*24] __align8;$/;"	m	struct:H264Context	file:
__align8	libavcodec/h264.c	/^    int16_t     mvd_cache[2][5*8][2] __align8;$/;"	m	struct:H264Context	file:
__align8	libavcodec/h264.c	/^    int16_t mv_cache[2][5*8][2] __align8;$/;"	m	struct:H264Context	file:
__align8	libavcodec/h264.c	/^    int8_t ref_cache[2][5*8] __align8;$/;"	m	struct:H264Context	file:
__align8	libavcodec/h264.c	/^    uint8_t non_zero_count_cache[6*8] __align8;$/;"	m	struct:H264Context	file:
__align8	libavcodec/i386/dsputil_mmx.c	/^static const uint64_t sixtyfour __align8 = 0x0040004000400040ULL;$/;"	v	file:
__align8	libavcodec/i386/dsputil_mmx.c	/^static const uint64_t thirtytwo __align8 = 0x0020002000200020ULL;$/;"	v	file:
__align8	libavcodec/imgresample.c	/^    int16_t h_filters[NB_PHASES][NB_TAPS] __align8; \/* horizontal filters *\/$/;"	m	struct:ImgReSampleContext	file:
__align8	libavcodec/imgresample.c	/^    int16_t v_filters[NB_PHASES][NB_TAPS] __align8; \/* vertical filters *\/$/;"	m	struct:ImgReSampleContext	file:
__align8	libavcodec/mjpeg.c	/^    DCTELEM block[64] __align8;$/;"	m	struct:MJpegDecodeContext	file:
__align8	libavcodec/wmv2.c	/^    DCTELEM abt_block2[6][64] __align8;$/;"	m	struct:Wmv2Context	file:
__almost_empty_row	libavcodec/armv4l/simple_idct_arm.S	/^__almost_empty_row:$/;"	l
__b_evaluation	libavcodec/armv4l/simple_idct_arm.S	/^__b_evaluation:$/;"	l
__b_evaluation2	libavcodec/armv4l/simple_idct_arm.S	/^__b_evaluation2:$/;"	l
__col_loop	libavcodec/armv4l/simple_idct_arm.S	/^__col_loop:$/;"	l
__constant_ptr__	libavcodec/armv4l/simple_idct_arm.S	/^__constant_ptr__:  @@ see #defines at the beginning of the source code for values.$/;"	l
__dynarray_add	libavformat/cutils.c	/^void __dynarray_add(unsigned long **tab_ptr, int *nb_ptr, unsigned long elem)$/;"	f
__end_a_evaluation	libavcodec/armv4l/simple_idct_arm.S	/^__end_a_evaluation:$/;"	l
__end_a_evaluation2	libavcodec/armv4l/simple_idct_arm.S	/^__end_a_evaluation2:$/;"	l
__end_b_evaluation	libavcodec/armv4l/simple_idct_arm.S	/^__end_b_evaluation:$/;"	l
__end_b_evaluation2	libavcodec/armv4l/simple_idct_arm.S	/^__end_b_evaluation2:$/;"	l
__end_bef_a_evaluation	libavcodec/armv4l/simple_idct_arm.S	/^__end_bef_a_evaluation:$/;"	l
__end_col_loop	libavcodec/armv4l/simple_idct_arm.S	/^__end_col_loop:$/;"	l
__end_row_loop	libavcodec/armv4l/simple_idct_arm.S	/^__end_row_loop:$/;"	l
__end_simple_idct_ARM	libavcodec/armv4l/simple_idct_arm.S	/^__end_simple_idct_ARM:$/;"	l
__mmi_H	libavcodec/ps2/mmi.h	2;"	d
__row_loop	libavcodec/armv4l/simple_idct_arm.S	/^__row_loop:$/;"	l
a	libavcodec/g726.c	/^	 int a[2];            \/**< second order predictor coeffs *\/$/;"	m	struct:G726Context	file:
a0	libavcodec/alpha/regdef.h	25;"	d
a1	libavcodec/alpha/regdef.h	26;"	d
a2	libavcodec/alpha/regdef.h	27;"	d
a3	libavcodec/alpha/regdef.h	28;"	d
a4	libavcodec/alpha/regdef.h	29;"	d
a5	libavcodec/alpha/regdef.h	30;"	d
a52_bit_allocate	libavcodec/liba52/bit_allocate.c	/^void a52_bit_allocate (a52_state_t * state, ba_t * ba, int bndstart,$/;"	f
a52_bitstream_get_bh	libavcodec/liba52/bitstream.c	/^uint32_t a52_bitstream_get_bh (a52_state_t * state, uint32_t num_bits)$/;"	f
a52_bitstream_get_bh_2	libavcodec/liba52/bitstream.c	/^int32_t a52_bitstream_get_bh_2 (a52_state_t * state, uint32_t num_bits)$/;"	f
a52_bitstream_set_ptr	libavcodec/liba52/bitstream.c	/^void a52_bitstream_set_ptr (a52_state_t * state, uint8_t * buf)$/;"	f
a52_block	libavcodec/a52dec.c	/^    int (*a52_block)(a52_state_t * state);$/;"	m	struct:AC3DecodeState	file:
a52_block	libavcodec/liba52/parse.c	/^int a52_block (a52_state_t * state)$/;"	f
a52_crc16_block	libavcodec/liba52/crc.c	/^uint16_t a52_crc16_block(uint8_t *data,uint32_t num_bytes)$/;"	f
a52_decode_end	libavcodec/a52dec.c	/^static int a52_decode_end(AVCodecContext *avctx)$/;"	f	file:
a52_decode_frame	libavcodec/a52dec.c	/^static int a52_decode_frame(AVCodecContext *avctx,$/;"	f	file:
a52_decode_init	libavcodec/a52dec.c	/^static int a52_decode_init(AVCodecContext *avctx)$/;"	f	file:
a52_downmix	libavcodec/liba52/downmix.c	/^void a52_downmix (sample_t * samples, int acmod, int output, sample_t bias,$/;"	f
a52_downmix_coeff	libavcodec/liba52/downmix.c	/^int a52_downmix_coeff (level_t * coeff, int acmod, int output, level_t level,$/;"	f
a52_downmix_init	libavcodec/liba52/downmix.c	/^int a52_downmix_init (int input, int flags, level_t * level,$/;"	f
a52_dynrng	libavcodec/a52dec.c	/^    void (*a52_dynrng)(a52_state_t * state,$/;"	m	struct:AC3DecodeState	file:
a52_dynrng	libavcodec/liba52/parse.c	/^void a52_dynrng (a52_state_t * state,$/;"	f
a52_frame	libavcodec/a52dec.c	/^    int (*a52_frame)(a52_state_t * state, uint8_t * buf, int * flags,$/;"	m	struct:AC3DecodeState	file:
a52_frame	libavcodec/liba52/parse.c	/^int a52_frame (a52_state_t * state, uint8_t * buf, int * flags,$/;"	f
a52_free	libavcodec/a52dec.c	/^    void (*a52_free)(a52_state_t * state);$/;"	m	struct:AC3DecodeState	file:
a52_free	libavcodec/liba52/parse.c	/^void a52_free (a52_state_t * state)$/;"	f
a52_imdct_256	libavcodec/liba52/imdct.c	/^void a52_imdct_256 (sample_t * data, sample_t * delay, sample_t bias)$/;"	f
a52_imdct_512	libavcodec/liba52/imdct.c	/^void a52_imdct_512 (sample_t * data, sample_t * delay, sample_t bias)$/;"	f
a52_imdct_init	libavcodec/liba52/imdct.c	/^void a52_imdct_init (uint32_t mm_accel)$/;"	f
a52_imdct_window	libavcodec/liba52/imdct.c	/^static sample_t a52_imdct_window[256];$/;"	v	file:
a52_init	libavcodec/a52dec.c	/^    a52_state_t* (*a52_init)(uint32_t mm_accel);$/;"	m	struct:AC3DecodeState	file:
a52_init	libavcodec/liba52/parse.c	/^a52_state_t * a52_init (uint32_t mm_accel)$/;"	f
a52_resample	libavcodec/liba52/resample.c	/^int (* a52_resample) (float * _f, int16_t * s16)=NULL;$/;"	v
a52_resample_2F_2R_LFE_to_6_C	libavcodec/liba52/resample_c.c	/^static int a52_resample_2F_2R_LFE_to_6_C(float * _f, int16_t * s16){$/;"	f	file:
a52_resample_2F_2R_LFE_to_6_MMX	libavcodec/liba52/resample_mmx.c	/^static int a52_resample_2F_2R_LFE_to_6_MMX(float * _f, int16_t * s16){$/;"	f	file:
a52_resample_2F_2R_to_4_C	libavcodec/liba52/resample_c.c	/^static int a52_resample_2F_2R_to_4_C(float * _f, int16_t * s16){$/;"	f	file:
a52_resample_2F_2R_to_4_MMX	libavcodec/liba52/resample_mmx.c	/^static int a52_resample_2F_2R_to_4_MMX(float * _f, int16_t * s16){$/;"	f	file:
a52_resample_3F_2R_LFE_to_6_C	libavcodec/liba52/resample_c.c	/^static int a52_resample_3F_2R_LFE_to_6_C(float * _f, int16_t * s16){$/;"	f	file:
a52_resample_3F_2R_LFE_to_6_MMX	libavcodec/liba52/resample_mmx.c	/^static int a52_resample_3F_2R_LFE_to_6_MMX(float * _f, int16_t * s16){$/;"	f	file:
a52_resample_3F_2R_to_5_C	libavcodec/liba52/resample_c.c	/^static int a52_resample_3F_2R_to_5_C(float * _f, int16_t * s16){$/;"	f	file:
a52_resample_3F_2R_to_5_MMX	libavcodec/liba52/resample_mmx.c	/^static int a52_resample_3F_2R_to_5_MMX(float * _f, int16_t * s16){$/;"	f	file:
a52_resample_3F_LFE_to_6_C	libavcodec/liba52/resample_c.c	/^static int a52_resample_3F_LFE_to_6_C(float * _f, int16_t * s16){$/;"	f	file:
a52_resample_3F_LFE_to_6_MMX	libavcodec/liba52/resample_mmx.c	/^static int a52_resample_3F_LFE_to_6_MMX(float * _f, int16_t * s16){$/;"	f	file:
a52_resample_3F_to_5_C	libavcodec/liba52/resample_c.c	/^static int a52_resample_3F_to_5_C(float * _f, int16_t * s16){$/;"	f	file:
a52_resample_3F_to_5_MMX	libavcodec/liba52/resample_mmx.c	/^static int a52_resample_3F_to_5_MMX(float * _f, int16_t * s16){$/;"	f	file:
a52_resample_C	libavcodec/liba52/resample_c.c	/^static void* a52_resample_C(int flags, int ch){$/;"	f	file:
a52_resample_MMX	libavcodec/liba52/resample_mmx.c	/^static void* a52_resample_MMX(int flags, int ch){$/;"	f	file:
a52_resample_MONO_LFE_to_6_C	libavcodec/liba52/resample_c.c	/^static int a52_resample_MONO_LFE_to_6_C(float * _f, int16_t * s16){$/;"	f	file:
a52_resample_MONO_LFE_to_6_MMX	libavcodec/liba52/resample_mmx.c	/^static int a52_resample_MONO_LFE_to_6_MMX(float * _f, int16_t * s16){$/;"	f	file:
a52_resample_MONO_to_1_C	libavcodec/liba52/resample_c.c	/^static int a52_resample_MONO_to_1_C(float * _f, int16_t * s16){$/;"	f	file:
a52_resample_MONO_to_5_C	libavcodec/liba52/resample_c.c	/^static int a52_resample_MONO_to_5_C(float * _f, int16_t * s16){$/;"	f	file:
a52_resample_MONO_to_5_MMX	libavcodec/liba52/resample_mmx.c	/^static int a52_resample_MONO_to_5_MMX(float * _f, int16_t * s16){$/;"	f	file:
a52_resample_STEREO_LFE_to_6_C	libavcodec/liba52/resample_c.c	/^static int a52_resample_STEREO_LFE_to_6_C(float * _f, int16_t * s16){$/;"	f	file:
a52_resample_STEREO_LFE_to_6_MMX	libavcodec/liba52/resample_mmx.c	/^static int a52_resample_STEREO_LFE_to_6_MMX(float * _f, int16_t * s16){$/;"	f	file:
a52_resample_STEREO_to_2_C	libavcodec/liba52/resample_c.c	/^static int a52_resample_STEREO_to_2_C(float * _f, int16_t * s16){$/;"	f	file:
a52_resample_STEREO_to_2_MMX	libavcodec/liba52/resample_mmx.c	/^static int a52_resample_STEREO_to_2_MMX(float * _f, int16_t * s16){$/;"	f	file:
a52_resample_init	libavcodec/liba52/resample.c	/^void* a52_resample_init(uint32_t mm_accel,int flags,int chans){$/;"	f
a52_samples	libavcodec/a52dec.c	/^    sample_t* (*a52_samples)(a52_state_t * state);$/;"	m	struct:AC3DecodeState	file:
a52_samples	libavcodec/liba52/parse.c	/^sample_t * a52_samples (a52_state_t * state)$/;"	f
a52_state_s	libavcodec/liba52/a52_internal.h	/^struct a52_state_s {$/;"	s
a52_state_t	libavcodec/liba52/a52.h	/^typedef struct a52_state_s a52_state_t;$/;"	t
a52_syncinfo	libavcodec/a52dec.c	/^    int (*a52_syncinfo)(uint8_t * buf, int * flags,$/;"	m	struct:AC3DecodeState	file:
a52_syncinfo	libavcodec/liba52/parse.c	/^int a52_syncinfo (uint8_t * buf, int * flags,$/;"	f
a52_upmix	libavcodec/liba52/downmix.c	/^void a52_upmix (sample_t * samples, int acmod, int output)$/;"	f
aanscales	libavcodec/dct-test.c	/^static const unsigned short aanscales[64] = {$/;"	v	file:
aanscales	libavcodec/mpegvideo.c	/^static const uint16_t aanscales[64] = {$/;"	v	file:
aasc_decode_end	libavcodec/aasc.c	/^static int aasc_decode_end(AVCodecContext *avctx)$/;"	f	file:
aasc_decode_frame	libavcodec/aasc.c	/^static int aasc_decode_frame(AVCodecContext *avctx,$/;"	f	file:
aasc_decode_init	libavcodec/aasc.c	/^static int aasc_decode_init(AVCodecContext *avctx)$/;"	f	file:
aasc_decoder	libavcodec/aasc.c	/^AVCodec aasc_decoder = {$/;"	v
abort_request	ffplay.c	/^    int abort_request;$/;"	m	struct:PacketQueue	file:
abort_request	ffplay.c	/^    int abort_request;$/;"	m	struct:VideoState	file:
abt_flag	libavcodec/wmv2.c	/^    int abt_flag;$/;"	m	struct:Wmv2Context	file:
abt_scantable	libavcodec/wmv2.c	/^    ScanTable abt_scantable[2];$/;"	m	struct:Wmv2Context	file:
abt_type	libavcodec/wmv2.c	/^    int abt_type;$/;"	m	struct:Wmv2Context	file:
abt_type_table	libavcodec/wmv2.c	/^    int abt_type_table[6];$/;"	m	struct:Wmv2Context	file:
abv	libavformat/utils.c	/^    const char *abv;$/;"	m	file:
abytes	libavformat/dv.c	/^    uint64_t         abytes;$/;"	m	struct:DVDemuxContext	file:
ac	libavcodec/ffv1.c	/^    int ac;                              \/\/\/< 1-> CABAC 0-> golomb rice$/;"	m	struct:FFV1Context	file:
ac3_5p1_mux	libavcodec/resample.c	/^static void ac3_5p1_mux(short *output, short *input1, short *input2, int n)$/;"	f	file:
ac3_bitratetab	libavcodec/ac3tab.h	/^static const uint16_t ac3_bitratetab[19] = {$/;"	v
ac3_common_init	libavcodec/ac3enc.c	/^void ac3_common_init(void)$/;"	f
ac3_crc	libavcodec/ac3enc.c	/^static unsigned int ac3_crc(uint8_t *data, int n, unsigned int crc)$/;"	f	file:
ac3_crc_init	libavcodec/ac3enc.c	/^static void ac3_crc_init(void)$/;"	f	file:
ac3_decode_end	libavcodec/ac3dec.c	/^static int ac3_decode_end(AVCodecContext *s)$/;"	f	file:
ac3_decode_frame	libavcodec/ac3dec.c	/^static int ac3_decode_frame(AVCodecContext *avctx, $/;"	f	file:
ac3_decode_init	libavcodec/ac3dec.c	/^static int ac3_decode_init(AVCodecContext *avctx)$/;"	f	file:
ac3_decoder	libavcodec/a52dec.c	/^AVCodec ac3_decoder = {$/;"	v
ac3_decoder	libavcodec/ac3dec.c	/^AVCodec ac3_decoder = {$/;"	v
ac3_encoder	libavcodec/ac3enc.c	/^AVCodec ac3_encoder = {$/;"	v
ac3_freqs	libavcodec/ac3tab.h	/^static const uint16_t ac3_freqs[3] = { 48000, 44100, 32000 };$/;"	v
ac3_iformat	libavformat/raw.c	/^AVInputFormat ac3_iformat = {$/;"	v
ac3_oformat	libavformat/raw.c	/^AVOutputFormat ac3_oformat = {$/;"	v
ac3_parametric_bit_allocation	libavcodec/ac3enc.c	/^void ac3_parametric_bit_allocation(AC3BitAllocParameters *s, uint8_t *bap,$/;"	f
ac3_parse	libavcodec/parser.c	/^static int ac3_parse(AVCodecParserContext *s1,$/;"	f	file:
ac3_parse_init	libavcodec/parser.c	/^static int ac3_parse_init(AVCodecParserContext *s1)$/;"	f	file:
ac3_parser	libavcodec/parser.c	/^AVCodecParser ac3_parser = {$/;"	v
ac3_read_header	libavformat/raw.c	/^static int ac3_read_header(AVFormatContext *s,$/;"	f	file:
ac3_window	libavcodec/ac3tab.h	/^static const int16_t ac3_window[256] = {$/;"	v
ac_bias_0	libavcodec/vp3data.h	/^static const uint16_t ac_bias_0[16][32][2] = {$/;"	v
ac_bias_1	libavcodec/vp3data.h	/^static const uint16_t ac_bias_1[16][32][2] = {$/;"	v
ac_bias_2	libavcodec/vp3data.h	/^static const uint16_t ac_bias_2[16][32][2] = {$/;"	v
ac_bias_3	libavcodec/vp3data.h	/^static const uint16_t ac_bias_3[16][32][2] = {$/;"	v
ac_ccp_tab	libavcodec/asv1.c	/^static const uint8_t ac_ccp_tab[16][2]={$/;"	v	file:
ac_ccp_vlc	libavcodec/asv1.c	/^static VLC ac_ccp_vlc;$/;"	v	file:
ac_esc_length	libavcodec/mpegvideo.h	/^    int ac_esc_length;       \/\/\/< num of bits needed to encode the longest esc $/;"	m	struct:MpegEncContext
ac_index	libavcodec/mjpeg.c	/^    int ac_index[MAX_COMPONENTS];$/;"	m	struct:MJpegDecodeContext	file:
ac_pred	libavcodec/mpegvideo.h	/^    int ac_pred;$/;"	m	struct:MpegEncContext
ac_pred_plane	libavcodec/vc9.c	/^    BitPlane ac_pred_plane;       \/\/\/< AC prediction flags bitplane$/;"	m	struct:VC9Context	file:
ac_stats	libavcodec/mpegvideo.h	/^    int (*ac_stats)[2][MAX_LEVEL+1][MAX_RUN+1][2];$/;"	m	struct:MpegEncContext
ac_val	libavcodec/mpegvideo.h	/^    int16_t (*ac_val[3])[16];      \/\/\/< used for for mpeg4 AC prediction, all 3 arrays must be continuous $/;"	m	struct:MpegEncContext
ac_val_base	libavcodec/mpegvideo.h	/^    int16_t (*ac_val_base)[16];$/;"	m	struct:MpegEncContext
ac_vlc_1	libavcodec/vp3.c	/^    VLC ac_vlc_1[16];$/;"	m	struct:Vp3DecodeContext	file:
ac_vlc_2	libavcodec/vp3.c	/^    VLC ac_vlc_2[16];$/;"	m	struct:Vp3DecodeContext	file:
ac_vlc_3	libavcodec/vp3.c	/^    VLC ac_vlc_3[16];$/;"	m	struct:Vp3DecodeContext	file:
ac_vlc_4	libavcodec/vp3.c	/^    VLC ac_vlc_4[16];$/;"	m	struct:Vp3DecodeContext	file:
ach	libavformat/dv.c	/^    int              ach;$/;"	m	struct:DVDemuxContext	file:
acl	ffserver.c	/^    IPAddressACL *acl;$/;"	m	struct:FFStream	file:
acmod	libavcodec/ac3enc.c	/^    unsigned int acmod;$/;"	m	struct:AC3EncodeContext	file:
acmod	libavcodec/liba52/a52_internal.h	/^    uint8_t acmod;		\/* coded channels *\/$/;"	m	struct:a52_state_s
action	ffserver.c	/^    enum IPAddressAction action;$/;"	m	struct:IPAddressACL	file:
action_t	libavcodec/pthread.c	/^typedef int (action_t)(AVCodecContext *c, void *arg);$/;"	t	file:
active_frame	libavformat/dv1394.h	/^	int active_frame;$/;"	m	struct:dv1394_status
adaptive_quant	libavcodec/mpegvideo.h	/^    int adaptive_quant;         \/\/\/< use adaptive quantization $/;"	m	struct:MpegEncContext
adaptive_quantization	libavcodec/ratecontrol.c	/^static void adaptive_quantization(MpegEncContext *s, double q){$/;"	f	file:
add_8x8basis	libavcodec/dsputil.h	/^    void (*add_8x8basis)(int16_t rem[64], int16_t basis[64], int scale);$/;"	m	struct:DSPContext
add_8x8basis_c	libavcodec/dsputil.c	/^static void add_8x8basis_c(int16_t rem[64], int16_t basis[64], int scale){$/;"	f	file:
add_8x8basis_mmx	libavcodec/i386/dsputil_mmx.c	/^static void add_8x8basis_mmx(int16_t rem[64], int16_t basis[64], int scale){$/;"	f	file:
add_audio_stream	output_example.c	/^AVStream *add_audio_stream(AVFormatContext *oc, int codec_id)$/;"	f
add_av_stream	ffserver.c	/^static int add_av_stream(FFStream *feed, AVStream *st)$/;"	f	file:
add_av_stream1	ffserver.c	/^static AVStream *add_av_stream1(FFStream *stream, AVCodecContext *codec)$/;"	f	file:
add_bytes	libavcodec/dsputil.h	/^    void (*add_bytes)(uint8_t *dst\/*align 16*\/, uint8_t *src\/*align 16*\/, int w);$/;"	m	struct:DSPContext
add_bytes_altivec	libavcodec/ppc/dsputil_altivec.c	/^void add_bytes_altivec(uint8_t *dst, uint8_t *src, int w) {$/;"	f
add_bytes_c	libavcodec/dsputil.c	/^static void add_bytes_c(uint8_t *dst, uint8_t *src, int w){$/;"	f	file:
add_bytes_mmx	libavcodec/i386/dsputil_mmx.c	/^static void add_bytes_mmx(uint8_t *dst, uint8_t *src, int w){$/;"	f	file:
add_codec	ffserver.c	/^static void add_codec(FFStream *stream, AVCodecContext *av)$/;"	f	file:
add_dct	libavcodec/mpegvideo.c	/^static inline void add_dct(MpegEncContext *s, $/;"	f	file:
add_dequant_dct	libavcodec/mpegvideo.c	/^static inline void add_dequant_dct(MpegEncContext *s, $/;"	f	file:
add_footnote	doc/texi2pod.pl	/^sub add_footnote$/;"	s
add_frame_hooker	ffmpeg.c	/^static void add_frame_hooker(const char *arg)$/;"	f	file:
add_left_prediction	libavcodec/huffyuv.c	/^static inline int add_left_prediction(uint8_t *dst, uint8_t *src, int w, int acc){$/;"	f	file:
add_left_prediction_bgr32	libavcodec/huffyuv.c	/^static inline void add_left_prediction_bgr32(uint8_t *dst, uint8_t *src, int w, int *red, int *green, int *blue){$/;"	f	file:
add_median_prediction	libavcodec/huffyuv.c	/^static inline void add_median_prediction(uint8_t *dst, uint8_t *src1, uint8_t *diff, int w, int *left, int *left_top){$/;"	f	file:
add_pes_stream	libavformat/mpegts.c	/^static int add_pes_stream(MpegTSContext *ts, int pid, int stream_type)$/;"	f	file:
add_pixels_clamped	libavcodec/dsputil.h	/^    void (*add_pixels_clamped)(const DCTELEM *block\/*align 16*\/, uint8_t *pixels\/*align 8*\/, int line_size);$/;"	m	struct:DSPContext
add_pixels_clamped2_c	libavcodec/dsputil.c	/^static void add_pixels_clamped2_c(const DCTELEM *block, uint8_t *restrict pixels,$/;"	f	file:
add_pixels_clamped4_c	libavcodec/dsputil.c	/^static void add_pixels_clamped4_c(const DCTELEM *block, uint8_t *restrict pixels,$/;"	f	file:
add_pixels_clamped_axp_p	libavcodec/alpha/dsputil_alpha.c	/^void (*add_pixels_clamped_axp_p)(const DCTELEM *block, uint8_t *pixels, $/;"	v
add_pixels_clamped_c	libavcodec/dsputil.c	/^static void add_pixels_clamped_c(const DCTELEM *block, uint8_t *restrict pixels,$/;"	f	file:
add_pixels_clamped_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void add_pixels_clamped_mlib(const DCTELEM *block, uint8_t *pixels, int line_size)$/;"	f	file:
add_pixels_clamped_mmx	libavcodec/i386/dsputil_mmx.c	/^void add_pixels_clamped_mmx(const DCTELEM *block, uint8_t *pixels, int line_size)$/;"	f
add_pixels_clamped_mvi_asm	libavcodec/alpha/dsputil_alpha_asm.S	/^add_pixels_clamped_mvi_asm:$/;"	l
add_video_stream	output_example.c	/^AVStream *add_video_stream(AVFormatContext *oc, int codec_id)$/;"	f
add_wav	libavcodec/ra144.c	/^static void add_wav(Real144_internal *glob, int n, int f, int m1, int m2, int m3, short *s1, short *s2, short *s3, short *dest)$/;"	f	file:
add_yblock_buffered	libavcodec/snow.c	/^static always_inline void add_yblock_buffered(SnowContext *s, slice_buffer * sb, DWTELEM *old_dst, uint8_t *dst8, uint8_t *src, uint8_t *obmc, int src_x, int src_y, int b_w, int b_h, int w, int h, int dst_stride, int src_stride, int obmc_stride, int b_x, int b_y, int add, int plane_index){$/;"	f	file:
adjust_write_index	libavformat/ffm.c	/^static void adjust_write_index(AVFormatContext *s)$/;"	f	file:
adpcm	libavformat/4xm.c	/^    int adpcm;$/;"	m	struct:AudioTrack	file:
adpcm_ct_expand_nibble	libavcodec/adpcm.c	/^static inline short adpcm_ct_expand_nibble(ADPCMChannelStatus *c, char nibble)$/;"	f	file:
adpcm_decode_frame	libavcodec/adpcm.c	/^static int adpcm_decode_frame(AVCodecContext *avctx,$/;"	f	file:
adpcm_decode_init	libavcodec/adpcm.c	/^static int adpcm_decode_init(AVCodecContext * avctx)$/;"	f	file:
adpcm_encode_close	libavcodec/adpcm.c	/^static int adpcm_encode_close(AVCodecContext *avctx)$/;"	f	file:
adpcm_encode_frame	libavcodec/adpcm.c	/^static int adpcm_encode_frame(AVCodecContext *avctx,$/;"	f	file:
adpcm_encode_init	libavcodec/adpcm.c	/^static int adpcm_encode_init(AVCodecContext *avctx)$/;"	f	file:
adpcm_g726_decoder	libavcodec/g726.c	/^AVCodec adpcm_g726_decoder = {$/;"	v
adpcm_g726_encoder	libavcodec/g726.c	/^AVCodec adpcm_g726_encoder = {$/;"	v
adpcm_ima_compress_sample	libavcodec/adpcm.c	/^static inline unsigned char adpcm_ima_compress_sample(ADPCMChannelStatus *c, short sample)$/;"	f	file:
adpcm_ima_expand_nibble	libavcodec/adpcm.c	/^static inline short adpcm_ima_expand_nibble(ADPCMChannelStatus *c, char nibble, int shift)$/;"	f	file:
adpcm_ms_compress_sample	libavcodec/adpcm.c	/^static inline unsigned char adpcm_ms_compress_sample(ADPCMChannelStatus *c, short sample)$/;"	f	file:
adpcm_ms_expand_nibble	libavcodec/adpcm.c	/^static inline short adpcm_ms_expand_nibble(ADPCMChannelStatus *c, char nibble)$/;"	f	file:
adu_mode	libavcodec/mpegaudiodec.c	/^    int adu_mode; \/\/\/< 0 for standard mp3, 1 for adu formatted mp3$/;"	m	struct:MPADecodeContext	file:
advance	vhook/drawtext.c	/^  int        advance[ 255 ];$/;"	m	file:
advanced_decode_i_mbs	libavcodec/vc9.c	/^static int advanced_decode_i_mbs(VC9Context *v)$/;"	f	file:
advanced_decode_picture_primary_header	libavcodec/vc9.c	/^static int advanced_decode_picture_primary_header(VC9Context *v)$/;"	f	file:
advanced_decode_picture_secondary_header	libavcodec/vc9.c	/^static int advanced_decode_picture_secondary_header(VC9Context *v)$/;"	f	file:
advanced_entry_point_process	libavcodec/vc9.c	/^static int advanced_entry_point_process(AVCodecContext *avctx, GetBitContext *gb)$/;"	f	file:
adx_adpcm_decoder	libavcodec/adx.c	/^AVCodec adx_adpcm_decoder = {$/;"	v
adx_adpcm_encoder	libavcodec/adx.c	/^AVCodec adx_adpcm_encoder = {$/;"	v
adx_decode	libavcodec/adx.c	/^static void adx_decode(short *out,const unsigned char *in,PREV *prev)$/;"	f	file:
adx_decode_frame	libavcodec/adx.c	/^static int adx_decode_frame(AVCodecContext *avctx,$/;"	f	file:
adx_decode_header	libavcodec/adx.c	/^static int adx_decode_header(AVCodecContext *avctx,const unsigned char *buf,size_t bufsize)$/;"	f	file:
adx_decode_init	libavcodec/adx.c	/^static int adx_decode_init(AVCodecContext * avctx)$/;"	f	file:
adx_decode_stereo	libavcodec/adx.c	/^static void adx_decode_stereo(short *out,const unsigned char *in,PREV *prev)$/;"	f	file:
adx_encode	libavcodec/adx.c	/^static void adx_encode(unsigned char *adx,const short *wav,PREV *prev)$/;"	f	file:
adx_encode_close	libavcodec/adx.c	/^static int adx_encode_close(AVCodecContext *avctx)$/;"	f	file:
adx_encode_frame	libavcodec/adx.c	/^static int adx_encode_frame(AVCodecContext *avctx,$/;"	f	file:
adx_encode_header	libavcodec/adx.c	/^static int adx_encode_header(AVCodecContext *avctx,unsigned char *buf,size_t bufsize)$/;"	f	file:
adx_encode_init	libavcodec/adx.c	/^static int adx_encode_init(AVCodecContext *avctx)$/;"	f	file:
ahead	libavformat/nsvdec.c	/^    AVPacket ahead[2]; \/* [v, a] if .data is !NULL there is something *\/$/;"	m	file:
aiw_close	libavformat/grab.c	/^static int aiw_close(VideoData *s)$/;"	f	file:
aiw_enabled	libavformat/grab.c	/^    int aiw_enabled;$/;"	m	file:
aiw_init	libavformat/grab.c	/^static int aiw_init(VideoData *s)$/;"	f	file:
aiw_read_picture	libavformat/grab.c	/^static int aiw_read_picture(VideoData *s, uint8_t *data)$/;"	f	file:
alac_decode_close	libavcodec/alac.c	/^static int alac_decode_close(AVCodecContext *avctx)$/;"	f	file:
alac_decode_frame	libavcodec/alac.c	/^static int alac_decode_frame(AVCodecContext *avctx,$/;"	f	file:
alac_decode_init	libavcodec/alac.c	/^static int alac_decode_init(AVCodecContext * avctx)$/;"	f	file:
alac_decoder	libavcodec/alac.c	/^AVCodec alac_decoder = {$/;"	v
alac_set_info	libavcodec/alac.c	/^void alac_set_info(ALACContext *alac)$/;"	f
alaw2linear	libavcodec/pcm.c	/^static int alaw2linear(unsigned char	a_val)$/;"	f	file:
album	libavformat/avformat.h	/^    char album[512];$/;"	m	struct:AVFormatContext
algorithm	libavcodec/truemotion1.c	/^    int algorithm;$/;"	m	struct:comp_types	file:
align16	libavcodec/ps2/idct_mmi.c	/^static short consttable[] align16 = {$/;"	v	file:
align16	libavcodec/ps2/mmi.h	4;"	d
align_get_bits	libavcodec/bitstream.c	/^void align_get_bits(GetBitContext *s)$/;"	f
align_iframe	libavformat/mpeg.c	/^    int align_iframe;$/;"	m	file:
align_put_bits	libavcodec/bitstream.c	/^void align_put_bits(PutBitContext *s)$/;"	f
all_fragments	libavcodec/vp3.c	/^    Vp3Fragment *all_fragments;$/;"	m	struct:Vp3DecodeContext	file:
alloc_bitplane	libavcodec/vc9.c	/^int alloc_bitplane(BitPlane *bp, int width, int height)$/;"	f
alloc_blocks	libavcodec/snow.c	/^static int alloc_blocks(SnowContext *s){$/;"	f	file:
alloc_cb	libavformat/jpeg.c	/^    int (*alloc_cb)(void *opaque, AVImageInfo *info);$/;"	m	struct:JpegOpaque	file:
alloc_picture	ffplay.c	/^static void alloc_picture(void *opaque)$/;"	f	file:
alloc_picture	libavcodec/mpegvideo.c	/^static int alloc_picture(MpegEncContext *s, Picture *pic, int shared){$/;"	f	file:
alloc_picture	output_example.c	/^AVFrame *alloc_picture(int pix_fmt, int width, int height)$/;"	f
alloc_table	libavcodec/bitstream.c	/^static int alloc_table(VLC *vlc, int size, int use_static)$/;"	f	file:
alloc_table	libavcodec/mpegaudio.c	/^    const unsigned char *alloc_table;$/;"	m	struct:MpegAudioContext	file:
alloc_table_0	libavcodec/mpegaudiodectab.h	/^static const unsigned char alloc_table_0[] = {$/;"	v
alloc_table_1	libavcodec/mpegaudiodectab.h	/^static const unsigned char alloc_table_1[] = {$/;"	v
alloc_table_2	libavcodec/mpegaudiodectab.h	/^static const unsigned char alloc_table_2[] = {$/;"	v
alloc_table_3	libavcodec/mpegaudiodectab.h	/^static const unsigned char alloc_table_3[] = {$/;"	v
alloc_table_4	libavcodec/mpegaudiodectab.h	/^static const unsigned char alloc_table_4[] = {$/;"	v
alloc_tables	libavcodec/h264.c	/^static int alloc_tables(H264Context *h){$/;"	f	file:
alloc_tables	libavcodec/mpegaudiodectab.h	/^const unsigned char *alloc_tables[5] = $/;"	v
alloc_temp	libavcodec/huffyuv.c	/^static void alloc_temp(HYuvContext *s){$/;"	f	file:
allocate_buffers	libavcodec/alac.c	/^static void allocate_buffers(ALACContext *alac)$/;"	f	file:
allocate_buffers	libavcodec/flac.c	/^static void allocate_buffers(FLACContext *s){$/;"	f	file:
allocate_buffers	libavcodec/shorten.c	/^static void allocate_buffers(ShortenContext *s)$/;"	f	file:
allocated	ffplay.c	/^    int allocated;$/;"	m	struct:VideoPicture	file:
allocated_bitstream_buffer_size	libavcodec/mpegvideo.h	/^    int allocated_bitstream_buffer_size;$/;"	m	struct:MpegEncContext
allocated_bitstream_size	libavcodec/flac.c	/^    int allocated_bitstream_size;$/;"	m	struct:FLACContext	file:
allocated_bitstream_size	libavcodec/shorten.c	/^    int allocated_bitstream_size;$/;"	m	struct:ShortenContext	file:
allocated_edge_emu_buffer	libavcodec/mpegvideo.h	/^    uint8_t *allocated_edge_emu_buffer;$/;"	m	struct:MpegEncContext
allocated_size	libavcodec/4xm.c	/^    int allocated_size;$/;"	m	struct:CFrameBuffer	file:
allocated_size	libavformat/aviobuf.c	/^    int pos, size, allocated_size;$/;"	m	struct:DynBuffer	file:
allocated_static	libavcodec/utils.c	/^static unsigned int allocated_static = 0;$/;"	v	file:
allow_dtx	libavcodec/amr.c	/^    Word16 allow_dtx;$/;"	m	struct:AMRWBContext	file:
alpha_regdef_h	libavcodec/alpha/regdef.h	3;"	d
alpha_table	libavcodec/h264data.h	/^static const int alpha_table[52] = {$/;"	v
alt_inter_vlc	libavcodec/mpegvideo.h	/^    int alt_inter_vlc;              \/\/\/< alternative inter vlc$/;"	m	struct:MpegEncContext
alternate_scan	libavcodec/mpegvideo.h	/^    int alternate_scan;$/;"	m	struct:MpegEncContext
altivec_avg_h264_chroma_mc8_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_avg_h264_chroma_mc8_num,$/;"	e	enum:powerpc_perf_index
altivec_avg_h264_qpel16_h_lowpass_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_avg_h264_qpel16_h_lowpass_num,$/;"	e	enum:powerpc_perf_index
altivec_avg_h264_qpel16_hv_lowpass_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_avg_h264_qpel16_hv_lowpass_num,$/;"	e	enum:powerpc_perf_index
altivec_avg_h264_qpel16_v_lowpass_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_avg_h264_qpel16_v_lowpass_num,$/;"	e	enum:powerpc_perf_index
altivec_avg_pixels16_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_avg_pixels16_num,$/;"	e	enum:powerpc_perf_index
altivec_avg_pixels8_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_avg_pixels8_num,$/;"	e	enum:powerpc_perf_index
altivec_avg_pixels8_xy2_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_avg_pixels8_xy2_num,$/;"	e	enum:powerpc_perf_index
altivec_dct_unquantize_h263_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_dct_unquantize_h263_num,$/;"	e	enum:powerpc_perf_index
altivec_fdct	libavcodec/ppc/dsputil_ppc.h	/^  altivec_fdct,$/;"	e	enum:powerpc_perf_index
altivec_fft_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_fft_num = 0,$/;"	e	enum:powerpc_perf_index
altivec_gmc1_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_gmc1_num,$/;"	e	enum:powerpc_perf_index
altivec_hadamard8_diff16_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_hadamard8_diff16_num,$/;"	e	enum:powerpc_perf_index
altivec_hadamard8_diff8x8_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_hadamard8_diff8x8_num,$/;"	e	enum:powerpc_perf_index
altivec_idct_add_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_idct_add_num,$/;"	e	enum:powerpc_perf_index
altivec_idct_put_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_idct_put_num,$/;"	e	enum:powerpc_perf_index
altivec_put_h264_chroma_mc8_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_put_h264_chroma_mc8_num,$/;"	e	enum:powerpc_perf_index
altivec_put_h264_qpel16_h_lowpass_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_put_h264_qpel16_h_lowpass_num,$/;"	e	enum:powerpc_perf_index
altivec_put_h264_qpel16_hv_lowpass_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_put_h264_qpel16_hv_lowpass_num,$/;"	e	enum:powerpc_perf_index
altivec_put_h264_qpel16_v_lowpass_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_put_h264_qpel16_v_lowpass_num,$/;"	e	enum:powerpc_perf_index
altivec_put_no_rnd_pixels16_xy2_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_put_no_rnd_pixels16_xy2_num,$/;"	e	enum:powerpc_perf_index
altivec_put_no_rnd_pixels8_xy2_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_put_no_rnd_pixels8_xy2_num,$/;"	e	enum:powerpc_perf_index
altivec_put_pixels16_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_put_pixels16_num,$/;"	e	enum:powerpc_perf_index
altivec_put_pixels16_xy2_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_put_pixels16_xy2_num,$/;"	e	enum:powerpc_perf_index
altivec_put_pixels8_xy2_num	libavcodec/ppc/dsputil_ppc.h	/^  altivec_put_pixels8_xy2_num,$/;"	e	enum:powerpc_perf_index
altpq	libavcodec/vc9.c	/^    uint8_t pq, altpq;    \/\/\/< Current\/alternate frame quantizer scale$/;"	m	struct:VC9Context	file:
always_inline	libavcodec/common.h	66;"	d
always_inline	libavcodec/common.h	68;"	d
always_inline	libavcodec/libpostproc/postprocess.c	116;"	d	file:
always_inline	libavcodec/libpostproc/postprocess.c	119;"	d	file:
always_reset	libavcodec/snow.c	/^    int always_reset;$/;"	m	struct:SnowContext	file:
amask	libavcodec/alpha/asm.h	143;"	d
amask	libavcodec/alpha/asm.h	82;"	d
amask	libavcodec/alpha/asm.h	96;"	d
amptable	libavcodec/ra288.h	/^static const float amptable[8]={ 0.515625, 0.90234375, 1.57910156, 2.76342773,$/;"	v
amr_iformat	libavformat/amr.c	/^static AVInputFormat amr_iformat = {$/;"	v	file:
amr_init	libavformat/amr.c	/^int amr_init(void)$/;"	f
amr_nb_decode_close	libavcodec/amr.c	/^static int amr_nb_decode_close(AVCodecContext * avctx)$/;"	f	file:
amr_nb_decode_frame	libavcodec/amr.c	/^static int amr_nb_decode_frame(AVCodecContext * avctx,$/;"	f	file:
amr_nb_decode_init	libavcodec/amr.c	/^static int amr_nb_decode_init(AVCodecContext * avctx)$/;"	f	file:
amr_nb_decoder	libavcodec/amr.c	/^AVCodec amr_nb_decoder =$/;"	v
amr_nb_encode_close	libavcodec/amr.c	/^static int amr_nb_encode_close(AVCodecContext * avctx)$/;"	f	file:
amr_nb_encode_frame	libavcodec/amr.c	/^static int amr_nb_encode_frame(AVCodecContext *avctx,$/;"	f	file:
amr_nb_encode_init	libavcodec/amr.c	/^static int amr_nb_encode_init(AVCodecContext * avctx)$/;"	f	file:
amr_nb_encoder	libavcodec/amr.c	/^AVCodec amr_nb_encoder =$/;"	v
amr_oformat	libavformat/amr.c	/^static AVOutputFormat amr_oformat = {$/;"	v	file:
amr_probe	libavformat/amr.c	/^static int amr_probe(AVProbeData *p)$/;"	f	file:
amr_read_close	libavformat/amr.c	/^static int amr_read_close(AVFormatContext *s)$/;"	f	file:
amr_read_header	libavformat/amr.c	/^static int amr_read_header(AVFormatContext *s,$/;"	f	file:
amr_read_packet	libavformat/amr.c	/^static int amr_read_packet(AVFormatContext *s,$/;"	f	file:
amr_wb_decode_close	libavcodec/amr.c	/^static int amr_wb_decode_close(AVCodecContext * avctx)$/;"	f	file:
amr_wb_decode_frame	libavcodec/amr.c	/^static int amr_wb_decode_frame(AVCodecContext * avctx,$/;"	f	file:
amr_wb_decode_init	libavcodec/amr.c	/^static int amr_wb_decode_init(AVCodecContext * avctx)$/;"	f	file:
amr_wb_decoder	libavcodec/amr.c	/^AVCodec amr_wb_decoder =$/;"	v
amr_wb_encode_close	libavcodec/amr.c	/^static int amr_wb_encode_close(AVCodecContext * avctx)$/;"	f	file:
amr_wb_encode_frame	libavcodec/amr.c	/^static int amr_wb_encode_frame(AVCodecContext *avctx,$/;"	f	file:
amr_wb_encode_init	libavcodec/amr.c	/^static int amr_wb_encode_init(AVCodecContext * avctx)$/;"	f	file:
amr_wb_encoder	libavcodec/amr.c	/^AVCodec amr_wb_encoder =$/;"	v
amr_write_header	libavformat/amr.c	/^static int amr_write_header(AVFormatContext *s)$/;"	f	file:
amr_write_packet	libavformat/amr.c	/^static int amr_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
amr_write_trailer	libavformat/amr.c	/^static int amr_write_trailer(AVFormatContext *s)$/;"	f	file:
analyze	libavformat/mpegts.c	/^static int analyze(const uint8_t *buf, int size, int packet_size, int *index){$/;"	f	file:
angle	libavcodec/vorbis.h	/^    uint_fast8_t *angle;$/;"	m
angle_by_index	libavcodec/ulti.c	/^static int angle_by_index[4] = { 0, 2, 6, 12};$/;"	v	file:
antialias_algo	libavcodec/avcodec.h	/^    int antialias_algo;$/;"	m	struct:AVCodecContext
ap	libavcodec/g726.c	/^	 int ap;              \/**< scale factor control *\/$/;"	m	struct:G726Context	file:
ap_in	ffserver.c	/^    AVFormatParameters *ap_in; \/* input parameters *\/$/;"	m	struct:FFStream	file:
api_version	libavformat/dv1394.h	/^	unsigned int api_version;$/;"	m	struct:dv1394_init
apply_loop_filter	libavcodec/vp3.c	/^static void apply_loop_filter(Vp3DecodeContext *s)$/;"	f	file:
apply_motion_4x4	libavcodec/roqvideo.c	/^static void apply_motion_4x4(RoqContext *ri, int x, int y, unsigned char mv,$/;"	f	file:
apply_motion_8x8	libavcodec/roqvideo.c	/^static void apply_motion_8x8(RoqContext *ri, int x, int y,$/;"	f	file:
apply_vector_2x2	libavcodec/roqvideo.c	/^static void apply_vector_2x2(RoqContext *ri, int x, int y, roq_cell *cell)$/;"	f	file:
apply_vector_4x4	libavcodec/roqvideo.c	/^static void apply_vector_4x4(RoqContext *ri, int x, int y, roq_cell *cell)$/;"	f	file:
ar_mode	libavformat/matroska.c	/^    MatroskaAspectRatioMode ar_mode;$/;"	m	struct:MatroskaVideoTrack	file:
area_q	libavcodec/dv.c	/^    int area_q[4];$/;"	m	struct:EncBlockInfo	file:
arg	libavcodec/beosthread.c	/^    void *arg;$/;"	m	struct:ThreadContext	file:
arg	libavcodec/w32thread.c	/^    void *arg;$/;"	m	struct:ThreadContext	file:
argname	cmdutils.h	/^    const char *argname;$/;"	m
args	libavcodec/pthread.c	/^    void **args;$/;"	m	struct:ThreadContext	file:
array_static	libavcodec/utils.c	/^static void** array_static = NULL;$/;"	v	file:
asf_get_packet	libavformat/asf.c	/^static int asf_get_packet(AVFormatContext *s)$/;"	f	file:
asf_header	libavformat/asf.h	/^static const GUID asf_header = {$/;"	v
asf_iformat	libavformat/asf.c	/^static AVInputFormat asf_iformat = {$/;"	v	file:
asf_init	libavformat/asf.c	/^int asf_init(void)$/;"	f
asf_oformat	libavformat/asf-enc.c	/^AVOutputFormat asf_oformat = {$/;"	v
asf_probe	libavformat/asf.c	/^static int asf_probe(AVProbeData *pd)$/;"	f	file:
asf_read_close	libavformat/asf.c	/^static int asf_read_close(AVFormatContext *s)$/;"	f	file:
asf_read_header	libavformat/asf.c	/^static int asf_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
asf_read_packet	libavformat/asf.c	/^static int asf_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
asf_read_pts	libavformat/asf.c	/^static int64_t asf_read_pts(AVFormatContext *s, int stream_index, int64_t *ppos, int64_t pos_limit)$/;"	f	file:
asf_read_seek	libavformat/asf.c	/^static int asf_read_seek(AVFormatContext *s, int stream_index, int64_t pts, int flags)$/;"	f	file:
asf_reset_header	libavformat/asf.c	/^static void asf_reset_header(AVFormatContext *s)$/;"	f	file:
asf_st	libavformat/asf.h	/^    ASFStream* asf_st; \/* currently decoded stream *\/$/;"	m
asf_stream_oformat	libavformat/asf-enc.c	/^AVOutputFormat asf_stream_oformat = {$/;"	v
asf_write_header	libavformat/asf-enc.c	/^static int asf_write_header(AVFormatContext *s)$/;"	f	file:
asf_write_header1	libavformat/asf-enc.c	/^static int asf_write_header1(AVFormatContext *s, int64_t file_size, int64_t data_chunk_size)$/;"	f	file:
asf_write_index	libavformat/asf-enc.c	/^static int asf_write_index(AVFormatContext *s, ASFIndex *index, uint16_t max, uint32_t count)$/;"	f	file:
asf_write_packet	libavformat/asf-enc.c	/^static int asf_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
asf_write_stream_header	libavformat/asf-enc.c	/^static int asf_write_stream_header(AVFormatContext *s)$/;"	f	file:
asf_write_trailer	libavformat/asf-enc.c	/^static int asf_write_trailer(AVFormatContext *s)$/;"	f	file:
asfid2avid	libavformat/asf.h	/^    int asfid2avid[128];        \/* conversion table from asf ID 2 AVStream ID *\/$/;"	m
aspect	libavformat/dv.c	/^    uint8_t     aspect;       \/* Aspect ID 0 - 4:3, 7 - 16:9 *\/$/;"	m	struct:DVMuxContext	file:
aspect_ratio_info	libavcodec/mpegvideo.h	/^    int aspect_ratio_info; \/\/FIXME remove$/;"	m	struct:MpegEncContext
aspect_to_info	libavcodec/h263.c	/^static void aspect_to_info(MpegEncContext * s, AVRational aspect){$/;"	f	file:
ast	libavformat/dv.c	/^    AVStream*        ast[2];       $/;"	m	struct:DVDemuxContext	file:
asv1_decode_block	libavcodec/asv1.c	/^static inline int asv1_decode_block(ASV1Context *a, DCTELEM block[64]){$/;"	f	file:
asv1_decoder	libavcodec/asv1.c	/^AVCodec asv1_decoder = {$/;"	v
asv1_encode_block	libavcodec/asv1.c	/^static inline void asv1_encode_block(ASV1Context *a, DCTELEM block[64]){$/;"	f	file:
asv1_encoder	libavcodec/asv1.c	/^AVCodec asv1_encoder = {$/;"	v
asv1_get_level	libavcodec/asv1.c	/^static inline int asv1_get_level(GetBitContext *gb){$/;"	f	file:
asv1_put_level	libavcodec/asv1.c	/^static inline void asv1_put_level(PutBitContext *pb, int level){$/;"	f	file:
asv2_decode_block	libavcodec/asv1.c	/^static inline int asv2_decode_block(ASV1Context *a, DCTELEM block[64]){$/;"	f	file:
asv2_decoder	libavcodec/asv1.c	/^AVCodec asv2_decoder = {$/;"	v
asv2_encode_block	libavcodec/asv1.c	/^static inline void asv2_encode_block(ASV1Context *a, DCTELEM block[64]){$/;"	f	file:
asv2_encoder	libavcodec/asv1.c	/^AVCodec asv2_encoder = {$/;"	v
asv2_get_bits	libavcodec/asv1.c	/^static inline int asv2_get_bits(GetBitContext *gb, int n){$/;"	f	file:
asv2_get_level	libavcodec/asv1.c	/^static inline int asv2_get_level(GetBitContext *gb){$/;"	f	file:
asv2_level_tab	libavcodec/asv1.c	/^static const uint8_t asv2_level_tab[63][2]={$/;"	v	file:
asv2_level_vlc	libavcodec/asv1.c	/^static VLC asv2_level_vlc;$/;"	v	file:
asv2_put_bits	libavcodec/asv1.c	/^static inline void asv2_put_bits(PutBitContext *pb, int n, int v){$/;"	f	file:
asv2_put_level	libavcodec/asv1.c	/^static inline void asv2_put_level(PutBitContext *pb, int level){$/;"	f	file:
asym_quant	libavcodec/ac3enc.c	/^static inline int asym_quant(int c, int e, int qbits)$/;"	f	file:
atag	libavformat/nsvdec.c	/^    uint32_t vtag, atag;$/;"	m	file:
atom	libavcodec/beosthread.c	/^	vint32 atom;$/;"	m	struct:benaphore	file:
attr_names	libavformat/rtsp.c	/^static attrname_map_t attr_names[]=$/;"	v	file:
attribute_unused	libavcodec/common.h	82;"	d
attribute_unused	libavcodec/common.h	84;"	d
attribute_used	libavcodec/common.h	74;"	d
attribute_used	libavcodec/common.h	76;"	d
attribute_used	libavcodec/i386/dsputil_mmx.c	/^static const uint64_t ff_pb_3F attribute_used __attribute__ ((aligned(8))) = 0x3F3F3F3F3F3F3F3FULL;$/;"	v	file:
attribute_used	libavcodec/i386/dsputil_mmx.c	/^static const uint64_t ff_pb_FC attribute_used __attribute__ ((aligned(8))) = 0xFCFCFCFCFCFCFCFCULL;$/;"	v	file:
attribute_used	libavcodec/i386/dsputil_mmx.c	/^static const uint64_t ff_pw_15 attribute_used __attribute__ ((aligned(8))) = 0x000F000F000F000FULL;$/;"	v	file:
attribute_used	libavcodec/i386/dsputil_mmx.c	/^static const uint64_t ff_pw_16 attribute_used __attribute__ ((aligned(8))) = 0x0010001000100010ULL;$/;"	v	file:
attribute_used	libavcodec/i386/dsputil_mmx.c	/^static const uint64_t ff_pw_20 attribute_used __attribute__ ((aligned(8))) = 0x0014001400140014ULL;$/;"	v	file:
attribute_used	libavcodec/i386/dsputil_mmx.c	/^static const uint64_t ff_pw_3  attribute_used __attribute__ ((aligned(8))) = 0x0003000300030003ULL;$/;"	v	file:
attribute_used	libavcodec/i386/dsputil_mmx.c	/^static const uint64_t ff_pw_32 attribute_used __attribute__ ((aligned(8))) = 0x0020002000200020ULL;$/;"	v	file:
attribute_used	libavcodec/i386/dsputil_mmx.c	/^static const uint64_t ff_pw_4  attribute_used __attribute__ ((aligned(8))) = 0x0004000400040004ULL;$/;"	v	file:
attribute_used	libavcodec/i386/dsputil_mmx.c	/^static const uint64_t ff_pw_5  attribute_used __attribute__ ((aligned(8))) = 0x0005000500050005ULL;$/;"	v	file:
attribute_used	libavcodec/i386/dsputil_mmx.c	/^static const uint64_t mm_bone attribute_used __attribute__ ((aligned(8))) = 0x0101010101010101ULL;$/;"	v	file:
attribute_used	libavcodec/i386/dsputil_mmx.c	/^static const uint64_t mm_wone attribute_used __attribute__ ((aligned(8))) = 0x0001000100010001ULL;$/;"	v	file:
attribute_used	libavcodec/i386/dsputil_mmx.c	/^static const uint64_t mm_wtwo attribute_used __attribute__ ((aligned(8))) = 0x0002000200020002ULL;$/;"	v	file:
attribute_used	libavcodec/libpostproc/postprocess.c	115;"	d	file:
attribute_used	libavcodec/libpostproc/postprocess.c	118;"	d	file:
attrname_map	libavformat/rtsp.c	/^typedef struct attrname_map$/;"	s	file:
attrname_map_t	libavformat/rtsp.c	/^} attrname_map_t;$/;"	t	file:
au_headers	libavformat/rtp.h	/^    } *au_headers;$/;"	m	struct:rtp_payload_data_s
au_headers_length_bytes	libavformat/rtp.h	/^    int au_headers_length_bytes;$/;"	m	struct:rtp_payload_data_s
au_iformat	libavformat/au.c	/^static AVInputFormat au_iformat = {$/;"	v	file:
au_init	libavformat/au.c	/^int au_init(void)$/;"	f
au_oformat	libavformat/au.c	/^static AVOutputFormat au_oformat = {$/;"	v	file:
au_probe	libavformat/au.c	/^static int au_probe(AVProbeData *p)$/;"	f	file:
au_read_close	libavformat/au.c	/^static int au_read_close(AVFormatContext *s)$/;"	f	file:
au_read_header	libavformat/au.c	/^static int au_read_header(AVFormatContext *s,$/;"	f	file:
au_read_packet	libavformat/au.c	/^static int au_read_packet(AVFormatContext *s,$/;"	f	file:
au_write_header	libavformat/au.c	/^static int au_write_header(AVFormatContext *s)$/;"	f	file:
au_write_packet	libavformat/au.c	/^static int au_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
au_write_trailer	libavformat/au.c	/^static int au_write_trailer(AVFormatContext *s)$/;"	f	file:
audio_bit_rate	ffmpeg.c	/^static int audio_bit_rate = 64000;$/;"	v	file:
audio_bits	libavformat/ipmovie.c	/^    unsigned int audio_bits;$/;"	m	struct:IPMVEContext	file:
audio_bits	libavformat/segafilm.c	/^    unsigned int audio_bits;$/;"	m	struct:FilmDemuxContext	file:
audio_bits	libavformat/sierravmd.c	/^    unsigned int audio_bits;$/;"	m	struct:VmdDemuxContext	file:
audio_bits	libavformat/westwood.c	/^    int audio_bits;$/;"	m	struct:WsAudDemuxContext	file:
audio_bits	libavformat/westwood.c	/^    int audio_bits;$/;"	m	struct:WsVqaDemuxContext	file:
audio_block_align	libavformat/sierravmd.c	/^    int audio_block_align;$/;"	m	struct:VmdDemuxContext	file:
audio_bound	libavformat/mpeg.c	/^    int audio_bound;$/;"	m	file:
audio_buf	ffplay.c	/^    uint8_t audio_buf[(AVCODEC_MAX_AUDIO_FRAME_SIZE * 3) \/ 2]; $/;"	m	struct:VideoState	file:
audio_buf	libavformat/dv.c	/^    uint8_t          audio_buf[2][8192];$/;"	m	struct:DVDemuxContext	file:
audio_buf_index	ffplay.c	/^    int audio_buf_index; \/* in bytes *\/$/;"	m	struct:VideoState	file:
audio_buf_size	ffplay.c	/^    unsigned int audio_buf_size; \/* in bytes *\/$/;"	m	struct:VideoState	file:
audio_callback_time	ffplay.c	/^static int64_t audio_callback_time;$/;"	v	file:
audio_channel	libavformat/psxstr.c	/^    int audio_channel;$/;"	m	struct:StrDemuxContext	file:
audio_channels	ffmpeg.c	/^static int audio_channels = 1;$/;"	v	file:
audio_channels	libavcodec/vorbis.h	/^    uint_fast8_t audio_channels;$/;"	m
audio_channels	libavformat/idroq.c	/^    int audio_channels;$/;"	m	struct:RoqDemuxContext	file:
audio_channels	libavformat/ipmovie.c	/^    unsigned int audio_channels;$/;"	m	struct:IPMVEContext	file:
audio_channels	libavformat/rtp.h	/^    int audio_channels;$/;"	m	struct:AVRtpPayloadType_s
audio_channels	libavformat/segafilm.c	/^    unsigned int audio_channels;$/;"	m	struct:FilmDemuxContext	file:
audio_channels	libavformat/sierravmd.c	/^    unsigned int audio_channels;$/;"	m	struct:VmdDemuxContext	file:
audio_channels	libavformat/westwood.c	/^    int audio_channels;$/;"	m	struct:WsAudDemuxContext	file:
audio_channels	libavformat/westwood.c	/^    int audio_channels;$/;"	m	struct:WsVqaDemuxContext	file:
audio_chunk_offset	libavformat/ipmovie.c	/^    offset_t audio_chunk_offset;$/;"	m	struct:IPMVEContext	file:
audio_chunk_size	libavformat/ipmovie.c	/^    int audio_chunk_size;$/;"	m	struct:IPMVEContext	file:
audio_chunk_size1	libavformat/idcin.c	/^    int audio_chunk_size1;$/;"	m	struct:IdcinDemuxContext	file:
audio_chunk_size2	libavformat/idcin.c	/^    int audio_chunk_size2;$/;"	m	struct:IdcinDemuxContext	file:
audio_clock	ffplay.c	/^    double audio_clock;$/;"	m	struct:VideoState	file:
audio_close	libavformat/audio.c	/^static int audio_close(AudioData *s)$/;"	f	file:
audio_close	libavformat/beosaudio.cpp	/^static int audio_close(AudioData *s)$/;"	f	file:
audio_codec	libavformat/avformat.h	/^    enum CodecID audio_codec; \/* default audio codec *\/$/;"	m	struct:AVOutputFormat
audio_codec_id	ffmpeg.c	/^static int audio_codec_id = CODEC_ID_NONE;$/;"	v	file:
audio_codec_id	libavformat/avformat.h	/^    enum CodecID audio_codec_id;$/;"	m	struct:AVFormatParameters
audio_codec_tag	ffmpeg.c	/^static int audio_codec_tag = 0;$/;"	v	file:
audio_conceal_none	libavformat/asf.h	/^static const GUID audio_conceal_none = {$/;"	v
audio_conceal_spread	libavformat/asf.h	/^static const GUID audio_conceal_spread = {$/;"	v
audio_data	libavformat/dv.c	/^    FifoBuffer  audio_data;   \/* Fifo for storing excessive amounts of PCM *\/$/;"	m	struct:DVMuxContext	file:
audio_decode_example	libavcodec/apiexample.c	/^void audio_decode_example(const char *outfilename, const char *filename)$/;"	f
audio_decode_frame	ffplay.c	/^static int audio_decode_frame(VideoState *is, uint8_t *audio_buf, double *pts_ptr)$/;"	f	file:
audio_decoder_mutex	ffplay.c	/^    SDL_mutex *audio_decoder_mutex;$/;"	m	struct:VideoState	file:
audio_device	ffmpeg.c	/^static char *audio_device = NULL;$/;"	v	file:
audio_diff_avg_coef	ffplay.c	/^    double audio_diff_avg_coef;$/;"	m	struct:VideoState	file:
audio_diff_avg_count	ffplay.c	/^    int audio_diff_avg_count;$/;"	m	struct:VideoState	file:
audio_diff_cum	ffplay.c	/^    double audio_diff_cum; \/* used for AV difference average computation *\/$/;"	m	struct:VideoState	file:
audio_diff_threshold	ffplay.c	/^    double audio_diff_threshold;$/;"	m	struct:VideoState	file:
audio_disable	ffmpeg.c	/^static int audio_disable = 0;$/;"	v	file:
audio_disable	ffplay.c	/^static int audio_disable;$/;"	v	file:
audio_encode_example	libavcodec/apiexample.c	/^void audio_encode_example(const char *filename)$/;"	f
audio_fifo	libavformat/swf.c	/^    uint8_t *audio_fifo;$/;"	m	file:
audio_frame_count	libavformat/idroq.c	/^    unsigned int audio_frame_count;$/;"	m	struct:RoqDemuxContext	file:
audio_frame_count	libavformat/ipmovie.c	/^    unsigned int audio_frame_count;$/;"	m	struct:IPMVEContext	file:
audio_frame_counter	libavformat/electronicarts.c	/^    int audio_frame_counter;$/;"	m	struct:EaDemuxContext	file:
audio_frame_counter	libavformat/westwood.c	/^    int64_t audio_frame_counter;$/;"	m	struct:WsAudDemuxContext	file:
audio_frame_counter	libavformat/westwood.c	/^    int64_t audio_frame_counter;$/;"	m	struct:WsVqaDemuxContext	file:
audio_frame_divisor	libavformat/sierravmd.c	/^    int audio_frame_divisor;$/;"	m	struct:VmdDemuxContext	file:
audio_grab_format	ffmpeg.c	/^static char *audio_grab_format = "audio_device";$/;"	v	file:
audio_hw_buf_size	ffplay.c	/^    int audio_hw_buf_size;$/;"	m	struct:VideoState	file:
audio_in_format	libavformat/audio.c	/^static AVInputFormat audio_in_format = {$/;"	v	file:
audio_in_format	libavformat/beosaudio.cpp	/^static AVInputFormat audio_in_format = {$/;"	v	file:
audio_in_pos	libavformat/swf.c	/^    int audio_in_pos;$/;"	m	file:
audio_init	libavformat/audio.c	/^int audio_init(void)$/;"	f
audio_init	libavformat/beosaudio.cpp	/^int audio_init(void)$/;"	f
audio_input_frame_size	output_example.c	/^int audio_input_frame_size;$/;"	v
audio_min_samples	libavcodec/dvdata.h	/^    int              audio_min_samples[3];\/* min ammount of audio samples *\/$/;"	m	struct:DVprofile
audio_open	libavformat/audio.c	/^static int audio_open(AudioData *s, int is_output, const char *audio_device)$/;"	f	file:
audio_open	libavformat/beosaudio.cpp	/^static int audio_open(AudioData *s, int is_output, const char *audio_device)$/;"	f	file:
audio_out_format	libavformat/audio.c	/^static AVOutputFormat audio_out_format = {$/;"	v	file:
audio_out_format	libavformat/beosaudio.cpp	/^AVOutputFormat audio_out_format = {$/;"	v
audio_out_pos	libavformat/swf.c	/^    int audio_out_pos;$/;"	m	file:
audio_outbuf	output_example.c	/^uint8_t *audio_outbuf;$/;"	v
audio_outbuf_size	output_example.c	/^int audio_outbuf_size;$/;"	v
audio_pkt	ffplay.c	/^    AVPacket audio_pkt;$/;"	m	struct:VideoState	file:
audio_pkt	libavformat/dv.c	/^    AVPacket         audio_pkt[2];$/;"	m	struct:DVDemuxContext	file:
audio_pkt_data	ffplay.c	/^    uint8_t *audio_pkt_data;$/;"	m	struct:VideoState	file:
audio_pkt_size	ffplay.c	/^    int audio_pkt_size;$/;"	m	struct:VideoState	file:
audio_present	libavformat/idcin.c	/^    int audio_present;$/;"	m	struct:IdcinDemuxContext	file:
audio_pts	libavformat/4xm.c	/^    int64_t audio_pts;$/;"	m	struct:FourxmDemuxContext	file:
audio_pts	libavformat/electronicarts.c	/^    int64_t audio_pts;$/;"	m	struct:EaDemuxContext	file:
audio_read_close	libavformat/audio.c	/^static int audio_read_close(AVFormatContext *s1)$/;"	f	file:
audio_read_close	libavformat/beosaudio.cpp	/^static int audio_read_close(AVFormatContext *s1)$/;"	f	file:
audio_read_header	libavformat/audio.c	/^static int audio_read_header(AVFormatContext *s1, AVFormatParameters *ap)$/;"	f	file:
audio_read_header	libavformat/beosaudio.cpp	/^static int audio_read_header(AVFormatContext *s1, AVFormatParameters *ap)$/;"	f	file:
audio_read_packet	libavformat/audio.c	/^static int audio_read_packet(AVFormatContext *s1, AVPacket *pkt)$/;"	f	file:
audio_read_packet	libavformat/beosaudio.cpp	/^static int audio_read_packet(AVFormatContext *s1, AVPacket *pkt)$/;"	f	file:
audio_resample	ffmpeg.c	/^    int audio_resample;$/;"	m	struct:AVOutputStream	file:
audio_resample	libavcodec/resample.c	/^int audio_resample(ReSampleContext *s, short *output, short *input, int nb_samples)$/;"	f
audio_resample_close	libavcodec/resample.c	/^void audio_resample_close(ReSampleContext *s)$/;"	f
audio_resample_init	libavcodec/resample.c	/^ReSampleContext *audio_resample_init(int output_channels, int input_channels, $/;"	f
audio_sample_counter	libavformat/sierravmd.c	/^    int64_t audio_sample_counter;$/;"	m	struct:VmdDemuxContext	file:
audio_sample_rate	ffmpeg.c	/^static int audio_sample_rate = 44100;$/;"	v	file:
audio_sample_rate	libavformat/ipmovie.c	/^    unsigned int audio_sample_rate;$/;"	m	struct:IPMVEContext	file:
audio_samplerate	libavcodec/vorbis.h	/^    uint_fast32_t audio_samplerate;$/;"	m
audio_samplerate	libavformat/segafilm.c	/^    unsigned int audio_samplerate;$/;"	m	struct:FilmDemuxContext	file:
audio_samplerate	libavformat/sierravmd.c	/^    unsigned int audio_samplerate;$/;"	m	struct:VmdDemuxContext	file:
audio_samplerate	libavformat/westwood.c	/^    int audio_samplerate;$/;"	m	struct:WsAudDemuxContext	file:
audio_samplerate	libavformat/westwood.c	/^    int audio_samplerate;$/;"	m	struct:WsVqaDemuxContext	file:
audio_samples_dist	libavcodec/dvdata.h	/^    int              audio_samples_dist[5];\/* how many samples are supposed to be *\/$/;"	m	struct:DVprofile
audio_saved	libavformat/grab.c	/^    struct video_audio audio_saved;$/;"	m	file:
audio_shuffle	libavcodec/dvdata.h	/^    const uint16_t (*audio_shuffle)[9];  \/* PCM shuffling table *\/$/;"	m	struct:DVprofile
audio_size	ffmpeg.c	/^static int64_t audio_size = 0;$/;"	v	file:
audio_size	libavformat/swf.c	/^    int audio_size;$/;"	m	file:
audio_st	ffplay.c	/^    AVStream *audio_st;$/;"	m	struct:VideoState	file:
audio_stream	ffplay.c	/^    int audio_stream;$/;"	m	struct:VideoState	file:
audio_stream	libavformat/asf.h	/^static const GUID audio_stream = {$/;"	v
audio_stream	libavformat/rm.c	/^    StreamInfo *audio_stream, *video_stream;$/;"	m	file:
audio_stream_copy	ffmpeg.c	/^static int audio_stream_copy = 0;$/;"	v	file:
audio_stream_index	libavformat/electronicarts.c	/^    int audio_stream_index;$/;"	m	struct:EaDemuxContext	file:
audio_stream_index	libavformat/idcin.c	/^    int audio_stream_index;$/;"	m	struct:IdcinDemuxContext	file:
audio_stream_index	libavformat/idroq.c	/^    int audio_stream_index;$/;"	m	struct:RoqDemuxContext	file:
audio_stream_index	libavformat/ipmovie.c	/^    int audio_stream_index;$/;"	m	struct:IPMVEContext	file:
audio_stream_index	libavformat/psxstr.c	/^    int audio_stream_index;$/;"	m	struct:StrChannel	file:
audio_stream_index	libavformat/segafilm.c	/^    int audio_stream_index;$/;"	m	struct:FilmDemuxContext	file:
audio_stream_index	libavformat/sierravmd.c	/^    int audio_stream_index;$/;"	m	struct:VmdDemuxContext	file:
audio_stream_index	libavformat/wc3movie.c	/^    int audio_stream_index;$/;"	m	struct:Wc3DemuxContext	file:
audio_stream_index	libavformat/westwood.c	/^    int audio_stream_index;$/;"	m	struct:WsAudDemuxContext	file:
audio_stream_index	libavformat/westwood.c	/^    int audio_stream_index;$/;"	m	struct:WsVqaDemuxContext	file:
audio_stride	libavcodec/dvdata.h	/^    int              audio_stride;        \/* size of audio_shuffle table *\/$/;"	m	struct:DVprofile
audio_strm_length	libavformat/avienc.c	/^    int audio_strm_length[MAX_STREAMS];$/;"	m	file:
audio_sync_method	ffmpeg.c	/^static int audio_sync_method= 0;$/;"	v	file:
audio_type	libavformat/ipmovie.c	/^    unsigned int audio_type;$/;"	m	struct:IPMVEContext	file:
audio_type	libavformat/segafilm.c	/^    unsigned int audio_type;$/;"	m	struct:FilmDemuxContext	file:
audio_type	libavformat/sierravmd.c	/^    unsigned int audio_type;$/;"	m	struct:VmdDemuxContext	file:
audio_type	libavformat/swf.c	/^    int audio_type;$/;"	m	file:
audio_type	libavformat/westwood.c	/^    int audio_type;$/;"	m	struct:WsAudDemuxContext	file:
audio_volume	ffmpeg.c	/^static int audio_volume = 256;$/;"	v	file:
audio_write_get_buf_size	ffplay.c	/^static int audio_write_get_buf_size(VideoState *is)$/;"	f	file:
audio_write_header	libavformat/audio.c	/^static int audio_write_header(AVFormatContext *s1)$/;"	f	file:
audio_write_header	libavformat/beosaudio.cpp	/^static int audio_write_header(AVFormatContext *s1)$/;"	f	file:
audio_write_packet	libavformat/audio.c	/^static int audio_write_packet(AVFormatContext *s1, AVPacket *pkt)$/;"	f	file:
audio_write_packet	libavformat/beosaudio.cpp	/^static int audio_write_packet(AVFormatContext *s1, int stream_index,$/;"	f	file:
audio_write_trailer	libavformat/audio.c	/^static int audio_write_trailer(AVFormatContext *s1)$/;"	f	file:
audio_write_trailer	libavformat/beosaudio.cpp	/^static int audio_write_trailer(AVFormatContext *s1)$/;"	f	file:
audioplay_callback	libavformat/beosaudio.cpp	/^static void audioplay_callback(void *cookie, void *buffer, size_t bufferSize, const media_raw_audio_format &format)$/;"	f	file:
audioq	ffplay.c	/^    PacketQueue audioq;$/;"	m	struct:VideoState	file:
audiorecord_callback	libavformat/beosaudio.cpp	/^static void audiorecord_callback(void *cookie, bigtime_t timestamp, void *buffer, size_t bufferSize, const media_multi_audio_format &format)$/;"	f	file:
author	ffserver.c	/^    char author[512];$/;"	m	struct:FFStream	file:
author	libavformat/avformat.h	/^    char author[512];$/;"	m	struct:AVFormatContext
auto_guess	libavformat/mpegts.c	/^    int auto_guess; \/* if true, all pids are analized to find streams *\/$/;"	m	struct:MpegTSContext	file:
av_abort	libavcodec/common.h	257;"	d
av_add_i	libavcodec/integer.c	/^AVInteger av_add_i(AVInteger a, AVInteger b){$/;"	f
av_add_index_entry	libavformat/utils.c	/^int av_add_index_entry(AVStream *st,$/;"	f
av_add_q	libavcodec/rational.c	/^AVRational av_add_q(AVRational b, AVRational c){$/;"	f
av_alloc_format_context	libavformat/utils.c	/^AVFormatContext *av_alloc_format_context(void)$/;"	f
av_build_filter	libavcodec/resample2.c	/^void av_build_filter(FELEM *filter, double factor, int tap_count, int phase_count, int scale, int type){$/;"	f
av_build_index_raw	libavformat/utils.c	/^static void av_build_index_raw(AVFormatContext *s)$/;"	f	file:
av_class	libavcodec/avcodec.h	/^    AVClass *av_class;$/;"	m	struct:AVCodecContext
av_class	libavformat/avformat.h	/^    const AVClass *av_class; \/* set by av_alloc_format_context *\/$/;"	m	struct:AVFormatContext
av_close_input_file	libavformat/utils.c	/^void av_close_input_file(AVFormatContext *s)$/;"	f
av_cmp_i	libavcodec/integer.c	/^int av_cmp_i(AVInteger a, AVInteger b){$/;"	f
av_cmp_q	libavcodec/rational.h	/^static inline int av_cmp_q(AVRational a, AVRational b){$/;"	f
av_codec_context_class	libavcodec/utils.c	/^static AVClass av_codec_context_class = { "AVCodecContext", context_to_name };$/;"	v	file:
av_d2q	libavcodec/rational.c	/^AVRational av_d2q(double d, int max){$/;"	f
av_destruct_packet	libavformat/utils.c	/^static void av_destruct_packet(AVPacket *pkt)$/;"	f	file:
av_destruct_packet_nofree	libavformat/utils.c	/^void av_destruct_packet_nofree(AVPacket *pkt)$/;"	f
av_div_i	libavcodec/integer.c	/^AVInteger av_div_i(AVInteger a, AVInteger b){$/;"	f
av_div_q	libavcodec/rational.c	/^AVRational av_div_q(AVRational b, AVRational c){$/;"	f
av_dup_packet	libavformat/utils.c	/^int av_dup_packet(AVPacket *pkt)$/;"	f
av_encode	ffmpeg.c	/^static int av_encode(AVFormatContext **output_files,$/;"	f	file:
av_estimate_timings	libavformat/utils.c	/^static void av_estimate_timings(AVFormatContext *ic)$/;"	f	file:
av_estimate_timings_from_bit_rate	libavformat/utils.c	/^static void av_estimate_timings_from_bit_rate(AVFormatContext *ic)$/;"	f	file:
av_estimate_timings_from_pts	libavformat/utils.c	/^static void av_estimate_timings_from_pts(AVFormatContext *ic)$/;"	f	file:
av_fast_realloc	libavcodec/utils.c	/^void *av_fast_realloc(void *ptr, unsigned int *size, unsigned int min_size)$/;"	f
av_find_default_stream_index	libavformat/utils.c	/^int av_find_default_stream_index(AVFormatContext *s)$/;"	f
av_find_input_format	libavformat/utils.c	/^AVInputFormat *av_find_input_format(const char *short_name)$/;"	f
av_find_stream_info	libavformat/utils.c	/^int av_find_stream_info(AVFormatContext *ic)$/;"	f
av_first_parser	libavcodec/parser.c	/^AVCodecParser *av_first_parser = NULL;$/;"	v
av_format_context_class	libavformat/utils.c	/^static const AVClass av_format_context_class = { "AVFormatContext", format_to_name };$/;"	v	file:
av_frac_add	libavformat/utils.c	/^void av_frac_add(AVFrac *f, int64_t incr)$/;"	f
av_frac_init	libavformat/utils.c	/^void av_frac_init(AVFrac *f, int64_t val, int64_t num, int64_t den)$/;"	f
av_frac_set	libavformat/utils.c	/^void av_frac_set(AVFrac *f, int64_t val)$/;"	f
av_free	libavcodec/mem.c	/^void av_free(void *ptr)$/;"	f
av_free_packet	libavformat/avformat.h	/^static inline void av_free_packet(AVPacket *pkt)$/;"	f
av_free_static	libavcodec/utils.c	/^void av_free_static(void)$/;"	f
av_freep	libavcodec/utils.c	/^void av_freep(void *arg)$/;"	f
av_get_pict_type_char	libavcodec/utils.c	/^char av_get_pict_type_char(int pict_type){$/;"	f
av_gettime	libavformat/os_support.c	/^int64_t av_gettime(void)$/;"	f
av_guess_codec	libavformat/utils.c	/^enum CodecID av_guess_codec(AVOutputFormat *fmt, const char *short_name, $/;"	f
av_guess_image2_codec	libavformat/img2.c	/^enum CodecID av_guess_image2_codec(const char *filename){$/;"	f
av_has_timings	libavformat/utils.c	/^static int av_has_timings(AVFormatContext *ic)$/;"	f	file:
av_hex_dump	libavformat/utils.c	/^void av_hex_dump(FILE *f, uint8_t *buf, int size)$/;"	f
av_i2int	libavcodec/integer.c	/^int64_t av_i2int(AVInteger a){$/;"	f
av_index_search_timestamp	libavformat/utils.c	/^int av_index_search_timestamp(AVStream *st, int64_t wanted_timestamp,$/;"	f
av_init_packet	libavformat/avformat.h	/^static inline void av_init_packet(AVPacket *pkt)$/;"	f
av_int2i	libavcodec/integer.c	/^AVInteger av_int2i(int64_t a){$/;"	f
av_interleave_packet	libavformat/utils.c	/^static int av_interleave_packet(AVFormatContext *s, AVPacket *out, AVPacket *in, int flush){$/;"	f	file:
av_interleave_packet_per_dts	libavformat/utils.c	/^static int av_interleave_packet_per_dts(AVFormatContext *s, AVPacket *out, AVPacket *pkt, int flush){$/;"	f	file:
av_interleaved_write_frame	libavformat/utils.c	/^int av_interleaved_write_frame(AVFormatContext *s, AVPacket *pkt){$/;"	f
av_log	libavcodec/utils.c	/^void av_log(void* avcl, int level, const char *fmt, ...)$/;"	f
av_log2	libavcodec/common.h	/^static inline int av_log2(unsigned int v)$/;"	f
av_log2_16bit	libavcodec/common.h	/^static inline int av_log2_16bit(unsigned int v)$/;"	f
av_log2_i	libavcodec/integer.c	/^int av_log2_i(AVInteger a){$/;"	f
av_log_callback	libavcodec/utils.c	/^static void (*av_log_callback)(void*, int, const char*, va_list) = av_log_default_callback;$/;"	v	file:
av_log_default_callback	libavcodec/utils.c	/^static void av_log_default_callback(void* ptr, int level, const char* fmt, va_list vl)$/;"	f	file:
av_log_get_level	libavcodec/utils.c	/^int av_log_get_level(void)$/;"	f
av_log_level	libavcodec/utils.c	/^static int av_log_level = AV_LOG_INFO;$/;"	v	file:
av_log_set_callback	libavcodec/utils.c	/^void av_log_set_callback(void (*callback)(void*, int, const char*, va_list))$/;"	f
av_log_set_level	libavcodec/utils.c	/^void av_log_set_level(int level)$/;"	f
av_malloc	libavcodec/mem.c	/^void *av_malloc(unsigned int size)$/;"	f
av_mallocz	libavcodec/utils.c	/^void *av_mallocz(unsigned int size)$/;"	f
av_mallocz_static	libavcodec/utils.c	/^void *av_mallocz_static(unsigned int size)$/;"	f
av_mod_i	libavcodec/integer.c	/^AVInteger av_mod_i(AVInteger *quot, AVInteger a, AVInteger b){$/;"	f
av_mpeg4_decode_header	libavcodec/parser.c	/^static int av_mpeg4_decode_header(AVCodecParserContext *s1, $/;"	f	file:
av_mul_i	libavcodec/integer.c	/^AVInteger av_mul_i(AVInteger a, AVInteger b){$/;"	f
av_mul_q	libavcodec/rational.c	/^AVRational av_mul_q(AVRational b, AVRational c){$/;"	f
av_new_packet	libavformat/utils.c	/^int av_new_packet(AVPacket *pkt, int size)$/;"	f
av_new_stream	libavformat/utils.c	/^AVStream *av_new_stream(AVFormatContext *s, int id)$/;"	f
av_open_input_file	libavformat/utils.c	/^int av_open_input_file(AVFormatContext **ic_ptr, const char *filename, $/;"	f
av_open_input_stream	libavformat/utils.c	/^int av_open_input_stream(AVFormatContext **ic_ptr, $/;"	f
av_parser_close	libavcodec/parser.c	/^void av_parser_close(AVCodecParserContext *s)$/;"	f
av_parser_init	libavcodec/parser.c	/^AVCodecParserContext *av_parser_init(int codec_id)$/;"	f
av_parser_parse	libavcodec/parser.c	/^int av_parser_parse(AVCodecParserContext *s, $/;"	f
av_pkt_dump	libavformat/utils.c	/^void av_pkt_dump(FILE *f, AVPacket *pkt, int dump_payload)$/;"	f
av_probe_image_format	libavformat/utils.c	/^AVImageFormat *av_probe_image_format(AVProbeData *pd)$/;"	f
av_probe_input_format	libavformat/utils.c	/^AVInputFormat *av_probe_input_format(AVProbeData *pd, int is_opened)$/;"	f
av_q2d	libavcodec/rational.h	/^static inline double av_q2d(AVRational a){$/;"	f
av_read_frame	libavformat/utils.c	/^int av_read_frame(AVFormatContext *s, AVPacket *pkt)$/;"	f
av_read_frame_flush	libavformat/utils.c	/^static void av_read_frame_flush(AVFormatContext *s)$/;"	f	file:
av_read_frame_internal	libavformat/utils.c	/^static int av_read_frame_internal(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
av_read_image	libavformat/utils.c	/^int av_read_image(ByteIOContext *pb, const char *filename,$/;"	f
av_read_packet	libavformat/utils.c	/^int av_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f
av_read_pause	libavformat/utils.c	/^int av_read_pause(AVFormatContext *s)$/;"	f
av_read_play	libavformat/utils.c	/^int av_read_play(AVFormatContext *s)$/;"	f
av_realloc	libavcodec/mem.c	/^void *av_realloc(void *ptr, unsigned int size)$/;"	f
av_realloc_static	libavcodec/utils.c	/^void *av_realloc_static(void *ptr, unsigned int size)$/;"	f
av_reduce	libavcodec/utils.c	/^int av_reduce(int *dst_nom, int *dst_den, int64_t nom, int64_t den, int64_t max){$/;"	f
av_register_all	libavformat/allformats.c	/^void av_register_all(void)$/;"	f
av_register_codec_parser	libavcodec/parser.c	/^void av_register_codec_parser(AVCodecParser *parser)$/;"	f
av_register_image_format	libavformat/utils.c	/^void av_register_image_format(AVImageFormat *img_fmt)$/;"	f
av_register_input_format	libavformat/raw.c	695;"	d	file:
av_register_input_format	libavformat/utils.c	/^void av_register_input_format(AVInputFormat *format)$/;"	f
av_register_output_format	libavformat/raw.c	692;"	d	file:
av_register_output_format	libavformat/utils.c	/^void av_register_output_format(AVOutputFormat *format)$/;"	f
av_resample	libavcodec/resample2.c	/^int av_resample(AVResampleContext *c, short *dst, short *src, int *consumed, int src_size, int dst_size, int update_ctx){$/;"	f
av_resample_close	libavcodec/resample2.c	/^void av_resample_close(AVResampleContext *c){$/;"	f
av_resample_compensate	libavcodec/resample2.c	/^void av_resample_compensate(AVResampleContext *c, int sample_delta, int compensation_distance){$/;"	f
av_resample_init	libavcodec/resample2.c	/^AVResampleContext *av_resample_init(int out_rate, int in_rate, int filter_size, int phase_shift, int linear, double cutoff){$/;"	f
av_rescale	libavcodec/utils.c	/^int64_t av_rescale(int64_t a, int64_t b, int64_t c){$/;"	f
av_rescale_q	libavcodec/utils.c	/^int64_t av_rescale_q(int64_t a, AVRational bq, AVRational cq){$/;"	f
av_rescale_rnd	libavcodec/utils.c	/^int64_t av_rescale_rnd(int64_t a, int64_t b, int64_t c, enum AVRounding rnd){$/;"	f
av_seek_frame	libavformat/utils.c	/^int av_seek_frame(AVFormatContext *s, int stream_index, int64_t timestamp, int flags)$/;"	f
av_seek_frame_binary	libavformat/utils.c	/^int av_seek_frame_binary(AVFormatContext *s, int stream_index, int64_t target_ts, int flags){$/;"	f
av_seek_frame_byte	libavformat/utils.c	/^static int av_seek_frame_byte(AVFormatContext *s, int stream_index, int64_t pos, int flags){$/;"	f	file:
av_seek_frame_generic	libavformat/utils.c	/^static int av_seek_frame_generic(AVFormatContext *s, $/;"	f	file:
av_set_parameters	libavformat/utils.c	/^int av_set_parameters(AVFormatContext *s, AVFormatParameters *ap)$/;"	f
av_set_pts_info	libavformat/utils.c	/^void av_set_pts_info(AVStream *s, int pts_wrap_bits,$/;"	f
av_shr_i	libavcodec/integer.c	/^AVInteger av_shr_i(AVInteger a, int s){$/;"	f
av_str2id	libavformat/img2.c	/^static enum CodecID av_str2id(const IdStrMap *tags, const char *str)$/;"	f	file:
av_strdup	libavcodec/utils.c	/^char *av_strdup(const char *s)$/;"	f
av_sub_i	libavcodec/integer.c	/^AVInteger av_sub_i(AVInteger a, AVInteger b){$/;"	f
av_sub_q	libavcodec/rational.c	/^AVRational av_sub_q(AVRational b, AVRational c){$/;"	f
av_sync_type	ffplay.c	/^    int av_sync_type;$/;"	m	struct:VideoState	file:
av_sync_type	ffplay.c	/^static int av_sync_type = AV_SYNC_AUDIO_MASTER;$/;"	v	file:
av_thread_lib_ben	libavcodec/beosthread.c	/^static struct benaphore av_thread_lib_ben;$/;"	v	file:
av_update_cur_dts	libavformat/utils.c	/^static void av_update_cur_dts(AVFormatContext *s, AVStream *ref_st, int64_t timestamp){$/;"	f	file:
av_update_stream_timings	libavformat/utils.c	/^static void av_update_stream_timings(AVFormatContext *ic)$/;"	f	file:
av_vlog	libavcodec/utils.c	/^void av_vlog(void* avcl, int level, const char *fmt, va_list vl)$/;"	f
av_write_frame	libavformat/utils.c	/^int av_write_frame(AVFormatContext *s, AVPacket *pkt)$/;"	f
av_write_header	libavformat/utils.c	/^int av_write_header(AVFormatContext *s)$/;"	f
av_write_image	libavformat/utils.c	/^int av_write_image(ByteIOContext *pb, AVImageFormat *fmt, AVImageInfo *img)$/;"	f
av_write_trailer	libavformat/utils.c	/^int av_write_trailer(AVFormatContext *s)$/;"	f
av_xiphlacing	libavcodec/utils.c	/^unsigned int av_xiphlacing(unsigned char *s, unsigned int v)$/;"	f
avail	libavformat/dv1394.c	/^    int avail;  \/* Number of frames available for reading *\/$/;"	m	struct:dv1394_data	file:
avccontext	libavcodec/vorbis.h	/^    AVCodecContext *avccontext;$/;"	m
avcodec_align_dimensions	libavcodec/utils.c	/^void avcodec_align_dimensions(AVCodecContext *s, int *width, int *height){$/;"	f
avcodec_alloc_context	libavcodec/utils.c	/^AVCodecContext *avcodec_alloc_context(void){$/;"	f
avcodec_alloc_frame	libavcodec/utils.c	/^AVFrame *avcodec_alloc_frame(void){$/;"	f
avcodec_build	libavcodec/utils.c	/^unsigned avcodec_build( void )$/;"	f
avcodec_check_dimensions	libavcodec/utils.c	/^int avcodec_check_dimensions(void *av_log_ctx, unsigned int w, unsigned int h){$/;"	f
avcodec_close	libavcodec/utils.c	/^int avcodec_close(AVCodecContext *avctx)$/;"	f
avcodec_decode_audio	libavcodec/utils.c	/^int avcodec_decode_audio(AVCodecContext *avctx, int16_t *samples, $/;"	f
avcodec_decode_video	libavcodec/utils.c	/^int avcodec_decode_video(AVCodecContext *avctx, AVFrame *picture, $/;"	f
avcodec_default_execute	libavcodec/utils.c	/^int avcodec_default_execute(AVCodecContext *c, int (*func)(AVCodecContext *c2, void *arg2),void **arg, int *ret, int count){$/;"	f
avcodec_default_free_buffers	libavcodec/utils.c	/^void avcodec_default_free_buffers(AVCodecContext *s){$/;"	f
avcodec_default_get_buffer	libavcodec/utils.c	/^int avcodec_default_get_buffer(AVCodecContext *s, AVFrame *pic){$/;"	f
avcodec_default_get_format	libavcodec/utils.c	/^enum PixelFormat avcodec_default_get_format(struct AVCodecContext *s, const enum PixelFormat * fmt){$/;"	f
avcodec_default_reget_buffer	libavcodec/utils.c	/^int avcodec_default_reget_buffer(AVCodecContext *s, AVFrame *pic){$/;"	f
avcodec_default_release_buffer	libavcodec/utils.c	/^void avcodec_default_release_buffer(AVCodecContext *s, AVFrame *pic){$/;"	f
avcodec_encode_audio	libavcodec/utils.c	/^int avcodec_encode_audio(AVCodecContext *avctx, uint8_t *buf, int buf_size, $/;"	f
avcodec_encode_video	libavcodec/utils.c	/^int avcodec_encode_video(AVCodecContext *avctx, uint8_t *buf, int buf_size, $/;"	f
avcodec_find_best_pix_fmt	libavcodec/imgconvert.c	/^int avcodec_find_best_pix_fmt(int pix_fmt_mask, int src_pix_fmt,$/;"	f
avcodec_find_best_pix_fmt1	libavcodec/imgconvert.c	/^static int avcodec_find_best_pix_fmt1(int pix_fmt_mask, $/;"	f	file:
avcodec_find_decoder	libavcodec/utils.c	/^AVCodec *avcodec_find_decoder(enum CodecID id)$/;"	f
avcodec_find_decoder_by_name	libavcodec/utils.c	/^AVCodec *avcodec_find_decoder_by_name(const char *name)$/;"	f
avcodec_find_encoder	libavcodec/utils.c	/^AVCodec *avcodec_find_encoder(enum CodecID id)$/;"	f
avcodec_find_encoder_by_name	libavcodec/utils.c	/^AVCodec *avcodec_find_encoder_by_name(const char *name)$/;"	f
avcodec_flush_buffers	libavcodec/utils.c	/^void avcodec_flush_buffers(AVCodecContext *avctx)$/;"	f
avcodec_get_chroma_sub_sample	libavcodec/imgconvert.c	/^void avcodec_get_chroma_sub_sample(int pix_fmt, int *h_shift, int *v_shift)$/;"	f
avcodec_get_context_defaults	libavcodec/utils.c	/^void avcodec_get_context_defaults(AVCodecContext *s){$/;"	f
avcodec_get_frame_defaults	libavcodec/utils.c	/^void avcodec_get_frame_defaults(AVFrame *pic){$/;"	f
avcodec_get_pix_fmt	libavcodec/imgconvert.c	/^enum PixelFormat avcodec_get_pix_fmt(const char* name)$/;"	f
avcodec_get_pix_fmt_loss	libavcodec/imgconvert.c	/^int avcodec_get_pix_fmt_loss(int dst_pix_fmt, int src_pix_fmt,$/;"	f
avcodec_get_pix_fmt_name	libavcodec/imgconvert.c	/^const char *avcodec_get_pix_fmt_name(int pix_fmt)$/;"	f
avcodec_init	libavcodec/utils.c	/^void avcodec_init(void)$/;"	f
avcodec_open	libavcodec/utils.c	/^int avcodec_open(AVCodecContext *avctx, AVCodec *codec)$/;"	f
avcodec_pix_fmt_to_codec_tag	libavcodec/raw.c	/^unsigned int avcodec_pix_fmt_to_codec_tag(enum PixelFormat fmt)$/;"	f
avcodec_register_all	libavcodec/allcodecs.c	/^void avcodec_register_all(void)$/;"	f
avcodec_set_dimensions	libavcodec/utils.c	/^void avcodec_set_dimensions(AVCodecContext *s, int width, int height){$/;"	f
avcodec_string	libavcodec/utils.c	/^void avcodec_string(char *buf, int buf_size, AVCodecContext *enc, int encode)$/;"	f
avcodec_thread_execute	libavcodec/beosthread.c	/^int avcodec_thread_execute(AVCodecContext *s, int (*func)(AVCodecContext *c2, void *arg2),void **arg, int *ret, int count){$/;"	f
avcodec_thread_execute	libavcodec/pthread.c	/^int avcodec_thread_execute(AVCodecContext *avctx, action_t* func, void **arg, int *ret, int job_count) $/;"	f
avcodec_thread_execute	libavcodec/w32thread.c	/^int avcodec_thread_execute(AVCodecContext *s, int (*func)(AVCodecContext *c2, void *arg2),void **arg, int *ret, int count){$/;"	f
avcodec_thread_free	libavcodec/beosthread.c	/^void avcodec_thread_free(AVCodecContext *s){$/;"	f
avcodec_thread_free	libavcodec/pthread.c	/^void avcodec_thread_free(AVCodecContext *avctx) $/;"	f
avcodec_thread_free	libavcodec/w32thread.c	/^void avcodec_thread_free(AVCodecContext *s){$/;"	f
avcodec_thread_init	libavcodec/beosthread.c	/^int avcodec_thread_init(AVCodecContext *s, int thread_count){$/;"	f
avcodec_thread_init	libavcodec/pthread.c	/^int avcodec_thread_init(AVCodecContext *avctx, int thread_count) $/;"	f
avcodec_thread_init	libavcodec/utils.c	/^int avcodec_thread_init(AVCodecContext *s, int thread_count){$/;"	f
avcodec_thread_init	libavcodec/w32thread.c	/^int avcodec_thread_init(AVCodecContext *s, int thread_count){$/;"	f
avcodec_thread_lock_lib	libavcodec/beosthread.c	/^int avcodec_thread_lock_lib(void)$/;"	f
avcodec_thread_park_workers	libavcodec/pthread.c	/^static always_inline void avcodec_thread_park_workers(ThreadContext *c, int thread_count)$/;"	f	file:
avcodec_thread_unlock_lib	libavcodec/beosthread.c	/^int avcodec_thread_unlock_lib(void)$/;"	f
avcodec_version	libavcodec/utils.c	/^unsigned avcodec_version( void )$/;"	f
avctx	libavcodec/4xm.c	/^    AVCodecContext *avctx;$/;"	m	struct:FourXContext	file:
avctx	libavcodec/8bps.c	/^	AVCodecContext *avctx;$/;"	m	struct:EightBpsContext	file:
avctx	libavcodec/aasc.c	/^    AVCodecContext *avctx;$/;"	m	struct:AascContext	file:
avctx	libavcodec/alac.c	/^    AVCodecContext *avctx;$/;"	m	file:
avctx	libavcodec/asv1.c	/^    AVCodecContext *avctx;$/;"	m	struct:ASV1Context	file:
avctx	libavcodec/beosthread.c	/^    AVCodecContext *avctx;$/;"	m	struct:ThreadContext	file:
avctx	libavcodec/cinepak.c	/^    AVCodecContext *avctx;$/;"	m	struct:CinepakContext	file:
avctx	libavcodec/cljr.c	/^    AVCodecContext *avctx;$/;"	m	struct:CLJRContext	file:
avctx	libavcodec/cyuv.c	/^    AVCodecContext *avctx;$/;"	m	struct:CyuvDecodeContext	file:
avctx	libavcodec/ffv1.c	/^    AVCodecContext *avctx;$/;"	m	struct:FFV1Context	file:
avctx	libavcodec/flac.c	/^    AVCodecContext *avctx;$/;"	m	struct:FLACContext	file:
avctx	libavcodec/flicvideo.c	/^    AVCodecContext *avctx;$/;"	m	struct:FlicDecodeContext	file:
avctx	libavcodec/fraps.c	/^    AVCodecContext *avctx;$/;"	m	struct:FrapsContext	file:
avctx	libavcodec/huffyuv.c	/^    AVCodecContext *avctx;$/;"	m	struct:HYuvContext	file:
avctx	libavcodec/idcinvideo.c	/^    AVCodecContext *avctx;$/;"	m	struct:IdcinContext	file:
avctx	libavcodec/indeo2.c	/^    AVCodecContext *avctx;$/;"	m	struct:Ir2Context	file:
avctx	libavcodec/indeo3.c	/^    AVCodecContext *avctx;$/;"	m	struct:Indeo3DecodeContext	file:
avctx	libavcodec/interplayvideo.c	/^    AVCodecContext *avctx;$/;"	m	struct:IpvideoContext	file:
avctx	libavcodec/lcl.c	/^	AVCodecContext *avctx;$/;"	m	struct:LclContext	file:
avctx	libavcodec/loco.c	/^    AVCodecContext *avctx;$/;"	m	struct:LOCOContext	file:
avctx	libavcodec/mdec.c	/^    AVCodecContext *avctx;$/;"	m	struct:MDECContext	file:
avctx	libavcodec/mjpeg.c	/^    AVCodecContext *avctx;$/;"	m	struct:MJpegDecodeContext	file:
avctx	libavcodec/mpegvideo.h	/^    AVCodecContext *avctx;$/;"	m	struct:MotionEstContext
avctx	libavcodec/mpegvideo.h	/^    struct AVCodecContext *avctx;$/;"	m	struct:MpegEncContext
avctx	libavcodec/msrle.c	/^    AVCodecContext *avctx;$/;"	m	struct:MsrleContext	file:
avctx	libavcodec/msvideo1.c	/^    AVCodecContext *avctx;$/;"	m	struct:Msvideo1Context	file:
avctx	libavcodec/qdrw.c	/^    AVCodecContext *avctx;$/;"	m	struct:QdrawContext	file:
avctx	libavcodec/qpeg.c	/^    AVCodecContext *avctx;$/;"	m	struct:QpegContext	file:
avctx	libavcodec/qtrle.c	/^    AVCodecContext *avctx;$/;"	m	struct:QtrleContext	file:
avctx	libavcodec/roqvideo.c	/^    AVCodecContext *avctx;$/;"	m	struct:RoqContext	file:
avctx	libavcodec/rpza.c	/^    AVCodecContext *avctx;$/;"	m	struct:RpzaContext	file:
avctx	libavcodec/shorten.c	/^    AVCodecContext *avctx;$/;"	m	struct:ShortenContext	file:
avctx	libavcodec/smc.c	/^    AVCodecContext *avctx;$/;"	m	struct:SmcContext	file:
avctx	libavcodec/snow.c	/^    AVCodecContext *avctx;$/;"	m	struct:SnowContext	file:
avctx	libavcodec/svq1.c	/^    AVCodecContext *avctx;$/;"	m	struct:SVQ1Context	file:
avctx	libavcodec/truemotion1.c	/^    AVCodecContext *avctx;$/;"	m	struct:TrueMotion1Context	file:
avctx	libavcodec/tscc.c	/^    AVCodecContext *avctx;$/;"	m	struct:TsccContext	file:
avctx	libavcodec/ulti.c	/^    AVCodecContext *avctx;$/;"	m	struct:UltimotionDecodeContext	file:
avctx	libavcodec/vcr1.c	/^    AVCodecContext *avctx;$/;"	m	struct:VCR1Context	file:
avctx	libavcodec/vmdav.c	/^    AVCodecContext *avctx;$/;"	m	struct:VmdAudioContext	file:
avctx	libavcodec/vmdav.c	/^    AVCodecContext *avctx;$/;"	m	struct:VmdVideoContext	file:
avctx	libavcodec/vp3.c	/^    AVCodecContext *avctx;$/;"	m	struct:Vp3DecodeContext	file:
avctx	libavcodec/vqavideo.c	/^    AVCodecContext *avctx;$/;"	m	struct:VqaContext	file:
avctx	libavcodec/w32thread.c	/^    AVCodecContext *avctx;$/;"	m	struct:ThreadContext	file:
avctx	libavcodec/wnv1.c	/^    AVCodecContext *avctx;$/;"	m	struct:WNV1Context	file:
avctx	libavcodec/xan.c	/^    AVCodecContext *avctx;$/;"	m	struct:XanContext	file:
avctx	libavcodec/xl.c	/^    AVCodecContext *avctx;$/;"	m	struct:VideoXLContext	file:
avf	libavformat/nut.c	/^    AVFormatContext *avf;$/;"	m	file:
avg	libavcodec/sh4/dsputil_align.c	47;"	d	file:
avg2	libavcodec/alpha/dsputil_alpha.c	/^static inline uint64_t avg2(uint64_t a, uint64_t b)$/;"	f	file:
avg2	libavcodec/alpha/motion_est_alpha.c	/^static inline uint64_t avg2(uint64_t a, uint64_t b)$/;"	f	file:
avg2	libavcodec/dsputil.c	1081;"	d	file:
avg2	libavcodec/roqvideo.c	45;"	d	file:
avg2	libavcodec/sh4/qpel.c	364;"	d	file:
avg2_no_rnd	libavcodec/alpha/dsputil_alpha.c	/^static inline uint64_t avg2_no_rnd(uint64_t a, uint64_t b)$/;"	f	file:
avg4	libavcodec/alpha/motion_est_alpha.c	/^static inline uint64_t avg4(uint64_t l1, uint64_t l2, uint64_t l3, uint64_t l4)$/;"	f	file:
avg4	libavcodec/dsputil.c	1082;"	d	file:
avg4	libavcodec/roqvideo.c	46;"	d	file:
avg4	libavcodec/sh4/qpel.c	365;"	d	file:
avg_bitrate	libavformat/mov.c	/^    uint32_t avg_bitrate;$/;"	m	file:
avg_bits_per_pixel	libavcodec/imgconvert.c	/^static int avg_bits_per_pixel(int pix_fmt)$/;"	f	file:
avg_frame_size	ffserver.c	/^    float avg_frame_size;   \/* frame size averraged over last frames with exponential mean *\/$/;"	m	struct:FeedData	file:
avg_h264_chroma_pixels_tab	libavcodec/dsputil.h	/^    h264_chroma_mc_func avg_h264_chroma_pixels_tab[3];$/;"	m	struct:DSPContext
avg_h264_qpel_pixels_tab	libavcodec/dsputil.h	/^    qpel_mc_func avg_h264_qpel_pixels_tab[3][16];$/;"	m	struct:DSPContext
avg_no_rnd_pixels16_c	libavcodec/sh4/dsputil_align.c	320;"	d	file:
avg_no_rnd_pixels16_o	libavcodec/sh4/dsputil_align.c	311;"	d	file:
avg_no_rnd_pixels8_c	libavcodec/sh4/dsputil_align.c	319;"	d	file:
avg_no_rnd_pixels8_o	libavcodec/sh4/dsputil_align.c	310;"	d	file:
avg_no_rnd_pixels_tab	libavcodec/dsputil.h	/^    op_pixels_func avg_no_rnd_pixels_tab[4][4];$/;"	m	struct:DSPContext
avg_no_rnd_qpel_pixels_tab	libavcodec/dsputil.h	/^    qpel_mc_func avg_no_rnd_qpel_pixels_tab[2][16];$/;"	m	struct:DSPContext
avg_pixels16	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(avg_pixels16)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f
avg_pixels16_altivec	libavcodec/ppc/dsputil_altivec.c	/^void avg_pixels16_altivec(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
avg_pixels16_c	libavcodec/sh4/dsputil_align.c	316;"	d	file:
avg_pixels16_l2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(avg_pixels16_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f
avg_pixels16_l2	libavcodec/ppc/dsputil_h264_altivec.c	/^} static inline void avg_pixels16_l2(uint8_t * dst, const uint8_t * src1, const uint8_t * src2, int dst_stride, int src_stride1, int src_stride2, int h) {$/;"	f	file:
avg_pixels16_l2_altivec	libavcodec/ppc/dsputil_h264_altivec.c	225;"	d	file:
avg_pixels16_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void avg_pixels16_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
avg_pixels16_x2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(avg_pixels16_x2)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f
avg_pixels16_x2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void avg_pixels16_x2_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
avg_pixels16_xy2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(avg_pixels16_xy2)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f
avg_pixels16_xy2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void avg_pixels16_xy2_mlib(uint8_t * dest, const uint8_t * ref,$/;"	f	file:
avg_pixels16_y2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(avg_pixels16_y2)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f
avg_pixels16_y2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void avg_pixels16_y2_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
avg_pixels4_c	libavcodec/sh4/dsputil_align.c	/^static void avg_pixels4_c(uint8_t *dest,const uint8_t *ref, const int stride,int height)$/;"	f	file:
avg_pixels4_l2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(avg_pixels4_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f
avg_pixels8	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(avg_pixels8)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
avg_pixels8_altivec	libavcodec/ppc/dsputil_altivec.c	/^void avg_pixels8_altivec(uint8_t * block, const uint8_t * pixels, int line_size, int h)$/;"	f
avg_pixels8_c	libavcodec/sh4/dsputil_align.c	315;"	d	file:
avg_pixels8_l2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(avg_pixels8_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f
avg_pixels8_l2	libavcodec/ppc/dsputil_h264_altivec.c	/^} static inline void avg_pixels8_l2(uint8_t * dst, const uint8_t * src1, const uint8_t * src2, int dst_stride, int src_stride1, int src_stride2, int h) {$/;"	f	file:
avg_pixels8_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void avg_pixels8_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
avg_pixels8_x2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(avg_pixels8_x2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
avg_pixels8_x2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void avg_pixels8_x2_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
avg_pixels8_xy2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(avg_pixels8_xy2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
avg_pixels8_xy2_altivec	libavcodec/ppc/dsputil_altivec.c	/^void avg_pixels8_xy2_altivec(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
avg_pixels8_xy2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void avg_pixels8_xy2_mlib(uint8_t * dest, const uint8_t * ref,$/;"	f	file:
avg_pixels8_y2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(avg_pixels8_y2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
avg_pixels8_y2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void avg_pixels8_y2_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
avg_pixels_tab	libavcodec/dsputil.h	/^    op_pixels_func avg_pixels_tab[4][4];$/;"	m	struct:DSPContext
avg_qpel_pixels_tab	libavcodec/dsputil.h	/^    qpel_mc_func avg_qpel_pixels_tab[2][16];$/;"	m	struct:DSPContext
avg_tpel_pixels_mc00_c	libavcodec/dsputil.c	/^static inline void avg_tpel_pixels_mc00_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
avg_tpel_pixels_mc01_c	libavcodec/dsputil.c	/^static inline void avg_tpel_pixels_mc01_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
avg_tpel_pixels_mc02_c	libavcodec/dsputil.c	/^static inline void avg_tpel_pixels_mc02_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
avg_tpel_pixels_mc10_c	libavcodec/dsputil.c	/^static inline void avg_tpel_pixels_mc10_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
avg_tpel_pixels_mc11_c	libavcodec/dsputil.c	/^static inline void avg_tpel_pixels_mc11_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
avg_tpel_pixels_mc12_c	libavcodec/dsputil.c	/^static inline void avg_tpel_pixels_mc12_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
avg_tpel_pixels_mc20_c	libavcodec/dsputil.c	/^static inline void avg_tpel_pixels_mc20_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
avg_tpel_pixels_mc21_c	libavcodec/dsputil.c	/^static inline void avg_tpel_pixels_mc21_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
avg_tpel_pixels_mc22_c	libavcodec/dsputil.c	/^static inline void avg_tpel_pixels_mc22_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
avg_tpel_pixels_tab	libavcodec/dsputil.h	/^    tpel_mc_func avg_tpel_pixels_tab[11]; \/\/FIXME individual func ptr per width?$/;"	m	struct:DSPContext
avi_get_ientry	libavformat/avienc.c	/^static inline AVIIentry* avi_get_ientry(AVIIndex* idx, int ent_id) $/;"	f	file:
avi_iformat	libavformat/avidec.c	/^static AVInputFormat avi_iformat = {$/;"	v	file:
avi_load_index	libavformat/avidec.c	/^static int avi_load_index(AVFormatContext *s)$/;"	f	file:
avi_oformat	libavformat/avienc.c	/^static AVOutputFormat avi_oformat = {$/;"	v	file:
avi_probe	libavformat/avidec.c	/^static int avi_probe(AVProbeData *p)$/;"	f	file:
avi_read_close	libavformat/avidec.c	/^static int avi_read_close(AVFormatContext *s)$/;"	f	file:
avi_read_header	libavformat/avidec.c	/^static int avi_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
avi_read_idx1	libavformat/avidec.c	/^static int avi_read_idx1(AVFormatContext *s, int size)$/;"	f	file:
avi_read_packet	libavformat/avidec.c	/^static int avi_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
avi_read_seek	libavformat/avidec.c	/^static int avi_read_seek(AVFormatContext *s, int stream_index, int64_t timestamp, int flags)$/;"	f	file:
avi_start_new_riff	libavformat/avienc.c	/^static offset_t avi_start_new_riff(AVIContext *avi, ByteIOContext *pb, $/;"	f	file:
avi_stream2fourcc	libavformat/avienc.c	/^static unsigned char* avi_stream2fourcc(unsigned char* tag, int index, $/;"	f	file:
avi_write_header	libavformat/avienc.c	/^static int avi_write_header(AVFormatContext *s)$/;"	f	file:
avi_write_idx1	libavformat/avienc.c	/^static int avi_write_idx1(AVFormatContext *s)$/;"	f	file:
avi_write_ix	libavformat/avienc.c	/^static int avi_write_ix(AVFormatContext *s)$/;"	f	file:
avi_write_packet	libavformat/avienc.c	/^static int avi_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
avi_write_trailer	libavformat/avienc.c	/^static int avi_write_trailer(AVFormatContext *s)$/;"	f	file:
avidec_init	libavformat/avidec.c	/^int avidec_init(void)$/;"	f
avienc_init	libavformat/avienc.c	/^int avienc_init(void)$/;"	f
avpicture_alloc	libavcodec/imgconvert.c	/^int avpicture_alloc(AVPicture *picture,$/;"	f
avpicture_deinterlace	libavcodec/imgconvert.c	/^int avpicture_deinterlace(AVPicture *dst, const AVPicture *src,$/;"	f
avpicture_fill	libavcodec/imgconvert.c	/^int avpicture_fill(AVPicture *picture, uint8_t *ptr,$/;"	f
avpicture_free	libavcodec/imgconvert.c	/^void avpicture_free(AVPicture *picture)$/;"	f
avpicture_get_size	libavcodec/imgconvert.c	/^int avpicture_get_size(int pix_fmt, int width, int height)$/;"	f
avpicture_layout	libavcodec/imgconvert.c	/^int avpicture_layout(const AVPicture* src, int pix_fmt, int width, int height,$/;"	f
b	libavcodec/g726.c	/^	 int b[6];            \/**< sixth order predictor coeffs *\/$/;"	m	struct:G726Context	file:
b	libavcodec/i386/mmx.h	/^	char			b[8];	\/* 8 Byte (8-bit) values *\/$/;"	m
b	libavformat/gif.c	/^    unsigned char b;$/;"	m	file:
b	tests/videogen.c	/^    int r, g, b;$/;"	m	struct:VObj	file:
b	vhook/imlib2.c	/^    int r, g, b;$/;"	m	file:
b0	libavcodec/snow.c	/^    DWTELEM *b0;$/;"	m	file:
b00	libavcodec/libpostproc/postprocess.c	/^static uint64_t __attribute__((aligned(8))) attribute_used b00= 		0x0000000000000000LL;$/;"	v	file:
b01	libavcodec/libpostproc/postprocess.c	/^static uint64_t __attribute__((aligned(8))) attribute_used b01= 		0x0101010101010101LL;$/;"	v	file:
b02	libavcodec/libpostproc/postprocess.c	/^static uint64_t __attribute__((aligned(8))) attribute_used b02= 		0x0202020202020202LL;$/;"	v	file:
b08	libavcodec/libpostproc/postprocess.c	/^static uint64_t __attribute__((aligned(8))) attribute_used b08= 		0x0808080808080808LL;$/;"	v	file:
b1	libavcodec/snow.c	/^    DWTELEM *b1;$/;"	m	file:
b2	libavcodec/snow.c	/^    DWTELEM *b2;$/;"	m	file:
b3	libavcodec/snow.c	/^    DWTELEM *b3;$/;"	m	file:
b4_stride	libavcodec/mpegvideo.h	/^    int b4_stride;             \/\/\/< 4*mb_width+1 used for some 4x4 block arrays to allow simple addressng$/;"	m	struct:MpegEncContext
b64_encode	libavformat/http.c	/^static char *b64_encode( const unsigned char *src )$/;"	f	file:
b80	libavcodec/libpostproc/postprocess.c	/^static uint64_t __attribute__((aligned(8))) attribute_used b80= 		0x8080808080808080LL;$/;"	v	file:
b8_stride	libavcodec/h264.c	/^    int b8_stride;$/;"	m	struct:H264Context	file:
b8_stride	libavcodec/mpegvideo.h	/^    int b8_stride;             \/\/\/< 2*mb_width+1 used for some 8x8 block arrays to allow simple addressng$/;"	m	struct:MpegEncContext
b_back_mv_table	libavcodec/mpegvideo.h	/^    int16_t (*b_back_mv_table)[2];       \/\/\/< MV table (1MV per MB) backward mode b-frame encoding $/;"	m	struct:MpegEncContext
b_back_mv_table_base	libavcodec/mpegvideo.h	/^    int16_t (*b_back_mv_table_base)[2];$/;"	m	struct:MpegEncContext
b_bidir_back_mv_table	libavcodec/mpegvideo.h	/^    int16_t (*b_bidir_back_mv_table)[2]; \/\/\/< MV table (1MV per MB) bidir mode b-frame encoding $/;"	m	struct:MpegEncContext
b_bidir_back_mv_table_base	libavcodec/mpegvideo.h	/^    int16_t (*b_bidir_back_mv_table_base)[2]; $/;"	m	struct:MpegEncContext
b_bidir_forw_mv_table	libavcodec/mpegvideo.h	/^    int16_t (*b_bidir_forw_mv_table)[2]; \/\/\/< MV table (1MV per MB) bidir mode b-frame encoding $/;"	m	struct:MpegEncContext
b_bidir_forw_mv_table_base	libavcodec/mpegvideo.h	/^    int16_t (*b_bidir_forw_mv_table_base)[2]; $/;"	m	struct:MpegEncContext
b_code	libavcodec/mpegvideo.h	/^    int b_code;                 \/\/\/< backward MV resolution for B Frames (mpeg4) $/;"	m	struct:MpegEncContext
b_code	libavcodec/mpegvideo.h	/^    int b_code;$/;"	m	struct:RateControlEntry
b_count	libavcodec/mpegvideo.h	/^    int b_count;$/;"	m	struct:MpegEncContext
b_direct_mv_table	libavcodec/mpegvideo.h	/^    int16_t (*b_direct_mv_table)[2];     \/\/\/< MV table (1MV per MB) direct mode b-frame encoding $/;"	m	struct:MpegEncContext
b_direct_mv_table_base	libavcodec/mpegvideo.h	/^    int16_t (*b_direct_mv_table_base)[2];$/;"	m	struct:MpegEncContext
b_field_mv_table	libavcodec/mpegvideo.h	/^    int16_t (*b_field_mv_table[2][2][2])[2];\/\/\/< MV table (4MV per MB) interlaced b-frame encoding$/;"	m	struct:MpegEncContext
b_field_mv_table_base	libavcodec/mpegvideo.h	/^    int16_t (*b_field_mv_table_base[2][2][2])[2];$/;"	m	struct:MpegEncContext
b_field_select_table	libavcodec/mpegvideo.h	/^    uint8_t (*b_field_select_table[2][2]);$/;"	m	struct:MpegEncContext
b_forw_mv_table	libavcodec/mpegvideo.h	/^    int16_t (*b_forw_mv_table)[2];       \/\/\/< MV table (1MV per MB) forward mode b-frame encoding $/;"	m	struct:MpegEncContext
b_forw_mv_table_base	libavcodec/mpegvideo.h	/^    int16_t (*b_forw_mv_table_base)[2];$/;"	m	struct:MpegEncContext
b_frame_score	libavcodec/mpegvideo.h	/^    int b_frame_score;          \/* *\/$/;"	m	struct:Picture
b_frame_strategy	libavcodec/avcodec.h	/^    int b_frame_strategy;$/;"	m	struct:AVCodecContext
b_frames	ffmpeg.c	/^static int b_frames = 0;$/;"	v	file:
b_frames_since_non_b	libavcodec/mpegvideo.h	/^    int b_frames_since_non_b;  \/\/\/< used for encoding, relative to not yet reordered input $/;"	m	struct:MpegEncContext
b_height	libavcodec/snow.c	/^    int b_height;$/;"	m	struct:SnowContext	file:
b_mb_type_info	libavcodec/h264data.h	/^static const PMbInfo b_mb_type_info[23]={$/;"	v
b_quant_factor	libavcodec/avcodec.h	/^    float b_quant_factor;$/;"	m	struct:AVCodecContext
b_quant_offset	libavcodec/avcodec.h	/^    float b_quant_offset;$/;"	m	struct:AVCodecContext
b_scratchpad	libavcodec/mpegvideo.h	/^    uint8_t *b_scratchpad;        \/\/\/< scratchpad used for writing into write only buffers$/;"	m	struct:MpegEncContext
b_strategy	ffmpeg.c	/^static int b_strategy = 0;$/;"	v	file:
b_stride	libavcodec/h264.c	/^    int b_stride; \/\/FIXME use s->b4_stride$/;"	m	struct:H264Context	file:
b_sub_mb_type_info	libavcodec/h264data.h	/^static const PMbInfo b_sub_mb_type_info[13]={$/;"	v
b_width	libavcodec/snow.c	/^    int b_width;$/;"	m	struct:SnowContext	file:
ba	libavcodec/liba52/a52_internal.h	/^    ba_t ba[5];			\/* channel bit allocation parameters *\/$/;"	m	struct:a52_state_s
ba_t	libavcodec/liba52/a52_internal.h	/^} ba_t;$/;"	t
background_color_index	libavformat/gifdec.c	/^    int background_color_index;$/;"	m	struct:GifState	file:
backup_duplicate_context	libavcodec/mpegvideo.c	/^static void backup_duplicate_context(MpegEncContext *bak, MpegEncContext *src){$/;"	f	file:
backup_mb_border	libavcodec/h264.c	/^static inline void backup_mb_border(H264Context *h, uint8_t *src_y, uint8_t *src_cb, uint8_t *src_cr, int linesize, int uvlinesize){$/;"	f	file:
backup_pair_border	libavcodec/h264.c	/^static inline void backup_pair_border(H264Context *h, uint8_t *src_y, uint8_t *src_cb, uint8_t *src_cr, int linesize, int uvlinesize){$/;"	f	file:
bai	libavcodec/liba52/a52_internal.h	/^    uint16_t bai;		\/* bit allocation information *\/$/;"	m	struct:a52_state_s
bai	libavcodec/liba52/a52_internal.h	/^    uint8_t bai;		\/* fine SNR offset, fast gain *\/$/;"	m
band	libavcodec/snow.c	/^    SubBand band[MAX_DECOMPOSITIONS][4];$/;"	m	struct:Plane	file:
band_index_long	libavcodec/mpegaudiodec.c	/^static uint16_t band_index_long[9][23];$/;"	v	file:
band_size_long	libavcodec/mpegaudiodectab.h	/^const uint8_t band_size_long[9][22] = {$/;"	v
band_size_short	libavcodec/mpegaudiodectab.h	/^const uint8_t band_size_short[9][13] = {$/;"	v
bandwidth	ffserver.c	/^    int bandwidth; \/* bandwidth, in kbits\/s *\/$/;"	m	struct:FFStream	file:
bap	libavcodec/liba52/a52_internal.h	/^    int8_t bap[256];		\/* derived channel bit allocation *\/$/;"	m
bapp_thid	libavformat/beosaudio.cpp	/^static thread_id bapp_thid;$/;"	v	file:
bapp_thread	libavformat/beosaudio.cpp	/^static int32 bapp_thread(void *arg)$/;"	f	file:
baptab	libavcodec/ac3tab.h	/^static const uint8_t baptab[64]= {$/;"	v
baptab	libavcodec/liba52/bit_allocate.c	/^static int8_t baptab[305] = {$/;"	v	file:
base	libavcodec/utils.c	/^    uint8_t *base[4];$/;"	m	struct:InternalBuffer	file:
baseDcDiff	libavcodec/libpostproc/postprocess_internal.h	/^	int baseDcDiff;$/;"	m	struct:PPMode
base_buffer	libavcodec/snow.c	/^    DWTELEM * base_buffer; \/\/\/< Buffer that this structure is caching.$/;"	m	file:
base_clock	libavformat/segafilm.c	/^    unsigned int base_clock;$/;"	m	struct:FilmDemuxContext	file:
base_offset	libavformat/nsvdec.c	/^    int  base_offset;$/;"	m	file:
base_timestamp	libavformat/rtp.c	/^    uint32_t base_timestamp;$/;"	m	struct:RTPDemuxContext	file:
baseline	vhook/drawtext.c	/^  int        baseline;$/;"	m	file:
basis	libavcodec/mpegvideo.c	/^static int16_t basis[64][64];$/;"	v	file:
bastardized_rice_decompress	libavcodec/alac.c	/^void bastardized_rice_decompress(ALACContext *alac,$/;"	f
bbits	libavformat/gifdec.c	/^    int bbits;$/;"	m	struct:GifState	file:
bbuf	libavformat/gifdec.c	/^    unsigned int bbuf;$/;"	m	struct:GifState	file:
be2me_16	libavcodec/bswap.h	127;"	d
be2me_16	libavcodec/bswap.h	134;"	d
be2me_32	libavcodec/bswap.h	128;"	d
be2me_32	libavcodec/bswap.h	135;"	d
be2me_64	libavcodec/bswap.h	129;"	d
be2me_64	libavcodec/bswap.h	136;"	d
begin	libavcodec/vorbis.h	/^    uint_fast32_t begin;$/;"	m
benaphore	libavcodec/beosthread.c	/^struct benaphore {$/;"	s	file:
bessel	libavcodec/resample2.c	/^double bessel(double x){$/;"	f
besselI0	libavcodec/liba52/imdct.c	/^static double besselI0 (double x)$/;"	f	file:
best_bits	libavcodec/mpegvideo.h	/^    int best_bits;$/;"	m	struct:MotionEstContext
best_mb	libavcodec/mpegvideo.h	/^    uint8_t *best_mb;$/;"	m	struct:MotionEstContext
beta_table	libavcodec/h264data.h	/^static const int beta_table[52] = {$/;"	v
bfraction	libavcodec/vc9.c	/^    int16_t bfraction;    \/\/\/< Relative position % anchors=> how to scale MVs$/;"	m	struct:VC9Context	file:
bg	vhook/drawtext.c	/^  int bg;$/;"	m	file:
bgcolor	vhook/drawtext.c	/^  unsigned char bgcolor[3]; \/* YUV *\/$/;"	m	file:
bgr32	libavcodec/huffyuv.c	/^    int bgr32;                              \/\/use bgr32 instead of bgr24$/;"	m	struct:HYuvContext	file:
bias	libavcodec/ffv1.c	/^    int8_t bias;$/;"	m	struct:VlcState	file:
bias	libavcodec/liba52/a52_internal.h	/^    sample_t bias;		\/* output bias *\/$/;"	m	struct:a52_state_s
bidir_refine	libavcodec/motion_est.c	/^static inline int bidir_refine(MpegEncContext * s, int mb_x, int mb_y)$/;"	f	file:
big_values	libavcodec/mpegaudiodec.c	/^    int big_values;$/;"	m	struct:GranuleDef	file:
bindir	config.mak	/^bindir=\/usr\/local\/bin$/;"	m
bit	libavcodec/dsputil.h	/^    me_cmp_func bit[5];$/;"	m	struct:DSPContext
bit8x8_c	libavcodec/dsputil.c	/^static int bit8x8_c(\/*MpegEncContext*\/ void *c, uint8_t *src1, uint8_t *src2, int stride, int h){$/;"	f	file:
bit_alloc	libavcodec/ac3enc.c	/^    AC3BitAllocParameters bit_alloc;$/;"	m	struct:AC3EncodeContext	file:
bit_alloc	libavcodec/ac3enc.c	/^static int bit_alloc(AC3EncodeContext *s,$/;"	f	file:
bit_buffer	ffmpeg.c	/^static uint8_t *bit_buffer= NULL;$/;"	v	file:
bit_buffer	libavcodec/g726.c	/^   int bit_buffer;$/;"	m	struct:AVG726Context	file:
bit_buffer_size	ffmpeg.c	/^static int bit_buffer_size= 1024*256;$/;"	v	file:
bit_copy	libavcodec/dv.c	/^static inline void bit_copy(PutBitContext *pb, GetBitContext *gb)$/;"	f	file:
bit_count	libavcodec/bitstream.h	/^    int bit_count;$/;"	m	struct:GetBitContext
bit_depth	libavcodec/png.c	/^    int bit_depth;$/;"	m	struct:PNGContext	file:
bit_depth	libavformat/png.c	/^    int bit_depth;$/;"	m	struct:PNGDecodeState	file:
bit_rate	libavcodec/ac3enc.c	/^    int bit_rate;$/;"	m	struct:AC3EncodeContext	file:
bit_rate	libavcodec/avcodec.h	/^    int bit_rate;$/;"	m	struct:AVCodecContext
bit_rate	libavcodec/mpegaudio.c	/^    int freq, bit_rate;$/;"	m	struct:MpegAudioContext	file:
bit_rate	libavcodec/mpegaudiodec.c	/^    int bit_rate;$/;"	m	struct:MPADecodeContext	file:
bit_rate	libavcodec/mpegvideo.h	/^    int bit_rate;     \/\/\/< wanted bit rate $/;"	m	struct:MpegEncContext
bit_rate	libavcodec/wmadec.c	/^    int bit_rate;$/;"	m	struct:WMADecodeContext	file:
bit_rate	libavformat/avformat.h	/^    int bit_rate;$/;"	m	struct:AVFormatContext
bit_rate	libavformat/rm.c	/^    int bit_rate;$/;"	m	file:
bit_rate_exponent	libavcodec/vc9.c	/^    uint8_t bit_rate_exponent;$/;"	m	struct:VC9Context	file:
bit_rate_tolerance	libavcodec/avcodec.h	/^    int bit_rate_tolerance; $/;"	m	struct:AVCodecContext
bit_size	libavcodec/dv.c	/^    int bit_size[4];$/;"	m	struct:EncBlockInfo	file:
bitcopy_n	libavcodec/imgconvert.c	/^static inline unsigned int bitcopy_n(unsigned int a, int n)$/;"	f	file:
bitdepth	libavformat/matroska.c	/^        bitdepth,$/;"	m	struct:MatroskaAudioTrack	file:
bitexact	ffmpeg.c	/^static int bitexact = 0;$/;"	v	file:
bitindex	libavcodec/shorten.c	/^    int bitindex;$/;"	m	struct:ShortenContext	file:
bitinv32	libavcodec/mpegaudiotab.h	/^static const int bitinv32[32] = {$/;"	v
bitmap_left	vhook/drawtext.c	/^  int        bitmap_left[ 255 ];$/;"	m	file:
bitmap_top	vhook/drawtext.c	/^  int        bitmap_top[ 255 ];$/;"	m	file:
bitmaps	vhook/drawtext.c	/^  FT_Bitmap  bitmaps[ 255 ];$/;"	m	file:
bitplane_decoding	libavcodec/vc9.c	/^static int bitplane_decoding(BitPlane *bp, VC9Context *v)$/;"	f	file:
bitrate_index	libavcodec/mpegaudio.c	/^    int bitrate_index; \/* bit rate *\/$/;"	m	struct:MpegAudioContext	file:
bitrate_maximum	libavcodec/vorbis.h	/^    uint_fast32_t bitrate_maximum;$/;"	m
bitrate_minimum	libavcodec/vorbis.h	/^    uint_fast32_t bitrate_minimum;$/;"	m
bitrate_nominal	libavcodec/vorbis.h	/^    uint_fast32_t bitrate_nominal;$/;"	m
bitrtq_postproc	libavcodec/vc9.c	/^    int bitrtq_postproc;  \/\/\/< 5bits, quantized framerate-based postprocessing strength$/;"	m	struct:VC9Context	file:
bits	libavcodec/bitstream.h	/^    int bits;$/;"	m	struct:VLC
bits	libavcodec/g726.c	/^	int  bits;            \/**< bits per sample *\/$/;"	m	struct:G726Tables	file:
bits	libavcodec/huffyuv.c	/^    uint32_t bits[3][256];$/;"	m	struct:HYuvContext	file:
bits	libavcodec/mjpeg.c	/^    int bits;           \/* bits per component *\/$/;"	m	struct:MJpegDecodeContext	file:
bits	libavcodec/mpegaudiodec.c	/^    const uint8_t *bits;$/;"	m	struct:HuffTable	file:
bits	libavcodec/vmdav.c	/^    int bits;$/;"	m	struct:VmdAudioContext	file:
bits	libavformat/4xm.c	/^    int bits;$/;"	m	struct:AudioTrack	file:
bits	libavformat/psxstr.c	/^    int bits;$/;"	m	struct:StrChannel	file:
bits2qp	libavcodec/ratecontrol.c	/^static inline double bits2qp(RateControlEntry *rce, double bits){$/;"	f	file:
bits_ac_chrominance	libavcodec/mjpeg.c	/^static const uint8_t bits_ac_chrominance[17] =$/;"	v	file:
bits_ac_luminance	libavcodec/mjpeg.c	/^static const uint8_t bits_ac_luminance[17] =$/;"	v	file:
bits_dc_chrominance	libavcodec/mjpeg.c	/^static const uint8_t bits_dc_chrominance[17] =$/;"	v	file:
bits_dc_luminance	libavcodec/mjpeg.c	/^static const uint8_t bits_dc_luminance[17] =$/;"	v	file:
bits_left	libavcodec/g726.c	/^   int bits_left;$/;"	m	struct:AVG726Context	file:
bits_left	libavcodec/liba52/a52_internal.h	/^    uint32_t bits_left;$/;"	m	struct:a52_state_s
bits_per_pixel	libavcodec/png.c	/^    int bits_per_pixel;$/;"	m	struct:PNGContext	file:
bits_per_pixel	libavformat/gifdec.c	/^    int bits_per_pixel;$/;"	m	struct:GifState	file:
bits_per_pixel	libavformat/png.c	/^    int bits_per_pixel;$/;"	m	struct:PNGDecodeState	file:
bits_per_sample	libavcodec/avcodec.h	/^     int bits_per_sample;$/;"	m	struct:AVCodecContext
bits_to_store	libavcodec/sonic.c	/^static int bits_to_store(uint64_t x)$/;"	f	file:
bitshift	libavcodec/shorten.c	/^    int bitshift;$/;"	m	struct:ShortenContext	file:
bitstream	libavcodec/flac.c	/^    uint8_t *bitstream;$/;"	m	struct:FLACContext	file:
bitstream	libavcodec/shorten.c	/^    uint8_t *bitstream;$/;"	m	struct:ShortenContext	file:
bitstream_bpp	libavcodec/huffyuv.c	/^    int bitstream_bpp;$/;"	m	struct:HYuvContext	file:
bitstream_buffer	libavcodec/4xm.c	/^    uint8_t *bitstream_buffer;$/;"	m	struct:FourXContext	file:
bitstream_buffer	libavcodec/asv1.c	/^    uint8_t *bitstream_buffer;$/;"	m	struct:ASV1Context	file:
bitstream_buffer	libavcodec/huffyuv.c	/^    uint8_t *bitstream_buffer;$/;"	m	struct:HYuvContext	file:
bitstream_buffer	libavcodec/mdec.c	/^    uint8_t *bitstream_buffer;$/;"	m	struct:MDECContext	file:
bitstream_buffer	libavcodec/mpegvideo.h	/^    uint8_t *bitstream_buffer; \/\/Divx 5.01 puts several frames in a single one, this is used to reorder them$/;"	m	struct:MpegEncContext
bitstream_buffer_size	libavcodec/4xm.c	/^    int bitstream_buffer_size;$/;"	m	struct:FourXContext	file:
bitstream_buffer_size	libavcodec/asv1.c	/^    int bitstream_buffer_size;$/;"	m	struct:ASV1Context	file:
bitstream_buffer_size	libavcodec/huffyuv.c	/^    int bitstream_buffer_size;$/;"	m	struct:HYuvContext	file:
bitstream_buffer_size	libavcodec/mdec.c	/^    int bitstream_buffer_size;$/;"	m	struct:MDECContext	file:
bitstream_buffer_size	libavcodec/mpegvideo.h	/^    int bitstream_buffer_size;$/;"	m	struct:MpegEncContext
bitstream_fill_current	libavcodec/liba52/bitstream.c	/^static inline void bitstream_fill_current (a52_state_t * state)$/;"	f	file:
bitstream_get	libavcodec/liba52/bitstream.h	/^static inline uint32_t bitstream_get (a52_state_t * state, uint32_t num_bits)$/;"	f
bitstream_get_2	libavcodec/liba52/bitstream.h	/^static inline int32_t bitstream_get_2 (a52_state_t * state, uint32_t num_bits)$/;"	f
bitstream_index	libavcodec/flac.c	/^    int bitstream_index;$/;"	m	struct:FLACContext	file:
bitstream_index	libavcodec/shorten.c	/^    int bitstream_index;$/;"	m	struct:ShortenContext	file:
bitstream_restriction_flag	libavcodec/h264.c	/^    int bitstream_restriction_flag;$/;"	m	struct:SPS	file:
bitstream_size	libavcodec/flac.c	/^    int bitstream_size;$/;"	m	struct:FLACContext	file:
bitstream_size	libavcodec/shorten.c	/^    int bitstream_size;$/;"	m	struct:ShortenContext	file:
biweight_h264_pixels_tab	libavcodec/dsputil.h	/^    h264_biweight_func biweight_h264_pixels_tab[10];$/;"	m	struct:DSPContext
blah	libavcodec/a52dec.c	/^static inline int blah (int32_t i)$/;"	f	file:
blah	libavcodec/ac3dec.c	/^static inline int blah (int32_t i)$/;"	f	file:
block	libavcodec/4xm.c	/^    DCTELEM __align8 block[6][64];$/;"	m	struct:FourXContext	file:
block	libavcodec/asv1.c	/^    DCTELEM __align8 block[6][64];$/;"	m	struct:ASV1Context	file:
block	libavcodec/dct-test.c	/^static DCTELEM block[64] __attribute__ ((aligned (8)));$/;"	v	file:
block	libavcodec/mdec.c	/^    DCTELEM __align8 block[6][64];$/;"	m	struct:MDECContext	file:
block	libavcodec/mpegvideo.h	/^    DCTELEM (*block)[64]; \/\/\/< points to one of the following blocks $/;"	m	struct:MpegEncContext
block	libavcodec/snow.c	/^    BlockNode *block;$/;"	m	struct:SnowContext	file:
block1	libavcodec/dct-test.c	/^static DCTELEM block1[64] __attribute__ ((aligned (8)));$/;"	v	file:
blockCopy	libavcodec/libpostproc/postprocess_template.c	/^static inline void RENAME(blockCopy)(uint8_t dst[], int dstStride, uint8_t src[], int srcStride,$/;"	f	file:
block_align	libavcodec/avcodec.h	/^    int block_align; \/\/\/< used by some WAV based audio codecs$/;"	m	struct:AVCodecContext
block_align	libavcodec/sonic.c	/^    int channels, samplerate, block_align, frame_size;$/;"	m	struct:SonicContext	file:
block_align	libavcodec/vmdav.c	/^    int block_align;$/;"	m	struct:VmdAudioContext	file:
block_align	libavcodec/wmadec.c	/^    int block_align;$/;"	m	struct:WMADecodeContext	file:
block_coords	libavcodec/ulti.c	/^static int block_coords[8] = \/\/ 4x4 block coords in 8x8 superblock$/;"	v	file:
block_height	libavcodec/truemotion1.c	/^    int block_height; \/\/ hres$/;"	m	struct:comp_types	file:
block_height	libavcodec/truemotion1.c	/^    int block_height;$/;"	m	struct:TrueMotion1Context	file:
block_idx_x	libavcodec/h264.c	/^static const uint8_t block_idx_x[16] = {$/;"	v	file:
block_idx_xy	libavcodec/h264.c	/^static const uint8_t block_idx_xy[4][4] = {$/;"	v	file:
block_idx_y	libavcodec/h264.c	/^static const uint8_t block_idx_y[16] = {$/;"	v	file:
block_index	libavcodec/mpegvideo.h	/^    int block_index[6]; \/\/\/< index to current MB in block based arrays with edges$/;"	m	struct:MpegEncContext
block_last_index	libavcodec/mdec.c	/^    int block_last_index[6];$/;"	m	struct:MDECContext	file:
block_last_index	libavcodec/mpegvideo.h	/^    int block_last_index[12];  \/\/\/< last non zero coefficient in block$/;"	m	struct:MpegEncContext
block_len	libavcodec/wmadec.c	/^    int block_len; \/* block length in samples *\/$/;"	m	struct:WMADecodeContext	file:
block_len_bits	libavcodec/wmadec.c	/^    int block_len_bits; \/* log2 of current block length *\/$/;"	m	struct:WMADecodeContext	file:
block_max_depth	libavcodec/snow.c	/^    int block_max_depth;$/;"	m	struct:SnowContext	file:
block_num	libavcodec/wmadec.c	/^    int block_num; \/* block number in current frame *\/$/;"	m	struct:WMADecodeContext	file:
block_offset	libavcodec/h264.c	/^    int block_offset[2*(16+8)];$/;"	m	struct:H264Context	file:
block_org	libavcodec/dct-test.c	/^static DCTELEM block_org[64] __attribute__ ((aligned (8)));$/;"	v	file:
block_pos	libavcodec/wmadec.c	/^    int block_pos; \/* current position in frame *\/$/;"	m	struct:WMADecodeContext	file:
block_sizes	libavcodec/dv.c	/^static const uint16_t block_sizes[6] = {$/;"	v	file:
block_state	libavcodec/snow.c	/^    uint8_t block_state[128 + 32*128];$/;"	m	struct:SnowContext	file:
block_type	libavcodec/mpegaudiodec.c	/^    uint8_t block_type;$/;"	m	struct:GranuleDef	file:
block_type	libavcodec/truemotion1.c	/^    int block_type;$/;"	m	struct:TrueMotion1Context	file:
block_type	libavcodec/truemotion1.c	/^    int block_type;$/;"	m	struct:comp_types	file:
block_type_tab	libavcodec/4xm.c	/^static const uint8_t block_type_tab[4][8][2]={$/;"	v	file:
block_type_vlc	libavcodec/4xm.c	/^static VLC block_type_vlc[4];$/;"	v	file:
block_width	libavcodec/truemotion1.c	/^    int block_width; \/\/ vres$/;"	m	struct:comp_types	file:
block_width	libavcodec/truemotion1.c	/^    int block_width;$/;"	m	struct:TrueMotion1Context	file:
block_wrap	libavcodec/mpegvideo.h	/^    int block_wrap[6];$/;"	m	struct:MpegEncContext
blockflag	libavcodec/vorbis.h	/^    uint_fast8_t blockflag;$/;"	m
blocks	libavcodec/mpegvideo.h	/^    DCTELEM (*blocks)[6][64]; \/\/ for HQ mode we need to keep the best block$/;"	m	struct:MpegEncContext
blocks	libavcodec/ulti.c	/^    int width, height, blocks;$/;"	m	struct:UltimotionDecodeContext	file:
blocksize	libavcodec/flac.c	/^    int blocksize\/*, last_blocksize*\/;$/;"	m	struct:FLACContext	file:
blocksize	libavcodec/shorten.c	/^    int blocksize;$/;"	m	struct:ShortenContext	file:
blocksize_0	libavcodec/vorbis.h	/^    uint_fast32_t blocksize_0;$/;"	m
blocksize_1	libavcodec/vorbis.h	/^    uint_fast32_t blocksize_1;$/;"	m
blocksize_table	libavcodec/flac.c	/^static int blocksize_table[] = {$/;"	v	file:
bmp	ffplay.c	/^    SDL_Overlay *bmp;$/;"	m	struct:VideoPicture	file:
bndsz	libavcodec/ac3tab.h	/^static const uint8_t bndsz[50]={$/;"	v
bndtab	libavcodec/ac3tab.h	/^static uint8_t bndtab[51]; $/;"	v
bndtab	libavcodec/liba52/bit_allocate.c	/^static int bndtab[30] = {21, 22,  23,  24,  25,  26,  27,  28,  31,  34,$/;"	v	file:
bone	libavcodec/i386/motion_est_mmx.c	/^static attribute_used __attribute__ ((aligned(8))) uint64_t bone= 0x0101010101010101LL;$/;"	v	file:
books	libavcodec/vorbis.h	/^    int_fast16_t books[64][8];$/;"	m
border_masking	libavcodec/avcodec.h	/^    float border_masking;$/;"	m	struct:AVCodecContext
bottomBand	libavcodec/imgresample.c	/^    int topBand, bottomBand, leftBand, rightBand;$/;"	m	struct:ImgReSampleContext	file:
bottom_field	libavcodec/mjpeg.c	/^    int bottom_field;   \/* true if bottom field *\/$/;"	m	struct:MJpegDecodeContext	file:
bottomrightx	libavcodec/vc9.c	/^    uint16_t bottomrightx;$/;"	m	struct:VC9Context	file:
bottomrighty	libavcodec/vc9.c	/^    uint16_t bottomrighty;$/;"	m	struct:VC9Context	file:
bounding_values_array	libavcodec/vp3.c	/^    int bounding_values_array[256];$/;"	m	struct:Vp3DecodeContext	file:
bpp	libavcodec/png.c	/^    int bpp;$/;"	m	struct:PNGContext	file:
bpp	libavcodec/tscc.c	/^    int bpp;$/;"	m	struct:TsccContext	file:
bpp	libavformat/png.c	/^    int bpp;$/;"	m	struct:PNGDecodeState	file:
bps	libavcodec/flac.c	/^    int bps, curr_bps;$/;"	m	struct:FLACContext	file:
bright	vhook/fish.c	/^    HSV dark, bright;$/;"	m	file:
brktimegm	libavformat/cutils.c	/^struct tm *brktimegm(time_t secs, struct tm *tm)$/;"	f
broadcast	libavcodec/vc9.c	/^    int broadcast;        \/\/\/< TFF\/RFF present$/;"	m	struct:VC9Context	file:
broken_link	libavcodec/mpegvideo.h	/^    int broken_link;         \/\/\/< no_output_of_prior_pics_flag$/;"	m	struct:MpegEncContext
bsid	libavcodec/ac3enc.c	/^    unsigned int bsid;$/;"	m	struct:AC3EncodeContext	file:
bsmod	libavcodec/ac3enc.c	/^    unsigned int bsmod;$/;"	m	struct:AC3EncodeContext	file:
bswap_16	libavcodec/bswap.h	/^static always_inline uint16_t bswap_16(uint16_t x) {$/;"	f
bswap_16	libavcodec/bswap.h	/^static always_inline uint16_t bswap_16(uint16_t x)$/;"	f
bswap_16	libavcodec/bswap.h	/^static always_inline uint16_t bswap_16(uint16_t x){$/;"	f
bswap_32	libavcodec/bswap.h	/^static always_inline uint32_t bswap_32(uint32_t x) {$/;"	f
bswap_32	libavcodec/bswap.h	/^static always_inline uint32_t bswap_32(uint32_t x)$/;"	f
bswap_32	libavcodec/bswap.h	/^static always_inline uint32_t bswap_32(uint32_t x){$/;"	f
bswap_64	libavcodec/bswap.h	/^static inline uint64_t bswap_64(uint64_t x)$/;"	f
bswap_buf	libavcodec/dsputil.c	/^static void bswap_buf(uint32_t *dst, uint32_t *src, int w){$/;"	f	file:
bswap_buf	libavcodec/dsputil.h	/^    void (*bswap_buf)(uint32_t *dst, uint32_t *src, int w);$/;"	m	struct:DSPContext
bswap_buf_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void bswap_buf_mlib(uint32_t *dst, uint32_t *src, int w)$/;"	f	file:
btype2mb_type	libavcodec/mpeg12data.h	/^static const uint32_t btype2mb_type[11] = {$/;"	v
buf	libavcodec/bitstream.h	/^    uint8_t *buf, *buf_end;$/;"	m	struct:PutBitContext
buf	libavcodec/dv.c	/^    uint8_t *buf;$/;"	m	struct:DVVideoContext	file:
buf	libavcodec/idcinvideo.c	/^    unsigned char *buf;$/;"	m	struct:IdcinContext	file:
buf	libavcodec/interplayvideo.c	/^    unsigned char *buf;$/;"	m	struct:IpvideoContext	file:
buf	libavcodec/msrle.c	/^    unsigned char *buf;$/;"	m	struct:MsrleContext	file:
buf	libavcodec/msvideo1.c	/^    unsigned char *buf;$/;"	m	struct:Msvideo1Context	file:
buf	libavcodec/png.c	/^    uint8_t buf[IOBUF_SIZE];$/;"	m	struct:PNGContext	file:
buf	libavcodec/qtrle.c	/^    unsigned char *buf;$/;"	m	struct:QtrleContext	file:
buf	libavcodec/roqvideo.c	/^    unsigned char *buf;$/;"	m	struct:RoqContext	file:
buf	libavcodec/rpza.c	/^    unsigned char *buf;$/;"	m	struct:RpzaContext	file:
buf	libavcodec/smc.c	/^    unsigned char *buf;$/;"	m	struct:SmcContext	file:
buf	libavcodec/snow.c	/^    DWTELEM *buf;$/;"	m	struct:SubBand	file:
buf	libavcodec/truemotion1.c	/^    uint8_t *buf;$/;"	m	struct:TrueMotion1Context	file:
buf	libavcodec/vmdav.c	/^    unsigned char *buf;$/;"	m	struct:VmdVideoContext	file:
buf	libavcodec/vqavideo.c	/^    unsigned char *buf;$/;"	m	struct:VqaContext	file:
buf	libavcodec/xan.c	/^    unsigned char *buf;$/;"	m	struct:XanContext	file:
buf	libavformat/avformat.h	/^    unsigned char *buf;$/;"	m	struct:AVProbeData
buf	libavformat/dv.c	/^    uint8_t         buf[144000];$/;"	m	struct:RawDVContext	file:
buf	libavformat/gifdec.c	/^    uint8_t buf[256];$/;"	m	struct:GifState	file:
buf	libavformat/ipmovie.c	/^    unsigned char *buf;$/;"	m	struct:IPMVEContext	file:
buf	libavformat/ogg2.h	/^    uint8_t *buf;$/;"	m	struct:ogg_stream
buf	libavformat/png.c	/^    uint8_t buf[IOBUF_SIZE];$/;"	m	struct:PNGEncodeState	file:
buf	libavformat/rtp.c	/^    uint8_t buf[RTP_MAX_PACKET_LENGTH];$/;"	m	struct:RTPDemuxContext	file:
buf1	vhook/ppm.c	/^    char *buf1;$/;"	m	file:
buf2	vhook/ppm.c	/^    char *buf2;$/;"	m	file:
buf_end	libavcodec/bitstream.h	/^    uint8_t *buf, *buf_end;$/;"	m	struct:PutBitContext
buf_end	libavformat/avio.h	/^    unsigned char *buf_ptr, *buf_end;$/;"	m
buf_end	libavformat/http.c	/^    unsigned char buffer[BUFFER_SIZE], *buf_ptr, *buf_end;$/;"	m	file:
buf_ptr	libavformat/avio.h	/^    unsigned char *buf_ptr, *buf_end;$/;"	m
buf_ptr	libavformat/http.c	/^    unsigned char buffer[BUFFER_SIZE], *buf_ptr, *buf_end;$/;"	m	file:
buf_ptr	libavformat/rtp.c	/^    uint8_t *buf_ptr;$/;"	m	struct:RTPDemuxContext	file:
buf_size	libavformat/avformat.h	/^    int buf_size;$/;"	m	struct:AVProbeData
buf_size	libavformat/ipmovie.c	/^    int buf_size;$/;"	m	struct:IPMVEContext	file:
buf_x_offset	libavcodec/snow.c	/^    int buf_x_offset;$/;"	m	struct:SubBand	file:
buf_y_offset	libavcodec/snow.c	/^    int buf_y_offset;$/;"	m	struct:SubBand	file:
buffer	ffserver.c	/^    uint8_t *buffer;$/;"	m	struct:HTTPContext	file:
buffer	libavcodec/bitstream.h	/^    const uint8_t *buffer, *buffer_end;$/;"	m	struct:GetBitContext
buffer	libavcodec/mjpeg.c	/^    uint8_t *buffer;$/;"	m	struct:MJpegDecodeContext	file:
buffer	libavcodec/mp3lameaudio.c	/^        uint8_t buffer[BUFFER_SIZE];$/;"	m	struct:Mp3AudioContext	file:
buffer	libavcodec/mpegvideo.h	/^    uint8_t *buffer;$/;"	m	struct:ParseContext
buffer	libavcodec/oggvorbis.c	/^    uint8_t buffer[BUFFER_SIZE];$/;"	m	struct:OggVorbisContext	file:
buffer	libavcodec/ra144.c	/^	unsigned int buffer[5];$/;"	m	file:
buffer	libavcodec/raw.c	/^    unsigned char * buffer;  \/* block of memory for holding one frame *\/$/;"	m	struct:RawVideoContext	file:
buffer	libavformat/audio.c	/^    uint8_t buffer[AUDIO_BLOCK_SIZE];$/;"	m	file:
buffer	libavformat/avformat.h	/^    uint8_t *buffer;$/;"	m	struct:FifoBuffer
buffer	libavformat/avio.h	/^    unsigned char *buffer;$/;"	m
buffer	libavformat/aviobuf.c	/^    uint8_t *buffer;$/;"	m	struct:DynBuffer	file:
buffer	libavformat/beosaudio.cpp	/^    uint8_t buffer[AUDIO_BUFFER_SIZE];$/;"	m	file:
buffer	libavformat/gif.c	/^    uint8_t buffer[100]; \/* data chunks *\/$/;"	m	file:
buffer	libavformat/http.c	/^    unsigned char buffer[BUFFER_SIZE], *buf_ptr, *buf_end;$/;"	m	file:
buffer	vhook/watermark.c	/^    uint8_t        *buffer;$/;"	m	file:
buffer1	libavcodec/ra144.c	/^	int buffer1[10];$/;"	m	file:
buffer1	libavcodec/xan.c	/^    unsigned char *buffer1;$/;"	m	struct:XanContext	file:
buffer2	libavcodec/ra144.c	/^	int buffer2[10];$/;"	m	file:
buffer2	libavcodec/xan.c	/^    unsigned char *buffer2;$/;"	m	struct:XanContext	file:
buffer_2	libavcodec/ra144.c	/^	unsigned short int buffer_2[148];$/;"	m	file:
buffer_a	libavcodec/ra144.c	/^	unsigned short int buffer_a[40];$/;"	m	file:
buffer_b	libavcodec/ra144.c	/^	unsigned short int buffer_b[40];$/;"	m	file:
buffer_c	libavcodec/ra144.c	/^	unsigned short int buffer_c[40];$/;"	m	file:
buffer_d	libavcodec/ra144.c	/^	unsigned short int buffer_d[40];$/;"	m	file:
buffer_end	ffserver.c	/^    uint8_t *buffer_ptr, *buffer_end;$/;"	m	struct:HTTPContext	file:
buffer_end	libavcodec/bitstream.h	/^    const uint8_t *buffer, *buffer_end;$/;"	m	struct:GetBitContext
buffer_fullness	libavcodec/vc9.c	/^    int buffer_fullness;  \/\/\/< HRD info$/;"	m	struct:VC9Context	file:
buffer_index	libavcodec/mp3lameaudio.c	/^        int buffer_index;$/;"	m	struct:Mp3AudioContext	file:
buffer_index	libavcodec/mpegvideo.h	/^    double buffer_index;          \/\/\/< amount of bits in the video\/audio buffer $/;"	m	struct:RateControlContext
buffer_index	libavcodec/oggvorbis.c	/^    int buffer_index;$/;"	m	struct:OggVorbisContext	file:
buffer_index	libavformat/mpeg.c	/^    int buffer_index;$/;"	m	file:
buffer_ptr	ffserver.c	/^    uint8_t *buffer_ptr, *buffer_end;$/;"	m	struct:HTTPContext	file:
buffer_ptr	libavcodec/bitstream.h	/^    uint32_t *buffer_ptr;$/;"	m	struct:GetBitContext
buffer_ptr	libavcodec/bitstream.h	/^    uint8_t *buffer_ptr;$/;"	m	struct:GetBitContext
buffer_ptr	libavformat/audio.c	/^    int buffer_ptr;$/;"	m	file:
buffer_ptr	libavformat/beosaudio.cpp	/^    int buffer_ptr;$/;"	m	file:
buffer_size	ffmpeg.c	/^    int buffer_size;      \/* current total buffer size *\/$/;"	m	struct:AVInputFile	file:
buffer_size	ffserver.c	/^    int buffer_size;$/;"	m	struct:HTTPContext	file:
buffer_size	libavcodec/mjpeg.c	/^    int buffer_size;$/;"	m	struct:MJpegDecodeContext	file:
buffer_size	libavcodec/mpegvideo.h	/^    int buffer_size;$/;"	m	struct:ParseContext
buffer_size	libavformat/avio.h	/^    int buffer_size;$/;"	m
buffer_size_db	libavformat/mov.c	/^    uint32_t buffer_size_db; \/\/ 24$/;"	m	file:
buffer_size_exponent	libavcodec/vc9.c	/^    uint8_t buffer_size_exponent;$/;"	m	struct:VC9Context	file:
buffer_size_max	ffmpeg.c	/^    int buffer_size_max;  \/* buffer size at which we consider we can stop$/;"	m	struct:AVInputFile	file:
buffer_start	libavcodec/liba52/a52_internal.h	/^    uint32_t * buffer_start;$/;"	m	struct:a52_state_s
bufpos	libavformat/ogg2.h	/^    unsigned int bufpos;$/;"	m	struct:ogg_stream
bufsize	libavformat/ogg2.h	/^    unsigned int bufsize;$/;"	m	struct:ogg_stream
buggy_avid	libavcodec/mjpeg.c	/^    int buggy_avid;$/;"	m	struct:MJpegDecodeContext	file:
build_basis	libavcodec/mpegvideo.c	/^static void build_basis(uint8_t *perm){$/;"	f	file:
build_feed_streams	ffserver.c	/^static void build_feed_streams(void)$/;"	f	file:
build_file_streams	ffserver.c	/^static void build_file_streams(void)$/;"	f	file:
build_frame_code	libavformat/nut.c	/^static void build_frame_code(AVFormatContext *s){$/;"	f	file:
build_huffman_codes	libavcodec/mjpeg.c	/^static void build_huffman_codes(uint8_t *huff_size, uint16_t *huff_code,$/;"	f	file:
build_modpred	libavcodec/indeo3.c	/^static void build_modpred(Indeo3DecodeContext *s) $/;"	f	file:
build_rgb_palette	libavcodec/imgconvert.c	/^static void build_rgb_palette(uint8_t *palette, int has_alpha)$/;"	f	file:
build_table	libavcodec/bitstream.c	/^static int build_table(VLC *vlc, int table_nb_bits,$/;"	f	file:
build_udp_url	libavformat/rtpproto.c	/^static void build_udp_url(char *buf, int buf_size,$/;"	f	file:
build_vlc	libavcodec/mjpeg.c	/^static int build_vlc(VLC *vlc, const uint8_t *bits_table, const uint8_t *val_table, $/;"	f	file:
build_xlaw_table	libavcodec/pcm.c	/^static void build_xlaw_table(uint8_t *linear_to_xlaw, $/;"	f	file:
byte_offset_bits	libavcodec/wmadec.c	/^    int byte_offset_bits;$/;"	m	struct:WMADecodeContext	file:
bytecopy	libavcodec/xan.c	/^static inline void bytecopy(unsigned char *dest, unsigned char *src, int count)$/;"	f	file:
bytes_per_channel	libavformat/sgi.c	/^    char bytes_per_channel;$/;"	m	struct:SGIInfo	file:
bytes_served	ffserver.c	/^    int64_t bytes_served;$/;"	m	struct:FFStream	file:
bytespersample	libavcodec/alac.c	/^    int bytespersample;$/;"	m	file:
bytestream	libavcodec/4xm.c	/^    uint8_t *bytestream;$/;"	m	struct:FourXContext	file:
bytestream	libavcodec/cabac.h	/^    const uint8_t *bytestream;$/;"	m	struct:CABACContext
bytestream	libavcodec/png.c	/^    uint8_t *bytestream;$/;"	m	struct:PNGContext	file:
bytestream	libavcodec/pnm.c	/^    uint8_t *bytestream;$/;"	m	struct:PNMContext	file:
bytestream	libavcodec/rangecoder.h	/^    uint8_t *bytestream;$/;"	m	struct:RangeCoder
bytestream_end	libavcodec/cabac.h	/^    const uint8_t *bytestream_end;$/;"	m	struct:CABACContext
bytestream_end	libavcodec/png.c	/^    uint8_t *bytestream_end;$/;"	m	struct:PNGContext	file:
bytestream_end	libavcodec/pnm.c	/^    uint8_t *bytestream_end;$/;"	m	struct:PNMContext	file:
bytestream_end	libavcodec/rangecoder.h	/^    uint8_t *bytestream_end;$/;"	m	struct:RangeCoder
bytestream_start	libavcodec/cabac.h	/^    const uint8_t *bytestream_start;$/;"	m	struct:CABACContext
bytestream_start	libavcodec/png.c	/^    uint8_t *bytestream_start;$/;"	m	struct:PNGContext	file:
bytestream_start	libavcodec/pnm.c	/^    uint8_t *bytestream_start;$/;"	m	struct:PNMContext	file:
bytestream_start	libavcodec/rangecoder.h	/^    uint8_t *bytestream_start;$/;"	m	struct:RangeCoder
c	libavcodec/fdctref.c	/^static double c[8][8]; \/* transform coefficients *\/$/;"	v	file:
c	libavcodec/ffv1.c	/^    RangeCoder c;$/;"	m	struct:FFV1Context	file:
c	libavcodec/g726.c	/^   G726Context c;$/;"	m	struct:AVG726Context	file:
c	libavcodec/imgresample.c	/^    unsigned char c[16];$/;"	m	file:
c	libavcodec/snow.c	/^    RangeCoder c;$/;"	m	struct:SnowContext	file:
c1	libavcodec/sh4/idct_sh4.c	22;"	d	file:
c1	libavcodec/sh4/idct_sh4.c	44;"	d	file:
c2	libavcodec/sh4/idct_sh4.c	23;"	d	file:
c2	libavcodec/sh4/idct_sh4.c	45;"	d	file:
c3	libavcodec/sh4/idct_sh4.c	24;"	d	file:
c3	libavcodec/sh4/idct_sh4.c	46;"	d	file:
c4	libavcodec/sh4/idct_sh4.c	25;"	d	file:
c4	libavcodec/sh4/idct_sh4.c	47;"	d	file:
c5	libavcodec/sh4/idct_sh4.c	26;"	d	file:
c5	libavcodec/sh4/idct_sh4.c	48;"	d	file:
c6	libavcodec/sh4/idct_sh4.c	27;"	d	file:
c6	libavcodec/sh4/idct_sh4.c	49;"	d	file:
c7	libavcodec/sh4/idct_sh4.c	28;"	d	file:
c7	libavcodec/sh4/idct_sh4.c	50;"	d	file:
c_ac_table_index	libavcodec/vc9.c	/^    int c_ac_table_index; \/\/\/< Chroma index from ACFRM element$/;"	m	struct:VC9Context	file:
c_block_height	libavcodec/svq1.c	/^    int c_block_height;$/;"	m	struct:SVQ1Context	file:
c_block_width	libavcodec/svq1.c	/^    int c_block_width;$/;"	m	struct:SVQ1Context	file:
c_ccir_to_jpeg	libavcodec/imgconvert.c	/^static uint8_t c_ccir_to_jpeg[256];$/;"	v	file:
c_dc_scale	libavcodec/mpegvideo.h	/^    int y_dc_scale, c_dc_scale;$/;"	m	struct:MpegEncContext
c_dc_scale_table	libavcodec/mpegvideo.h	/^    uint8_t *c_dc_scale_table;     \/\/\/< qscale -> c_dc_scale table $/;"	m	struct:MpegEncContext
c_jpeg_to_ccir	libavcodec/imgconvert.c	/^static uint8_t c_jpeg_to_ccir[256];$/;"	v	file:
c_predictor_table	libavcodec/truemotion1.c	/^    uint32_t c_predictor_table[1024];$/;"	m	struct:TrueMotion1Context	file:
c_stride	libavcodec/roqvideo.c	/^    int c_stride;$/;"	m	struct:RoqContext	file:
c_superblock_height	libavcodec/vp3.c	/^    int c_superblock_height;$/;"	m	struct:Vp3DecodeContext	file:
c_superblock_width	libavcodec/vp3.c	/^    int c_superblock_width;$/;"	m	struct:Vp3DecodeContext	file:
cabac	libavcodec/h264.c	/^    CABACContext cabac;$/;"	m	struct:H264Context	file:
cabac	libavcodec/h264.c	/^    int cabac;                  \/\/\/< entropy_coding_mode_flag$/;"	m	struct:PPS	file:
cabac_context_init_I	libavcodec/h264data.h	/^static const int cabac_context_init_I[399][2] =$/;"	v
cabac_context_init_PB	libavcodec/h264data.h	/^static const int cabac_context_init_PB[3][399][2] =$/;"	v
cabac_init_idc	libavcodec/h264.c	/^    int          cabac_init_idc;$/;"	m	struct:H264Context	file:
cabac_state	libavcodec/h264.c	/^    uint8_t      cabac_state[399];$/;"	m	struct:H264Context	file:
cache	libavcodec/bitstream.h	/^    uint32_t cache;$/;"	m	struct:GetBitContext
cache	vhook/imlib2.c	/^    struct _CachedImage *cache;$/;"	m	file:
cache0	libavcodec/bitstream.h	/^    uint32_t cache0;$/;"	m	struct:GetBitContext
cache1	libavcodec/bitstream.h	/^    uint32_t cache1;$/;"	m	struct:GetBitContext
calc_exp_diff	libavcodec/ac3enc.c	/^static int calc_exp_diff(uint8_t *exp1, uint8_t *exp2, int n)$/;"	f	file:
calc_lowcomp	libavcodec/ac3enc.c	/^static inline int calc_lowcomp(int a, int b0, int b1, int bin)$/;"	f	file:
calc_lowcomp1	libavcodec/ac3enc.c	/^static inline int calc_lowcomp1(int a, int b0, int b1)$/;"	f	file:
camera	libavformat/dc1394.c	/^    dc1394_cameracapture camera;$/;"	m	struct:dc1394_data	file:
canjump	libavcodec/ppc/dsputil_altivec.c	/^static volatile sig_atomic_t canjump = 0;$/;"	v	file:
canjump	libavcodec/sparc/dsputil_vis.c	/^static volatile sig_atomic_t canjump = 0;$/;"	v	file:
capabilities	libavcodec/avcodec.h	/^    int capabilities;$/;"	m	struct:AVCodec
cbp	libavcodec/h264data.h	/^    uint8_t cbp;$/;"	m	struct:IMbInfo
cbp_table	libavcodec/h264.c	/^    uint16_t     *cbp_table;$/;"	m	struct:H264Context	file:
cbp_table	libavcodec/mpegvideo.h	/^    uint8_t *cbp_table;           \/\/\/< used to store cbp, ac_pred for partitioned decoding $/;"	m	struct:MpegEncContext
cbp_table_index	libavcodec/wmv2.c	/^    int cbp_table_index;$/;"	m	struct:Wmv2Context	file:
cbpc_b_tab	libavcodec/h263data.h	/^const uint8_t cbpc_b_tab[4][2] = {$/;"	v
cbpc_b_vlc	libavcodec/h263.c	/^static VLC cbpc_b_vlc;$/;"	v	file:
cbpcy_vlc	libavcodec/vc9.c	/^    VLC *cbpcy_vlc;               \/\/\/< CBPCY VLC table$/;"	m	struct:VC9Context	file:
cbpy_tab	libavcodec/h263data.h	/^const uint8_t cbpy_tab[16][2] =$/;"	v
cbpy_vlc	libavcodec/h263.c	/^static VLC cbpy_vlc;$/;"	v	file:
cbpy_vlc	libavcodec/msmpeg4.c	/^static VLC cbpy_vlc;$/;"	v	file:
cc	libavformat/mpegtsenc.c	/^    int cc;$/;"	m	struct:MpegTSSection	file:
cc	libavformat/mpegtsenc.c	/^    int cc;$/;"	m	struct:MpegTSWriteStream	file:
ccp_tab	libavcodec/asv1.c	/^static const uint8_t ccp_tab[17][2]={$/;"	v	file:
ccp_vlc	libavcodec/asv1.c	/^static VLC ccp_vlc;$/;"	v	file:
cdt	libavcodec/truemotion1.c	/^    int16_t cdt[8];$/;"	m	struct:TrueMotion1Context	file:
cdt1	libavcodec/truemotion1data.h	/^static int16_t cdt1[8] = { 0, -1, 1, -2, 3, -4, 5, -4 };$/;"	v
cdt2	libavcodec/truemotion1data.h	/^static int16_t cdt2[8] = { 0, -4, 3, -16, 20, -32, 36, -32 };$/;"	v
cdt3	libavcodec/truemotion1data.h	/^static int16_t cdt3[8] = { 0, -2, 2, -8, 8, -18, 18, -40 };$/;"	v
cdts	libavcodec/truemotion1data.h	/^static int16_t *cdts[] = { cdt1, cdt2, cdt3, cdt3, NULL };$/;"	v
cells	libavcodec/roqvideo.c	/^    roq_cell cells[256];$/;"	m	struct:RoqContext	file:
cfrm	libavcodec/4xm.c	/^    CFrameBuffer cfrm[CFRAME_BUFFER_COUNT];$/;"	m	struct:FourXContext	file:
cfrm_TAG	libavformat/4xm.c	44;"	d	file:
ch_id	libavformat/swf.c	/^    int ch_id;$/;"	m	file:
chan_cfg	libavcodec/mpegaudiodec.c	/^    int chan_cfg; \/\/\/< channel config number$/;"	m	struct:MP3On4DecodeContext	file:
chan_offset	libavcodec/mpegaudiodec.c	/^static int chan_offset[9][5] = {$/;"	v	file:
channel	libavcodec/adpcm.c	/^    int channel; \/* for stereo MOVs, decode left, then decode right, then tell it's decoded *\/$/;"	m	struct:ADPCMContext	file:
channel	libavformat/avformat.h	/^    int channel; \/* used to select dv channel *\/$/;"	m	struct:AVFormatParameters
channel	libavformat/dv1394.c	/^    int channel;$/;"	m	struct:dv1394_data	file:
channel	libavformat/dv1394.h	/^	unsigned int channel;$/;"	m	struct:dv1394_init
channel_coded	libavcodec/wmadec.c	/^    uint8_t channel_coded[MAX_CHANNELS]; \/* true if channel is coded *\/$/;"	m	struct:WMADecodeContext	file:
channel_floors	libavcodec/vorbis.h	/^    float *channel_floors;$/;"	m
channel_residues	libavcodec/vorbis.h	/^    float *channel_residues;$/;"	m
channels	libavcodec/a52dec.c	/^    int channels;$/;"	m	struct:AC3DecodeState	file:
channels	libavcodec/ac3dec.c	/^    int channels;$/;"	m	struct:AC3DecodeState	file:
channels	libavcodec/avcodec.h	/^    int channels;$/;"	m	struct:AVCodecContext
channels	libavcodec/dpcm.c	/^    int channels;$/;"	m	struct:DPCMContext	file:
channels	libavcodec/flac.c	/^    int samplerate, channels;$/;"	m	struct:FLACContext	file:
channels	libavcodec/png.c	/^    int channels;$/;"	m	struct:PNGContext	file:
channels	libavcodec/shorten.c	/^    int channels;$/;"	m	struct:ShortenContext	file:
channels	libavcodec/sonic.c	/^    int channels, samplerate, block_align, frame_size;$/;"	m	struct:SonicContext	file:
channels	libavcodec/vmdav.c	/^    int channels;$/;"	m	struct:VmdAudioContext	file:
channels	libavformat/4xm.c	/^    int channels;$/;"	m	struct:AudioTrack	file:
channels	libavformat/audio.c	/^    int channels;$/;"	m	file:
channels	libavformat/avformat.h	/^    int channels;$/;"	m	struct:AVFormatParameters
channels	libavformat/beosaudio.cpp	/^    int channels;$/;"	m	file:
channels	libavformat/matroska.c	/^    int channels,$/;"	m	struct:MatroskaAudioTrack	file:
channels	libavformat/png.c	/^    int channels;$/;"	m	struct:PNGDecodeState	file:
channels	libavformat/psxstr.c	/^    StrChannel channels[32];$/;"	m	struct:StrDemuxContext	file:
channels	libavformat/psxstr.c	/^    int channels;$/;"	m	struct:StrChannel	file:
channels_multi	libavcodec/dtsdec.c	/^channels_multi (int flags)$/;"	f	file:
chbwcod	libavcodec/ac3enc.c	/^    unsigned int chbwcod[AC3_MAX_CHANNELS];$/;"	m	struct:AC3EncodeContext	file:
check	libavcodec/motion_est_template.c	545;"	d	file:
check_audio_video_inputs	ffmpeg.c	/^static void check_audio_video_inputs(int *has_video_ptr, int *has_audio_ptr)$/;"	f	file:
check_bidir_mv	libavcodec/motion_est.c	/^static inline int check_bidir_mv(MpegEncContext * s,$/;"	f	file:
check_checksum	libavformat/nut.c	/^static int check_checksum(ByteIOContext *bc){$/;"	f	file:
check_crc	libavformat/mpegts.c	/^    int check_crc:1;$/;"	m	struct:MpegTSSectionFilter	file:
check_dcbzl_effect	libavcodec/ppc/dsputil_ppc.c	/^long check_dcbzl_effect(void)$/;"	f
check_diff	libavcodec/fft-test.c	/^void check_diff(float *tab1, float *tab2, int n)$/;"	f
check_input_motion	libavcodec/motion_est.c	/^static inline int check_input_motion(MpegEncContext * s, int mb_x, int mb_y, int p_type){$/;"	f	file:
check_intra4x4_pred_mode	libavcodec/h264.c	/^static inline int check_intra4x4_pred_mode(H264Context *h){$/;"	f	file:
check_intra_pred_mode	libavcodec/h264.c	/^static inline int check_intra_pred_mode(H264Context *h, int mode){$/;"	f	file:
check_marker	libavcodec/bitstream.c	/^int check_marker(GetBitContext *s, const char *msg)$/;"	f
checked	libavcodec/motion_est.c	/^    int checked;$/;"	m	struct:Minima	file:
checksum	libavcodec/truemotion1.c	/^    uint16_t checksum;$/;"	m	struct:frame_header	file:
checksum	libavformat/avio.h	/^    unsigned long checksum;$/;"	m
checksum_ptr	libavformat/avio.h	/^    unsigned char *checksum_ptr;$/;"	m
checksum_table	libavcodec/svq1.c	/^static const uint16_t checksum_table[256] = {$/;"	v	file:
child_argv	ffserver.c	/^    char **child_argv;$/;"	m	struct:FFStream	file:
children	libavcodec/idcinvideo.c	/^  int children[2];$/;"	m	file:
chincpl	libavcodec/liba52/a52_internal.h	/^    uint8_t chincpl;		\/* channel coupled *\/$/;"	m	struct:a52_state_s
chomp3	libavcodec/mace.c	/^static void chomp3(MACEContext *ctx,$/;"	f	file:
chomp6	libavcodec/mace.c	/^static void chomp6(MACEContext *ctx,$/;"	f	file:
chromDefault	libavcodec/libpostproc/postprocess_internal.h	/^	int chromDefault; 	\/\/\/< is chrominance filtering on by default if this filter is manually activated$/;"	m	struct:PPFilter
chromMode	libavcodec/libpostproc/postprocess_internal.h	/^	int chromMode; 			\/\/\/< acivates filters for chrominance$/;"	m	struct:PPMode
chroma_420_type	libavcodec/mpegvideo.h	/^    int chroma_420_type;$/;"	m	struct:MpegEncContext
chroma_4mv_motion	libavcodec/mpegvideo.c	/^static inline void chroma_4mv_motion(MpegEncContext *s,$/;"	f	file:
chroma_4mv_motion_lowres	libavcodec/mpegvideo.c	/^static inline void chroma_4mv_motion_lowres(MpegEncContext *s,$/;"	f	file:
chroma_dc_coeff_token_bits	libavcodec/h264data.h	/^static const uint8_t chroma_dc_coeff_token_bits[4*5]={$/;"	v
chroma_dc_coeff_token_len	libavcodec/h264data.h	/^static const uint8_t chroma_dc_coeff_token_len[4*5]={$/;"	v
chroma_dc_coeff_token_vlc	libavcodec/h264.c	/^static VLC chroma_dc_coeff_token_vlc;$/;"	v	file:
chroma_dc_dequant_idct_c	libavcodec/h264.c	/^static void chroma_dc_dequant_idct_c(DCTELEM *block, int qp){$/;"	f	file:
chroma_dc_scan	libavcodec/h264data.h	/^static const uint8_t chroma_dc_scan[4]={$/;"	v
chroma_dc_total_zeros_bits	libavcodec/h264data.h	/^static const uint8_t chroma_dc_total_zeros_bits[3][4]= {$/;"	v
chroma_dc_total_zeros_len	libavcodec/h264data.h	/^static const uint8_t chroma_dc_total_zeros_len[3][4]= {$/;"	v
chroma_dc_total_zeros_vlc	libavcodec/h264.c	/^static VLC chroma_dc_total_zeros_vlc[3];$/;"	v	file:
chroma_dc_vlc_length	libavcodec/mpegvideo.h	/^    uint8_t *chroma_dc_vlc_length;$/;"	m	struct:MpegEncContext
chroma_elim_threshold	libavcodec/avcodec.h	/^    int chroma_elim_threshold;$/;"	m	struct:AVCodecContext
chroma_elim_threshold	libavcodec/mpegvideo.h	/^    int chroma_elim_threshold;$/;"	m	struct:MpegEncContext
chroma_format	libavcodec/mpegvideo.h	/^    int chroma_format;$/;"	m	struct:MpegEncContext
chroma_format	xvmc_render.h	/^  int chroma_format;\/\/420,422,444$/;"	m
chroma_h_shift	libavcodec/ffv1.c	/^    int chroma_h_shift, chroma_v_shift;$/;"	m	struct:FFV1Context	file:
chroma_h_shift	libavcodec/snow.c	/^    int chroma_h_shift;$/;"	m	struct:SnowContext	file:
chroma_inter_matrix	libavcodec/mpegvideo.h	/^    uint16_t chroma_inter_matrix[64];$/;"	m	struct:MpegEncContext
chroma_intra_matrix	libavcodec/mpegvideo.h	/^    uint16_t chroma_intra_matrix[64];$/;"	m	struct:MpegEncContext
chroma_log2_weight_denom	libavcodec/h264.c	/^    int chroma_log2_weight_denom;$/;"	m	struct:H264Context	file:
chroma_offset	libavcodec/h264.c	/^    int chroma_offset[2][16][2];$/;"	m	struct:H264Context	file:
chroma_pred_mode	libavcodec/h264.c	/^    int chroma_pred_mode;$/;"	m	struct:H264Context	file:
chroma_pred_mode_table	libavcodec/h264.c	/^    uint8_t     *chroma_pred_mode_table;$/;"	m	struct:H264Context	file:
chroma_qp	libavcodec/h264.c	/^    int chroma_qp; \/\/QPc$/;"	m	struct:H264Context	file:
chroma_qp	libavcodec/h264data.h	/^static const uint8_t chroma_qp[52]={$/;"	v
chroma_qp_index_offset	libavcodec/h264.c	/^    int chroma_qp_index_offset;$/;"	m	struct:PPS	file:
chroma_qscale	libavcodec/mpegvideo.h	/^    int chroma_qscale;          \/\/\/< chroma QP $/;"	m	struct:MpegEncContext
chroma_qscale_table	libavcodec/mpegvideo.h	/^    const uint8_t *chroma_qscale_table;  \/\/\/< qscale -> chroma_qscale (h263)$/;"	m	struct:MpegEncContext
chroma_v_shift	libavcodec/ffv1.c	/^    int chroma_h_shift, chroma_v_shift;$/;"	m	struct:FFV1Context	file:
chroma_v_shift	libavcodec/snow.c	/^    int chroma_v_shift;$/;"	m	struct:SnowContext	file:
chroma_weight	libavcodec/h264.c	/^    int chroma_weight[2][16][2];$/;"	m	struct:H264Context	file:
chroma_x_shift	libavcodec/mpegvideo.h	/^    int chroma_x_shift;\/\/depend on pix_format, that depend on chroma_format$/;"	m	struct:MpegEncContext
chroma_y_shift	libavcodec/mpegvideo.h	/^    int chroma_y_shift;$/;"	m	struct:MpegEncContext
chromaformat	libavcodec/vc9.c	/^    int chromaformat;     \/\/\/< 2bits, 2=4:2:0, only defined$/;"	m	struct:VC9Context	file:
chunk_count	libavformat/mov.c	/^    long chunk_count;$/;"	m	struct:MOVStreamContext	file:
chunk_offsets	libavformat/mov.c	/^    int64_t *chunk_offsets;$/;"	m	struct:MOVStreamContext	file:
ci_table	libavcodec/mpegaudiodectab.h	/^const float ci_table[8] = {$/;"	v
cinepak_decode	libavcodec/cinepak.c	/^static int cinepak_decode (CinepakContext *s)$/;"	f	file:
cinepak_decode_codebook	libavcodec/cinepak.c	/^static void cinepak_decode_codebook (cvid_codebook_t *codebook,$/;"	f	file:
cinepak_decode_end	libavcodec/cinepak.c	/^static int cinepak_decode_end(AVCodecContext *avctx)$/;"	f	file:
cinepak_decode_frame	libavcodec/cinepak.c	/^static int cinepak_decode_frame(AVCodecContext *avctx,$/;"	f	file:
cinepak_decode_init	libavcodec/cinepak.c	/^static int cinepak_decode_init(AVCodecContext *avctx)$/;"	f	file:
cinepak_decode_strip	libavcodec/cinepak.c	/^static int cinepak_decode_strip (CinepakContext *s,$/;"	f	file:
cinepak_decode_vectors	libavcodec/cinepak.c	/^static int cinepak_decode_vectors (CinepakContext *s, cvid_strip_t *strip,$/;"	f	file:
cinepak_decoder	libavcodec/cinepak.c	/^AVCodec cinepak_decoder = {$/;"	v
cip_d	libavformat/dv1394.h	/^	unsigned long cip_d;$/;"	m	struct:dv1394_init
cip_n	libavformat/dv1394.h	/^	unsigned long cip_n;$/;"	m	struct:dv1394_init
class_dimensions	libavcodec/vorbis.h	/^    uint_fast8_t class_dimensions[16];$/;"	m
class_masterbook	libavcodec/vorbis.h	/^    uint_fast8_t class_masterbook[16];$/;"	m
class_name	libavcodec/avcodec.h	/^    const char* class_name;$/;"	m	struct:AVCLASS
class_subclasses	libavcodec/vorbis.h	/^    uint_fast8_t class_subclasses[16];$/;"	m
classbook	libavcodec/vorbis.h	/^    uint_fast8_t classbook;$/;"	m
classic_add_chroma	libavcodec/huffyuv.c	/^static const unsigned char classic_add_chroma[256] = {$/;"	v	file:
classic_add_luma	libavcodec/huffyuv.c	/^static const unsigned char classic_add_luma[256] = {$/;"	v	file:
classic_shift_chroma	libavcodec/huffyuv.c	/^static const unsigned char classic_shift_chroma[] = {$/;"	v	file:
classic_shift_luma	libavcodec/huffyuv.c	/^static const unsigned char classic_shift_luma[] = {$/;"	v	file:
classifications	libavcodec/vorbis.h	/^    uint_fast8_t classifications;$/;"	m
clear_blocks	libavcodec/dsputil.h	/^    void (*clear_blocks)(DCTELEM *blocks\/*align 16*\/);$/;"	m	struct:DSPContext
clear_blocks_axp	libavcodec/alpha/dsputil_alpha.c	/^static void clear_blocks_axp(DCTELEM *blocks) {$/;"	f	file:
clear_blocks_c	libavcodec/dsputil.c	/^static void clear_blocks_c(DCTELEM *blocks)$/;"	f	file:
clear_blocks_dcbz128_ppc	libavcodec/ppc/dsputil_ppc.c	/^void clear_blocks_dcbz128_ppc(DCTELEM *blocks)$/;"	f
clear_blocks_dcbz32_ppc	libavcodec/ppc/dsputil_ppc.c	/^void clear_blocks_dcbz32_ppc(DCTELEM *blocks)$/;"	f
clear_blocks_mmi	libavcodec/ps2/dsputil_mmi.c	/^static void clear_blocks_mmi(DCTELEM * blocks)$/;"	f	file:
clear_blocks_mmx	libavcodec/i386/dsputil_mmx.c	/^static void clear_blocks_mmx(DCTELEM *blocks)$/;"	f	file:
clear_blocks_sh4	libavcodec/sh4/dsputil_sh4.c	/^static void clear_blocks_sh4(DCTELEM *blocks)$/;"	f	file:
clear_code	libavformat/gifdec.c	/^    int clear_code;$/;"	m	struct:GifState	file:
clear_state	libavcodec/ffv1.c	/^static void clear_state(FFV1Context *f){$/;"	f	file:
clev	libavcodec/liba52/a52_internal.h	/^    level_t clev;		\/* centre channel mix level *\/$/;"	m	struct:a52_state_s
client_port_max	libavformat/rtsp.h	/^    int client_port_min, client_port_max; \/* RTP ports *\/$/;"	m	struct:RTSPTransportField
client_port_min	libavformat/rtsp.h	/^    int client_port_min, client_port_max; \/* RTP ports *\/$/;"	m	struct:RTSPTransportField
clip	libavcodec/common.h	/^static inline int clip(int a, int amin, int amax)$/;"	f
clip_coeffs	libavcodec/mpegvideo.c	/^static inline void clip_coeffs(MpegEncContext *s, DCTELEM *block, int last_index)$/;"	f	file:
clip_input_mv	libavcodec/motion_est.c	/^static void clip_input_mv(MpegEncContext * s, int16_t *mv, int interlaced){$/;"	f	file:
clip_tab	libavcodec/libpostproc/postprocess.c	/^static uint8_t * const clip_tab= clip_table + 256;$/;"	v	file:
clip_table	libavcodec/libpostproc/postprocess.c	/^static uint8_t clip_table[3*256];$/;"	v	file:
clip_uint8	libavcodec/common.h	/^static inline int clip_uint8(int a)$/;"	f
cljr_decoder	libavcodec/cljr.c	/^AVCodec cljr_decoder = {$/;"	v
clock_rate	libavformat/rtp.h	/^    int clock_rate;$/;"	m	struct:AVRtpPayloadType_s
close	libavcodec/avcodec.h	/^    int (*close)(AVCodecContext *);$/;"	m	struct:AVCodec
close_audio	output_example.c	/^void close_audio(AVFormatContext *oc, AVStream *st)$/;"	f
close_connection	ffserver.c	/^static void close_connection(HTTPContext *c)$/;"	f	file:
close_video	output_example.c	/^void close_video(AVFormatContext *oc, AVStream *st)$/;"	f
closed_gop	ffmpeg.c	/^static int closed_gop = 0;$/;"	v	file:
clrs	libavformat/mov.c	/^    void* clrs;$/;"	m	file:
cluster	libavformat/avienc.c	/^    AVIIentry** cluster;$/;"	m	struct:AVIIndex	file:
cluster	libavformat/movenc.c	/^    MOVIentry** cluster;$/;"	m	struct:MOVIndex	file:
cmp	ffmpeg.c	/^static int cmp = FF_CMP_SAD;$/;"	v	file:
cmp	libavcodec/motion_est.c	/^static always_inline int cmp(MpegEncContext *s, const int x, const int y, const int subx, const int suby,$/;"	f	file:
cmpbge	libavcodec/alpha/asm.h	137;"	d
cmpbge	libavcodec/alpha/asm.h	75;"	d
cmpbge	libavcodec/alpha/asm.h	90;"	d
cno	libavcodec/dv.c	/^    int cno;$/;"	m	struct:EncBlockInfo	file:
co	libavcodec/ra288.c	/^static void co(int n, int i, int j, float *in, float *out, float *st1, float *st2, const float *table)$/;"	f	file:
co_located_mv	libavcodec/mpegvideo.h	/^    int co_located_mv[4][2];           \/\/\/< mv from last p frame for direct mode ME $/;"	m	struct:MotionEstContext
code012	libavcodec/msmpeg4.c	/^static void code012(PutBitContext *pb, int n)$/;"	f	file:
code_samplerate	libavcodec/sonic.c	/^static inline int code_samplerate(int samplerate)$/;"	f	file:
code_size	libavcodec/g726.c	/^   int code_size;$/;"	m	struct:AVG726Context	file:
code_tab	libavcodec/wnv1.c	/^static uint16_t code_tab[16][2]={$/;"	v	file:
code_vlc	libavcodec/wnv1.c	/^static VLC code_vlc;$/;"	v	file:
codebook	libavcodec/vqavideo.c	/^    unsigned char *codebook;         \/* the current codebook *\/$/;"	m	struct:VqaContext	file:
codebook_count	libavcodec/vorbis.h	/^    uint_fast16_t codebook_count;$/;"	m
codebook_size	libavcodec/vqavideo.c	/^    int codebook_size;$/;"	m	struct:VqaContext	file:
codebooks	libavcodec/vorbis.h	/^    vorbis_codebook *codebooks;$/;"	m
codec	libavcodec/avcodec.h	/^    struct AVCodec *codec;$/;"	m	struct:AVCodecContext
codec	libavformat/avformat.h	/^    AVCodecContext codec; \/* codec context *\/$/;"	m	struct:AVStream
codec	libavformat/ogg2.h	/^    ogg_codec_t *codec;$/;"	m	struct:ogg_stream
codec_au_tags	libavformat/au.c	/^static const CodecTag codec_au_tags[] = {$/;"	v	file:
codec_bmp_tags	libavformat/avienc.c	/^const CodecTag codec_bmp_tags[] = {$/;"	v
codec_comment1_header	libavformat/asf.h	/^static const GUID codec_comment1_header = {$/;"	v
codec_comment_header	libavformat/asf.h	/^static const GUID codec_comment_header = {$/;"	v
codec_get_asf_tag	libavformat/avienc.c	/^static unsigned int codec_get_asf_tag(const CodecTag *tags, unsigned int id)$/;"	f	file:
codec_get_bmp_id	libavformat/avienc.c	/^enum CodecID codec_get_bmp_id(unsigned int tag)$/;"	f
codec_get_bmp_tag	libavformat/avienc.c	/^unsigned int codec_get_bmp_tag(int id)$/;"	f
codec_get_id	libavformat/avienc.c	/^enum CodecID codec_get_id(const CodecTag *tags, unsigned int tag)$/;"	f
codec_get_tag	libavformat/avienc.c	/^unsigned int codec_get_tag(const CodecTag *tags, int id)$/;"	f
codec_get_wav_id	libavformat/avienc.c	/^enum CodecID codec_get_wav_id(unsigned int tag)$/;"	f
codec_get_wav_tag	libavformat/avienc.c	/^unsigned int codec_get_wav_tag(int id)$/;"	f
codec_id	libavcodec/avcodec.h	/^    enum CodecID codec_id; \/* see CODEC_ID_xxx *\/$/;"	m	struct:AVCodecContext
codec_id	libavcodec/mpegvideo.h	/^    enum CodecID codec_id;     \/* see CODEC_ID_xxx *\/$/;"	m	struct:MpegEncContext
codec_id	libavformat/audio.c	/^    int codec_id;$/;"	m	file:
codec_id	libavformat/beosaudio.cpp	/^    CodecID codec_id;$/;"	m	file:
codec_id	libavformat/matroska.c	/^    char *codec_id,$/;"	m	struct:Track	file:
codec_id	libavformat/rtp.h	/^    enum CodecID codec_id;$/;"	m	struct:AVRtpDynamicPayloadType_s
codec_id	libavformat/rtp.h	/^    enum CodecID codec_id;$/;"	m	struct:AVRtpPayloadType_s
codec_ids	libavcodec/avcodec.h	/^    int codec_ids[5]; \/* several codec IDs are permitted *\/$/;"	m	struct:AVCodecParser
codec_info_duration	libavformat/avformat.h	/^    int64_t codec_info_duration;     $/;"	m	struct:AVStream
codec_info_nb_frames	libavformat/avformat.h	/^    int codec_info_nb_frames;$/;"	m	struct:AVStream
codec_movaudio_tags	libavformat/movenc.c	/^const CodecTag codec_movaudio_tags[] = {$/;"	v
codec_movvideo_tags	libavformat/movenc.c	/^const CodecTag codec_movvideo_tags[] = {$/;"	v
codec_name	libavcodec/avcodec.h	/^    char codec_name[32];$/;"	m	struct:AVCodecContext
codec_name	libavformat/matroska.c	/^        *codec_name;$/;"	m	struct:Track	file:
codec_priv	libavformat/matroska.c	/^    unsigned char *codec_priv;$/;"	m	struct:Track	file:
codec_priv_size	libavformat/matroska.c	/^    int codec_priv_size;$/;"	m	struct:Track	file:
codec_tag	libavcodec/avcodec.h	/^    unsigned int codec_tag;$/;"	m	struct:AVCodecContext
codec_type	libavcodec/avcodec.h	/^    enum CodecType codec_type; \/* see CODEC_TYPE_xxx *\/$/;"	m	struct:AVCodecContext
codec_type	libavformat/rtp.h	/^    enum CodecType codec_type;$/;"	m	struct:AVRtpDynamicPayloadType_s
codec_type	libavformat/rtp.h	/^    enum CodecType codec_type;$/;"	m	struct:AVRtpPayloadType_s
codec_wav_tags	libavformat/wav.c	/^const CodecTag codec_wav_tags[] = {$/;"	v
coded_ac_scale_factor	libavcodec/vp3.c	/^    uint32_t coded_ac_scale_factor[64];$/;"	m	struct:Vp3DecodeContext	file:
coded_block	libavcodec/mpegvideo.h	/^    uint8_t *coded_block;          \/\/\/< used for coded block pattern prediction (msmpeg4v3, wmv1)$/;"	m	struct:MpegEncContext
coded_block_base	libavcodec/mpegvideo.h	/^    uint8_t *coded_block_base;$/;"	m	struct:MpegEncContext
coded_block_pred	libavcodec/msmpeg4.c	/^static inline int coded_block_pred(MpegEncContext * s, int n, uint8_t **coded_block_ptr)$/;"	f	file:
coded_dc_scale_factor	libavcodec/vp3.c	/^    uint16_t coded_dc_scale_factor[64];$/;"	m	struct:Vp3DecodeContext	file:
coded_fragment_list	libavcodec/vp3.c	/^    int *coded_fragment_list;$/;"	m	struct:Vp3DecodeContext	file:
coded_fragment_list_index	libavcodec/vp3.c	/^    int coded_fragment_list_index;$/;"	m	struct:Vp3DecodeContext	file:
coded_frame	libavcodec/avcodec.h	/^    AVFrame *coded_frame;$/;"	m	struct:AVCodecContext
coded_height	libavcodec/avcodec.h	/^    int coded_width, coded_height;$/;"	m	struct:AVCodecContext
coded_inter_dequant	libavcodec/vp3.c	/^    uint16_t coded_inter_dequant[64];$/;"	m	struct:Vp3DecodeContext	file:
coded_intra_c_dequant	libavcodec/vp3.c	/^    uint16_t coded_intra_c_dequant[64];$/;"	m	struct:Vp3DecodeContext	file:
coded_intra_y_dequant	libavcodec/vp3.c	/^    uint16_t coded_intra_y_dequant[64];$/;"	m	struct:Vp3DecodeContext	file:
coded_picture_number	libavcodec/mpegvideo.h	/^    int coded_picture_number;  \/\/\/< used to set pic->coded_picture_number, shouldnt be used for\/by anything else$/;"	m	struct:MpegEncContext
coded_samples	libavcodec/sonic.c	/^    int *coded_samples[MAX_CHANNELS];$/;"	m	struct:SonicContext	file:
coded_score	libavcodec/mpegvideo.h	/^    int coded_score[6];$/;"	m	struct:MpegEncContext
coded_width	libavcodec/avcodec.h	/^    int coded_width, coded_height;$/;"	m	struct:AVCodecContext
coder	ffmpeg.c	/^static int coder = 0;$/;"	v	file:
coder_type	libavcodec/avcodec.h	/^    int coder_type;$/;"	m	struct:AVCodecContext
codes	libavcodec/mpegaudiodec.c	/^    const uint16_t *codes;$/;"	m	struct:HuffTable	file:
codesize	libavformat/gifdec.c	/^    int codesize;$/;"	m	struct:GifState	file:
codetable	libavcodec/ra288.h	/^static const float codetable[640]={$/;"	v
codevectors	libavcodec/vorbis.h	/^    float *codevectors;$/;"	m
coding_method	libavcodec/vp3.c	/^    uint8_t coding_method;$/;"	m	struct:Vp3Fragment	file:
coef0_huffbits	libavcodec/wmadata.h	/^static const uint8_t coef0_huffbits[666] = {$/;"	v
coef0_huffcodes	libavcodec/wmadata.h	/^static const uint32_t coef0_huffcodes[666] = {$/;"	v
coef1_huffbits	libavcodec/wmadata.h	/^static const uint8_t coef1_huffbits[555] = {$/;"	v
coef1_huffcodes	libavcodec/wmadata.h	/^static const uint32_t coef1_huffcodes[555] = {$/;"	v
coef2_huffbits	libavcodec/wmadata.h	/^static const uint8_t coef2_huffbits[1336] = {$/;"	v
coef2_huffcodes	libavcodec/wmadata.h	/^static const uint32_t coef2_huffcodes[1336] = {$/;"	v
coef3_huffbits	libavcodec/wmadata.h	/^static const uint8_t coef3_huffbits[1072] = {$/;"	v
coef3_huffcodes	libavcodec/wmadata.h	/^static const uint32_t coef3_huffcodes[1072] = {$/;"	v
coef4_huffbits	libavcodec/wmadata.h	/^static const uint8_t coef4_huffbits[476] = {$/;"	v
coef4_huffcodes	libavcodec/wmadata.h	/^static const uint32_t coef4_huffcodes[476] = {$/;"	v
coef5_huffbits	libavcodec/wmadata.h	/^static const uint8_t coef5_huffbits[435] = {$/;"	v
coef5_huffcodes	libavcodec/wmadata.h	/^static const uint32_t coef5_huffcodes[435] = {$/;"	v
coef_vlc	libavcodec/wmadec.c	/^    VLC coef_vlc[2];$/;"	m	struct:WMADecodeContext	file:
coef_vlcs	libavcodec/wmadata.h	/^static const CoefVLCTable coef_vlcs[6] = {$/;"	v
coeff	libavcodec/mpegvideo.h	/^    double coeff;$/;"	m	struct:Predictor
coeff	libavcodec/snow.c	/^    uint16_t coeff;$/;"	m	struct:x_and_coeff	file:
coeff	libavcodec/vp3.c	/^    DCTELEM coeff;$/;"	m	struct:Coeff	file:
coeff1	libavcodec/adpcm.c	/^    int coeff1;$/;"	m	struct:ADPCMChannelStatus	file:
coeff2	libavcodec/adpcm.c	/^    int coeff2;$/;"	m	struct:ADPCMChannelStatus	file:
coeff_count	libavcodec/vp3.c	/^    uint8_t coeff_count;$/;"	m	struct:Vp3Fragment	file:
coeff_get	libavcodec/liba52/parse.c	/^static void coeff_get (a52_state_t * state, sample_t * coeff,$/;"	f	file:
coeff_get_bits	libavcodec/vp3data.h	/^static const int coeff_get_bits[32] = {$/;"	v
coeff_get_coupling	libavcodec/liba52/parse.c	/^static void coeff_get_coupling (a52_state_t * state, int nfchans,$/;"	f	file:
coeff_table_token_10	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_10[1] = { -1 };$/;"	v
coeff_table_token_11	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_11[1] = { 2 };$/;"	v
coeff_table_token_12	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_12[1] = { -2 };$/;"	v
coeff_table_token_13	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_13[2] = { 3, -3 };$/;"	v
coeff_table_token_14	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_14[2] = { 4, -4 };$/;"	v
coeff_table_token_15	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_15[2] = { 5, -5 };$/;"	v
coeff_table_token_16	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_16[2] = { 6, -6 };$/;"	v
coeff_table_token_17	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_17[4] = {$/;"	v
coeff_table_token_18	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_18[8] = {$/;"	v
coeff_table_token_19	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_19[16] = {$/;"	v
coeff_table_token_20	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_20[32] = {$/;"	v
coeff_table_token_21	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_21[64] = {$/;"	v
coeff_table_token_22	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_22[1024] = {$/;"	v
coeff_table_token_23_24_25_26_27_28_29	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_23_24_25_26_27_28_29[2] = { 1, -1 };$/;"	v
coeff_table_token_30	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_30[4] = { 2, 3, -2, -3 };$/;"	v
coeff_table_token_31	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_31[4] = { 2, 3, -2, -3 };$/;"	v
coeff_table_token_7_8	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_7_8[1] = { 0 };$/;"	v
coeff_table_token_9	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_9[1] = { 1 };$/;"	v
coeff_tables	libavcodec/vp3data.h	/^static const int16_t *coeff_tables[32] = {$/;"	v
coeff_token_bits	libavcodec/h264data.h	/^static const uint8_t coeff_token_bits[4][4*17]={$/;"	v
coeff_token_len	libavcodec/h264data.h	/^static const uint8_t coeff_token_len[4][4*17]={$/;"	v
coeff_token_vlc	libavcodec/h264.c	/^static VLC coeff_token_vlc[4];$/;"	v	file:
coeffs	libavcodec/i386/simple_idct_mmx.c	/^static const int16_t __attribute__((aligned(8))) coeffs[]= {$/;"	v	file:
coeffs	libavcodec/vp3.c	/^    Coeff *coeffs;$/;"	m	struct:Vp3DecodeContext	file:
coefs	libavcodec/wmadec.c	/^    float coefs[MAX_CHANNELS][BLOCK_MAX_SIZE] __attribute__((aligned(16)));$/;"	m	struct:WMADecodeContext	file:
coefs1	libavcodec/wmadec.c	/^    int16_t coefs1[MAX_CHANNELS][BLOCK_MAX_SIZE];$/;"	m	struct:WMADecodeContext	file:
coefs_end	libavcodec/wmadec.c	/^    int coefs_end[BLOCK_NB_SIZES]; \/* max number of coded coefficients *\/$/;"	m	struct:WMADecodeContext	file:
coefs_start	libavcodec/wmadec.c	/^    int coefs_start;               \/* first coded coef *\/$/;"	m	struct:WMADecodeContext	file:
colmult	libavcodec/ra288.c	/^static void colmult(float *tgt, float *m1, const float *m2, int n)$/;"	f	file:
color	libavcodec/snow.c	/^    uint8_t color[3];$/;"	m	struct:BlockNode	file:
color_octets	libavcodec/smc.c	/^    unsigned char color_octets[COLORS_PER_TABLE * COCTET];$/;"	m	struct:SmcContext	file:
color_pairs	libavcodec/smc.c	/^    unsigned char color_pairs[COLORS_PER_TABLE * CPAIR];$/;"	m	struct:SmcContext	file:
color_prim	libavcodec/vc9.c	/^    int color_prim;       \/\/\/< 8bits, chroma coordinates of the color primaries$/;"	m	struct:VC9Context	file:
color_quads	libavcodec/smc.c	/^    unsigned char color_quads[COLORS_PER_TABLE * CQUAD];$/;"	m	struct:SmcContext	file:
color_resolution	libavformat/gifdec.c	/^    int color_resolution;$/;"	m	struct:GifState	file:
color_table_id	libavcodec/avcodec.h	/^    int color_table_id;$/;"	m	struct:AVCodecContext
color_type	libavcodec/imgconvert.c	/^    uint8_t color_type;      \/* color type (see FF_COLOR_xxx constants) *\/$/;"	m	struct:PixFmtInfo	file:
color_type	libavcodec/png.c	/^    int color_type;$/;"	m	struct:PNGContext	file:
color_type	libavformat/png.c	/^    int color_type;$/;"	m	struct:PNGDecodeState	file:
colorspace	libavcodec/ffv1.c	/^    int colorspace;$/;"	m	struct:FFV1Context	file:
colorspace_type	libavcodec/snow.c	/^    int colorspace_type;$/;"	m	struct:SnowContext	file:
column_loop	libavcodec/armv4l/jrevdct_arm.S	/^column_loop:$/;"	l
comment	ffserver.c	/^    char comment[512];$/;"	m	struct:FFStream	file:
comment	libavcodec/oggtheora.c	/^    theora_comment comment;$/;"	m	struct:TheoraContext	file:
comment	libavformat/avformat.h	/^    char comment[512];$/;"	m	struct:AVFormatContext
comment_header	libavformat/asf.h	/^static const GUID comment_header = {$/;"	v
common_end	libavcodec/ffv1.c	/^static void common_end(FFV1Context *s){$/;"	f	file:
common_end	libavcodec/huffyuv.c	/^static int common_end(HYuvContext *s){$/;"	f	file:
common_init	libavcodec/4xm.c	/^static void common_init(AVCodecContext *avctx){$/;"	f	file:
common_init	libavcodec/asv1.c	/^static void common_init(AVCodecContext *avctx){$/;"	f	file:
common_init	libavcodec/cljr.c	/^static void common_init(AVCodecContext *avctx){$/;"	f	file:
common_init	libavcodec/ffv1.c	/^static int common_init(AVCodecContext *avctx){$/;"	f	file:
common_init	libavcodec/h264.c	/^static void common_init(H264Context *h){$/;"	f	file:
common_init	libavcodec/huffyuv.c	/^static int common_init(AVCodecContext *avctx){$/;"	f	file:
common_init	libavcodec/mpeg12.c	/^static void common_init(MpegEncContext *s)$/;"	f	file:
common_init	libavcodec/msmpeg4.c	/^static void common_init(MpegEncContext * s)$/;"	f	file:
common_init	libavcodec/png.c	/^static int common_init(AVCodecContext *avctx){$/;"	f	file:
common_init	libavcodec/pnm.c	/^static int common_init(AVCodecContext *avctx){$/;"	f	file:
common_init	libavcodec/vcr1.c	/^static void common_init(AVCodecContext *avctx){$/;"	f	file:
comp_buf	libavcodec/lcl.c	/^    unsigned char* comp_buf;$/;"	m	struct:LclContext	file:
comp_index	libavcodec/mjpeg.c	/^    int comp_index[MAX_COMPONENTS];$/;"	m	struct:MJpegDecodeContext	file:
comp_types	libavcodec/truemotion1.c	/^typedef struct comp_types {$/;"	s	file:
comp_types	libavcodec/truemotion1.c	/^} comp_types;$/;"	t	file:
compensation_distance	libavcodec/resample2.c	/^    int compensation_distance;$/;"	m	struct:AVResampleContext	file:
complex_s	libavcodec/liba52/imdct.c	/^typedef struct complex_s {$/;"	s	file:
complex_t	libavcodec/liba52/imdct.c	/^} complex_t;$/;"	t	file:
component_id	libavcodec/mjpeg.c	/^    int component_id[MAX_COMPONENTS];$/;"	m	struct:MJpegDecodeContext	file:
component_resample	libavcodec/imgresample.c	/^static void component_resample(ImgReSampleContext *s, $/;"	f	file:
compression	libavcodec/lcl.c	/^    int compression;$/;"	m	struct:LclContext	file:
compression	libavcodec/truemotion1.c	/^    int compression;$/;"	m	struct:TrueMotion1Context	file:
compression	libavcodec/truemotion1.c	/^    uint8_t compression;$/;"	m	struct:frame_header	file:
compression_type	libavcodec/png.c	/^    int compression_type;$/;"	m	struct:PNGContext	file:
compression_type	libavformat/electronicarts.c	/^    int compression_type;$/;"	m	struct:EaDemuxContext	file:
compression_type	libavformat/png.c	/^    int compression_type;$/;"	m	struct:PNGDecodeState	file:
compression_types	libavcodec/truemotion1.c	/^static comp_types compression_types[17] = {$/;"	v	file:
compute_antialias	libavcodec/mpegaudiodec.c	/^    void (*compute_antialias)(struct MPADecodeContext *s, struct GranuleDef *g);$/;"	m	struct:MPADecodeContext	file:
compute_antialias_float	libavcodec/mpegaudiodec.c	/^static void compute_antialias_float(MPADecodeContext *s,$/;"	f	file:
compute_antialias_integer	libavcodec/mpegaudiodec.c	/^static void compute_antialias_integer(MPADecodeContext *s,$/;"	f	file:
compute_bandwidth	ffserver.c	/^static void compute_bandwidth(void)$/;"	f	file:
compute_bit_allocation	libavcodec/ac3enc.c	/^static int compute_bit_allocation(AC3EncodeContext *s,$/;"	f	file:
compute_bit_allocation	libavcodec/mpegaudio.c	/^static void compute_bit_allocation(MpegAudioContext *s, $/;"	f	file:
compute_datarate	ffserver.c	/^static int compute_datarate(DataRateData *drd, int64_t count)$/;"	f	file:
compute_exp_strategy	libavcodec/ac3enc.c	/^static void compute_exp_strategy(uint8_t exp_strategy[NB_BLOCKS][AC3_MAX_CHANNELS],$/;"	f	file:
compute_frame_duration	libavformat/utils.c	/^static void compute_frame_duration(int *pnum, int *pden, AVStream *st, $/;"	f	file:
compute_imdct	libavcodec/mpegaudiodec.c	/^static void compute_imdct(MPADecodeContext *s,$/;"	f	file:
compute_mantissa_size	libavcodec/ac3enc.c	/^static int compute_mantissa_size(AC3EncodeContext *s, uint8_t *m, int nb_coefs)$/;"	f	file:
compute_mb_neighboors	libavcodec/h264.c	/^void inline compute_mb_neighboors(H264Context *h)$/;"	f
compute_mod	ffplay.c	/^static inline int compute_mod(int a, int b)$/;"	f	file:
compute_pkt_fields	libavformat/utils.c	/^static void compute_pkt_fields(AVFormatContext *s, AVStream *st, $/;"	f	file:
compute_pkt_fields2	libavformat/utils.c	/^static int compute_pkt_fields2(AVStream *st, AVPacket *pkt){$/;"	f	file:
compute_real_filename	ffserver.c	/^static void compute_real_filename(char *filename, int max_size)$/;"	f	file:
compute_scale_factors	libavcodec/mpegaudio.c	/^static void compute_scale_factors(unsigned char scale_code[SBLIMIT],$/;"	f	file:
compute_stats	ffserver.c	/^static void compute_stats(HTTPContext *c)$/;"	f	file:
compute_stereo	libavcodec/mpegaudiodec.c	/^static void compute_stereo(MPADecodeContext *s,$/;"	f	file:
concealment_motion_vectors	libavcodec/mpegvideo.h	/^    int concealment_motion_vectors;$/;"	m	struct:MpegEncContext
cond	ffplay.c	/^    SDL_cond *cond;$/;"	m	struct:PacketQueue	file:
condover	libavcodec/vc9.c	/^    uint8_t condover;$/;"	m	struct:VC9Context	file:
conns_served	ffserver.c	/^    int conns_served;$/;"	m	struct:FFStream	file:
const_array	libavcodec/armv4l/jrevdct_arm.S	/^const_array:$/;"	l
const_name	libavcodec/eval.c	/^    const char **const_name;          \/\/ NULL terminated$/;"	m	struct:Parser	file:
const_names	libavcodec/eval.c	/^static const char *const_names[]={$/;"	v	file:
const_value	libavcodec/eval.c	/^    double *const_value;$/;"	m	struct:Parser	file:
const_values	libavcodec/eval.c	/^static double const_values[]={$/;"	v	file:
const_vector	libavcodec/ppc/gcc_fixes.h	89;"	d
const_vector	libavcodec/ppc/gcc_fixes.h	91;"	d
const_vector_s16_t	libavcodec/ppc/idct_altivec.c	47;"	d	file:
constants	libavcodec/ppc/idct_altivec.c	/^static const_vector_s16_t constants[5] = {$/;"	v	file:
constrained_intra_pred	libavcodec/h264.c	/^    int constrained_intra_pred; \/\/\/< constrained_intra_pred_flag$/;"	m	struct:PPS	file:
content_length	libavformat/rtsp.h	/^    int content_length;$/;"	m	struct:RTSPHeader
context	ffmpeg.c	/^static int context = 0;$/;"	v	file:
context	libavcodec/huffyuv.c	/^    int context;$/;"	m	struct:HYuvContext	file:
context	libavcodec/xvidff.c	/^    xvid_context_t *context;        \/** Pointer to private context *\/$/;"	m	struct:xvid_ff_pass1	file:
context_count	libavcodec/ffv1.c	/^    int context_count;$/;"	m	struct:PlaneContext	file:
context_initialized	libavcodec/alac.c	/^    int context_initialized;$/;"	m	file:
context_initialized	libavcodec/mpegvideo.h	/^    int context_initialized;$/;"	m	struct:MpegEncContext
context_model	libavcodec/avcodec.h	/^    int context_model;$/;"	m	struct:AVCodecContext
context_to_name	libavcodec/utils.c	/^static const char* context_to_name(void* ptr) {$/;"	f	file:
control	libavcodec/truemotion1.c	/^    uint8_t control;$/;"	m	struct:frame_header	file:
control_url	libavformat/rtsp.c	/^    char control_url[1024]; \/* url for this stream (from SDP) *\/$/;"	m	struct:RTSPStream	file:
conv	libavcodec/oggvorbis.c	/^static inline int conv(int samples, float **pcm, char *buf, int channels) {$/;"	f	file:
conv411	libavcodec/imgconvert.c	/^static void conv411(uint8_t *dst, int dst_wrap, $/;"	f	file:
convert	libavcodec/dtsdec.c	/^int16_t convert (int32_t i)$/;"	f	file:
convert	libavcodec/imgconvert.c	/^    void (*convert)(AVPicture *dst,$/;"	m	struct:ConvertEntry	file:
convert	libavcodec/liba52/resample_c.c	/^static inline int16_t convert (int32_t i)$/;"	f	file:
convert2s16_2	libavcodec/dtsdec.c	/^convert2s16_2 (sample_t * _f, int16_t * s16)$/;"	f
convert2s16_4	libavcodec/dtsdec.c	/^convert2s16_4 (sample_t * _f, int16_t * s16)$/;"	f
convert2s16_5	libavcodec/dtsdec.c	/^convert2s16_5 (sample_t * _f, int16_t * s16)$/;"	f
convert2s16_multi	libavcodec/dtsdec.c	/^convert2s16_multi (sample_t * _f, int16_t * s16, int flags)$/;"	f	file:
convert_from_rgba32	libavcodec/png.c	/^static void convert_from_rgba32(uint8_t *dst, const uint8_t *src, int width)$/;"	f	file:
convert_from_rgba32	libavformat/png.c	/^static void convert_from_rgba32(uint8_t *dst, const uint8_t *src, int width)$/;"	f	file:
convert_matrix	libavcodec/mpegvideo.c	/^static void convert_matrix(DSPContext *dsp, int (*qmat)[64], uint16_t (*qmat16)[2][64],$/;"	f	file:
convert_table	libavcodec/imgconvert.c	/^static ConvertEntry convert_table[PIX_FMT_NB][PIX_FMT_NB] = {$/;"	v	file:
convert_to_rgba32	libavcodec/png.c	/^static void convert_to_rgba32(uint8_t *dst, const uint8_t *src, int width)$/;"	f	file:
convert_to_rgba32	libavformat/png.c	/^static void convert_to_rgba32(uint8_t *dst, const uint8_t *src, int width)$/;"	f	file:
copy_block16	libavcodec/dsputil.c	/^static inline void copy_block16(uint8_t *dst, uint8_t *src, int dstStride, int srcStride, int h)$/;"	f	file:
copy_block16	libavcodec/sh4/qpel.c	/^static inline void copy_block16(uint8_t *dst, uint8_t *src, int dstStride, int srcStride, int h)$/;"	f	file:
copy_block17	libavcodec/dsputil.c	/^static inline void copy_block17(uint8_t *dst, uint8_t *src, int dstStride, int srcStride, int h)$/;"	f	file:
copy_block17	libavcodec/sh4/qpel.c	/^static inline void copy_block17(uint8_t *dst, uint8_t *src, int dstStride, int srcStride, int h)$/;"	f	file:
copy_block4	libavcodec/dsputil.c	/^static inline void copy_block4(uint8_t *dst, uint8_t *src, int dstStride, int srcStride, int h)$/;"	f	file:
copy_block4	libavcodec/sh4/qpel.c	/^static inline void copy_block4(uint8_t *dst, uint8_t *src, int dstStride, int srcStride, int h)$/;"	f	file:
copy_block8	libavcodec/dsputil.c	/^static inline void copy_block8(uint8_t *dst, uint8_t *src, int dstStride, int srcStride, int h)$/;"	f	file:
copy_block8	libavcodec/sh4/qpel.c	/^static inline void copy_block8(uint8_t *dst, uint8_t *src, int dstStride, int srcStride, int h)$/;"	f	file:
copy_block9	libavcodec/dsputil.c	/^static inline void copy_block9(uint8_t *dst, uint8_t *src, int dstStride, int srcStride, int h)$/;"	f	file:
copy_block9	libavcodec/sh4/qpel.c	/^static inline void copy_block9(uint8_t *dst, uint8_t *src, int dstStride, int srcStride, int h)$/;"	f	file:
copy_context_after_encode	libavcodec/mpegvideo.c	/^static inline void copy_context_after_encode(MpegEncContext *d, MpegEncContext *s, int type){$/;"	f	file:
copy_context_before_encode	libavcodec/mpegvideo.c	/^static inline void copy_context_before_encode(MpegEncContext *d, MpegEncContext *s, int type){$/;"	f	file:
copy_picture	libavcodec/mpegvideo.c	/^static void copy_picture(Picture *dst, Picture *src){$/;"	f	file:
copy_picture_attributes	libavcodec/mpegvideo.c	/^static void copy_picture_attributes(MpegEncContext *s, AVFrame *dst, AVFrame *src){$/;"	f	file:
copy_rac_state	libavcodec/snow.c	/^static inline void copy_rac_state(RangeCoder *d, RangeCoder *s){$/;"	f	file:
copy_ts	ffmpeg.c	/^static int copy_ts= 0;$/;"	v	file:
copyright	ffserver.c	/^    char copyright[512];$/;"	m	struct:FFStream	file:
copyright	libavformat/avformat.h	/^    char copyright[512];$/;"	m	struct:AVFormatContext
correction	libavcodec/indeo3data.h	/^static const uint32_t correction[] = {$/;"	v
correctionhighorder	libavcodec/indeo3data.h	/^static const uint32_t correctionhighorder[] = {$/;"	v
correctionloworder	libavcodec/indeo3data.h	/^static const uint32_t correctionloworder[] = {$/;"	v
corrector_type	libavcodec/indeo3.c	/^    unsigned short *corrector_type;$/;"	m	struct:Indeo3DecodeContext	file:
corrector_type_0	libavcodec/indeo3.c	/^static int corrector_type_0[24] = {$/;"	v	file:
corrector_type_2	libavcodec/indeo3.c	/^static int corrector_type_2[8] = { 9, 7, 6, 8, 5, 4, 3, 2 };$/;"	v	file:
cos_table	tests/audiogen.c	/^static const unsigned short cos_table[(1 << COS_TABLE_BITS) + 2] = {$/;"	v	file:
costab	libavcodec/ac3tab.h	/^static int16_t costab[64];$/;"	v
costab32	libavcodec/mpegaudiotab.h	/^static const int costab32[30] = {$/;"	v
count	libavcodec/ffv1.c	/^    uint8_t count;$/;"	m	struct:VlcState	file:
count	libavcodec/idcinvideo.c	/^  int count;$/;"	m	file:
count	libavcodec/loco.c	/^    int sum, count; \/* sum and count for getting rice parameter *\/$/;"	m	struct:RICEContext	file:
count	libavcodec/mpegvideo.h	/^    double count;$/;"	m	struct:Predictor
count	libavformat/mov.c	/^    int count;$/;"	m	struct:Time2Sample	file:
count	libavformat/mov.c	/^    long count;$/;"	m	struct:MOV_sample_to_chunk_tbl	file:
count1	ffserver.c	/^    int64_t count1, count2;$/;"	m	file:
count1table_select	libavcodec/mpegaudiodec.c	/^    uint8_t count1table_select;$/;"	m	struct:GranuleDef	file:
count2	ffserver.c	/^    int64_t count1, count2;$/;"	m	file:
count_leading_zeros	libavcodec/alac.c	/^static int count_leading_zeros(int32_t input)$/;"	f	file:
coupling_steps	libavcodec/vorbis.h	/^    uint_fast16_t coupling_steps;$/;"	m
cpl_expbap	libavcodec/liba52/a52_internal.h	/^    expbap_t cpl_expbap;$/;"	m	struct:a52_state_s
cplba	libavcodec/liba52/a52_internal.h	/^    ba_t cplba;			\/* coupling bit allocation parameters *\/$/;"	m	struct:a52_state_s
cplbndstrc	libavcodec/liba52/a52_internal.h	/^    uint32_t cplbndstrc;	\/* coupling band structure *\/$/;"	m	struct:a52_state_s
cplco	libavcodec/liba52/a52_internal.h	/^    level_t cplco[5][18];	\/* coupling coordinates *\/$/;"	m	struct:a52_state_s
cplendmant	libavcodec/liba52/a52_internal.h	/^    uint8_t cplendmant;		\/* coupling channel end mantissa *\/$/;"	m	struct:a52_state_s
cplfleak	libavcodec/ac3.h	/^    int cplfleak, cplsleak;$/;"	m	struct:AC3BitAllocParameters
cplfleak	libavcodec/liba52/a52_internal.h	/^    uint8_t cplfleak;		\/* coupling fast leak init *\/$/;"	m	struct:a52_state_s
cplsleak	libavcodec/ac3.h	/^    int cplfleak, cplsleak;$/;"	m	struct:AC3BitAllocParameters
cplsleak	libavcodec/liba52/a52_internal.h	/^    uint8_t cplsleak;		\/* coupling slow leak init *\/$/;"	m	struct:a52_state_s
cplstrtbnd	libavcodec/liba52/a52_internal.h	/^    uint8_t cplstrtbnd;		\/* coupling start band (for bit allocation) *\/$/;"	m	struct:a52_state_s
cplstrtmant	libavcodec/liba52/a52_internal.h	/^    uint8_t cplstrtmant;	\/* coupling channel start mantissa *\/$/;"	m	struct:a52_state_s
cpuCaps	libavcodec/libpostproc/postprocess_internal.h	/^	int cpuCaps;$/;"	m	struct:PPContext
cpuid	libavcodec/i386/cputest.c	16;"	d	file:
crc_format	libavformat/crc.c	/^static AVOutputFormat crc_format = {$/;"	v	file:
crc_init	libavformat/crc.c	/^int crc_init(void)$/;"	f
crc_lut	libavcodec/liba52/crc.c	/^static const uint16_t crc_lut[256] = $/;"	v	file:
crc_table	libavcodec/ac3tab.h	/^static uint16_t crc_table[256];$/;"	v
crc_table	libavformat/mpegtsenc.c	/^static const uint32_t crc_table[256] = {$/;"	v	file:
crc_write_header	libavformat/crc.c	/^static int crc_write_header(struct AVFormatContext *s)$/;"	f	file:
crc_write_packet	libavformat/crc.c	/^static int crc_write_packet(struct AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
crc_write_trailer	libavformat/crc.c	/^static int crc_write_trailer(struct AVFormatContext *s)$/;"	f	file:
crcval	libavformat/crc.c	/^    uint32_t crcval;$/;"	m	struct:CRCState	file:
create_bapp_if_needed	libavformat/beosaudio.cpp	/^static void create_bapp_if_needed(void)$/;"	f	file:
create_time	libavformat/asf.h	/^    uint64_t create_time;	\/\/ time of creation, in 100-nanosecond units since 1.1.1601$/;"	m
created	libavformat/matroska.c	/^    int64_t created;$/;"	m	struct:MatroskaDemuxContext	file:
crop	libavcodec/h264.c	/^    int crop;                   \/\/\/< frame_cropping_flag$/;"	m	struct:SPS	file:
cropTbl	libavcodec/dct-test.c	/^uint8_t cropTbl[256 + 2 * MAX_NEG_CROP];$/;"	v
cropTbl	libavcodec/dsputil.c	/^uint8_t cropTbl[256 + 2 * MAX_NEG_CROP] = {0, };$/;"	v
crop_bottom	libavcodec/h264.c	/^    int crop_bottom;            \/\/\/< frame_cropping_rect_bottom_offset$/;"	m	struct:SPS	file:
crop_left	libavcodec/h264.c	/^    int crop_left;              \/\/\/< frame_cropping_rect_left_offset$/;"	m	struct:SPS	file:
crop_right	libavcodec/h264.c	/^    int crop_right;             \/\/\/< frame_cropping_rect_right_offset$/;"	m	struct:SPS	file:
crop_top	libavcodec/h264.c	/^    int crop_top;               \/\/\/< frame_cropping_rect_top_offset$/;"	m	struct:SPS	file:
crow_buf	libavcodec/png.c	/^    uint8_t *crow_buf;$/;"	m	struct:PNGContext	file:
crow_buf	libavformat/png.c	/^    uint8_t *crow_buf;$/;"	m	struct:PNGDecodeState	file:
crow_size	libavcodec/png.c	/^    int crow_size; \/* compressed row size (include filter type) *\/$/;"	m	struct:PNGContext	file:
crow_size	libavformat/png.c	/^    int crow_size; \/* compressed row size (include filter type) *\/$/;"	m	struct:PNGDecodeState	file:
cs_itu601	libavcodec/mjpeg.c	/^    int cs_itu601;$/;"	m	struct:MJpegDecodeContext	file:
csa_table	libavcodec/mpegaudiodec.c	/^static int32_t csa_table[8][4];$/;"	v	file:
csa_table_float	libavcodec/mpegaudiodec.c	/^static float csa_table_float[8][4];$/;"	v	file:
csnroffst	libavcodec/ac3enc.c	/^    int csnroffst;$/;"	m	struct:AC3EncodeContext	file:
csnroffst	libavcodec/liba52/a52_internal.h	/^    uint8_t csnroffst;		\/* coarse SNR offset *\/$/;"	m	struct:a52_state_s
ct_adpcm_table	libavcodec/adpcm.c	/^static int ct_adpcm_table[8] = {$/;"	v	file:
ctab	libavformat/mov.c	/^    MOV_ctab_t **ctab;           \/* color tables *\/$/;"	m	struct:MOVContext	file:
ctab_size	libavformat/mov.c	/^    int ctab_size;$/;"	m	struct:MOVContext	file:
ctime1	ffserver.c	/^static char *ctime1(char *buf2)$/;"	f	file:
cts	libavformat/rtp.h	/^        int cts;$/;"	m	struct:rtp_payload_data_s::AUHeaders
cts_flag	libavformat/rtp.h	/^        int cts_flag;$/;"	m	struct:rtp_payload_data_s::AUHeaders
ctts_count	libavformat/mov.c	/^    int ctts_count;$/;"	m	struct:MOVStreamContext	file:
ctts_data	libavformat/mov.c	/^    Time2Sample *ctts_data;$/;"	m	struct:MOVStreamContext	file:
ctx	libavformat/framehook.c	/^    void *ctx;$/;"	m	struct:_FrameHookEntry	file:
ctx	libavformat/matroska.c	/^    AVFormatContext *ctx;$/;"	m	struct:MatroskaDemuxContext	file:
ctx_flags	libavformat/avformat.h	/^    int ctx_flags; \/* format specific flags, see AVFMTCTX_xx *\/$/;"	m	struct:AVFormatContext
cum_len	libavformat/avidec.c	/^    int cum_len; \/* temporary storage (used during seek) *\/$/;"	m	struct:AVIStream	file:
cum_len	libavformat/nsvdec.c	/^    int cum_len; \/* temporary storage (used during seek) *\/$/;"	m	struct:NSVStream	file:
cur_ac	libavcodec/dv.c	/^    int cur_ac;$/;"	m	struct:EncBlockInfo	file:
cur_au_index	libavformat/rtp.h	/^    int cur_au_index;$/;"	m	struct:rtp_payload_data_s
cur_chan	libavcodec/shorten.c	/^    int cur_chan;$/;"	m	struct:ShortenContext	file:
cur_clock	ffserver.c	/^    int64_t cur_clock;           \/* current clock reference value in us *\/$/;"	m	struct:HTTPContext	file:
cur_dts	libavformat/avformat.h	/^    int64_t cur_dts;$/;"	m	struct:AVStream
cur_frame	libavcodec/indeo3.c	/^    YUVBufs *cur_frame;$/;"	m	struct:Indeo3DecodeContext	file:
cur_frame_bytes	ffserver.c	/^    int cur_frame_bytes;       \/* output frame size, needed to compute$/;"	m	struct:HTTPContext	file:
cur_frame_dts	libavcodec/avcodec.h	/^    int64_t cur_frame_dts[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_duration	ffserver.c	/^    int64_t cur_frame_duration;  \/* duration of the current frame in us *\/$/;"	m	struct:HTTPContext	file:
cur_frame_offset	libavcodec/avcodec.h	/^    int64_t cur_frame_offset[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_pts	libavcodec/avcodec.h	/^    int64_t cur_frame_pts[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_start_index	libavcodec/avcodec.h	/^    int cur_frame_start_index;$/;"	m	struct:AVCodecParserContext
cur_len	libavformat/avformat.h	/^    int cur_len;$/;"	m	struct:AVFormatContext
cur_offset	libavcodec/avcodec.h	/^    int64_t cur_offset; \/* current offset $/;"	m	struct:AVCodecParserContext
cur_pcr	libavformat/mpegts.c	/^    int64_t cur_pcr;$/;"	m	struct:MpegTSContext	file:
cur_pkt	libavformat/avformat.h	/^    AVPacket cur_pkt;$/;"	m	struct:AVFormatContext
cur_ptr	libavformat/avformat.h	/^    const uint8_t *cur_ptr;$/;"	m	struct:AVFormatContext
cur_pts	ffserver.c	/^    int64_t cur_pts;             \/* current pts value from the stream in us *\/$/;"	m	struct:HTTPContext	file:
cur_rtp	libavformat/rtsp.c	/^    RTPDemuxContext *cur_rtp;$/;"	m	struct:RTSPState	file:
cur_st	libavformat/avformat.h	/^    AVStream *cur_st;$/;"	m	struct:AVFormatContext
cur_stream	ffplay.c	/^static VideoState *cur_stream;$/;"	v	file:
cur_time	ffserver.c	/^static long cur_time;           \/\/ Making this global saves on passing it around everywhere$/;"	v	file:
cur_timestamp	libavformat/rtp.c	/^    uint32_t cur_timestamp;$/;"	m	struct:RTPDemuxContext	file:
curidx	libavformat/ogg2.h	/^    int curidx;$/;"	m	struct:ogg
curidx	libavformat/ogg2.h	/^    int curidx;$/;"	m	struct:ogg_state
curmask	libavformat/gifdec.c	/^    int curmask;$/;"	m	struct:GifState	file:
curr_bps	libavcodec/flac.c	/^    int bps, curr_bps;$/;"	m	struct:FLACContext	file:
curr_pic_num	libavcodec/h264.c	/^    int curr_pic_num;$/;"	m	struct:H264Context	file:
current_audio_chunk	libavformat/idcin.c	/^    int current_audio_chunk;$/;"	m	struct:IdcinDemuxContext	file:
current_bandwidth	ffserver.c	/^int current_bandwidth;$/;"	v
current_frame	libavcodec/interplayvideo.c	/^    AVFrame current_frame;$/;"	m	struct:IpvideoContext	file:
current_frame	libavcodec/roqvideo.c	/^    AVFrame current_frame;$/;"	m	struct:RoqContext	file:
current_frame	libavcodec/vp3.c	/^    AVFrame current_frame;$/;"	m	struct:Vp3DecodeContext	file:
current_frame	libavcodec/xan.c	/^    AVFrame current_frame;$/;"	m	struct:XanContext	file:
current_frame	libavformat/dc1394.c	/^    int current_frame;$/;"	m	struct:dc1394_data	file:
current_frame	libavformat/sierravmd.c	/^    unsigned int current_frame;$/;"	m	struct:VmdDemuxContext	file:
current_job	libavcodec/pthread.c	/^    int current_job;$/;"	m	struct:ThreadContext	file:
current_job_cond	libavcodec/pthread.c	/^    pthread_cond_t current_job_cond;$/;"	m	struct:ThreadContext	file:
current_job_lock	libavcodec/pthread.c	/^    pthread_mutex_t current_job_lock;$/;"	m	struct:ThreadContext	file:
current_mba	libavcodec/h261.c	/^    int current_mba;$/;"	m	struct:H261Context	file:
current_mv_penalty	libavcodec/mpegvideo.h	/^    uint8_t *current_mv_penalty;$/;"	m	struct:MotionEstContext
current_mv_x	libavcodec/h261.c	/^    int current_mv_x;$/;"	m	struct:H261Context	file:
current_mv_y	libavcodec/h261.c	/^    int current_mv_y;$/;"	m	struct:H261Context	file:
current_picture	libavcodec/4xm.c	/^    AVFrame current_picture, last_picture;$/;"	m	struct:FourXContext	file:
current_picture	libavcodec/mpegvideo.h	/^    Picture current_picture;    \/\/\/< buffer to store the decompressed current picture $/;"	m	struct:MpegEncContext
current_picture	libavcodec/snow.c	/^    AVFrame current_picture;$/;"	m	struct:SnowContext	file:
current_picture	libavcodec/svq1.c	/^    AVFrame current_picture;$/;"	m	struct:SVQ1Context	file:
current_picture_ptr	libavcodec/mpegvideo.h	/^    Picture *current_picture_ptr;  \/\/\/< pointer to the current picture$/;"	m	struct:MpegEncContext
current_sample	libavformat/mov.c	/^    long current_sample;$/;"	m	struct:MOVStreamContext	file:
current_sample	libavformat/segafilm.c	/^    unsigned int current_sample;$/;"	m	struct:FilmDemuxContext	file:
current_stream	libavformat/rm.c	/^    int current_stream;$/;"	m	file:
current_word	libavcodec/liba52/a52_internal.h	/^    uint32_t current_word;$/;"	m	struct:a52_state_s
cursize	libavformat/gifdec.c	/^    int cursize;		\/* The current code size *\/$/;"	m	struct:GifState	file:
custom_pcf	libavcodec/mpegvideo.h	/^    int custom_pcf;$/;"	m	struct:MpegEncContext
cvid_codebook_t	libavcodec/cinepak.c	/^} cvid_codebook_t;$/;"	t	file:
cvid_extra_bytes	libavformat/segafilm.c	/^    int cvid_extra_bytes;  \/* the number of bytes thrown into the Cinepak$/;"	m	struct:FilmDemuxContext	file:
cvid_strip_t	libavcodec/cinepak.c	/^} cvid_strip_t;$/;"	t	file:
cyuv_decode_end	libavcodec/cyuv.c	/^static int cyuv_decode_end(AVCodecContext *avctx)$/;"	f	file:
cyuv_decode_frame	libavcodec/cyuv.c	/^static int cyuv_decode_frame(AVCodecContext *avctx, $/;"	f	file:
cyuv_decode_init	libavcodec/cyuv.c	/^static int cyuv_decode_init(AVCodecContext *avctx)$/;"	f	file:
cyuv_decoder	libavcodec/cyuv.c	/^AVCodec cyuv_decoder = {$/;"	v
d	libavcodec/i386/mmx.h	/^	int			d[2];	\/* 2 Doubleword (32-bit) values *\/$/;"	m
d40000	libavcodec/i386/simple_idct_mmx.c	/^static const uint64_t attribute_used __attribute__((aligned(8))) d40000= 0x0000000000040000ULL;$/;"	v	file:
dark	vhook/fish.c	/^    HSV dark, bright;$/;"	m	file:
dark_mask	ffmpeg.c	/^static float dark_mask = 0;$/;"	v	file:
dark_masking	libavcodec/avcodec.h	/^    float dark_masking;$/;"	m	struct:AVCodecContext
data	libavcodec/4xm.c	/^    uint8_t *data;$/;"	m	struct:CFrameBuffer	file:
data	libavcodec/avcodec.h	/^    uint8_t *data[4];$/;"	m	struct:AVPicture
data	libavcodec/cinepak.c	/^    unsigned char *data;$/;"	m	struct:CinepakContext	file:
data	libavcodec/utils.c	/^    uint8_t *data[4];$/;"	m	struct:InternalBuffer	file:
data	libavcodec/vc9.c	/^    uint8_t *data;      \/\/\/< Data buffer$/;"	m	struct:BitPlane	file:
data	libavformat/avformat.h	/^    uint8_t *data;$/;"	m	struct:AVPacket
data	libavformat/wav.c	/^    offset_t data;$/;"	m	file:
data_blocks	xvmc_render.h	/^  short * data_blocks;$/;"	m
data_count	ffserver.c	/^    int64_t data_count;$/;"	m	struct:HTTPContext	file:
data_count	ffserver.c	/^    long long data_count;$/;"	m	struct:FeedData	file:
data_count	libavcodec/snow.c	/^    int data_count;$/;"	m	file:
data_header	libavformat/asf.h	/^static const GUID data_header = {$/;"	v
data_index	libavformat/mpegts.c	/^    int data_index;$/;"	m	struct:PESContext	file:
data_offset	libavformat/asf.h	/^    uint64_t data_offset; \/* begining of the first data packet *\/$/;"	m
data_offset	libavformat/avformat.h	/^    int64_t data_offset; \/* offset of the first packet *\/$/;"	m	struct:AVFormatContext
data_partitioning	libavcodec/mpegvideo.h	/^    int data_partitioning;           \/\/\/< data partitioning flag from header $/;"	m	struct:MpegEncContext
data_pos	libavformat/rm.c	/^    int data_pos; \/* position of the data after the header *\/$/;"	m	file:
data_stack	libavcodec/snow.c	/^    DWTELEM * * data_stack; \/\/\/< Used for internal purposes.$/;"	m	file:
data_stack_top	libavcodec/snow.c	/^    int data_stack_top;$/;"	m	file:
datarate	ffserver.c	/^    DataRateData datarate;$/;"	m	struct:HTTPContext	file:
date_get_num	libavformat/cutils.c	/^static int date_get_num(const char **pp,$/;"	f	file:
dbgprintf	cws2fws.c	14;"	d	file:
dbgprintf	cws2fws.c	16;"	d	file:
dbknee	libavcodec/ac3.h	/^    int sgain, sdecay, fdecay, dbknee, floor;$/;"	m	struct:AC3BitAllocParameters
dbkneecod	libavcodec/ac3enc.c	/^    int sgaincod, sdecaycod, fdecaycod, dbkneecod, floorcod; $/;"	m	struct:AC3EncodeContext	file:
dbkneetab	libavcodec/ac3tab.h	/^static const uint16_t dbkneetab[4]= { $/;"	v
dc1394_close	libavformat/dc1394.c	/^static int dc1394_close(AVFormatContext * context)$/;"	f	file:
dc1394_data	libavformat/dc1394.c	/^typedef struct dc1394_data {$/;"	s	file:
dc1394_data	libavformat/dc1394.c	/^} dc1394_data;$/;"	t	file:
dc1394_format	libavformat/dc1394.c	/^static AVInputFormat dc1394_format = {$/;"	v	file:
dc1394_frame_format	libavformat/dc1394.c	/^struct dc1394_frame_format {$/;"	s	file:
dc1394_frame_formats	libavformat/dc1394.c	/^} dc1394_frame_formats[] = {$/;"	v
dc1394_frame_rate	libavformat/dc1394.c	/^struct dc1394_frame_rate {$/;"	s	file:
dc1394_frame_rates	libavformat/dc1394.c	/^} dc1394_frame_rates[] = {$/;"	v
dc1394_init	libavformat/dc1394.c	/^int dc1394_init(void)$/;"	f
dc1394_read_header	libavformat/dc1394.c	/^static int dc1394_read_header(AVFormatContext *c, AVFormatParameters * ap)$/;"	f	file:
dc1394_read_packet	libavformat/dc1394.c	/^static int dc1394_read_packet(AVFormatContext *c, AVPacket *pkt)$/;"	f	file:
dc_bias	libavcodec/vp3data.h	/^static const uint16_t dc_bias[16][32][2] = {$/;"	v
dc_cache	libavcodec/mpegvideo.h	/^    int16_t dc_cache[4*5];$/;"	m	struct:MpegEncContext
dc_ccp_tab	libavcodec/asv1.c	/^static const uint8_t dc_ccp_tab[8][2]={$/;"	v	file:
dc_ccp_vlc	libavcodec/asv1.c	/^static VLC dc_ccp_vlc;$/;"	v	file:
dc_chrom	libavcodec/h263.c	/^static VLC dc_lum, dc_chrom;$/;"	v	file:
dc_chroma_vlc	libavcodec/mpeg12.c	/^static VLC dc_chroma_vlc;$/;"	v	file:
dc_index	libavcodec/mjpeg.c	/^    int dc_index[MAX_COMPONENTS];$/;"	m	struct:MJpegDecodeContext	file:
dc_lum	libavcodec/h263.c	/^static VLC dc_lum, dc_chrom;$/;"	v	file:
dc_lum_vlc	libavcodec/mpeg12.c	/^static VLC dc_lum_vlc;$/;"	v	file:
dc_table_index	libavcodec/mpegvideo.h	/^    int dc_table_index;$/;"	m	struct:MpegEncContext
dc_val	libavcodec/mpegvideo.h	/^    int16_t *dc_val[3];            \/\/\/< used for mpeg4 DC prediction, all 3 arrays must be continuous $/;"	m	struct:MpegEncContext
dc_val_base	libavcodec/mpegvideo.h	/^    int16_t *dc_val_base;$/;"	m	struct:MpegEncContext
dc_vlc	libavcodec/vp3.c	/^    VLC dc_vlc[16];$/;"	m	struct:Vp3DecodeContext	file:
dct32	libavcodec/mpegaudiodec.c	/^static void dct32(int32_t *out, int32_t *tab)$/;"	f	file:
dct_algo	ffmpeg.c	/^static int dct_algo = 0;$/;"	v	file:
dct_algo	libavcodec/avcodec.h	/^    int dct_algo;$/;"	m	struct:AVCodecContext
dct_count	libavcodec/mpegvideo.h	/^    int dct_count[2];$/;"	m	struct:MpegEncContext
dct_error	libavcodec/dct-test.c	/^void dct_error(const char *name, int is_idct,$/;"	f
dct_error_sum	libavcodec/mpegvideo.h	/^    int (*dct_error_sum)[64];$/;"	m	struct:MpegEncContext
dct_get	libavcodec/asv1.c	/^static inline void dct_get(ASV1Context *a, int mb_x, int mb_y){$/;"	f	file:
dct_max	libavcodec/dsputil.h	/^    me_cmp_func dct_max[5];$/;"	m	struct:DSPContext
dct_max8x8_c	libavcodec/dsputil.c	/^static int dct_max8x8_c(\/*MpegEncContext*\/ void *c, uint8_t *src1, uint8_t *src2, int stride, int h){$/;"	f	file:
dct_mode	libavcodec/dv.c	/^    int dct_mode;$/;"	m	struct:EncBlockInfo	file:
dct_mode	libavcodec/dv.c	/^    uint8_t dct_mode;$/;"	m	struct:BlockInfo	file:
dct_offset	libavcodec/mpegvideo.h	/^    uint16_t (*dct_offset)[64];$/;"	m	struct:MpegEncContext
dct_quantize	libavcodec/i386/mpegvideo_mmx_template.c	/^static int RENAME(dct_quantize)(MpegEncContext *s,$/;"	f	file:
dct_quantize	libavcodec/mpegvideo.h	/^    int (*dct_quantize)(struct MpegEncContext *s, DCTELEM *block\/*align 16*\/, int n, int qscale, int *overflow);$/;"	m	struct:MpegEncContext
dct_quantize_altivec	libavcodec/ppc/mpegvideo_altivec.c	/^int dct_quantize_altivec(MpegEncContext* s, $/;"	f
dct_quantize_c	libavcodec/mpegvideo.c	/^static int dct_quantize_c(MpegEncContext *s, $/;"	f	file:
dct_quantize_refine	libavcodec/mpegvideo.c	/^static int dct_quantize_refine(MpegEncContext *s, \/\/FIXME breaks denoise?$/;"	f	file:
dct_quantize_trellis_c	libavcodec/mpegvideo.c	/^static int dct_quantize_trellis_c(MpegEncContext *s, $/;"	f	file:
dct_sad	libavcodec/dsputil.h	/^    me_cmp_func dct_sad[5];$/;"	m	struct:DSPContext
dct_sad8x8_c	libavcodec/dsputil.c	/^static int dct_sad8x8_c(\/*MpegEncContext*\/ void *c, uint8_t *src1, uint8_t *src2, int stride, int h){$/;"	f	file:
dct_single_coeff_elimination	libavcodec/mpegvideo.c	/^static inline void dct_single_coeff_elimination(MpegEncContext *s, int n, int threshold)$/;"	f	file:
dct_unquantize_h261_inter	libavcodec/mpegvideo.h	/^    void (*dct_unquantize_h261_inter)(struct MpegEncContext *s, $/;"	m	struct:MpegEncContext
dct_unquantize_h261_intra	libavcodec/mpegvideo.h	/^    void (*dct_unquantize_h261_intra)(struct MpegEncContext *s, $/;"	m	struct:MpegEncContext
dct_unquantize_h263_altivec	libavcodec/ppc/mpegvideo_altivec.c	/^void dct_unquantize_h263_altivec(MpegEncContext *s, $/;"	f
dct_unquantize_h263_inter	libavcodec/mpegvideo.h	/^    void (*dct_unquantize_h263_inter)(struct MpegEncContext *s, $/;"	m	struct:MpegEncContext
dct_unquantize_h263_inter_axp	libavcodec/alpha/mpegvideo_alpha.c	/^static void dct_unquantize_h263_inter_axp(MpegEncContext *s, DCTELEM *block,$/;"	f	file:
dct_unquantize_h263_inter_c	libavcodec/mpegvideo.c	/^static void dct_unquantize_h263_inter_c(MpegEncContext *s, $/;"	f	file:
dct_unquantize_h263_inter_mmx	libavcodec/i386/mpegvideo_mmx.c	/^static void dct_unquantize_h263_inter_mmx(MpegEncContext *s,$/;"	f	file:
dct_unquantize_h263_intra	libavcodec/mpegvideo.h	/^    void (*dct_unquantize_h263_intra)(struct MpegEncContext *s, $/;"	m	struct:MpegEncContext
dct_unquantize_h263_intra_axp	libavcodec/alpha/mpegvideo_alpha.c	/^static void dct_unquantize_h263_intra_axp(MpegEncContext *s, DCTELEM *block,$/;"	f	file:
dct_unquantize_h263_intra_c	libavcodec/mpegvideo.c	/^static void dct_unquantize_h263_intra_c(MpegEncContext *s, $/;"	f	file:
dct_unquantize_h263_intra_mmx	libavcodec/i386/mpegvideo_mmx.c	/^static void dct_unquantize_h263_intra_mmx(MpegEncContext *s,$/;"	f	file:
dct_unquantize_h263_mmi	libavcodec/ps2/mpegvideo_mmi.c	/^static void dct_unquantize_h263_mmi(MpegEncContext *s, $/;"	f	file:
dct_unquantize_inter	libavcodec/mpegvideo.h	/^    void (*dct_unquantize_inter)(struct MpegEncContext *s, \/\/ unquantizer to use (mpeg4 can use both)$/;"	m	struct:MpegEncContext
dct_unquantize_intra	libavcodec/mpegvideo.h	/^    void (*dct_unquantize_intra)(struct MpegEncContext *s, \/\/ unquantizer to use (mpeg4 can use both)$/;"	m	struct:MpegEncContext
dct_unquantize_mpeg1_inter	libavcodec/mpegvideo.h	/^    void (*dct_unquantize_mpeg1_inter)(struct MpegEncContext *s, $/;"	m	struct:MpegEncContext
dct_unquantize_mpeg1_inter_c	libavcodec/mpegvideo.c	/^static void dct_unquantize_mpeg1_inter_c(MpegEncContext *s, $/;"	f	file:
dct_unquantize_mpeg1_inter_mmx	libavcodec/i386/mpegvideo_mmx.c	/^static void dct_unquantize_mpeg1_inter_mmx(MpegEncContext *s,$/;"	f	file:
dct_unquantize_mpeg1_intra	libavcodec/mpegvideo.h	/^    void (*dct_unquantize_mpeg1_intra)(struct MpegEncContext *s, $/;"	m	struct:MpegEncContext
dct_unquantize_mpeg1_intra_c	libavcodec/mpegvideo.c	/^static void dct_unquantize_mpeg1_intra_c(MpegEncContext *s, $/;"	f	file:
dct_unquantize_mpeg1_intra_mmx	libavcodec/i386/mpegvideo_mmx.c	/^static void dct_unquantize_mpeg1_intra_mmx(MpegEncContext *s,$/;"	f	file:
dct_unquantize_mpeg2_inter	libavcodec/mpegvideo.h	/^    void (*dct_unquantize_mpeg2_inter)(struct MpegEncContext *s, $/;"	m	struct:MpegEncContext
dct_unquantize_mpeg2_inter_c	libavcodec/mpegvideo.c	/^static void dct_unquantize_mpeg2_inter_c(MpegEncContext *s, $/;"	f	file:
dct_unquantize_mpeg2_inter_mmx	libavcodec/i386/mpegvideo_mmx.c	/^static void dct_unquantize_mpeg2_inter_mmx(MpegEncContext *s,$/;"	f	file:
dct_unquantize_mpeg2_intra	libavcodec/mpegvideo.h	/^    void (*dct_unquantize_mpeg2_intra)(struct MpegEncContext *s, $/;"	m	struct:MpegEncContext
dct_unquantize_mpeg2_intra_c	libavcodec/mpegvideo.c	/^static void dct_unquantize_mpeg2_intra_c(MpegEncContext *s, $/;"	f	file:
dct_unquantize_mpeg2_intra_mmx	libavcodec/i386/mpegvideo_mmx.c	/^static void dct_unquantize_mpeg2_intra_mmx(MpegEncContext *s,$/;"	f	file:
deInterlaceBlendLinear	libavcodec/libpostproc/postprocess_template.c	/^static inline void RENAME(deInterlaceBlendLinear)(uint8_t src[], int stride, uint8_t *tmp)$/;"	f	file:
deInterlaceFF	libavcodec/libpostproc/postprocess_template.c	/^static inline void RENAME(deInterlaceFF)(uint8_t src[], int stride, uint8_t *tmp)$/;"	f	file:
deInterlaceInterpolateCubic	libavcodec/libpostproc/postprocess_template.c	/^static inline void RENAME(deInterlaceInterpolateCubic)(uint8_t src[], int stride)$/;"	f	file:
deInterlaceInterpolateLinear	libavcodec/libpostproc/postprocess_template.c	/^static inline void RENAME(deInterlaceInterpolateLinear)(uint8_t src[], int stride)$/;"	f	file:
deInterlaceL5	libavcodec/libpostproc/postprocess_template.c	/^static inline void RENAME(deInterlaceL5)(uint8_t src[], int stride, uint8_t *tmp, uint8_t *tmp2)$/;"	f	file:
deInterlaceMedian	libavcodec/libpostproc/postprocess_template.c	/^static inline void RENAME(deInterlaceMedian)(uint8_t src[], int stride)$/;"	f	file:
deblocking_filter	libavcodec/h264.c	/^    int deblocking_filter;         \/\/\/< disable_deblocking_filter_idc with 1<->0 $/;"	m	struct:H264Context	file:
deblocking_filter_parameters_present	libavcodec/h264.c	/^    int deblocking_filter_parameters_present; \/\/\/< deblocking_filter_parameters_present_flag$/;"	m	struct:PPS	file:
debug	ffmpeg.c	/^static int debug = 0;$/;"	v	file:
debug	ffplay.c	/^static int debug = 0;$/;"	v	file:
debug	libavcodec/avcodec.h	/^    int debug;$/;"	m	struct:AVCodecContext
debug	vhook/fish.c	/^    int debug;$/;"	m	file:
debug_block_coding	libavcodec/vp3.c	/^static inline void debug_block_coding(const char *format, ...) { } $/;"	f	file:
debug_block_coding	libavcodec/vp3.c	96;"	d	file:
debug_dc_pred	libavcodec/vp3.c	/^static inline void debug_dc_pred(const char *format, ...) { } $/;"	f	file:
debug_dc_pred	libavcodec/vp3.c	126;"	d	file:
debug_dequantizers	libavcodec/vp3.c	/^static inline void debug_dequantizers(const char *format, ...) { } $/;"	f	file:
debug_dequantizers	libavcodec/vp3.c	90;"	d	file:
debug_idct	libavcodec/vp3.c	/^static inline void debug_idct(const char *format, ...) { } $/;"	f	file:
debug_idct	libavcodec/vp3.c	132;"	d	file:
debug_indent	libavformat/mov.c	/^static int debug_indent = 0;$/;"	v	file:
debug_init	libavcodec/vp3.c	/^static inline void debug_init(const char *format, ...) { }$/;"	f	file:
debug_init	libavcodec/vp3.c	84;"	d	file:
debug_interplay	libavcodec/interplayvideo.c	/^static inline void debug_interplay(const char *format, ...) { }$/;"	f	file:
debug_interplay	libavcodec/interplayvideo.c	50;"	d	file:
debug_ipmovie	libavformat/ipmovie.c	/^static inline void debug_ipmovie(const char *format, ...) { }$/;"	f	file:
debug_ipmovie	libavformat/ipmovie.c	40;"	d	file:
debug_modes	libavcodec/vp3.c	/^static inline void debug_modes(const char *format, ...) { } $/;"	f	file:
debug_modes	libavcodec/vp3.c	102;"	d	file:
debug_mv	ffmpeg.c	/^static int debug_mv = 0;$/;"	v	file:
debug_mv	ffplay.c	/^static int debug_mv = 0;$/;"	v	file:
debug_mv	libavcodec/avcodec.h	/^    int debug_mv;$/;"	m	struct:AVCodecContext
debug_token	libavcodec/vp3.c	/^static inline void debug_token(const char *format, ...) { } $/;"	f	file:
debug_token	libavcodec/vp3.c	114;"	d	file:
debug_vectors	libavcodec/vp3.c	/^static inline void debug_vectors(const char *format, ...) { } $/;"	f	file:
debug_vectors	libavcodec/vp3.c	108;"	d	file:
debug_vlc	libavcodec/vp3.c	/^static inline void debug_vlc(const char *format, ...) { } $/;"	f	file:
debug_vlc	libavcodec/vp3.c	120;"	d	file:
debug_vp3	libavcodec/vp3.c	/^static inline void debug_vp3(const char *format, ...) { }$/;"	f	file:
debug_vp3	libavcodec/vp3.c	78;"	d	file:
dec1	libavcodec/ra144.c	/^static void dec1(Real144_internal *glob, int *data, int *inp, int n, int f)$/;"	f	file:
dec2	libavcodec/ra144.c	/^static void dec2(Real144_internal *glob, int *data, int *inp, int n, int f, int *inp2, int l)$/;"	f	file:
decState	libavcodec/amr.c	/^    void * decState;$/;"	m	struct:AMRContext	file:
dec_temp	libavcodec/adx.c	/^    unsigned char dec_temp[18*2];$/;"	m	file:
decay	libavcodec/mpegvideo.h	/^    double decay;$/;"	m	struct:Predictor
decide_ac_pred	libavcodec/h263.c	/^static inline int decide_ac_pred(MpegEncContext * s, DCTELEM block[6][64], int dir[6], uint8_t *st[6], int zigzag_last_index[6])$/;"	f	file:
declare_idct	libavcodec/i386/idct_mmx.c	558;"	d	file:
decode	libavcodec/avcodec.h	/^    int (*decode)(AVCodecContext *, void *outdata, int *outdata_size,$/;"	m	struct:AVCodec
decode	libavcodec/mpegvideo.h	/^    int decode;                 \/\/\/< if 0 then decoding will be skipped (for encoding b frames for example)$/;"	m	struct:MpegEncContext
decode	libavcodec/ra288.c	/^static void decode(Real288_internal *glob, unsigned int input)$/;"	f	file:
decode012	libavcodec/bitstream.h	/^static inline int decode012(GetBitContext *gb){$/;"	f
decode_422_bitstream	libavcodec/huffyuv.c	/^static void decode_422_bitstream(HYuvContext *s, int count){$/;"	f	file:
decode_advanced_sequence_header	libavcodec/vc9.c	/^static int decode_advanced_sequence_header(AVCodecContext *avctx, GetBitContext *gb)$/;"	f	file:
decode_b_picture_primary_header	libavcodec/vc9.c	/^static int decode_b_picture_primary_header(VC9Context *v)$/;"	f	file:
decode_b_picture_secondary_header	libavcodec/vc9.c	/^static int decode_b_picture_secondary_header(VC9Context *v)$/;"	f	file:
decode_be32	libavformat/rtp.c	/^static inline uint32_t decode_be32(const uint8_t *p)$/;"	f	file:
decode_be64	libavformat/rtp.c	/^static inline uint64_t decode_be64(const uint8_t *p)$/;"	f	file:
decode_bgr_bitstream	libavcodec/huffyuv.c	/^static void decode_bgr_bitstream(HYuvContext *s, int count){$/;"	f	file:
decode_block	libavcodec/mjpeg.c	/^static int decode_block(MJpegDecodeContext *s, DCTELEM *block, $/;"	f	file:
decode_block	libavcodec/ra288.c	/^static void * decode_block(AVCodecContext * avctx, unsigned char *in, signed short int *out,unsigned len)$/;"	f	file:
decode_blocks	libavcodec/snow.c	/^static void decode_blocks(SnowContext *s){$/;"	f	file:
decode_buffer	libavcodec/vqavideo.c	/^    unsigned char *decode_buffer;$/;"	m	struct:VqaContext	file:
decode_buffer_size	libavcodec/vqavideo.c	/^    int decode_buffer_size;$/;"	m	struct:VqaContext	file:
decode_cabac_b_mb_sub_type	libavcodec/h264.c	/^static int decode_cabac_b_mb_sub_type( H264Context *h ) {$/;"	f	file:
decode_cabac_field_decoding_flag	libavcodec/h264.c	/^static int decode_cabac_field_decoding_flag(H264Context *h) {$/;"	f	file:
decode_cabac_intra_mb_type	libavcodec/h264.c	/^static int decode_cabac_intra_mb_type(H264Context *h, int ctx_base, int intra_slice) {$/;"	f	file:
decode_cabac_mb_cbp_chroma	libavcodec/h264.c	/^static int decode_cabac_mb_cbp_chroma( H264Context *h) {$/;"	f	file:
decode_cabac_mb_cbp_luma	libavcodec/h264.c	/^static int decode_cabac_mb_cbp_luma( H264Context *h) {$/;"	f	file:
decode_cabac_mb_chroma_pre_mode	libavcodec/h264.c	/^static int decode_cabac_mb_chroma_pre_mode( H264Context *h) {$/;"	f	file:
decode_cabac_mb_dqp	libavcodec/h264.c	/^static int decode_cabac_mb_dqp( H264Context *h) {$/;"	f	file:
decode_cabac_mb_intra4x4_pred_mode	libavcodec/h264.c	/^static int decode_cabac_mb_intra4x4_pred_mode( H264Context *h, int pred_mode ) {$/;"	f	file:
decode_cabac_mb_mvd	libavcodec/h264.c	/^static int decode_cabac_mb_mvd( H264Context *h, int list, int n, int l ) {$/;"	f	file:
decode_cabac_mb_ref	libavcodec/h264.c	/^static int decode_cabac_mb_ref( H264Context *h, int list, int n ) {$/;"	f	file:
decode_cabac_mb_skip	libavcodec/h264.c	/^static int decode_cabac_mb_skip( H264Context *h) {$/;"	f	file:
decode_cabac_mb_type	libavcodec/h264.c	/^static int decode_cabac_mb_type( H264Context *h ) {$/;"	f	file:
decode_cabac_p_mb_sub_type	libavcodec/h264.c	/^static int decode_cabac_p_mb_sub_type( H264Context *h ) {$/;"	f	file:
decode_cabac_residual	libavcodec/h264.c	/^static int inline decode_cabac_residual( H264Context *h, DCTELEM *block, int cat, int n, const uint8_t *scantable, int qp, int max_coeff) {$/;"	f	file:
decode_close_mp3on4	libavcodec/mpegaudiodec.c	/^static int decode_close_mp3on4(AVCodecContext * avctx)$/;"	f	file:
decode_colskip	libavcodec/vc9.c	/^static void decode_colskip(uint8_t* plane, int width, int height, int stride, GetBitContext *gb){$/;"	f	file:
decode_dc	libavcodec/mpeg12.c	/^static inline int decode_dc(GetBitContext *gb, int component)$/;"	f	file:
decode_delay	libavformat/nut.c	/^    int decode_delay;$/;"	m	file:
decode_delta	libavcodec/indeo2.c	/^    int decode_delta;$/;"	m	struct:Ir2Context	file:
decode_end	libavcodec/4xm.c	/^static int decode_end(AVCodecContext *avctx){$/;"	f	file:
decode_end	libavcodec/8bps.c	/^static int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/asv1.c	/^static int decode_end(AVCodecContext *avctx){$/;"	f	file:
decode_end	libavcodec/fraps.c	/^static int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/h264.c	/^static int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/huffyuv.c	/^static int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/lcl.c	/^static int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/mdec.c	/^static int decode_end(AVCodecContext *avctx){$/;"	f	file:
decode_end	libavcodec/qpeg.c	/^static int decode_end(AVCodecContext *avctx){$/;"	f	file:
decode_end	libavcodec/tscc.c	/^static int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_exp_lsp	libavcodec/wmadec.c	/^static void decode_exp_lsp(WMADecodeContext *s, int ch)$/;"	f	file:
decode_exp_vlc	libavcodec/wmadec.c	/^static int decode_exp_vlc(WMADecodeContext *s, int ch)$/;"	f	file:
decode_ext_header	libavcodec/wmv2.c	/^static int decode_ext_header(Wmv2Context *w){$/;"	f	file:
decode_format80	libavcodec/vqavideo.c	/^static void decode_format80(unsigned char *src, int src_size,$/;"	f	file:
decode_frame	libavcodec/4xm.c	/^static int decode_frame(AVCodecContext *avctx, $/;"	f	file:
decode_frame	libavcodec/8bps.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size, uint8_t *buf, int buf_size)$/;"	f	file:
decode_frame	libavcodec/asv1.c	/^static int decode_frame(AVCodecContext *avctx, $/;"	f	file:
decode_frame	libavcodec/cljr.c	/^static int decode_frame(AVCodecContext *avctx, $/;"	f	file:
decode_frame	libavcodec/ffv1.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size, uint8_t *buf, int buf_size){$/;"	f	file:
decode_frame	libavcodec/flac.c	/^static int decode_frame(FLACContext *s)$/;"	f	file:
decode_frame	libavcodec/fraps.c	/^static int decode_frame(AVCodecContext *avctx, $/;"	f	file:
decode_frame	libavcodec/h264.c	/^static int decode_frame(AVCodecContext *avctx, $/;"	f	file:
decode_frame	libavcodec/huffyuv.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size, uint8_t *buf, int buf_size){$/;"	f	file:
decode_frame	libavcodec/lcl.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size, uint8_t *buf, int buf_size)$/;"	f	file:
decode_frame	libavcodec/loco.c	/^static int decode_frame(AVCodecContext *avctx, $/;"	f	file:
decode_frame	libavcodec/mdec.c	/^static int decode_frame(AVCodecContext *avctx, $/;"	f	file:
decode_frame	libavcodec/mpegaudiodec.c	/^static int decode_frame(AVCodecContext * avctx,$/;"	f	file:
decode_frame	libavcodec/png.c	/^static int decode_frame(AVCodecContext *avctx, $/;"	f	file:
decode_frame	libavcodec/qdrw.c	/^static int decode_frame(AVCodecContext *avctx, $/;"	f	file:
decode_frame	libavcodec/qpeg.c	/^static int decode_frame(AVCodecContext *avctx, $/;"	f	file:
decode_frame	libavcodec/tscc.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size, uint8_t *buf, int buf_size)$/;"	f	file:
decode_frame	libavcodec/vcr1.c	/^static int decode_frame(AVCodecContext *avctx, $/;"	f	file:
decode_frame	libavcodec/wnv1.c	/^static int decode_frame(AVCodecContext *avctx, $/;"	f	file:
decode_frame	libavcodec/xl.c	/^static int decode_frame(AVCodecContext *avctx, $/;"	f	file:
decode_frame	libavformat/nut.c	/^static int decode_frame(NUTContext *nut, AVPacket *pkt, int frame_code, int frame_type, int64_t frame_start){$/;"	f	file:
decode_frame_adu	libavcodec/mpegaudiodec.c	/^static int decode_frame_adu(AVCodecContext * avctx,$/;"	f	file:
decode_frame_header	libavformat/nut.c	/^static int decode_frame_header(NUTContext *nut, int *key_frame_ret, int64_t *pts_ret, int *stream_id_ret, int frame_code, int frame_type, int64_t frame_start){$/;"	f	file:
decode_frame_mp3on4	libavcodec/mpegaudiodec.c	/^static int decode_frame_mp3on4(AVCodecContext * avctx,$/;"	f	file:
decode_gray_bitstream	libavcodec/huffyuv.c	/^static void decode_gray_bitstream(HYuvContext *s, int count){$/;"	f	file:
decode_header	libavcodec/mpegaudiodec.c	/^static int decode_header(MPADecodeContext *s, uint32_t header)$/;"	f	file:
decode_hrd	libavcodec/vc9.c	/^static int decode_hrd(VC9Context *v, GetBitContext *gb)$/;"	f	file:
decode_hrd_parameters	libavcodec/h264.c	/^static inline void decode_hrd_parameters(H264Context *h, SPS *sps){$/;"	f	file:
decode_i_block	libavcodec/4xm.c	/^static int decode_i_block(FourXContext *f, DCTELEM *block){$/;"	f	file:
decode_i_frame	libavcodec/4xm.c	/^static int decode_i_frame(FourXContext *f, uint8_t *buf, int length){$/;"	f	file:
decode_i_mb	libavcodec/4xm.c	/^static int decode_i_mb(FourXContext *f){$/;"	f	file:
decode_i_picture_primary_header	libavcodec/vc9.c	/^static int decode_i_picture_primary_header(VC9Context *v)$/;"	f	file:
decode_i_picture_secondary_header	libavcodec/vc9.c	/^static int decode_i_picture_secondary_header(VC9Context *v)$/;"	f	file:
decode_info_header	libavformat/nut.c	/^static int decode_info_header(NUTContext *nut){$/;"	f	file:
decode_init	libavcodec/4xm.c	/^static int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init	libavcodec/8bps.c	/^static int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/asv1.c	/^static int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init	libavcodec/cljr.c	/^static int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init	libavcodec/ffv1.c	/^static int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/fraps.c	/^static int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/h264.c	/^static int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init	libavcodec/huffyuv.c	/^static int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/lcl.c	/^static int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/loco.c	/^static int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init	libavcodec/mdec.c	/^static int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init	libavcodec/mpegaudiodec.c	/^static int decode_init(AVCodecContext * avctx)$/;"	f	file:
decode_init	libavcodec/qdrw.c	/^static int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init	libavcodec/qpeg.c	/^static int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init	libavcodec/tscc.c	/^static int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/vcr1.c	/^static int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init	libavcodec/wnv1.c	/^static int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init	libavcodec/xl.c	/^static int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init_mp3on4	libavcodec/mpegaudiodec.c	/^static int decode_init_mp3on4(AVCodecContext * avctx)$/;"	f	file:
decode_init_vlc	libavcodec/h264.c	/^static void decode_init_vlc(H264Context *h){$/;"	f	file:
decode_interrupt_cb	ffmpeg.c	/^static int decode_interrupt_cb(void)$/;"	f	file:
decode_interrupt_cb	ffplay.c	/^static int decode_interrupt_cb(void)$/;"	f	file:
decode_line	libavcodec/ffv1.c	/^static inline void decode_line(FFV1Context *s, int w, int_fast16_t *sample[2], int plane_index, int bits){$/;"	f	file:
decode_main_header	libavformat/nut.c	/^static int decode_main_header(NUTContext *nut){$/;"	f	file:
decode_map_chunk_offset	libavformat/ipmovie.c	/^    offset_t decode_map_chunk_offset;$/;"	m	struct:IPMVEContext	file:
decode_map_chunk_size	libavformat/ipmovie.c	/^    int decode_map_chunk_size;$/;"	m	struct:IPMVEContext	file:
decode_mb	libavcodec/asv1.c	/^static inline int decode_mb(ASV1Context *a, DCTELEM block[6][64]){$/;"	f	file:
decode_mb	libavcodec/error_resilience.c	/^static void decode_mb(MpegEncContext *s){$/;"	f	file:
decode_mb	libavcodec/mdec.c	/^static inline int decode_mb(MDECContext *a, DCTELEM block[6][64]){$/;"	f	file:
decode_mb	libavcodec/mpegvideo.h	/^    int (*decode_mb)(struct MpegEncContext *s, DCTELEM block[6][64]); \/\/ used by some codecs to avoid a switch()$/;"	m	struct:MpegEncContext
decode_mb_cabac	libavcodec/h264.c	/^static int decode_mb_cabac(H264Context *h) {$/;"	f	file:
decode_mb_cavlc	libavcodec/h264.c	/^static int decode_mb_cavlc(H264Context *h){$/;"	f	file:
decode_mb_skip	libavcodec/h264.c	/^static void decode_mb_skip(H264Context *h){$/;"	f	file:
decode_mv_component	libavcodec/h261.c	/^static int decode_mv_component(GetBitContext *gb, int v){$/;"	f	file:
decode_nal	libavcodec/h264.c	/^static uint8_t *decode_nal(H264Context *h, uint8_t *src, int *dst_length, int *consumed, int length){$/;"	f	file:
decode_nal_units	libavcodec/h264.c	/^static int decode_nal_units(H264Context *h, uint8_t *buf, int buf_size){$/;"	f	file:
decode_p_block	libavcodec/4xm.c	/^static void decode_p_block(FourXContext *f, uint16_t *dst, uint16_t *src, int log2w, int log2h, int stride){$/;"	f	file:
decode_p_frame	libavcodec/4xm.c	/^static int decode_p_frame(FourXContext *f, uint8_t *buf, int length){$/;"	f	file:
decode_p_picture_primary_header	libavcodec/vc9.c	/^static int decode_p_picture_primary_header(VC9Context *v)$/;"	f	file:
decode_p_picture_secondary_header	libavcodec/vc9.c	/^static int decode_p_picture_secondary_header(VC9Context *v)$/;"	f	file:
decode_picture_parameter_set	libavcodec/h264.c	/^static inline int decode_picture_parameter_set(H264Context *h){$/;"	f	file:
decode_plane	libavcodec/ffv1.c	/^static void decode_plane(FFV1Context *s, uint8_t *src, int w, int h, int stride, int plane_index){$/;"	f	file:
decode_q_branch	libavcodec/snow.c	/^static void decode_q_branch(SnowContext *s, int level, int x, int y){$/;"	f	file:
decode_rbsp_trailing	libavcodec/h264.c	/^static int decode_rbsp_trailing(uint8_t *src){$/;"	f	file:
decode_ref_pic_list_reordering	libavcodec/h264.c	/^static int decode_ref_pic_list_reordering(H264Context *h){$/;"	f	file:
decode_ref_pic_marking	libavcodec/h264.c	/^static int decode_ref_pic_marking(H264Context *h){$/;"	f	file:
decode_residual	libavcodec/h264.c	/^static int decode_residual(H264Context *h, GetBitContext *gb, DCTELEM *block, int n, const uint8_t *scantable, int qp, int max_coeff){$/;"	f	file:
decode_residuals	libavcodec/flac.c	/^static int decode_residuals(FLACContext *s, int channel, int pred_order)$/;"	f	file:
decode_rgb_frame	libavcodec/ffv1.c	/^static void decode_rgb_frame(FFV1Context *s, uint32_t *src, int w, int h, int stride){$/;"	f	file:
decode_rle	libavcodec/tscc.c	/^static int decode_rle(CamtasiaContext *c, unsigned int srcsize)$/;"	f	file:
decode_rowskip	libavcodec/vc9.c	/^static void decode_rowskip(uint8_t* plane, int width, int height, int stride, GetBitContext *gb){$/;"	f	file:
decode_seq_parameter_set	libavcodec/h264.c	/^static inline int decode_seq_parameter_set(H264Context *h){$/;"	f	file:
decode_sequence_header	libavcodec/vc9.c	/^static int decode_sequence_header(AVCodecContext *avctx, GetBitContext *gb)$/;"	f	file:
decode_slice	libavcodec/h263dec.c	/^static int decode_slice(MpegEncContext *s){$/;"	f	file:
decode_slice	libavcodec/h264.c	/^static int decode_slice(H264Context *h){$/;"	f	file:
decode_slice_header	libavcodec/h264.c	/^static int decode_slice_header(H264Context *h){$/;"	f	file:
decode_stream_header	libavformat/nut.c	/^static int decode_stream_header(NUTContext *nut){$/;"	f	file:
decode_subband_slice_buffered	libavcodec/snow.c	/^static inline void decode_subband_slice_buffered(SnowContext *s, SubBand *b, slice_buffer * sb, int start_y, int h, int save_state[1]){$/;"	f	file:
decode_subframe	libavcodec/flac.c	/^static inline int decode_subframe(FLACContext *s, int channel)$/;"	f	file:
decode_subframe_fixed	libavcodec/flac.c	/^static int decode_subframe_fixed(FLACContext *s, int channel, int pred_order)$/;"	f	file:
decode_subframe_lpc	libavcodec/flac.c	/^static int decode_subframe_lpc(FLACContext *s, int channel, int pred_order)$/;"	f	file:
decode_subframe_lpc	libavcodec/shorten.c	/^static void decode_subframe_lpc(ShortenContext *s, int channel, int residual_size, int pred_order)$/;"	f	file:
decode_thread	ffplay.c	/^static int decode_thread(void *arg)$/;"	f	file:
decode_user_data	libavcodec/h263.c	/^static int decode_user_data(MpegEncContext *s, GetBitContext *gb){$/;"	f	file:
decode_vol_header	libavcodec/h263.c	/^static int decode_vol_header(MpegEncContext *s, GetBitContext *gb){$/;"	f	file:
decode_vop_header	libavcodec/h263.c	/^static int decode_vop_header(MpegEncContext *s, GetBitContext *gb){$/;"	f	file:
decode_vui_parameters	libavcodec/h264.c	/^static inline int decode_vui_parameters(H264Context *h, SPS *sps){$/;"	f	file:
decode_wave_header	libavcodec/shorten.c	/^static int decode_wave_header(AVCodecContext *avctx, uint8_t *header, int header_size)$/;"	f	file:
decoded	libavcodec/flac.c	/^    int32_t *decoded[MAX_CHANNELS];$/;"	m	struct:FLACContext	file:
decoded	libavcodec/shorten.c	/^    int32_t *decoded[MAX_CHANNELS];$/;"	m	struct:ShortenContext	file:
decoder_cfg	libavformat/mov.c	/^    uint8_t *decoder_cfg;$/;"	m	file:
decoder_cfg_len	libavformat/mov.c	/^    uint8_t  decoder_cfg_len;$/;"	m	file:
decodetable	libavcodec/ra144.h	/^static const short *decodetable[11]={$/;"	v
decodetable1	libavcodec/ra144.h	/^static const short decodetable1[63]={$/;"	v
decodetable10	libavcodec/ra144.h	/^static const short decodetable10[15]={$/;"	v
decodetable11	libavcodec/ra144.h	/^static const short decodetable11[7]={$/;"	v
decodetable2	libavcodec/ra144.h	/^static const short decodetable2[127]={$/;"	v
decodetable3	libavcodec/ra144.h	/^static const short decodetable3[63]={$/;"	v
decodetable4	libavcodec/ra144.h	/^static const short decodetable4[63]={$/;"	v
decodetable5	libavcodec/ra144.h	/^static const short decodetable5[31]={$/;"	v
decodetable6	libavcodec/ra144.h	/^static const short decodetable6[31]={$/;"	v
decodetable7	libavcodec/ra144.h	/^static const short decodetable7[15]={$/;"	v
decodetable8	libavcodec/ra144.h	/^static const short decodetable8[15]={$/;"	v
decodetable9	libavcodec/ra144.h	/^static const short decodetable9[15]={$/;"	v
decoding_map	libavcodec/interplayvideo.c	/^    unsigned char *decoding_map;$/;"	m	struct:IpvideoContext	file:
decoding_map_size	libavcodec/interplayvideo.c	/^    int decoding_map_size;$/;"	m	struct:IpvideoContext	file:
decoding_needed	ffmpeg.c	/^    int decoding_needed;     \/* true if the packets must be decoded in 'raw_fifo' *\/$/;"	m	struct:AVInputStream	file:
decomp_buf	libavcodec/lcl.c	/^    unsigned char* decomp_buf;$/;"	m	struct:LclContext	file:
decomp_buf	libavcodec/tscc.c	/^    unsigned char* decomp_buf;$/;"	m	struct:TsccContext	file:
decomp_size	libavcodec/lcl.c	/^    unsigned int decomp_size;$/;"	m	struct:LclContext	file:
decomp_size	libavcodec/tscc.c	/^    unsigned int decomp_size;$/;"	m	struct:TsccContext	file:
decorrelate	libavcodec/huffyuv.c	/^    int decorrelate;$/;"	m	struct:HYuvContext	file:
decorrelation	libavcodec/flac.c	/^    enum decorrelation_type decorrelation;$/;"	m	struct:FLACContext	file:
decorrelation	libavcodec/sonic.c	/^    int lossless, decorrelation;$/;"	m	struct:SonicContext	file:
decorrelation_type	libavcodec/flac.c	/^enum decorrelation_type {$/;"	g	file:
decptr	libavcodec/ra144.c	/^	unsigned int	*decptr;			\/* decoder ptr *\/$/;"	m	file:
decsp	libavcodec/ra144.c	/^	signed   short	*decsp;$/;"	m	file:
default_duration	libavformat/matroska.c	/^    int64_t default_duration;$/;"	m	struct:Track	file:
default_fcode_tab	libavcodec/mpegvideo.c	/^static uint8_t default_fcode_tab[MAX_MV*2+1];$/;"	v	file:
default_interrupt_cb	libavformat/avio.c	/^static int default_interrupt_cb(void)$/;"	f	file:
default_ip	libavformat/rtsp.c	/^    struct in_addr default_ip;$/;"	m	struct:SDPParseState	file:
default_mv_penalty	libavcodec/mpegvideo.c	/^static uint8_t (*default_mv_penalty)[MAX_MV*2+1]=NULL;$/;"	v	file:
default_ref_list	libavcodec/h264.c	/^    Picture default_ref_list[2][32];$/;"	m	struct:H264Context	file:
default_ttl	libavformat/rtsp.c	/^    int default_ttl;$/;"	m	struct:SDPParseState	file:
defstr	libavcodec/avcodec.h	/^    const char *defstr;$/;"	m	struct:AVOption
defval	libavcodec/avcodec.h	/^    double defval;$/;"	m	struct:AVOption
deint	libavformat/grab.c	/^    int deint;$/;"	m	file:
deintTemp	libavcodec/libpostproc/postprocess_internal.h	/^	uint8_t *deintTemp;$/;"	m	struct:PPContext
deinterlace_16	libavcodec/alac.c	/^void deinterlace_16(int32_t *buffer_a, int32_t *buffer_b,$/;"	f
deinterlace_bottom_field	libavcodec/imgconvert.c	/^static void deinterlace_bottom_field(uint8_t *dst, int dst_wrap,$/;"	f	file:
deinterlace_bottom_field_inplace	libavcodec/imgconvert.c	/^static void deinterlace_bottom_field_inplace(uint8_t *src1, int src_wrap,$/;"	f	file:
deinterlace_line	libavcodec/imgconvert.c	/^static void deinterlace_line(uint8_t *dst, $/;"	f	file:
deinterlace_line_inplace	libavcodec/imgconvert.c	/^static void deinterlace_line_inplace(uint8_t *lum_m4, uint8_t *lum_m3, uint8_t *lum_m2, uint8_t *lum_m1, uint8_t *lum,$/;"	f	file:
delay	libavcodec/avcodec.h	/^    int delay;$/;"	m	struct:AVCodecContext
delayed_output_pic	libavcodec/h264.c	/^    Picture *delayed_output_pic;$/;"	m	struct:H264Context	file:
delayed_pic	libavcodec/h264.c	/^    Picture *delayed_pic[16]; \/\/FIXME size?$/;"	m	struct:H264Context	file:
delta	libavcodec/cljr.c	/^    int delta[16];$/;"	m	struct:CLJRContext	file:
delta	libavcodec/vcr1.c	/^    int delta[16];$/;"	m	struct:VCR1Context	file:
delta_pic_order_always_zero_flag	libavcodec/h264.c	/^    int delta_pic_order_always_zero_flag;$/;"	m	struct:SPS	file:
delta_poc	libavcodec/h264.c	/^    int delta_poc[2];$/;"	m	struct:H264Context	file:
delta_poc_bottom	libavcodec/h264.c	/^    int delta_poc_bottom;$/;"	m	struct:H264Context	file:
deltaset	libavcodec/truemotion1.c	/^    uint8_t deltaset;$/;"	m	struct:frame_header	file:
deltba	libavcodec/liba52/a52_internal.h	/^    int8_t deltba[50];		\/* per-band delta bit allocation *\/$/;"	m
deltbae	libavcodec/liba52/a52_internal.h	/^    uint8_t deltbae;		\/* delta bit allocation exists *\/$/;"	m
den	libavcodec/rational.h	/^    int den; \/\/\/< denominator$/;"	m	struct:AVRational
den	libavformat/avformat.h	/^    int64_t val, num, den; $/;"	m	struct:AVFrac
denoise_dct	libavcodec/mpegvideo.h	/^    void (*denoise_dct)(struct MpegEncContext *s, DCTELEM *block);$/;"	m	struct:MpegEncContext
denoise_dct_c	libavcodec/mpegvideo.c	/^static void  denoise_dct_c(MpegEncContext *s, DCTELEM *block){$/;"	f	file:
denoise_dct_mmx	libavcodec/i386/mpegvideo_mmx.c	/^static void  denoise_dct_mmx(MpegEncContext *s, DCTELEM *block){$/;"	f	file:
denoise_dct_sse2	libavcodec/i386/mpegvideo_mmx.c	/^static void  denoise_dct_sse2(MpegEncContext *s, DCTELEM *block){$/;"	f	file:
depth	libavcodec/imgconvert.c	/^    uint8_t depth;           \/* bit depth of the color components *\/$/;"	m	struct:PixFmtInfo	file:
dequant_coeff	libavcodec/h264data.h	/^static const uint16_t dequant_coeff[52][16]={$/;"	v
dequant_table	libavcodec/4xm.c	/^static const uint8_t dequant_table[64]={$/;"	v	file:
dering	libavcodec/libpostproc/postprocess_template.c	/^static inline void RENAME(dering)(uint8_t src[], int stride, PPContext *c)$/;"	f	file:
deringThreshold	libavcodec/libpostproc/postprocess.c	/^static const int attribute_used deringThreshold= 20;$/;"	v	file:
dering_altivec	libavcodec/libpostproc/postprocess_altivec_template.c	/^static inline void dering_altivec(uint8_t src[], int stride, PPContext *c) {$/;"	f	file:
descrLength	libavformat/movenc.c	/^static unsigned int descrLength(unsigned int len)$/;"	f	file:
dest	libavcodec/mpegvideo.h	/^    uint8_t *dest[3];$/;"	m	struct:MpegEncContext
dest_addr	libavformat/udp.c	/^    struct sockaddr_in dest_addr;$/;"	m	file:
dest_addr	libavformat/udp.c	/^    struct sockaddr_storage dest_addr;$/;"	m	file:
dest_addr_len	libavformat/udp.c	/^    size_t dest_addr_len;$/;"	m	file:
destination	libavformat/rtsp.h	/^    uint32_t destination; \/* destination IP address *\/$/;"	m	struct:RTSPTransportField
destroy_bapp_if_needed	libavformat/beosaudio.cpp	/^static void destroy_bapp_if_needed(void)$/;"	f	file:
destruct	libavformat/avformat.h	/^    void  (*destruct)(struct AVPacket *);$/;"	m	struct:AVPacket
dev_4_3_coefs	libavcodec/mpegaudiodec.c	/^static int dev_4_3_coefs[DEV_ORDER];$/;"	v	file:
device	libavformat/avformat.h	/^    const char *device; \/* video4linux, audio or DV device *\/$/;"	m	struct:AVFormatParameters
dfaac	libavcodec/faad.c	203;"	d	file:
dfaac	libavcodec/faad.c	208;"	d	file:
dfacc	libavcodec/faad.c	239;"	d	file:
dia_size	libavcodec/avcodec.h	/^    int dia_size;$/;"	m	struct:AVCodecContext
dia_size	libavcodec/mpegvideo.h	/^    int dia_size;$/;"	m	struct:MotionEstContext
diamond_search	libavcodec/motion_est_template.c	/^static always_inline int diamond_search(MpegEncContext * s, int *best, int dmin,$/;"	f	file:
diff_bytes	libavcodec/dsputil.h	/^    void (*diff_bytes)(uint8_t *dst\/*align 16*\/, uint8_t *src1\/*align 16*\/, uint8_t *src2\/*align 1*\/,int w);$/;"	m	struct:DSPContext
diff_bytes_c	libavcodec/dsputil.c	/^static void diff_bytes_c(uint8_t *dst, uint8_t *src1, uint8_t *src2, int w){$/;"	f	file:
diff_bytes_mmx	libavcodec/i386/dsputil_mmx.c	/^static void diff_bytes_mmx(uint8_t *dst, uint8_t *src1, uint8_t *src2, int w){$/;"	f	file:
diff_pixels	libavcodec/dsputil.h	/^    void (*diff_pixels)(DCTELEM *block\/*align 16*\/, const uint8_t *s1\/*align 8*\/, const uint8_t *s2\/*align 8*\/, int stride);$/;"	m	struct:DSPContext
diff_pixels_altivec	libavcodec/ppc/dsputil_altivec.c	/^void diff_pixels_altivec(DCTELEM *restrict block, const uint8_t *s1,$/;"	f
diff_pixels_c	libavcodec/dsputil.c	/^static void diff_pixels_c(DCTELEM *restrict block, const uint8_t *s1,$/;"	f	file:
diff_pixels_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void diff_pixels_mlib(DCTELEM *restrict block, const uint8_t *s1, const uint8_t *s2, int line_size)$/;"	f	file:
diff_pixels_mmx	libavcodec/i386/dsputil_mmx.c	/^static inline void diff_pixels_mmx(DCTELEM *block, const uint8_t *s1, const uint8_t *s2, int stride)$/;"	f	file:
diff_pixels_mvi	libavcodec/alpha/motion_est_alpha.c	/^void diff_pixels_mvi(DCTELEM *block, const uint8_t *s1, const uint8_t *s2,$/;"	f
difseg_size	libavcodec/dvdata.h	/^    int              difseg_size;         \/* number of DIF segments *\/$/;"	m	struct:DVprofile
dimension	libavformat/sgi.c	/^    unsigned short dimension;$/;"	m	struct:SGIInfo	file:
dimensions	libavcodec/vorbis.h	/^    uint_fast8_t dimensions;$/;"	m
dir	vhook/fish.c	/^    char *dir;$/;"	m	file:
direct_8x8_inference_flag	libavcodec/h264.c	/^    int direct_8x8_inference_flag;$/;"	m	struct:SPS	file:
direct_basis_mv	libavcodec/mpegvideo.h	/^    int direct_basis_mv[4][2];$/;"	m	struct:MotionEstContext
direct_cache	libavcodec/h264.c	/^    uint8_t     direct_cache[5*8];$/;"	m	struct:H264Context	file:
direct_dist_scale_factor	libavcodec/h264.c	/^static inline void direct_dist_scale_factor(H264Context * const h){$/;"	f	file:
direct_mb_plane	libavcodec/vc9.c	/^    BitPlane direct_mb_plane;     \/\/\/< bitplane for "direct" MBs$/;"	m	struct:VC9Context	file:
direct_ref_list_init	libavcodec/h264.c	/^static inline void direct_ref_list_init(H264Context * const h){$/;"	f	file:
direct_search	libavcodec/motion_est.c	/^static inline int direct_search(MpegEncContext * s, int mb_x, int mb_y)$/;"	f	file:
direct_spatial_mv_pred	libavcodec/h264.c	/^    int direct_spatial_mv_pred;$/;"	m	struct:H264Context	file:
direct_table	libavcodec/h264.c	/^    uint8_t     *direct_table;$/;"	m	struct:H264Context	file:
discard	ffmpeg.c	/^    int discard;             \/* true if stream data should be discarded *\/$/;"	m	struct:AVInputStream	file:
discard	libavformat/avformat.h	/^    enum AVDiscard discard; \/\/\/< selects which packets can be discarded at will and dont need to be demuxed$/;"	m	struct:AVStream
display_disable	ffplay.c	/^static int display_disable;$/;"	v	file:
display_flags	xvmc_render.h	/^  unsigned int display_flags; \/\/1,2 or 1+2 fields for XvMCPutSurface, $/;"	m
display_height	libavformat/matroska.c	/^        display_height;$/;"	m	struct:MatroskaVideoTrack	file:
display_width	libavformat/matroska.c	/^        display_width,$/;"	m	struct:MatroskaVideoTrack	file:
dist_scale_factor	libavcodec/h264.c	/^    int dist_scale_factor[16];$/;"	m	struct:H264Context	file:
dither_gen	libavcodec/liba52/parse.c	/^static inline int16_t dither_gen (a52_state_t * state)$/;"	f	file:
dither_lut	libavcodec/liba52/tables.h	/^static const uint16_t dither_lut[256] = {$/;"	v
dither_state	libavcodec/mpegaudiodec.c	/^    unsigned int dither_state;$/;"	m	struct:MPADecodeContext	file:
div6	libavcodec/h264data.h	/^static const uint8_t div6[52]={$/;"	v
divide	libavcodec/sonic.c	/^static inline int divide(int a, int b)$/;"	f	file:
divx_build	libavcodec/mpegvideo.h	/^    int divx_build;$/;"	m	struct:MpegEncContext
divx_packed	libavcodec/mpegvideo.h	/^    int divx_packed;$/;"	m	struct:MpegEncContext
divx_version	libavcodec/mpegvideo.h	/^    int divx_version;$/;"	m	struct:MpegEncContext
dlclose	libavcodec/faad.c	46;"	d	file:
dlopen	libavcodec/faad.c	45;"	d	file:
dlsymm	libavcodec/a52dec.c	/^static void* dlsymm(void* handle, const char* symbol)$/;"	f	file:
dml	libavcodec/g726.c	/^	 int dml;             \/**< long average magnitude of F[i] *\/$/;"	m	struct:G726Context	file:
dms	libavcodec/g726.c	/^	 int dms;             \/**< short average magnitude of F[i] *\/$/;"	m	struct:G726Context	file:
doHorizDefFilter_C	libavcodec/libpostproc/postprocess.c	/^static inline void doHorizDefFilter_C(uint8_t dst[], int stride, PPContext *c)$/;"	f	file:
doHorizDefFilter_altivec	libavcodec/libpostproc/postprocess_altivec_template.c	807;"	d	file:
doHorizLowPass_C	libavcodec/libpostproc/postprocess.c	/^static inline void doHorizLowPass_C(uint8_t dst[], int stride, PPContext *c)$/;"	f	file:
doHorizLowPass_altivec	libavcodec/libpostproc/postprocess_altivec_template.c	806;"	d	file:
doVertDefFilter	libavcodec/libpostproc/postprocess_template.c	/^static inline void RENAME(doVertDefFilter)(uint8_t src[], int stride, PPContext *c)$/;"	f	file:
doVertDefFilter_altivec	libavcodec/libpostproc/postprocess_altivec_template.c	/^static inline void doVertDefFilter_altivec(uint8_t src[], int stride, PPContext *c) {$/;"	f	file:
doVertLowPass	libavcodec/libpostproc/postprocess_template.c	/^static inline void RENAME(doVertLowPass)(uint8_t *src, int stride, PPContext *c)$/;"	f	file:
doVertLowPass_altivec	libavcodec/libpostproc/postprocess_altivec_template.c	/^static inline void doVertLowPass_altivec(uint8_t *src, int stride, PPContext *c) {$/;"	f	file:
do_a_deblock	libavcodec/libpostproc/postprocess_template.c	/^static always_inline void RENAME(do_a_deblock)(uint8_t *src, int step, int stride, PPContext *c){$/;"	f	file:
do_a_deblock_C	libavcodec/libpostproc/postprocess.c	/^static always_inline void do_a_deblock_C(uint8_t *src, int step, int stride, PPContext *c){$/;"	f	file:
do_a_deblock_altivec	libavcodec/libpostproc/postprocess_altivec_template.c	808;"	d	file:
do_audio_out	ffmpeg.c	/^static void do_audio_out(AVFormatContext *s, $/;"	f	file:
do_benchmark	ffmpeg.c	/^static int do_benchmark = 0;$/;"	v	file:
do_deinterlace	ffmpeg.c	/^static int do_deinterlace = 0;$/;"	v	file:
do_exit	ffplay.c	/^void do_exit(void)$/;"	f
do_ffmpeg	tests/regression.sh	/^do_ffmpeg()$/;"	f
do_ffmpeg_crc	tests/regression.sh	/^do_ffmpeg_crc()$/;"	f
do_ffmpeg_nocheck	tests/regression.sh	/^do_ffmpeg_nocheck()$/;"	f
do_hex_dump	ffmpeg.c	/^static int do_hex_dump = 0;$/;"	v	file:
do_interlace_dct	ffmpeg.c	/^static int do_interlace_dct = 0;$/;"	v	file:
do_interlace_me	ffmpeg.c	/^static int do_interlace_me = 0;$/;"	v	file:
do_md5sum	tests/regression.sh	/^    do_md5sum() { \/sbin\/md5 -r $1 | sed 's# \\**\\.\/# *.\/#'; }$/;"	f
do_md5sum	tests/regression.sh	/^    do_md5sum() { echo No md5sum program found; }$/;"	f
do_md5sum	tests/regression.sh	/^    do_md5sum() { md5sum -b $1; }$/;"	f
do_normalize_aqp	ffmpeg.c	/^static int do_normalize_aqp = 0;$/;"	v	file:
do_output_subblock	libavcodec/ra144.c	/^static void do_output_subblock(Real144_internal *glob, unsigned int x)$/;"	f	file:
do_padding	libavcodec/mpegaudio.c	/^    int frame_frac, frame_frac_incr, do_padding;$/;"	m	struct:MpegAudioContext	file:
do_pass	ffmpeg.c	/^static int do_pass = 0;$/;"	v	file:
do_pkt_dump	ffmpeg.c	/^static int do_pkt_dump = 0;$/;"	v	file:
do_psnr	ffmpeg.c	/^static int do_psnr = 0;$/;"	v	file:
do_switch_stream	ffserver.c	/^static void do_switch_stream(HTTPContext *c, int i)$/;"	f	file:
do_video_out	ffmpeg.c	/^static void do_video_out(AVFormatContext *s, $/;"	f	file:
do_video_stats	ffmpeg.c	/^static void do_video_stats(AVFormatContext *os, AVOutputStream *ost, $/;"	f	file:
do_voice	libavcodec/ra144.c	/^static void do_voice(int *a1, int *a2)$/;"	f	file:
do_vstats	ffmpeg.c	/^static int do_vstats = 0;$/;"	v	file:
done	libavcodec/pthread.c	/^    int done;$/;"	m	struct:ThreadContext	file:
done	libavformat/dv1394.c	/^    int done;   \/* Number of completed frames *\/$/;"	m	struct:dv1394_data	file:
done	libavformat/matroska.c	/^        done;$/;"	m	struct:MatroskaDemuxContext	file:
done_sem	libavcodec/beosthread.c	/^    sem_id done_sem;$/;"	m	struct:ThreadContext	file:
done_sem	libavcodec/w32thread.c	/^    HANDLE done_sem;$/;"	m	struct:ThreadContext	file:
dorange	vhook/fish.c	/^static void dorange(const char *s, int *first, int *second, int maxval)$/;"	f	file:
downmixed	libavcodec/liba52/a52_internal.h	/^    int downmixed;$/;"	m	struct:a52_state_s
downsampling	libavcodec/sonic.c	/^    int num_taps, downsampling;$/;"	m	struct:SonicContext	file:
dpcm_decode_frame	libavcodec/dpcm.c	/^static int dpcm_decode_frame(AVCodecContext *avctx,$/;"	f	file:
dpcm_decode_init	libavcodec/dpcm.c	/^static int dpcm_decode_init(AVCodecContext *avctx)$/;"	f	file:
dprintf	libavcodec/common.h	/^inline void dprintf(const char* fmt,...) {}$/;"	f
dprintf	libavcodec/common.h	250;"	d
dprintf	libavcodec/common.h	252;"	d
dq	libavcodec/g726.c	/^	 Float11 dq[6];       \/**< prev. difference *\/$/;"	m	struct:G726Context	file:
dqbilevel	libavcodec/vc9.c	/^    uint8_t dqbilevel;$/;"	m	struct:VC9Context	file:
dqprofile	libavcodec/vc9.c	/^    uint8_t dqprofile;$/;"	m	struct:VC9Context	file:
dqsbedge	libavcodec/vc9.c	/^    uint8_t dqsbedge;$/;"	m	struct:VC9Context	file:
dquant	libavcodec/mpegvideo.h	/^    int dquant;                 \/\/\/< qscale difference to prev qscale  $/;"	m	struct:MpegEncContext
dquant	libavcodec/vc9.c	/^    int dquant;           \/\/\/< How qscale varies with MBs, 2bits (not in Simple)$/;"	m	struct:VC9Context	file:
dquantfrm	libavcodec/vc9.c	/^    uint8_t dquantfrm;$/;"	m	struct:VC9Context	file:
draw_arrow	libavcodec/mpegvideo.c	/^static void draw_arrow(uint8_t *buf, int sx, int sy, int ex, int ey, int w, int h, int stride, int color){ $/;"	f	file:
draw_box	vhook/drawtext.c	/^inline void draw_box(AVPicture *picture, unsigned int x, unsigned int y, unsigned int width, unsigned int height, unsigned char yuv_color[3])$/;"	f
draw_edges	libavcodec/mpegvideo.c	/^void (*draw_edges)(uint8_t *buf, int wrap, int width, int height, int w)= draw_edges_c;$/;"	v
draw_edges_c	libavcodec/mpegvideo.c	/^static void draw_edges_c(uint8_t *buf, int wrap, int width, int height, int w)$/;"	f	file:
draw_edges_mmx	libavcodec/i386/mpegvideo_mmx.c	/^static void draw_edges_mmx(uint8_t *buf, int wrap, int width, int height, int w)$/;"	f	file:
draw_glyph	vhook/drawtext.c	/^inline void draw_glyph(AVPicture *picture, FT_Bitmap *bitmap, unsigned int x, unsigned int y, unsigned int width, unsigned int height, unsigned char yuv_fgcolor[3], unsigned char yuv_bgcolor[3], int outline)$/;"	f
draw_horiz_band	libavcodec/avcodec.h	/^    void (*draw_horiz_band)(struct AVCodecContext *s,$/;"	m	struct:AVCodecContext
draw_line	libavcodec/mpegvideo.c	/^static void draw_line(uint8_t *buf, int sx, int sy, int ex, int ey, int w, int h, int stride, int color){$/;"	f	file:
draw_slice	libavcodec/huffyuv.c	/^static void draw_slice(HYuvContext *s, int y){$/;"	f	file:
drift	libavcodec/ffv1.c	/^    int16_t drift;$/;"	m	struct:VlcState	file:
dropable	libavcodec/mpegvideo.h	/^    int dropable;$/;"	m	struct:MpegEncContext
dropped_frames	libavformat/dv1394.h	/^	unsigned int dropped_frames;$/;"	m	struct:dv1394_status
ds_chunk_size	libavformat/asf.h	/^    int ds_chunk_size;$/;"	m
ds_data_size	libavformat/asf.h	/^    int ds_data_size;$/;"	m
ds_packet_size	libavformat/asf.h	/^    int ds_packet_size;$/;"	m
ds_silence_data	libavformat/asf.h	/^    int ds_silence_data;$/;"	m
ds_span	libavformat/asf.h	/^    int ds_span;		\/* descrambling  *\/$/;"	m
dsf	libavcodec/dvdata.h	/^    int              dsf;                 \/* value of the dsf in the DV header *\/$/;"	m	struct:DVprofile
dsp	libavcodec/4xm.c	/^    DSPContext dsp;$/;"	m	struct:FourXContext	file:
dsp	libavcodec/asv1.c	/^    DSPContext dsp;$/;"	m	struct:ASV1Context	file:
dsp	libavcodec/cinepak.c	/^    DSPContext dsp;$/;"	m	struct:CinepakContext	file:
dsp	libavcodec/ffv1.c	/^    DSPContext dsp; $/;"	m	struct:FFV1Context	file:
dsp	libavcodec/huffyuv.c	/^    DSPContext dsp; $/;"	m	struct:HYuvContext	file:
dsp	libavcodec/idcinvideo.c	/^    DSPContext dsp;$/;"	m	struct:IdcinContext	file:
dsp	libavcodec/interplayvideo.c	/^    DSPContext dsp;$/;"	m	struct:IpvideoContext	file:
dsp	libavcodec/mdec.c	/^    DSPContext dsp;$/;"	m	struct:MDECContext	file:
dsp	libavcodec/mpegvideo.h	/^    DSPContext dsp;             \/\/\/< pointers for accelerated dsp fucntions $/;"	m	struct:MpegEncContext
dsp	libavcodec/msvideo1.c	/^    DSPContext dsp;$/;"	m	struct:Msvideo1Context	file:
dsp	libavcodec/qtrle.c	/^    DSPContext dsp;$/;"	m	struct:QtrleContext	file:
dsp	libavcodec/roqvideo.c	/^    DSPContext dsp;$/;"	m	struct:RoqContext	file:
dsp	libavcodec/rpza.c	/^    DSPContext dsp;$/;"	m	struct:RpzaContext	file:
dsp	libavcodec/smc.c	/^    DSPContext dsp;$/;"	m	struct:SmcContext	file:
dsp	libavcodec/snow.c	/^    DSPContext dsp;$/;"	m	struct:SnowContext	file:
dsp	libavcodec/svq1.c	/^    DSPContext dsp;$/;"	m	struct:SVQ1Context	file:
dsp	libavcodec/vmdav.c	/^    DSPContext dsp;$/;"	m	struct:VmdVideoContext	file:
dsp	libavcodec/vp3.c	/^    DSPContext dsp;$/;"	m	struct:Vp3DecodeContext	file:
dsp	libavcodec/vqavideo.c	/^    DSPContext dsp;$/;"	m	struct:VqaContext	file:
dsp	libavcodec/xan.c	/^    DSPContext dsp;$/;"	m	struct:XanContext	file:
dsp_mask	libavcodec/avcodec.h	/^    unsigned dsp_mask;$/;"	m	struct:AVCodecContext
dspfunc	libavcodec/dsputil.c	3710;"	d	file:
dspfunc	libavcodec/dsputil.c	3729;"	d	file:
dspfunc	libavcodec/dsputil.c	3754;"	d	file:
dspfunc	libavcodec/dsputil.c	3791;"	d	file:
dspfunc	libavcodec/i386/dsputil_mmx.c	3475;"	d	file:
dspfunc	libavcodec/i386/dsputil_mmx.c	3499;"	d	file:
dspfunc	libavcodec/i386/dsputil_mmx.c	3569;"	d	file:
dspfunc	libavcodec/ppc/dsputil_h264_altivec.c	237;"	d	file:
dspfunc	libavcodec/ppc/dsputil_h264_altivec.c	257;"	d	file:
dspfunc	libavcodec/sh4/dsputil_align.c	370;"	d	file:
dspfunc	libavcodec/sh4/dsputil_align.c	407;"	d	file:
dsputil_h264_init_ppc	libavcodec/ppc/dsputil_h264_altivec.c	/^void dsputil_h264_init_ppc(DSPContext* c, AVCodecContext *avctx) {$/;"	f
dsputil_init	libavcodec/dsputil.c	/^void dsputil_init(DSPContext* c, AVCodecContext *avctx)$/;"	f
dsputil_init_align	libavcodec/sh4/dsputil_align.c	/^void dsputil_init_align(DSPContext* c, AVCodecContext *avctx)$/;"	f
dsputil_init_alpha	libavcodec/alpha/dsputil_alpha.c	/^void dsputil_init_alpha(DSPContext* c, AVCodecContext *avctx)$/;"	f
dsputil_init_armv4l	libavcodec/armv4l/dsputil_arm.c	/^void dsputil_init_armv4l(DSPContext* c, AVCodecContext *avctx)$/;"	f
dsputil_init_mlib	libavcodec/mlib/dsputil_mlib.c	/^void dsputil_init_mlib(DSPContext* c, AVCodecContext *avctx)$/;"	f
dsputil_init_mmi	libavcodec/ps2/dsputil_mmi.c	/^void dsputil_init_mmi(DSPContext* c, AVCodecContext *avctx)$/;"	f
dsputil_init_mmx	libavcodec/i386/dsputil_mmx.c	/^void dsputil_init_mmx(DSPContext* c, AVCodecContext *avctx)$/;"	f
dsputil_init_ppc	libavcodec/ppc/dsputil_ppc.c	/^void dsputil_init_ppc(DSPContext* c, AVCodecContext *avctx)$/;"	f
dsputil_init_sh4	libavcodec/sh4/dsputil_sh4.c	/^void dsputil_init_sh4(DSPContext* c, AVCodecContext *avctx)$/;"	f
dsputil_init_vis	libavcodec/sparc/dsputil_vis.c	/^void dsputil_init_vis(DSPContext* c, AVCodecContext *avctx)$/;"	f
dsputil_static_init	libavcodec/dsputil.c	/^void dsputil_static_init(void)$/;"	f
dst_incr	libavcodec/resample2.c	/^    int dst_incr;$/;"	m	struct:AVResampleContext	file:
dtg_active_format	ffplay.c	/^    int dtg_active_format;$/;"	m	struct:VideoState	file:
dtg_active_format	libavcodec/avcodec.h	/^    int dtg_active_format;$/;"	m	struct:AVCodecContext
dts	libavcodec/avcodec.h	/^    int64_t dts;     \/* dts of the current frame *\/$/;"	m	struct:AVCodecParserContext
dts	libavformat/avformat.h	/^    int64_t dts; \/* decompression time stamp in AV_TIME_BASE units (or$/;"	m	struct:AVPacket
dts	libavformat/mpeg.c	/^    int64_t dts;$/;"	m	struct:PacketDesc	file:
dts	libavformat/mpegts.c	/^    int64_t pts, dts;$/;"	m	struct:PESContext	file:
dts	libavformat/rtp.h	/^        int dts;$/;"	m	struct:rtp_payload_data_s::AUHeaders
dts_decode_end	libavcodec/dtsdec.c	/^dts_decode_end (AVCodecContext *s)$/;"	f	file:
dts_decode_frame	libavcodec/dtsdec.c	/^dts_decode_frame (AVCodecContext *avctx, void *data, int *data_size,$/;"	f	file:
dts_decode_init	libavcodec/dtsdec.c	/^dts_decode_init (AVCodecContext *avctx)$/;"	f	file:
dts_decoder	libavcodec/dtsdec.c	/^AVCodec dts_decoder = {$/;"	v
dts_flag	libavformat/rtp.h	/^        int dts_flag;$/;"	m	struct:rtp_payload_data_s::AUHeaders
dts_iformat	libavformat/raw.c	/^AVInputFormat dts_iformat = {$/;"	v
dts_read_header	libavformat/raw.c	/^static int dts_read_header(AVFormatContext *s,$/;"	f	file:
dummy	libavcodec/avcodec.h	/^    void *dummy; \/\/ FIXME remove next time we break binary compatibility$/;"	m	struct:AVCodec
dummy	libavcodec/motion_test.c	/^int dummy;$/;"	v
dummy	libavcodec/svq1.c	/^    uint32_t *dummy;$/;"	m	struct:SVQ1Context	file:
dummy	vhook/imlib2.c	/^    int dummy;$/;"	m	file:
dummy	vhook/null.c	/^    int dummy;$/;"	m	file:
dummy_frame	ffserver.c	/^static AVFrame dummy_frame;$/;"	v	file:
dump_filter	libavcodec/imgresample.c	/^static void dump_filter(int16_t *filter)$/;"	f	file:
dump_floats	libavcodec/wmadec.c	/^static void dump_floats(const char *name, int prec, const float *tab, int n)$/;"	f	file:
dump_format	libavformat/utils.c	/^void dump_format(AVFormatContext *ic,$/;"	f
dump_headers	libavcodec/flac.c	/^static void dump_headers(FLACContext *s)$/;"	f	file:
dump_shorts	libavcodec/wmadec.c	/^static void dump_shorts(const char *name, const short *tab, int n)$/;"	f	file:
dump_stream_info	ffplay.c	/^void dump_stream_info(AVFormatContext *s)$/;"	f
duplicate	libavcodec/libpostproc/postprocess_template.c	/^static inline void RENAME(duplicate)(uint8_t src[], int stride)$/;"	f	file:
duration	libavformat/asf.h	/^    int64_t duration; \/* in 100ns units *\/$/;"	m
duration	libavformat/asf.h	/^    int64_t duration;$/;"	m
duration	libavformat/avformat.h	/^    int   duration; \/* presentation duration (0 if not available) *\/$/;"	m	struct:AVPacket
duration	libavformat/avformat.h	/^    int64_t duration;$/;"	m	struct:AVFormatContext
duration	libavformat/avformat.h	/^    int64_t duration;$/;"	m	struct:AVStream
duration	libavformat/matroska.c	/^    int64_t duration,$/;"	m	struct:MatroskaDemuxContext	file:
duration	libavformat/mov.c	/^    int duration; \/* duration of the longest track *\/$/;"	m	struct:MOVContext	file:
duration	libavformat/mov.c	/^    int duration;$/;"	m	struct:Time2Sample	file:
duration	libavformat/nsvdec.c	/^    int64_t duration;$/;"	m	file:
duration_pos	libavformat/swf.c	/^    offset_t duration_pos;$/;"	m	file:
dv1394_close	libavformat/dv1394.c	/^static int dv1394_close(AVFormatContext * context)$/;"	f	file:
dv1394_data	libavformat/dv1394.c	/^struct dv1394_data {$/;"	s	file:
dv1394_format	libavformat/dv1394.c	/^static AVInputFormat dv1394_format = {$/;"	v	file:
dv1394_init	libavformat/dv1394.c	/^int dv1394_init(void)$/;"	f
dv1394_init	libavformat/dv1394.h	/^struct dv1394_init {$/;"	s
dv1394_read_header	libavformat/dv1394.c	/^static int dv1394_read_header(AVFormatContext * context, AVFormatParameters * ap)$/;"	f	file:
dv1394_read_packet	libavformat/dv1394.c	/^static int dv1394_read_packet(AVFormatContext *context, AVPacket *pkt)$/;"	f	file:
dv1394_reset	libavformat/dv1394.c	/^static int dv1394_reset(struct dv1394_data *dv)$/;"	f	file:
dv1394_start	libavformat/dv1394.c	/^static int dv1394_start(struct dv1394_data *dv)$/;"	f	file:
dv1394_status	libavformat/dv1394.h	/^struct dv1394_status {$/;"	s
dv_248_areas	libavcodec/dvdata.h	/^static const uint8_t dv_248_areas[64] = {$/;"	v
dv_88_areas	libavcodec/dvdata.h	/^static const uint8_t dv_88_areas[64] = {$/;"	v
dv_aaux_packs_dist	libavformat/dv.c	/^static const int dv_aaux_packs_dist[12][9] = {$/;"	v	file:
dv_anchor	libavcodec/dv.c	/^static uint8_t** dv_anchor;$/;"	v	file:
dv_assemble_frame	libavformat/dv.c	/^int dv_assemble_frame(DVMuxContext *c, AVStream* st,$/;"	f
dv_audio_12to16	libavformat/dv.c	/^static inline uint16_t dv_audio_12to16(uint16_t sample)$/;"	f	file:
dv_audio_control	libavformat/dv.c	/^     dv_audio_control = 0x51,$/;"	e	enum:dv_pack_type	file:
dv_audio_frame_size	libavformat/dv.c	/^static int dv_audio_frame_size(const DVprofile* sys, int frame)$/;"	f	file:
dv_audio_frequency	libavcodec/dvdata.h	/^static const __attribute__((unused)) int dv_audio_frequency[3] = {$/;"	v
dv_audio_recdate	libavformat/dv.c	/^     dv_audio_recdate = 0x52,$/;"	e	enum:dv_pack_type	file:
dv_audio_rectime	libavformat/dv.c	/^     dv_audio_rectime = 0x53,$/;"	e	enum:dv_pack_type	file:
dv_audio_shuffle525	libavcodec/dvdata.h	/^static const uint16_t dv_audio_shuffle525[10][9] = {$/;"	v
dv_audio_shuffle625	libavcodec/dvdata.h	/^static const uint16_t dv_audio_shuffle625[12][9] = {$/;"	v
dv_audio_source	libavformat/dv.c	/^     dv_audio_source  = 0x50,$/;"	e	enum:dv_pack_type	file:
dv_build_unquantize_tables	libavcodec/dv.c	/^static void dv_build_unquantize_tables(DVVideoContext *s, uint8_t* perm)$/;"	f	file:
dv_codec_profile	libavcodec/dvdata.h	/^static inline const DVprofile* dv_codec_profile(AVCodecContext* codec)$/;"	f
dv_decode_ac	libavcodec/dv.c	/^static void dv_decode_ac(GetBitContext *gb, BlockInfo *mb, DCTELEM *block)$/;"	f	file:
dv_decode_mt	libavcodec/dv.c	/^static int dv_decode_mt(AVCodecContext *avctx, void* sl)$/;"	f	file:
dv_decode_video_segment	libavcodec/dv.c	/^static inline void dv_decode_video_segment(DVVideoContext *s, $/;"	f	file:
dv_delete_mux	libavformat/dv.c	/^void dv_delete_mux(DVMuxContext *c)$/;"	f
dv_demux	libavformat/avidec.c	/^    DVDemuxContext* dv_demux;$/;"	m	file:
dv_demux	libavformat/dv.c	/^    DVDemuxContext* dv_demux;$/;"	m	struct:RawDVContext	file:
dv_demux	libavformat/dv1394.c	/^    DVDemuxContext* dv_demux; \/* Generic DV muxing\/demuxing context *\/$/;"	m	struct:dv1394_data	file:
dv_encode_ac	libavcodec/dv.c	/^static always_inline void dv_encode_ac(EncBlockInfo* bi, PutBitContext* pb_pool, $/;"	f	file:
dv_encode_mt	libavcodec/dv.c	/^static int dv_encode_mt(AVCodecContext *avctx, void* sl)$/;"	f	file:
dv_encode_video_segment	libavcodec/dv.c	/^static inline void dv_encode_video_segment(DVVideoContext *s, $/;"	f	file:
dv_extract_audio	libavformat/dv.c	/^static int dv_extract_audio(uint8_t* frame, uint8_t* pcm, uint8_t* pcm2)$/;"	f	file:
dv_extract_audio_info	libavformat/dv.c	/^static int dv_extract_audio_info(DVDemuxContext* c, uint8_t* frame)$/;"	f	file:
dv_extract_pack	libavformat/dv.c	/^static const uint8_t* dv_extract_pack(uint8_t* frame, enum dv_pack_type t)$/;"	f	file:
dv_extract_video_info	libavformat/dv.c	/^static int dv_extract_video_info(DVDemuxContext *c, uint8_t* frame)$/;"	f	file:
dv_flush_audio_packets	libavformat/dv.c	/^void dv_flush_audio_packets(DVDemuxContext *c)$/;"	f
dv_format_frame	libavformat/dv.c	/^static void dv_format_frame(DVMuxContext *c, uint8_t* buf)$/;"	f	file:
dv_frame_offset	libavformat/dv.c	/^static int64_t dv_frame_offset(AVFormatContext *s, DVDemuxContext *c,$/;"	f	file:
dv_frame_profile	libavcodec/dvdata.h	/^static inline const DVprofile* dv_frame_profile(uint8_t* frame)$/;"	f
dv_get_packet	libavformat/dv.c	/^int dv_get_packet(DVDemuxContext *c, AVPacket *pkt)$/;"	f
dv_guess_dct_mode	libavcodec/dv.c	/^static always_inline int dv_guess_dct_mode(DCTELEM *blk) {$/;"	f	file:
dv_guess_qnos	libavcodec/dv.c	/^static inline void dv_guess_qnos(EncBlockInfo* blks, int* qnos)$/;"	f	file:
dv_header525	libavformat/dv.c	/^     dv_header525     = 0x3f, \/* see dv_write_pack for important details on *\/ $/;"	e	enum:dv_pack_type	file:
dv_header625	libavformat/dv.c	/^     dv_header625     = 0xbf, \/* these two packs *\/$/;"	e	enum:dv_pack_type	file:
dv_idct_shift	libavcodec/dv.c	/^    uint8_t dv_idct_shift[2][2][22][64];$/;"	m	struct:DVVideoContext	file:
dv_iformat	libavformat/dv.c	/^static AVInputFormat dv_iformat = {$/;"	v	file:
dv_init_demux	libavformat/dv.c	/^DVDemuxContext* dv_init_demux(AVFormatContext *s)$/;"	f
dv_init_mux	libavformat/dv.c	/^DVMuxContext* dv_init_mux(AVFormatContext* s)$/;"	f
dv_inject_audio	libavformat/dv.c	/^static void dv_inject_audio(DVMuxContext *c, const uint8_t* pcm, uint8_t* frame_ptr)$/;"	f	file:
dv_inject_video	libavformat/dv.c	/^static void dv_inject_video(DVMuxContext *c, const uint8_t* video_data, uint8_t* frame_ptr)$/;"	f	file:
dv_oformat	libavformat/dv.c	/^static AVOutputFormat dv_oformat = {$/;"	v	file:
dv_pack_type	libavformat/dv.c	/^enum dv_pack_type {$/;"	g	file:
dv_place_411	libavcodec/dvdata.h	/^static const uint16_t dv_place_411[1350] = {$/;"	v
dv_place_411P	libavcodec/dvdata.h	/^static const uint16_t dv_place_411P[1620] = {$/;"	v
dv_place_420	libavcodec/dvdata.h	/^static const uint16_t dv_place_420[1620] = {$/;"	v
dv_produce_packet	libavformat/dv.c	/^int dv_produce_packet(DVDemuxContext *c, AVPacket *pkt, $/;"	f
dv_profiles	libavcodec/dvdata.h	/^static const DVprofile dv_profiles[] = {$/;"	v
dv_quant_offset	libavcodec/dvdata.h	/^static const uint8_t dv_quant_offset[4] = { 6, 3, 0, 1 };$/;"	v
dv_quant_shifts	libavcodec/dvdata.h	/^static const uint8_t dv_quant_shifts[22][4] = {$/;"	v
dv_read_close	libavformat/dv.c	/^static int dv_read_close(AVFormatContext *s)$/;"	f	file:
dv_read_header	libavformat/dv.c	/^static int dv_read_header(AVFormatContext *s,$/;"	f	file:
dv_read_packet	libavformat/dv.c	/^static int dv_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
dv_read_seek	libavformat/dv.c	/^static int dv_read_seek(AVFormatContext *s, int stream_index, $/;"	f	file:
dv_rl2vlc	libavcodec/dv.c	/^static always_inline int dv_rl2vlc(int run, int l, uint32_t* vlc)$/;"	f	file:
dv_rl2vlc_size	libavcodec/dv.c	/^static always_inline int dv_rl2vlc_size(int run, int l)$/;"	f	file:
dv_rl_vlc	libavcodec/dv.c	/^static RL_VLC_ELEM *dv_rl_vlc;$/;"	v	file:
dv_sect_audio	libavformat/dv.c	/^     dv_sect_audio   = 0x76,$/;"	e	enum:dv_section_type	file:
dv_sect_header	libavformat/dv.c	/^     dv_sect_header  = 0x1f,$/;"	e	enum:dv_section_type	file:
dv_sect_subcode	libavformat/dv.c	/^     dv_sect_subcode = 0x3f,$/;"	e	enum:dv_section_type	file:
dv_sect_vaux	libavformat/dv.c	/^     dv_sect_vaux    = 0x56,$/;"	e	enum:dv_section_type	file:
dv_sect_video	libavformat/dv.c	/^     dv_sect_video   = 0x96,$/;"	e	enum:dv_section_type	file:
dv_section_type	libavformat/dv.c	/^enum dv_section_type {$/;"	g	file:
dv_set_class_number	libavcodec/dv.c	/^static always_inline void dv_set_class_number(DCTELEM* blk, EncBlockInfo* bi, $/;"	f	file:
dv_ssyb_packs_dist	libavformat/dv.c	/^static const int dv_ssyb_packs_dist[12][6] = {$/;"	v	file:
dv_timecode	libavformat/dv.c	/^     dv_timecode      = 0x13,$/;"	e	enum:dv_pack_type	file:
dv_unknown_pack	libavformat/dv.c	/^     dv_unknown_pack  = 0xff,$/;"	e	enum:dv_pack_type	file:
dv_vaux_packs_dist	libavformat/dv.c	/^static const int dv_vaux_packs_dist[12][15] = {$/;"	v	file:
dv_video_control	libavformat/dv.c	/^     dv_video_control = 0x61,$/;"	e	enum:dv_pack_type	file:
dv_video_rectime	libavformat/dv.c	/^     dv_video_rectime = 0x63,$/;"	e	enum:dv_pack_type	file:
dv_video_source	libavformat/dv.c	/^     dv_video_source  = 0x60,$/;"	e	enum:dv_pack_type	file:
dv_viedo_recdate	libavformat/dv.c	/^     dv_viedo_recdate = 0x62,$/;"	e	enum:dv_pack_type	file:
dv_vlc_bits	libavcodec/dvdata.h	/^static const uint16_t dv_vlc_bits[409] = {$/;"	v
dv_vlc_len	libavcodec/dvdata.h	/^static const uint8_t dv_vlc_len[409] = {$/;"	v
dv_vlc_level	libavcodec/dvdata.h	/^static const uint8_t dv_vlc_level[409] = {$/;"	v
dv_vlc_map	libavcodec/dv.c	/^} (*dv_vlc_map)[DV_VLC_MAP_LEV_SIZE] = NULL;$/;"	v	file:
dv_vlc_pair	libavcodec/dv.c	/^static struct dv_vlc_pair {$/;"	s	file:
dv_vlc_run	libavcodec/dvdata.h	/^static const uint8_t dv_vlc_run[409] = {$/;"	v
dv_write_dif_id	libavformat/dv.c	/^static inline int dv_write_dif_id(enum dv_section_type t, uint8_t seq_num, $/;"	f	file:
dv_write_header	libavformat/dv.c	/^static int dv_write_header(AVFormatContext *s)$/;"	f	file:
dv_write_pack	libavformat/dv.c	/^static int dv_write_pack(enum dv_pack_type pack_id, DVMuxContext *c, uint8_t* buf)$/;"	f	file:
dv_write_packet	libavformat/dv.c	/^static int dv_write_packet(struct AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
dv_write_ssyb_id	libavformat/dv.c	/^static inline int dv_write_ssyb_id(uint8_t syb_num, uint8_t fr, uint8_t* buf)$/;"	f	file:
dv_write_trailer	libavformat/dv.c	/^static int dv_write_trailer(struct AVFormatContext *s)$/;"	f	file:
dv_zigzag	libavcodec/dv.c	/^    uint8_t dv_zigzag[2][64];$/;"	m	struct:DVVideoContext	file:
dvvideo_decode_frame	libavcodec/dv.c	/^static int dvvideo_decode_frame(AVCodecContext *avctx, $/;"	f	file:
dvvideo_decoder	libavcodec/dv.c	/^AVCodec dvvideo_decoder = {$/;"	v
dvvideo_encode_frame	libavcodec/dv.c	/^static int dvvideo_encode_frame(AVCodecContext *c, uint8_t *buf, int buf_size, $/;"	f	file:
dvvideo_encoder	libavcodec/dv.c	/^AVCodec dvvideo_encoder = {$/;"	v
dvvideo_init	libavcodec/dv.c	/^static int dvvideo_init(AVCodecContext *avctx)$/;"	f	file:
dwt_compose_t	libavcodec/snow.c	/^} dwt_compose_t;$/;"	t	file:
dyn_buf_seek	libavformat/aviobuf.c	/^static int dyn_buf_seek(void *opaque, offset_t offset, int whence)$/;"	f	file:
dyn_buf_write	libavformat/aviobuf.c	/^static int dyn_buf_write(void *opaque, uint8_t *buf, int buf_size)$/;"	f	file:
dyn_packet_buf_write	libavformat/aviobuf.c	/^static int dyn_packet_buf_write(void *opaque, uint8_t *buf, int buf_size)$/;"	f	file:
dynarray_add	libavformat/avformat.h	656;"	d
dynarray_add	libavformat/avformat.h	664;"	d
dynrng	libavcodec/liba52/a52_internal.h	/^    level_t dynrng;		\/* dynamic range *\/$/;"	m	struct:a52_state_s
dynrngcall	libavcodec/liba52/a52_internal.h	/^    level_t (* dynrngcall) (level_t range, void * dynrngdata);$/;"	m	struct:a52_state_s
dynrngdata	libavcodec/liba52/a52_internal.h	/^    void * dynrngdata;		\/* dynamic range callback funtion and data *\/$/;"	m	struct:a52_state_s
dynrnge	libavcodec/liba52/a52_internal.h	/^    int dynrnge;		\/* apply dynamic range *\/$/;"	m	struct:a52_state_s
ea_adpcm_table	libavcodec/adpcm.c	/^static int ea_adpcm_table[] = {$/;"	v	file:
ea_iformat	libavformat/electronicarts.c	/^static AVInputFormat ea_iformat = {$/;"	v	file:
ea_init	libavformat/electronicarts.c	/^int ea_init(void)$/;"	f
ea_probe	libavformat/electronicarts.c	/^static int ea_probe(AVProbeData *p)$/;"	f	file:
ea_read_close	libavformat/electronicarts.c	/^static int ea_read_close(AVFormatContext *s)$/;"	f	file:
ea_read_header	libavformat/electronicarts.c	/^static int ea_read_header(AVFormatContext *s,$/;"	f	file:
ea_read_packet	libavformat/electronicarts.c	/^static int ea_read_packet(AVFormatContext *s,$/;"	f	file:
eax	libavcodec/i386/vp3dsp_sse2.c	807;"	d	file:
ebml_peek_id	libavformat/matroska.c	/^ebml_peek_id (MatroskaDemuxContext *matroska,$/;"	f	file:
ebml_read_ascii	libavformat/matroska.c	/^ebml_read_ascii (MatroskaDemuxContext *matroska,$/;"	f	file:
ebml_read_binary	libavformat/matroska.c	/^ebml_read_binary (MatroskaDemuxContext *matroska,$/;"	f	file:
ebml_read_date	libavformat/matroska.c	/^ebml_read_date (MatroskaDemuxContext *matroska,$/;"	f	file:
ebml_read_element_id	libavformat/matroska.c	/^ebml_read_element_id (MatroskaDemuxContext *matroska,$/;"	f	file:
ebml_read_element_length	libavformat/matroska.c	/^ebml_read_element_length (MatroskaDemuxContext *matroska,$/;"	f	file:
ebml_read_element_level_up	libavformat/matroska.c	/^ebml_read_element_level_up (MatroskaDemuxContext *matroska)$/;"	f	file:
ebml_read_float	libavformat/matroska.c	/^ebml_read_float (MatroskaDemuxContext *matroska,$/;"	f	file:
ebml_read_header	libavformat/matroska.c	/^ebml_read_header (MatroskaDemuxContext *matroska,$/;"	f	file:
ebml_read_master	libavformat/matroska.c	/^ebml_read_master (MatroskaDemuxContext *matroska,$/;"	f	file:
ebml_read_num	libavformat/matroska.c	/^ebml_read_num (MatroskaDemuxContext *matroska,$/;"	f	file:
ebml_read_seek	libavformat/matroska.c	/^ebml_read_seek (MatroskaDemuxContext *matroska,$/;"	f	file:
ebml_read_sint	libavformat/matroska.c	/^ebml_read_sint (MatroskaDemuxContext *matroska,$/;"	f	file:
ebml_read_skip	libavformat/matroska.c	/^ebml_read_skip (MatroskaDemuxContext *matroska)$/;"	f	file:
ebml_read_uint	libavformat/matroska.c	/^ebml_read_uint (MatroskaDemuxContext *matroska,$/;"	f	file:
ebml_read_utf8	libavformat/matroska.c	/^ebml_read_utf8 (MatroskaDemuxContext *matroska,$/;"	f	file:
ebuf	libavformat/gifdec.c	/^    uint8_t *pbuf, *ebuf;$/;"	m	struct:GifState	file:
ebx	libavcodec/i386/vp3dsp_sse2.c	818;"	d	file:
ebx	libavcodec/i386/vp3dsp_sse2.c	819;"	d	file:
ecx	libavcodec/i386/vp3dsp_sse2.c	809;"	d	file:
edge_emu_buffer	libavcodec/mpegvideo.h	/^    uint8_t *edge_emu_buffer;     \/\/\/< points into the middle of allocated_edge_emu_buffer$/;"	m	struct:MpegEncContext
edge_emu_buffer	libavcodec/vp3.c	/^    uint8_t edge_emu_buffer[9*2048]; \/\/FIXME dynamic alloc$/;"	m	struct:Vp3DecodeContext	file:
edit_count	libavformat/mov.c	/^    int edit_count;             \/* number of 'edit' (elst atom) *\/$/;"	m	struct:MOVStreamContext	file:
edx	libavcodec/i386/vp3dsp_sse2.c	810;"	d	file:
eight_data	libavcodec/i386/vp3dsp_sse2.c	/^static unsigned int __align16 eight_data[] =$/;"	v	file:
eightbps_decoder	libavcodec/8bps.c	/^AVCodec eightbps_decoder = {$/;"	v
emms	libavcodec/dsputil.h	/^static inline void emms(void)$/;"	f
emms	libavcodec/i386/mmx.h	52;"	d
emms_c	libavcodec/dsputil.h	381;"	d
emms_c	libavcodec/dsputil.h	391;"	d
emms_c	libavcodec/dsputil.h	412;"	d
empty_odd_column	libavcodec/armv4l/jrevdct_arm.S	/^empty_odd_column:$/;"	l
empty_row	libavcodec/armv4l/jrevdct_arm.S	/^empty_row:$/;"	l
enc	libavcodec/parser.c	/^    MpegEncContext *enc;$/;"	m	struct:ParseContext1	file:
enc	libavcodec/x264.c	/^    x264_t *enc;$/;"	m	struct:X264Context	file:
enc	libavformat/movenc.c	/^    AVCodecContext *enc;$/;"	m	struct:MOVIndex	file:
enc	libavformat/rm.c	/^    AVCodecContext *enc;$/;"	m	file:
enc_bitrate	libavcodec/amr.c	/^    enum Mode enc_bitrate;$/;"	m	struct:AMRContext	file:
enc_name	libavformat/rtp.h	/^    const char enc_name[50]; \/* XXX: still why 50 ? ;-) *\/$/;"	m	struct:AVRtpDynamicPayloadType_s
enc_name	libavformat/rtp.h	/^    const char enc_name[50]; \/* XXX: why 50 ? *\/$/;"	m	struct:AVRtpPayloadType_s
enc_temp	libavcodec/adx.c	/^    unsigned short enc_temp[32*2];$/;"	m	file:
encode	libavcodec/avcodec.h	/^    int (*encode)(AVCodecContext *, uint8_t *buf, int buf_size, void *data);$/;"	m	struct:AVCodec
encode_422_bitstream	libavcodec/huffyuv.c	/^static int encode_422_bitstream(HYuvContext *s, int count){$/;"	f	file:
encode_block	libavcodec/mjpeg.c	/^static void encode_block(MpegEncContext *s, DCTELEM *block, int n)$/;"	f	file:
encode_block	libavcodec/svq1.c	/^static int encode_block(SVQ1Context *s, uint8_t *src, uint8_t *ref, uint8_t *decoded, int stride, int level, int threshold, int lambda, int intra){$/;"	f	file:
encode_blocks	libavcodec/snow.c	/^static void encode_blocks(SnowContext *s){$/;"	f	file:
encode_dc	libavcodec/mpeg12.c	/^static inline void encode_dc(MpegEncContext *s, int diff, int component)$/;"	f	file:
encode_end	libavcodec/ffv1.c	/^static int encode_end(AVCodecContext *avctx)$/;"	f	file:
encode_end	libavcodec/huffyuv.c	/^static int encode_end(AVCodecContext *avctx)$/;"	f	file:
encode_end	libavcodec/lcl.c	/^static int encode_end(AVCodecContext *avctx)$/;"	f	file:
encode_exp	libavcodec/ac3enc.c	/^static int encode_exp(uint8_t encoded_exp[N\/2], $/;"	f	file:
encode_ext_header	libavcodec/wmv2.c	/^static int encode_ext_header(Wmv2Context *w){$/;"	f	file:
encode_frame	libavcodec/asv1.c	/^static int encode_frame(AVCodecContext *avctx, unsigned char *buf, int buf_size, void *data){$/;"	f	file:
encode_frame	libavcodec/ffv1.c	/^static int encode_frame(AVCodecContext *avctx, unsigned char *buf, int buf_size, void *data){$/;"	f	file:
encode_frame	libavcodec/huffyuv.c	/^static int encode_frame(AVCodecContext *avctx, unsigned char *buf, int buf_size, void *data){$/;"	f	file:
encode_frame	libavcodec/lcl.c	/^static int encode_frame(AVCodecContext *avctx, unsigned char *buf, int buf_size, void *data){$/;"	f	file:
encode_frame	libavcodec/mpegaudio.c	/^static void encode_frame(MpegAudioContext *s,$/;"	f	file:
encode_frame	libavcodec/png.c	/^static int encode_frame(AVCodecContext *avctx, unsigned char *buf, int buf_size, void *data){$/;"	f	file:
encode_gray_bitstream	libavcodec/huffyuv.c	/^static int encode_gray_bitstream(HYuvContext *s, int count){$/;"	f	file:
encode_init	libavcodec/asv1.c	/^static int encode_init(AVCodecContext *avctx){$/;"	f	file:
encode_init	libavcodec/ffv1.c	/^static int encode_init(AVCodecContext *avctx)$/;"	f	file:
encode_init	libavcodec/huffyuv.c	/^static int encode_init(AVCodecContext *avctx)$/;"	f	file:
encode_init	libavcodec/lcl.c	/^static int encode_init(AVCodecContext *avctx)$/;"	f	file:
encode_init	libavcodec/mpeg12.c	/^static int encode_init(AVCodecContext *avctx)$/;"	f	file:
encode_line	libavcodec/ffv1.c	/^static inline int encode_line(FFV1Context *s, int w, int_fast16_t *sample[2], int plane_index, int bits){$/;"	f	file:
encode_mb	libavcodec/asv1.c	/^static inline int encode_mb(ASV1Context *a, DCTELEM block[6][64]){$/;"	f	file:
encode_mb	libavcodec/mpegvideo.c	/^static void encode_mb(MpegEncContext *s, int motion_x, int motion_y)$/;"	f	file:
encode_mb_hq	libavcodec/mpegvideo.c	/^static inline void encode_mb_hq(MpegEncContext *s, MpegEncContext *backup, MpegEncContext *best, int type, $/;"	f	file:
encode_mb_skip_run	libavcodec/mpeg12.c	/^static inline void encode_mb_skip_run(MpegEncContext *s, int run){$/;"	f	file:
encode_nals	libavcodec/x264.c	/^encode_nals(uint8_t *buf, int size, x264_nal_t *nals, int nnal)$/;"	f	file:
encode_picture	libavcodec/mpegvideo.c	/^static void encode_picture(MpegEncContext *s, int picture_number)$/;"	f	file:
encode_picture_lossless	libavcodec/mjpeg.c	/^static int encode_picture_lossless(AVCodecContext *avctx, unsigned char *buf, int buf_size, void *data){$/;"	f	file:
encode_plane	libavcodec/ffv1.c	/^static void encode_plane(FFV1Context *s, uint8_t *src, int w, int h, int stride, int plane_index){$/;"	f	file:
encode_q_branch	libavcodec/snow.c	/^static int encode_q_branch(SnowContext *s, int level, int x, int y){$/;"	f	file:
encode_rgb_frame	libavcodec/ffv1.c	/^static void encode_rgb_frame(FFV1Context *s, uint32_t *src, int w, int h, int stride){$/;"	f	file:
encode_subband	libavcodec/snow.c	/^static int encode_subband(SnowContext *s, SubBand *b, DWTELEM *src, DWTELEM *parent, int stride, int orientation){    $/;"	f	file:
encode_subband_c0run	libavcodec/snow.c	/^static int encode_subband_c0run(SnowContext *s, SubBand *b, DWTELEM *src, DWTELEM *parent, int stride, int orientation){$/;"	f	file:
encode_thread	libavcodec/mpegvideo.c	/^static int encode_thread(AVCodecContext *c, void *arg){$/;"	f	file:
encoded_picture	libavcodec/xvidff.c	/^    AVFrame encoded_picture;       \/** Encoded frame information *\/$/;"	m	struct:xvid_context	file:
encoder_handle	libavcodec/xvidff.c	/^    void *encoder_handle;          \/** Handle for XviD Encoder *\/$/;"	m	struct:xvid_context	file:
encoding	libavcodec/mpegvideo.h	/^    int encoding;     \/\/\/< true if we are encoding (vs decoding) $/;"	m	struct:MpegEncContext
encoding_needed	ffmpeg.c	/^    int encoding_needed;     \/* true if encoding needed for this stream *\/$/;"	m	struct:AVOutputStream	file:
end	libavcodec/vorbis.h	/^    uint_fast32_t end;$/;"	m
end	libavformat/avformat.h	/^    uint8_t *rptr, *wptr, *end;$/;"	m	struct:FifoBuffer
end_code	libavformat/gifdec.c	/^    int end_code;$/;"	m	struct:GifState	file:
end_frame	libavcodec/avcodec.h	/^    int end_frame;$/;"	m	struct:RcOverride
end_header	libavformat/asf-enc.c	/^static void end_header(ByteIOContext *pb, int64_t pos)$/;"	f	file:
end_mb_y	libavcodec/mpegvideo.h	/^    int end_mb_y;              \/\/\/< end   mb_y of this thread (so current thread should process start_mb_y <= row < end_mb_y)$/;"	m	struct:MpegEncContext
end_of_row_loop	libavcodec/armv4l/jrevdct_arm.S	/^end_of_row_loop:$/;"	l
end_of_section_reached	libavformat/mpegts.c	/^    int end_of_section_reached:1;$/;"	m	struct:MpegTSSectionFilter	file:
end_tag	libavformat/avienc.c	/^void end_tag(ByteIOContext *pb, offset_t start)$/;"	f
endmant	libavcodec/liba52/a52_internal.h	/^    uint8_t endmant[5];		\/* channel end mantissa *\/$/;"	m	struct:a52_state_s
enhancement_type	libavcodec/mpegvideo.h	/^    int enhancement_type;$/;"	m	struct:MpegEncContext
enstate	libavcodec/amr.c	/^    Speech_Encode_FrameState *enstate;$/;"	m	struct:AMRContext	file:
enstate	libavcodec/amr.c	/^    int *enstate;$/;"	m	struct:AMRContext	file:
entries	libavcodec/vp3.c	/^    int entries;$/;"	m	struct:Vp3DecodeContext	file:
entries	libavformat/movenc.c	/^    unsigned int entries;$/;"	m	struct:MOVIentry	file:
entry	libavcodec/mpegvideo.h	/^    RateControlEntry *entry;$/;"	m	struct:RateControlContext
entry	libavformat/avienc.c	/^    int         entry;$/;"	m	struct:AVIIndex	file:
entry	libavformat/movenc.c	/^    int         entry;$/;"	m	struct:MOVIndex	file:
ents_allocated	libavformat/avienc.c	/^    int         ents_allocated;$/;"	m	struct:AVIIndex	file:
ents_allocated	libavformat/movenc.c	/^    int         ents_allocated;$/;"	m	struct:MOVIndex	file:
eob_reached	libavformat/gifdec.c	/^    int eob_reached;$/;"	m	struct:GifState	file:
eob_run_base	libavcodec/vp3data.h	/^static const int eob_run_base[7] = {$/;"	v
eob_run_get_bits	libavcodec/vp3data.h	/^static const int eob_run_get_bits[7] = {$/;"	v
eof_reached	ffmpeg.c	/^    int eof_reached;      \/* true if eof reached *\/$/;"	m	struct:AVInputFile	file:
eof_reached	libavformat/avio.h	/^    int eof_reached; \/* true if eof reached *\/$/;"	m
epzs_motion_search2	libavcodec/motion_est_template.c	/^static int epzs_motion_search2(MpegEncContext * s,$/;"	f	file:
epzs_motion_search4	libavcodec/motion_est_template.c	/^static int epzs_motion_search4(MpegEncContext * s,$/;"	f	file:
epzs_motion_search_internal	libavcodec/motion_est_template.c	/^static always_inline int epzs_motion_search_internal(MpegEncContext * s, int *mx_ptr, int *my_ptr,$/;"	f	file:
eq	libavcodec/ra144.c	/^static int eq(Real144_internal *glob, short *in, int *target)$/;"	f	file:
error	libavcodec/avcodec.h	/^    uint64_t error[4];$/;"	m	struct:AVCodecContext
error	libavcodec/libpostproc/postprocess_internal.h	/^	int error; 			\/\/\/< non zero on error$/;"	m	struct:PPMode
error	libavformat/avio.h	/^    int error;         \/\/\/< contains the error code or 0 if no error happened$/;"	m
error_concealment	ffmpeg.c	/^static int error_concealment = 3;$/;"	v	file:
error_concealment	libavcodec/avcodec.h	/^    int error_concealment;$/;"	m	struct:AVCodecContext
error_count	libavcodec/mpegvideo.h	/^    int error_count;$/;"	m	struct:MpegEncContext
error_protection	libavcodec/mpegaudiodec.c	/^    int error_protection;$/;"	m	struct:MPADecodeContext	file:
error_rate	ffmpeg.c	/^static int error_rate = 0;$/;"	v	file:
error_rate	libavcodec/avcodec.h	/^    int error_rate;$/;"	m	struct:AVCodecContext
error_resilience	ffmpeg.c	/^static int error_resilience = 2;$/;"	v	file:
error_resilience	libavcodec/avcodec.h	/^    int error_resilience;$/;"	m	struct:AVCodecContext
error_resilience	libavcodec/mpegvideo.h	/^    int error_resilience;$/;"	m	struct:MpegEncContext
error_spread_ADPCM_G726	libavformat/asf-enc.c	/^static const uint8_t error_spread_ADPCM_G726[] = { 0x01, 0x90, 0x01, 0x90, 0x01, 0x01, 0x00, 0x00 };$/;"	v	file:
error_status_table	libavcodec/mpegvideo.h	/^    uint8_t *error_status_table;       \/\/\/< table of the error status of each MB  $/;"	m	struct:MpegEncContext
error_sum	libavcodec/ffv1.c	/^    uint16_t error_sum;$/;"	m	struct:VlcState	file:
es_id	libavformat/mov.c	/^    uint16_t es_id;$/;"	m	file:
esc3_level_length	libavcodec/mpegvideo.h	/^    int esc3_level_length;$/;"	m	struct:MpegEncContext
esc3_run_length	libavcodec/mpegvideo.h	/^    int esc3_run_length;$/;"	m	struct:MpegEncContext
escape_FF	libavcodec/mjpeg.c	/^static void escape_FF(MpegEncContext *s, int start)$/;"	f	file:
esds	libavformat/mov.c	/^    MOV_esds_t esds;$/;"	m	struct:MOVStreamContext	file:
estimate_motion_thread	libavcodec/mpegvideo.c	/^static int estimate_motion_thread(AVCodecContext *c, void *arg){$/;"	f	file:
etable1	libavcodec/ra144.h	/^static const signed short etable1[5120]={$/;"	v
etable2	libavcodec/ra144.h	/^static const signed short etable2[5120]={$/;"	v
evalExpression	libavcodec/eval.c	/^static double evalExpression(Parser *p){$/;"	f	file:
evalFactor	libavcodec/eval.c	/^static double evalFactor(Parser *p){$/;"	f	file:
evalPow	libavcodec/eval.c	/^static double evalPow(Parser *p){$/;"	f	file:
evalPrimary	libavcodec/eval.c	/^static double evalPrimary(Parser *p){$/;"	f	file:
evalTerm	libavcodec/eval.c	/^static double evalTerm(Parser *p){$/;"	f	file:
even_table	libavcodec/sh4/idct_sh4.c	/^const	static float even_table[] __attribute__ ((aligned(8))) = {$/;"	v	file:
event_loop	ffplay.c	/^void event_loop(void)$/;"	f
events	libavformat/avio.h	/^    int events;$/;"	m	struct:URLPollEntry
exchange_uv	libavcodec/mpeg12.c	/^static void exchange_uv(MpegEncContext *s){$/;"	f	file:
execute	libavcodec/avcodec.h	/^    int (*execute)(struct AVCodecContext *c, int (*func)(struct AVCodecContext *c2, void *arg), void **arg2, int *ret, int count);$/;"	m	struct:AVCodecContext
execute_ref_pic_marking	libavcodec/h264.c	/^static int execute_ref_pic_marking(H264Context *h, MMCO *mmco, int mmco_count){$/;"	f	file:
exp	libavcodec/g726.c	/^	int exp;    \/**< 4bit exponent *\/$/;"	m	struct:Float11	file:
exp	libavcodec/liba52/a52_internal.h	/^    uint8_t exp[256];		\/* decoded channel exponents *\/$/;"	m
exp16	tests/tiny_psnr.c	/^static unsigned int exp16(unsigned int a){$/;"	f	file:
exp16_table	tests/tiny_psnr.c	/^uint64_t exp16_table[21]={$/;"	v
exp_1	libavcodec/liba52/tables.h	/^static const int8_t exp_1[128] = {$/;"	v
exp_2	libavcodec/liba52/tables.h	/^static const int8_t exp_2[128] = {$/;"	v
exp_3	libavcodec/liba52/tables.h	/^static const int8_t exp_3[128] = {$/;"	v
exp_vlc	libavcodec/wmadec.c	/^    VLC exp_vlc;$/;"	m	struct:WMADecodeContext	file:
expand_rle_row	libavformat/sgi.c	/^static int expand_rle_row(ByteIOContext *f, unsigned char *optr,$/;"	f	file:
expbap_t	libavcodec/liba52/a52_internal.h	/^} expbap_t;$/;"	t
expected_bits	libavcodec/mpegvideo.h	/^    uint64_t expected_bits;$/;"	m	struct:RateControlEntry
exponent_band_22050	libavcodec/wmadata.h	/^static const uint8_t exponent_band_22050[3][25] = {$/;"	v
exponent_band_32000	libavcodec/wmadata.h	/^static const uint8_t exponent_band_32000[3][25] = {$/;"	v
exponent_band_44100	libavcodec/wmadata.h	/^static const uint8_t exponent_band_44100[3][25] = {$/;"	v
exponent_bands	libavcodec/wmadec.c	/^    uint16_t exponent_bands[BLOCK_NB_SIZES][25];$/;"	m	struct:WMADecodeContext	file:
exponent_high_bands	libavcodec/wmadec.c	/^    int exponent_high_bands[BLOCK_NB_SIZES][HIGH_BAND_MAX_SIZE]; $/;"	m	struct:WMADecodeContext	file:
exponent_high_sizes	libavcodec/wmadec.c	/^    int exponent_high_sizes[BLOCK_NB_SIZES];$/;"	m	struct:WMADecodeContext	file:
exponent_min	libavcodec/ac3enc.c	/^static void exponent_min(uint8_t exp[N\/2], uint8_t exp1[N\/2], int n)$/;"	f	file:
exponent_sizes	libavcodec/wmadec.c	/^    int exponent_sizes[BLOCK_NB_SIZES];$/;"	m	struct:WMADecodeContext	file:
exponents	libavcodec/wmadec.c	/^    float exponents[MAX_CHANNELS][BLOCK_MAX_SIZE] __attribute__((aligned(16)));$/;"	m	struct:WMADecodeContext	file:
exponents_from_scale_factors	libavcodec/mpegaudiodec.c	/^static void exponents_from_scale_factors(MPADecodeContext *s, $/;"	f	file:
exptab	libavcodec/dsputil.h	/^    FFTComplex *exptab;$/;"	m	struct:FFTContext
exptab	libavcodec/fft-test.c	/^FFTComplex *exptab;$/;"	v
exptab1	libavcodec/dsputil.h	/^    FFTComplex *exptab1; \/* only used by SSE code *\/$/;"	m	struct:FFTContext
extended_content_header	libavformat/asf.h	/^static const GUID extended_content_header = {$/;"	v
extended_dmv	libavcodec/vc9.c	/^    int extended_dmv;     \/\/\/< Additional extended dmv range at P\/B frame-level$/;"	m	struct:VC9Context	file:
extended_mv	libavcodec/vc9.c	/^    int extended_mv;      \/\/\/< Ext MV in P\/B (not in Simple)$/;"	m	struct:VC9Context	file:
extensions	libavformat/avformat.h	/^    const char *extensions; \/* comma separated extensions *\/$/;"	m	struct:AVOutputFormat
extensions	libavformat/avformat.h	/^    const char *extensions;$/;"	m	struct:AVImageFormat
extensions	libavformat/avformat.h	/^    const char *extensions;$/;"	m	struct:AVInputFormat
external_clock	ffplay.c	/^    double external_clock; \/* external clock base *\/$/;"	m	struct:VideoState	file:
external_clock_time	ffplay.c	/^    int64_t external_clock_time;$/;"	m	struct:VideoState	file:
extqh	libavcodec/alpha/asm.h	140;"	d
extqh	libavcodec/alpha/asm.h	79;"	d
extqh	libavcodec/alpha/asm.h	93;"	d
extql	libavcodec/alpha/asm.h	138;"	d
extql	libavcodec/alpha/asm.h	77;"	d
extql	libavcodec/alpha/asm.h	91;"	d
extra_size	ffmpeg.c	/^static int64_t extra_size = 0;$/;"	v	file:
extract_mpeg4_header	ffserver.c	/^static void extract_mpeg4_header(AVFormatContext *infile)$/;"	f	file:
extract_rates	ffserver.c	/^static int extract_rates(char *rates, int ratelen, const char *request)$/;"	f	file:
extradata	libavcodec/avcodec.h	/^    void *extradata;$/;"	m	struct:AVCodecContext
extradata_size	libavcodec/avcodec.h	/^    int extradata_size;$/;"	m	struct:AVCodecContext
extwl	libavcodec/alpha/asm.h	139;"	d
extwl	libavcodec/alpha/asm.h	78;"	d
extwl	libavcodec/alpha/asm.h	92;"	d
eye_mode	libavformat/matroska.c	/^    MatroskaEyeMode eye_mode;$/;"	m	struct:MatroskaVideoTrack	file:
f	libavformat/gifdec.c	/^    ByteIOContext *f;$/;"	m	struct:GifState	file:
f	libavformat/png.c	/^    ByteIOContext *f;$/;"	m	struct:PNGEncodeState	file:
f_code	libavcodec/mpegvideo.h	/^    int f_code;                 \/\/\/< forward MV resolution $/;"	m	struct:MpegEncContext
f_code	libavcodec/mpegvideo.h	/^    int f_code;$/;"	m	struct:RateControlEntry
f_count	libavcodec/mpegvideo.h	/^    int f_count;$/;"	m	struct:MpegEncContext
faacDecClose	libavcodec/faad.c	/^    void FAADAPI (*faacDecClose)(faacDecHandle hDecoder);$/;"	m	file:
faacDecDecode	libavcodec/faad.c	/^	int FAADAPI (*faacDecDecode)(faacDecHandle hDecoder,$/;"	m	file:
faacDecDecode	libavcodec/faad.c	/^	void *FAADAPI (*faacDecDecode)(faacDecHandle hDecoder,$/;"	m	file:
faacDecGetCurrentConfiguration	libavcodec/faad.c	/^    faacDecConfigurationPtr FAADAPI (*faacDecGetCurrentConfiguration)(faacDecHandle hDecoder);$/;"	m	file:
faacDecGetErrorMessage	libavcodec/faad.c	/^	char* FAADAPI (*faacDecGetErrorMessage)(unsigned char errcode);$/;"	m	file:
faacDecInit	libavcodec/faad.c	/^	int FAADAPI (*faacDecInit)(faacDecHandle hDecoder,$/;"	m	file:
faacDecInit	libavcodec/faad.c	/^	long FAADAPI (*faacDecInit)(faacDecHandle hDecoder,$/;"	m	file:
faacDecInit2	libavcodec/faad.c	/^	char FAADAPI (*faacDecInit2)(faacDecHandle hDecoder, unsigned char *pBuffer,$/;"	m	file:
faacDecInit2	libavcodec/faad.c	/^	int FAADAPI (*faacDecInit2)(faacDecHandle hDecoder, unsigned char *pBuffer,$/;"	m	file:
faacDecOpen	libavcodec/faad.c	/^    faacDecHandle FAADAPI (*faacDecOpen)(void);$/;"	m	file:
faacDecSetConfiguration	libavcodec/faad.c	/^	int FAADAPI (*faacDecSetConfiguration)(faacDecHandle hDecoder,$/;"	m	file:
faacDecSetConfiguration	libavcodec/faad.c	/^	unsigned char FAADAPI (*faacDecSetConfiguration)(faacDecHandle hDecoder,$/;"	m	file:
faac_decode_end	libavcodec/faad.c	/^static int faac_decode_end(AVCodecContext *avctx)$/;"	f	file:
faac_decode_frame	libavcodec/faad.c	/^static int faac_decode_frame(AVCodecContext *avctx,$/;"	f	file:
faac_decode_init	libavcodec/faad.c	/^static int faac_decode_init(AVCodecContext *avctx)$/;"	f	file:
faac_encoder	libavcodec/faac.c	/^AVCodec faac_encoder = {$/;"	v
faac_handle	libavcodec/faac.c	/^    faacEncHandle faac_handle;$/;"	m	struct:FaacAudioContext	file:
faac_handle	libavcodec/faad.c	/^    void* faac_handle;		\/* FAAD library handle *\/$/;"	m	file:
faac_init_mp4	libavcodec/faad.c	/^static int faac_init_mp4(AVCodecContext *avctx)$/;"	f	file:
faac_srates	libavcodec/faad.c	/^static const unsigned long faac_srates[] =$/;"	v	file:
face	vhook/drawtext.c	/^  FT_Face    face;$/;"	m	file:
factor	libavcodec/mace.c	/^  short index, lev, factor, prev2, previous, level;$/;"	m	struct:MACEContext	file:
fast	ffplay.c	/^static int fast = 0;$/;"	v	file:
fast_dct_quantize	libavcodec/mpegvideo.h	/^    int (*fast_dct_quantize)(struct MpegEncContext *s, DCTELEM *block\/*align 16*\/, int n, int qscale, int *overflow);$/;"	m	struct:MpegEncContext
fastuvmc	libavcodec/vc9.c	/^    int fastuvmc;         \/\/\/< Rounding of qpel vector to hpel ? (not in Simple)$/;"	m	struct:VC9Context	file:
fat_c_predictor_table	libavcodec/truemotion1.c	/^    uint32_t fat_c_predictor_table[1024];$/;"	m	struct:TrueMotion1Context	file:
fat_cdt	libavcodec/truemotion1.c	/^    int16_t fat_cdt[8];$/;"	m	struct:TrueMotion1Context	file:
fat_cdt2	libavcodec/truemotion1data.h	/^static int16_t fat_cdt2[8] = { 0, -20, 15, -80, 100, -160, 180, -160 };$/;"	v
fat_cdt3	libavcodec/truemotion1data.h	/^static int16_t fat_cdt3[8] = { 0, 40, 80, -76, 160, -154, 236, -236 };$/;"	v
fat_cdts	libavcodec/truemotion1data.h	/^static int16_t *fat_cdts[] = { fat_cdt2, fat_cdt2, fat_cdt2, fat_cdt3, NULL };$/;"	v
fat_y_predictor_table	libavcodec/truemotion1.c	/^    uint32_t fat_y_predictor_table[1024];$/;"	m	struct:TrueMotion1Context	file:
fat_ydt	libavcodec/truemotion1.c	/^    int16_t fat_ydt[8];$/;"	m	struct:TrueMotion1Context	file:
fat_ydt3	libavcodec/truemotion1data.h	/^static int16_t fat_ydt3[8] = { 0, -15, 50, -50, 115, -115, 235, -235 };$/;"	v
fat_ydt4	libavcodec/truemotion1data.h	/^static int16_t fat_ydt4[8] = { 0, 40, 80, -76, 160, -154, 236, -236 };$/;"	v
fat_ydts	libavcodec/truemotion1data.h	/^static int16_t *fat_ydts[] = { fat_ydt3, fat_ydt3, fat_ydt3, fat_ydt4, NULL };$/;"	v
fbw_expbap	libavcodec/liba52/a52_internal.h	/^    expbap_t fbw_expbap[5];$/;"	m	struct:a52_state_s
fc	libavformat/gifdec.c	/^    int fc, oc;$/;"	m	struct:GifState	file:
fc	libavformat/mov.c	/^    AVFormatContext *fc;$/;"	m	struct:MOVContext	file:
fcm	libavcodec/vc9.c	/^    uint8_t fcm; \/\/\/< 0->Progressive, 2->Frame-Interlace, 3->Field-Interlace$/;"	m	struct:VC9Context	file:
fcode_tab	libavcodec/h263.c	/^static uint8_t fcode_tab[MAX_MV*2+1];$/;"	v	file:
fcode_tab	libavcodec/mpeg12.c	/^static uint8_t fcode_tab[MAX_MV*2+1];$/;"	v	file:
fcode_tab	libavcodec/mpegvideo.h	/^    uint8_t *fcode_tab;               \/\/\/< smallest fcode needed for each MV $/;"	m	struct:MpegEncContext
fctx	libavformat/dv.c	/^    AVFormatContext* fctx;$/;"	m	struct:DVDemuxContext	file:
fd	ffserver.c	/^    int fd; \/* socket file descriptor *\/$/;"	m	struct:HTTPContext	file:
fd	libavformat/audio.c	/^    int fd;$/;"	m	file:
fd	libavformat/beosaudio.cpp	/^    int fd; \/\/ UNUSED$/;"	m	file:
fd	libavformat/dv1394.c	/^    int fd;$/;"	m	struct:dv1394_data	file:
fd	libavformat/grab.c	/^    int fd;$/;"	m	file:
fd	libavformat/tcp.c	/^    int fd;$/;"	m	struct:TCPContext	file:
fdct	libavcodec/dsputil.h	/^    void (*fdct)(DCTELEM *block\/* align 16*\/);$/;"	m	struct:DSPContext
fdct	libavcodec/dv.c	/^    void (*fdct[2])(DCTELEM *block);$/;"	m	struct:DVVideoContext	file:
fdct	libavcodec/fdctref.c	/^void fdct(block)$/;"	f
fdct248	libavcodec/dsputil.h	/^    void (*fdct248)(DCTELEM *block\/* align 16*\/);$/;"	m	struct:DSPContext
fdct_altivec	libavcodec/ppc/fdct_altivec.c	/^void fdct_altivec(int16_t *block)$/;"	f
fdct_col	libavcodec/i386/fdct_mmx.c	/^static always_inline void fdct_col(const int16_t *in, int16_t *out, int offset)$/;"	f	file:
fdct_ifast	libavcodec/jfdctfst.c	/^fdct_ifast (DCTELEM * data)$/;"	f
fdct_ifast248	libavcodec/jfdctfst.c	/^fdct_ifast248 (DCTELEM * data)$/;"	f
fdct_row_mmx	libavcodec/i386/fdct_mmx.c	/^static always_inline void fdct_row_mmx(const int16_t *in, int16_t *out, const int16_t *table)$/;"	f	file:
fdct_row_mmx2	libavcodec/i386/fdct_mmx.c	/^static always_inline void fdct_row_mmx2(const int16_t *in, int16_t *out, const int16_t *table)$/;"	f	file:
fdct_row_sse2	libavcodec/i386/fdct_mmx.c	/^static always_inline void fdct_row_sse2(const int16_t *in, int16_t *out)$/;"	f	file:
fdctconsts	libavcodec/ppc/fdct_altivec.c	/^static vector float fdctconsts[3] = {$/;"	v	file:
fdecay	libavcodec/ac3.h	/^    int sgain, sdecay, fdecay, dbknee, floor;$/;"	m	struct:AC3BitAllocParameters
fdecaycod	libavcodec/ac3enc.c	/^    int sgaincod, sdecaycod, fdecaycod, dbkneecod, floorcod; $/;"	m	struct:AC3EncodeContext	file:
fdecaytab	libavcodec/ac3tab.h	/^static const uint8_t fdecaytab[4]={ $/;"	v
feed	ffserver.c	/^    struct FFStream *feed;   \/* feed we are using (can be null if$/;"	m	struct:FFStream	file:
feed_fd	ffserver.c	/^    int feed_fd;$/;"	m	struct:HTTPContext	file:
feed_filename	ffserver.c	/^    char feed_filename[1024]; \/* file name of the feed storage, or$/;"	m	struct:FFStream	file:
feed_max_size	ffserver.c	/^    int64_t feed_max_size;      \/* maximum storage size *\/$/;"	m	struct:FFStream	file:
feed_opened	ffserver.c	/^    int feed_opened;     \/* true if someone is writing to the feed *\/$/;"	m	struct:FFStream	file:
feed_size	ffserver.c	/^    int64_t feed_size;          \/* current size of feed *\/$/;"	m	struct:FFStream	file:
feed_streams	ffserver.c	/^    int feed_streams[MAX_STREAMS]; \/* index of streams in the feed *\/$/;"	m	struct:FFStream	file:
feed_streams	ffserver.c	/^    int feed_streams[MAX_STREAMS]; \/* index of streams in the feed *\/$/;"	m	struct:HTTPContext	file:
feed_write_index	ffserver.c	/^    int64_t feed_write_index;   \/* current write position in feed (it wraps round) *\/$/;"	m	struct:FFStream	file:
fetch_diagonal_mv	libavcodec/h264.c	/^static inline int fetch_diagonal_mv(H264Context *h, const int16_t **C, int i, int list, int part_width){$/;"	f	file:
fetch_timestamp	libavcodec/avcodec.h	/^    int fetch_timestamp;$/;"	m	struct:AVCodecParserContext
ff_add_pixels_clamped	libavcodec/armv4l/dsputil_arm.c	/^static void (*ff_add_pixels_clamped)(const DCTELEM *block, uint8_t *pixels, int line_size);$/;"	v	file:
ff_aic_dc_scale_table	libavcodec/h263data.h	/^uint8_t ff_aic_dc_scale_table[32]={$/;"	v
ff_alternate_horizontal_scan	libavcodec/dsputil.c	/^const uint8_t ff_alternate_horizontal_scan[64] = {$/;"	v
ff_alternate_vertical_scan	libavcodec/dsputil.c	/^const uint8_t ff_alternate_vertical_scan[64] = {$/;"	v
ff_block_permute	libavcodec/dsputil.c	/^void ff_block_permute(DCTELEM *block, uint8_t *permutation, const uint8_t *scantable, int last)$/;"	f
ff_build_rac_states	libavcodec/rangecoder.c	/^void ff_build_rac_states(RangeCoder *c, int factor, int max_p){$/;"	f
ff_clean_h263_qscales	libavcodec/h263.c	/^void ff_clean_h263_qscales(MpegEncContext *s){$/;"	f
ff_clean_intra_table_entries	libavcodec/mpegvideo.c	/^void ff_clean_intra_table_entries(MpegEncContext *s)$/;"	f
ff_clean_mpeg4_qscales	libavcodec/h263.c	/^void ff_clean_mpeg4_qscales(MpegEncContext *s){$/;"	f
ff_combine_frame	libavcodec/parser.c	/^int ff_combine_frame(ParseContext *pc, int next, uint8_t **buf, int *buf_size)$/;"	f
ff_copy_bits	libavcodec/mpegvideo.c	/^void ff_copy_bits(PutBitContext *pb, uint8_t *src, int length)$/;"	f
ff_default_chroma_qscale_table	libavcodec/mpegvideo.c	/^static const uint8_t ff_default_chroma_qscale_table[32]={$/;"	v	file:
ff_draw_horiz_band	libavcodec/mpegvideo.c	/^void ff_draw_horiz_band(MpegEncContext *s, int y, int h){$/;"	f
ff_dv_init	libavformat/dv.c	/^int ff_dv_init(void)$/;"	f
ff_emulated_edge_mc	libavcodec/mpegvideo.c	/^void ff_emulated_edge_mc(uint8_t *buf, uint8_t *src, int linesize, int block_w, int block_h, $/;"	f
ff_epzs_motion_search	libavcodec/motion_est_template.c	/^inline int ff_epzs_motion_search(MpegEncContext * s, int *mx_ptr, int *my_ptr,$/;"	f
ff_er_add_slice	libavcodec/error_resilience.c	/^void ff_er_add_slice(MpegEncContext *s, int startx, int starty, int endx, int endy, int status){$/;"	f
ff_er_frame_end	libavcodec/error_resilience.c	/^void ff_er_frame_end(MpegEncContext *s){$/;"	f
ff_er_frame_start	libavcodec/error_resilience.c	/^void ff_er_frame_start(MpegEncContext *s){$/;"	f
ff_estimate_b_frame_motion	libavcodec/motion_est.c	/^void ff_estimate_b_frame_motion(MpegEncContext * s,$/;"	f
ff_estimate_motion_b	libavcodec/motion_est.c	/^static int ff_estimate_motion_b(MpegEncContext * s,$/;"	f	file:
ff_estimate_p_frame_motion	libavcodec/motion_est.c	/^void ff_estimate_p_frame_motion(MpegEncContext * s,$/;"	f
ff_eval	libavcodec/eval.c	/^double ff_eval(char *s, double *const_value, const char **const_name,$/;"	f
ff_faandct	libavcodec/faandct.c	/^void ff_faandct(DCTELEM * data)$/;"	f
ff_faandct248	libavcodec/faandct.c	/^void ff_faandct248(DCTELEM * data)$/;"	f
ff_fdct248_islow	libavcodec/jfdctint.c	/^ff_fdct248_islow (DCTELEM * data)$/;"	f
ff_fdct_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void ff_fdct_mlib(DCTELEM *data)$/;"	f	file:
ff_fdct_mmx	libavcodec/i386/fdct_mmx.c	/^void ff_fdct_mmx(int16_t *block)$/;"	f
ff_fdct_mmx2	libavcodec/i386/fdct_mmx.c	/^void ff_fdct_mmx2(int16_t *block)$/;"	f
ff_fdct_sse2	libavcodec/i386/fdct_mmx.c	/^void ff_fdct_sse2(int16_t *block) $/;"	f
ff_fft_calc	libavcodec/dsputil.h	/^static inline void ff_fft_calc(FFTContext *s, FFTComplex *z)$/;"	f
ff_fft_calc_altivec	libavcodec/ppc/fft_altivec.c	/^void ff_fft_calc_altivec(FFTContext *s, FFTComplex *z)$/;"	f
ff_fft_calc_c	libavcodec/fft.c	/^void ff_fft_calc_c(FFTContext *s, FFTComplex *z)$/;"	f
ff_fft_calc_sse	libavcodec/i386/fft_sse.c	/^void ff_fft_calc_sse(FFTContext *s, FFTComplex *z)$/;"	f
ff_fft_end	libavcodec/fft.c	/^void ff_fft_end(FFTContext *s)$/;"	f
ff_fft_init	libavcodec/fft.c	/^int ff_fft_init(FFTContext *s, int nbits, int inverse)$/;"	f
ff_fft_permute	libavcodec/fft.c	/^void ff_fft_permute(FFTContext *s, FFTComplex *z)$/;"	f
ff_find_unused_picture	libavcodec/mpegvideo.c	/^int ff_find_unused_picture(MpegEncContext *s, int shared){$/;"	f
ff_fix_long_mvs	libavcodec/motion_est.c	/^void ff_fix_long_mvs(MpegEncContext * s, uint8_t *field_select_table, int field_select, $/;"	f
ff_fix_long_p_mvs	libavcodec/motion_est.c	/^void ff_fix_long_p_mvs(MpegEncContext * s)$/;"	f
ff_flv_encode_picture_header	libavcodec/h263.c	/^void ff_flv_encode_picture_header(MpegEncContext * s, int picture_number)$/;"	f
ff_gcd	libavcodec/utils.c	/^int64_t ff_gcd(int64_t a, int64_t b){$/;"	f
ff_get_best_fcode	libavcodec/motion_est.c	/^int ff_get_best_fcode(MpegEncContext * s, int16_t (*mv_table)[2], int type)$/;"	f
ff_get_fourcc	libavcodec/common.h	/^static inline int ff_get_fourcc(const char *s){$/;"	f
ff_get_mb_score	libavcodec/motion_est_template.c	/^int inline ff_get_mb_score(MpegEncContext * s, int mx, int my, int src_index,$/;"	f
ff_golomb_vlc_len	libavcodec/golomb.c	/^const uint8_t ff_golomb_vlc_len[512]={$/;"	v
ff_h261_encode_init	libavcodec/h261.c	/^void ff_h261_encode_init(MpegEncContext *s){$/;"	f
ff_h261_encode_mb	libavcodec/h261.c	/^void ff_h261_encode_mb(MpegEncContext * s,$/;"	f
ff_h261_encode_picture_header	libavcodec/h261.c	/^void ff_h261_encode_picture_header(MpegEncContext * s, int picture_number){$/;"	f
ff_h261_get_picture_format	libavcodec/h261.c	/^static int ff_h261_get_picture_format(int width, int height){$/;"	f	file:
ff_h261_loop_filter	libavcodec/h261.c	/^void ff_h261_loop_filter(MpegEncContext *s){$/;"	f
ff_h261_reorder_mb_index	libavcodec/h261.c	/^void ff_h261_reorder_mb_index(MpegEncContext* s){$/;"	f
ff_h261_resync	libavcodec/h261.c	/^static int ff_h261_resync(H261Context *h){$/;"	f	file:
ff_h263_chroma_qscale_table	libavcodec/h263data.h	/^const uint8_t ff_h263_chroma_qscale_table[32]={$/;"	v
ff_h263_decode_end	libavcodec/h263dec.c	/^int ff_h263_decode_end(AVCodecContext *avctx)$/;"	f
ff_h263_decode_frame	libavcodec/h263dec.c	/^int ff_h263_decode_frame(AVCodecContext *avctx, $/;"	f
ff_h263_decode_init	libavcodec/h263dec.c	/^int ff_h263_decode_init(AVCodecContext *avctx)$/;"	f
ff_h263_decode_mb	libavcodec/h263.c	/^int ff_h263_decode_mb(MpegEncContext *s,$/;"	f
ff_h263_decode_mba	libavcodec/h263.c	/^int ff_h263_decode_mba(MpegEncContext *s)$/;"	f
ff_h263_encode_mba	libavcodec/h263.c	/^void ff_h263_encode_mba(MpegEncContext *s)$/;"	f
ff_h263_encode_motion	libavcodec/h263.c	/^void ff_h263_encode_motion(MpegEncContext * s, int val, int f_code)$/;"	f
ff_h263_encode_motion_vector	libavcodec/h263.c	/^static inline void ff_h263_encode_motion_vector(MpegEncContext * s, int x, int y, int f_code){$/;"	f	file:
ff_h263_get_gob_height	libavcodec/h263.c	/^int ff_h263_get_gob_height(MpegEncContext *s){$/;"	f
ff_h263_loop_filter	libavcodec/h263.c	/^void ff_h263_loop_filter(MpegEncContext * s){$/;"	f
ff_h263_loop_filter_strength	libavcodec/h263data.h	/^const uint8_t ff_h263_loop_filter_strength[32]={$/;"	v
ff_h263_resync	libavcodec/h263.c	/^int ff_h263_resync(MpegEncContext *s){$/;"	f
ff_h263_round_chroma	libavcodec/mpegvideo.c	/^inline int ff_h263_round_chroma(int x){$/;"	f
ff_h263_update_motion_val	libavcodec/h263.c	/^void ff_h263_update_motion_val(MpegEncContext * s){$/;"	f
ff_h264_idct_add_c	libavcodec/h264idct.c	/^void ff_h264_idct_add_c(uint8_t *dst, DCTELEM *block, int stride){$/;"	f
ff_h264_lowres_idct_add_c	libavcodec/h264idct.c	/^void ff_h264_lowres_idct_add_c(uint8_t *dst, int stride, DCTELEM *block){$/;"	f
ff_h264_lowres_idct_put_c	libavcodec/h264idct.c	/^void ff_h264_lowres_idct_put_c(uint8_t *dst, int stride, DCTELEM *block){$/;"	f
ff_h264_lps_range	libavcodec/cabac.c	/^const uint8_t ff_h264_lps_range[64][4]= {$/;"	v
ff_h264_lps_state	libavcodec/cabac.c	/^const uint8_t ff_h264_lps_state[64]= {$/;"	v
ff_h264_mps_state	libavcodec/cabac.c	/^const uint8_t ff_h264_mps_state[64]= {$/;"	v
ff_h264_norm_shift	libavcodec/cabac.c	/^const uint8_t ff_h264_norm_shift[256]= {$/;"	v
ff_idct_add_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void ff_idct_add_mlib(uint8_t *dest, int line_size, DCTELEM *data)$/;"	f	file:
ff_idct_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void ff_idct_mlib(DCTELEM *data)$/;"	f	file:
ff_idct_put_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void ff_idct_put_mlib(uint8_t *dest, int line_size, DCTELEM *data)$/;"	f	file:
ff_imdct_calc	libavcodec/mdct.c	/^void ff_imdct_calc(MDCTContext *s, FFTSample *output, $/;"	f
ff_init_block_index	libavcodec/mpegvideo.c	/^void ff_init_block_index(MpegEncContext *s){ \/\/FIXME maybe rename$/;"	f
ff_init_cabac_decoder	libavcodec/cabac.c	/^void ff_init_cabac_decoder(CABACContext *c, const uint8_t *buf, int buf_size){$/;"	f
ff_init_cabac_encoder	libavcodec/cabac.c	/^void ff_init_cabac_encoder(CABACContext *c, uint8_t *buf, int buf_size){$/;"	f
ff_init_cabac_states	libavcodec/cabac.c	/^void ff_init_cabac_states(CABACContext *c, uint8_t const (*lps_range)[4], $/;"	f
ff_init_me	libavcodec/motion_est.c	/^void ff_init_me(MpegEncContext *s){$/;"	f
ff_init_range_decoder	libavcodec/rangecoder.c	/^void ff_init_range_decoder(RangeCoder *c, const uint8_t *buf, int buf_size){$/;"	f
ff_init_range_encoder	libavcodec/rangecoder.c	/^void ff_init_range_encoder(RangeCoder *c, uint8_t *buf, int buf_size){$/;"	f
ff_init_scantable	libavcodec/mpegvideo.c	/^void ff_init_scantable(uint8_t *permutation, ScanTable *st, const uint8_t *src_scantable){$/;"	f
ff_interleaved_golomb_vlc_len	libavcodec/golomb.c	/^const uint8_t ff_interleaved_golomb_vlc_len[256]={$/;"	v
ff_interleaved_se_golomb_vlc_code	libavcodec/golomb.c	/^const int8_t ff_interleaved_se_golomb_vlc_code[256]={ $/;"	v
ff_interleaved_ue_golomb_vlc_code	libavcodec/golomb.c	/^const uint8_t ff_interleaved_ue_golomb_vlc_code[256]={ $/;"	v
ff_jpeg_fdct_islow	libavcodec/jfdctint.c	/^ff_jpeg_fdct_islow (DCTELEM * data)$/;"	f
ff_jref_idct1_add	libavcodec/dsputil.c	/^static void ff_jref_idct1_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_jref_idct1_put	libavcodec/dsputil.c	/^static void ff_jref_idct1_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_jref_idct2_add	libavcodec/dsputil.c	/^static void ff_jref_idct2_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_jref_idct2_put	libavcodec/dsputil.c	/^static void ff_jref_idct2_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_jref_idct4_add	libavcodec/dsputil.c	/^static void ff_jref_idct4_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_jref_idct4_put	libavcodec/dsputil.c	/^static void ff_jref_idct4_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_jref_idct_add	libavcodec/dsputil.c	/^static void ff_jref_idct_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_jref_idct_put	libavcodec/dsputil.c	/^static void ff_jref_idct_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_libmpeg2mmx2_idct_add	libavcodec/i386/dsputil_mmx.c	/^static void ff_libmpeg2mmx2_idct_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_libmpeg2mmx2_idct_put	libavcodec/i386/dsputil_mmx.c	/^static void ff_libmpeg2mmx2_idct_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_libmpeg2mmx_idct_add	libavcodec/i386/dsputil_mmx.c	/^static void ff_libmpeg2mmx_idct_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_libmpeg2mmx_idct_put	libavcodec/i386/dsputil_mmx.c	/^static void ff_libmpeg2mmx_idct_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_log2_tab	libavcodec/utils.c	/^const uint8_t ff_log2_tab[256]={$/;"	v
ff_mba_length	libavcodec/h263data.h	/^const uint8_t ff_mba_length[6]={$/;"	v
ff_mba_max	libavcodec/h263data.h	/^const uint16_t ff_mba_max[6]={$/;"	v
ff_mdct_calc	libavcodec/mdct.c	/^void ff_mdct_calc(MDCTContext *s, FFTSample *out, $/;"	f
ff_mdct_end	libavcodec/mdct.c	/^void ff_mdct_end(MDCTContext *s)$/;"	f
ff_mdct_init	libavcodec/mdct.c	/^int ff_mdct_init(MDCTContext *s, int nbits, int inverse)$/;"	f
ff_mjpeg_stuffing	libavcodec/mjpeg.c	/^void ff_mjpeg_stuffing(PutBitContext * pbc)$/;"	f
ff_mmi_idct	libavcodec/ps2/idct_mmi.c	/^void ff_mmi_idct(int16_t * block)$/;"	f
ff_mmi_idct_add	libavcodec/ps2/idct_mmi.c	/^void ff_mmi_idct_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
ff_mmi_idct_put	libavcodec/ps2/idct_mmi.c	/^void ff_mmi_idct_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
ff_mov_obj_type	libavformat/movenc.c	/^const CodecTag ff_mov_obj_type[] = {$/;"	v
ff_mpa_check_header	libavcodec/mpegaudio.h	/^static inline int ff_mpa_check_header(uint32_t header){$/;"	f
ff_mpa_synth_filter	libavcodec/mpegaudiodec.c	/^void ff_mpa_synth_filter(MPA_INT *synth_buf_ptr, int *synth_buf_offset,$/;"	f
ff_mpa_synth_init	libavcodec/mpegaudiodec.c	/^void ff_mpa_synth_init(MPA_INT *window)$/;"	f
ff_mpeg1_clean_buffers	libavcodec/mpeg12.c	/^void ff_mpeg1_clean_buffers(MpegEncContext *s){$/;"	f
ff_mpeg1_dc_scale_table	libavcodec/mpeg12data.h	/^uint8_t ff_mpeg1_dc_scale_table[128]={$/;"	v
ff_mpeg1_default_intra_matrix	libavcodec/mpeg12data.h	/^const int16_t ff_mpeg1_default_intra_matrix[64] = {$/;"	v
ff_mpeg1_default_non_intra_matrix	libavcodec/mpeg12data.h	/^const int16_t ff_mpeg1_default_non_intra_matrix[64] = {$/;"	v
ff_mpeg1_encode_init	libavcodec/mpeg12.c	/^void ff_mpeg1_encode_init(MpegEncContext *s)$/;"	f
ff_mpeg1_encode_slice_header	libavcodec/mpeg12.c	/^void ff_mpeg1_encode_slice_header(MpegEncContext *s){$/;"	f
ff_mpeg1_find_frame_end	libavcodec/mpeg12.c	/^int ff_mpeg1_find_frame_end(ParseContext *pc, const uint8_t *buf, int buf_size)$/;"	f
ff_mpeg4_c_dc_scale_table	libavcodec/mpeg4data.h	/^uint8_t ff_mpeg4_c_dc_scale_table[32]={$/;"	v
ff_mpeg4_clean_buffers	libavcodec/h263.c	/^void ff_mpeg4_clean_buffers(MpegEncContext *s)$/;"	f
ff_mpeg4_decode_mb	libavcodec/h263.c	/^int ff_mpeg4_decode_mb(MpegEncContext *s,$/;"	f
ff_mpeg4_decode_partitions	libavcodec/h263.c	/^int ff_mpeg4_decode_partitions(MpegEncContext *s)$/;"	f
ff_mpeg4_decode_picture_header	libavcodec/h263.c	/^int ff_mpeg4_decode_picture_header(MpegEncContext * s, GetBitContext *gb)$/;"	f
ff_mpeg4_default_intra_matrix	libavcodec/mpeg4data.h	/^const int16_t ff_mpeg4_default_intra_matrix[64] = {$/;"	v
ff_mpeg4_default_non_intra_matrix	libavcodec/mpeg4data.h	/^const int16_t ff_mpeg4_default_non_intra_matrix[64] = {$/;"	v
ff_mpeg4_encode_video_packet_header	libavcodec/h263.c	/^void ff_mpeg4_encode_video_packet_header(MpegEncContext *s)$/;"	f
ff_mpeg4_find_frame_end	libavcodec/h263dec.c	/^int ff_mpeg4_find_frame_end(ParseContext *pc, const uint8_t *buf, int buf_size){$/;"	f
ff_mpeg4_get_video_packet_prefix_length	libavcodec/h263.c	/^int ff_mpeg4_get_video_packet_prefix_length(MpegEncContext *s){$/;"	f
ff_mpeg4_init_partitions	libavcodec/h263.c	/^void ff_mpeg4_init_partitions(MpegEncContext *s)$/;"	f
ff_mpeg4_merge_partitions	libavcodec/h263.c	/^void ff_mpeg4_merge_partitions(MpegEncContext *s)$/;"	f
ff_mpeg4_pred_dc	libavcodec/h263.c	/^static inline int ff_mpeg4_pred_dc(MpegEncContext * s, int n, int level, int *dir_ptr, int encoding)$/;"	f	file:
ff_mpeg4_resync_prefix	libavcodec/mpeg4data.h	/^const uint16_t ff_mpeg4_resync_prefix[8]={$/;"	v
ff_mpeg4_set_direct_mv	libavcodec/h263.c	/^int ff_mpeg4_set_direct_mv(MpegEncContext *s, int mx, int my){$/;"	f
ff_mpeg4_stuffing	libavcodec/h263.c	/^void ff_mpeg4_stuffing(PutBitContext * pbc)$/;"	f
ff_mpeg4_y_dc_scale_table	libavcodec/mpeg4data.h	/^uint8_t ff_mpeg4_y_dc_scale_table[32]={$/;"	v
ff_mpeg_flush	libavcodec/mpegvideo.c	/^void ff_mpeg_flush(AVCodecContext *avctx){$/;"	f
ff_msmp4_dc_chroma_vlc	libavcodec/msmpeg4.c	/^VLC ff_msmp4_dc_chroma_vlc[2];$/;"	v
ff_msmp4_dc_luma_vlc	libavcodec/msmpeg4.c	/^VLC ff_msmp4_dc_luma_vlc[2];$/;"	v
ff_msmp4_mb_i_table	libavcodec/msmpeg4data.h	/^const uint16_t ff_msmp4_mb_i_table[64][2] = {$/;"	v
ff_msmp4_mb_i_vlc	libavcodec/msmpeg4.c	/^VLC ff_msmp4_mb_i_vlc;$/;"	v
ff_msmpeg4_decode_init	libavcodec/msmpeg4.c	/^int ff_msmpeg4_decode_init(MpegEncContext *s)$/;"	f
ff_msmpeg4_encode_init	libavcodec/msmpeg4.c	/^void ff_msmpeg4_encode_init(MpegEncContext *s)$/;"	f
ff_mspel_motion	libavcodec/wmv2.c	/^void ff_mspel_motion(MpegEncContext *s,$/;"	f
ff_parse_close	libavcodec/parser.c	/^void ff_parse_close(AVCodecParserContext *s)$/;"	f
ff_pre_estimate_p_frame_motion	libavcodec/motion_est.c	/^int ff_pre_estimate_p_frame_motion(MpegEncContext * s,$/;"	f
ff_print_debug_info	libavcodec/mpegvideo.c	/^void ff_print_debug_info(MpegEncContext *s, AVFrame *pict){$/;"	f
ff_put_pixels_clamped	libavcodec/armv4l/dsputil_arm.c	/^static void (*ff_put_pixels_clamped)(const DCTELEM *block, uint8_t *pixels, int line_size);$/;"	v	file:
ff_qt_default_palette_16	libavformat/qtpalette.h	/^unsigned char ff_qt_default_palette_16[16 * 4] = {$/;"	v
ff_qt_default_palette_256	libavformat/qtpalette.h	/^unsigned char ff_qt_default_palette_256[256 * 4] = {$/;"	v
ff_qt_default_palette_4	libavformat/qtpalette.h	/^unsigned char ff_qt_default_palette_4[4 * 4] = {$/;"	v
ff_rac_terminate	libavcodec/rangecoder.c	/^int ff_rac_terminate(RangeCoder *c){$/;"	f
ff_rate_control_init	libavcodec/ratecontrol.c	/^int ff_rate_control_init(MpegEncContext *s)$/;"	f
ff_rate_control_uninit	libavcodec/ratecontrol.c	/^void ff_rate_control_uninit(MpegEncContext *s)$/;"	f
ff_rate_estimate_qscale	libavcodec/ratecontrol.c	/^float ff_rate_estimate_qscale(MpegEncContext *s)$/;"	f
ff_reverse	libavcodec/utils.c	/^const uint8_t ff_reverse[256]={$/;"	v
ff_rtsp_callback	libavformat/rtsp.c	/^FFRTSPCallback *ff_rtsp_callback = NULL;$/;"	v
ff_se_golomb_vlc_code	libavcodec/golomb.c	/^const int8_t ff_se_golomb_vlc_code[512]={ $/;"	v
ff_set_cmp	libavcodec/dsputil.c	/^void ff_set_cmp(DSPContext* c, me_cmp_func *cmp, int type){$/;"	f
ff_set_mpeg4_time	libavcodec/h263.c	/^void ff_set_mpeg4_time(MpegEncContext * s, int picture_number){$/;"	f
ff_set_qscale	libavcodec/h263.c	/^void ff_set_qscale(MpegEncContext * s, int qscale)$/;"	f
ff_simple_idct_add_mmx	libavcodec/i386/simple_idct_mmx.c	/^void ff_simple_idct_add_mmx(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
ff_simple_idct_mmx	libavcodec/i386/simple_idct_mmx.c	/^void ff_simple_idct_mmx(int16_t *block)$/;"	f
ff_simple_idct_put_mmx	libavcodec/i386/simple_idct_mmx.c	/^void ff_simple_idct_put_mmx(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
ff_spatial_dwt	libavcodec/snow.c	/^void ff_spatial_dwt(DWTELEM *buffer, int width, int height, int stride, int type, int decomposition_count){$/;"	f
ff_spatial_idwt	libavcodec/snow.c	/^void ff_spatial_idwt(DWTELEM *buffer, int width, int height, int stride, int type, int decomposition_count){$/;"	f
ff_spatial_idwt_buffered_init	libavcodec/snow.c	/^void ff_spatial_idwt_buffered_init(dwt_compose_t *cs, slice_buffer * sb, int width, int height, int stride_line, int type, int decomposition_count){$/;"	f
ff_spatial_idwt_buffered_slice	libavcodec/snow.c	/^void ff_spatial_idwt_buffered_slice(dwt_compose_t *cs, slice_buffer * slice_buf, int width, int height, int stride_line, int type, int decomposition_count, int y){$/;"	f
ff_spatial_idwt_init	libavcodec/snow.c	/^void ff_spatial_idwt_init(dwt_compose_t *cs, DWTELEM *buffer, int width, int height, int stride, int type, int decomposition_count){$/;"	f
ff_spatial_idwt_slice	libavcodec/snow.c	/^void ff_spatial_idwt_slice(dwt_compose_t *cs, DWTELEM *buffer, int width, int height, int stride, int type, int decomposition_count, int y){$/;"	f
ff_sqrt	libavcodec/common.h	/^static inline int ff_sqrt(int a)$/;"	f
ff_sqrt_tab	libavcodec/utils.c	/^const uint8_t ff_sqrt_tab[128]={$/;"	v
ff_table0_dc_chroma	libavcodec/msmpeg4data.h	/^const uint32_t ff_table0_dc_chroma[120][2] = {$/;"	v
ff_table0_dc_lum	libavcodec/msmpeg4data.h	/^const uint32_t ff_table0_dc_lum[120][2] = {$/;"	v
ff_table1_dc_chroma	libavcodec/msmpeg4data.h	/^const uint32_t ff_table1_dc_chroma[120][2] = {$/;"	v
ff_table1_dc_lum	libavcodec/msmpeg4data.h	/^const uint32_t ff_table1_dc_lum[120][2] = {$/;"	v
ff_thread_func	libavcodec/beosthread.c	/^static int32 ff_thread_func(void *v){$/;"	f	file:
ff_ue_golomb_len	libavcodec/golomb.c	/^const uint8_t ff_ue_golomb_len[256]={ $/;"	v
ff_ue_golomb_vlc_code	libavcodec/golomb.c	/^const uint8_t ff_ue_golomb_vlc_code[512]={ $/;"	v
ff_update_block_index	libavcodec/mpegvideo.h	/^static inline void ff_update_block_index(MpegEncContext *s){$/;"	f
ff_update_duplicate_context	libavcodec/mpegvideo.c	/^void ff_update_duplicate_context(MpegEncContext *dst, MpegEncContext *src){$/;"	f
ff_vbv_update	libavcodec/ratecontrol.c	/^int ff_vbv_update(MpegEncContext *s, int frame_size){$/;"	f
ff_vmrglb	libavcodec/ppc/gcc_fixes.h	/^static inline vector signed char ff_vmrglb (vector signed char const A,$/;"	f
ff_vmrglh	libavcodec/ppc/gcc_fixes.h	/^static inline vector signed short ff_vmrglh (vector signed short const A,$/;"	f
ff_vmrglw	libavcodec/ppc/gcc_fixes.h	/^static inline vector signed int ff_vmrglw (vector signed int const A,$/;"	f
ff_vp3_dsp_init_mmx	libavcodec/i386/vp3dsp_mmx.c	/^void ff_vp3_dsp_init_mmx(void)$/;"	f
ff_vp3_idct_add_c	libavcodec/vp3dsp.c	/^void ff_vp3_idct_add_c(uint8_t *dest\/*align 8*\/, int line_size, DCTELEM *block\/*align 16*\/){$/;"	f
ff_vp3_idct_add_mmx	libavcodec/i386/dsputil_mmx.c	/^static void ff_vp3_idct_add_mmx(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_vp3_idct_add_sse2	libavcodec/i386/dsputil_mmx.c	/^static void ff_vp3_idct_add_sse2(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_vp3_idct_c	libavcodec/vp3dsp.c	/^void ff_vp3_idct_c(DCTELEM *block\/* align 16*\/){$/;"	f
ff_vp3_idct_mmx	libavcodec/i386/vp3dsp_mmx.c	/^void ff_vp3_idct_mmx(int16_t *output_data)$/;"	f
ff_vp3_idct_put_c	libavcodec/vp3dsp.c	/^void ff_vp3_idct_put_c(uint8_t *dest\/*align 8*\/, int line_size, DCTELEM *block\/*align 16*\/){$/;"	f
ff_vp3_idct_put_mmx	libavcodec/i386/dsputil_mmx.c	/^static void ff_vp3_idct_put_mmx(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_vp3_idct_put_sse2	libavcodec/i386/dsputil_mmx.c	/^static void ff_vp3_idct_put_sse2(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_vp3_idct_sse2	libavcodec/i386/vp3dsp_sse2.c	/^void ff_vp3_idct_sse2(int16_t *input_data)$/;"	f
ff_wav_init	libavformat/wav.c	/^int ff_wav_init(void)$/;"	f
ff_wmv2_add_mb	libavcodec/wmv2.c	/^void ff_wmv2_add_mb(MpegEncContext *s, DCTELEM block1[6][64], uint8_t *dest_y, uint8_t *dest_cb, uint8_t *dest_cr){$/;"	f
ff_wmv2_decode_picture_header	libavcodec/wmv2.c	/^int ff_wmv2_decode_picture_header(MpegEncContext * s)$/;"	f
ff_wmv2_decode_secondary_picture_header	libavcodec/wmv2.c	/^int ff_wmv2_decode_secondary_picture_header(MpegEncContext * s)$/;"	f
ff_wmv2_encode_mb	libavcodec/wmv2.c	/^void ff_wmv2_encode_mb(MpegEncContext * s, $/;"	f
ff_wmv2_encode_picture_header	libavcodec/wmv2.c	/^int ff_wmv2_encode_picture_header(MpegEncContext * s, int picture_number)$/;"	f
ff_write_pass1_stats	libavcodec/ratecontrol.c	/^void ff_write_pass1_stats(MpegEncContext *s){$/;"	f
ff_write_quant_matrix	libavcodec/mpegvideo.c	/^void ff_write_quant_matrix(PutBitContext *pb, int16_t *matrix){$/;"	f
ff_xvid_encode_close	libavcodec/xvidff.c	/^int ff_xvid_encode_close(AVCodecContext *avctx) {$/;"	f
ff_xvid_encode_frame	libavcodec/xvidff.c	/^int ff_xvid_encode_frame(AVCodecContext *avctx,$/;"	f
ff_xvid_encode_init	libavcodec/xvidff.c	/^int ff_xvid_encode_init(AVCodecContext *avctx)  {$/;"	f
ff_yuv420p_list	libavcodec/mpegvideo.c	/^enum PixelFormat ff_yuv420p_list[2]= {PIX_FMT_YUV420P, -1};$/;"	v
ff_zigzag248_direct	libavcodec/dsputil.c	/^const uint8_t ff_zigzag248_direct[64] = {$/;"	v
ff_zigzag_direct	libavcodec/dsputil.c	/^const uint8_t ff_zigzag_direct[64] = {$/;"	v
ffindex	libavformat/mov.c	/^    int ffindex; \/* the ffmpeg stream id *\/$/;"	m	struct:MOVStreamContext	file:
ffm_iformat	libavformat/ffm.c	/^static AVInputFormat ffm_iformat = {$/;"	v	file:
ffm_init	libavformat/ffm.c	/^int ffm_init(void)$/;"	f
ffm_is_avail_data	libavformat/ffm.c	/^static int ffm_is_avail_data(AVFormatContext *s, int size)$/;"	f	file:
ffm_nopts	libavformat/ffm.c	/^int ffm_nopts = 0;$/;"	v
ffm_oformat	libavformat/ffm.c	/^static AVOutputFormat ffm_oformat = {$/;"	v	file:
ffm_probe	libavformat/ffm.c	/^static int ffm_probe(AVProbeData *p)$/;"	f	file:
ffm_read_close	libavformat/ffm.c	/^static int ffm_read_close(AVFormatContext *s)$/;"	f	file:
ffm_read_data	libavformat/ffm.c	/^static int ffm_read_data(AVFormatContext *s,$/;"	f	file:
ffm_read_header	libavformat/ffm.c	/^static int ffm_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
ffm_read_packet	libavformat/ffm.c	/^static int ffm_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
ffm_read_write_index	libavformat/ffm.c	/^offset_t ffm_read_write_index(int fd)$/;"	f
ffm_seek	libavformat/ffm.c	/^static int ffm_seek(AVFormatContext *s, int stream_index, int64_t wanted_pts, int flags)$/;"	f	file:
ffm_seek1	libavformat/ffm.c	/^static void ffm_seek1(AVFormatContext *s, offset_t pos1)$/;"	f	file:
ffm_set_write_index	libavformat/ffm.c	/^void ffm_set_write_index(AVFormatContext *s, offset_t pos, offset_t file_size)$/;"	f
ffm_write_data	libavformat/ffm.c	/^static void ffm_write_data(AVFormatContext *s,$/;"	f	file:
ffm_write_header	libavformat/ffm.c	/^static int ffm_write_header(AVFormatContext *s)$/;"	f	file:
ffm_write_packet	libavformat/ffm.c	/^static int ffm_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
ffm_write_trailer	libavformat/ffm.c	/^static int ffm_write_trailer(AVFormatContext *s)$/;"	f	file:
ffm_write_write_index	libavformat/ffm.c	/^void ffm_write_write_index(int fd, offset_t pos)$/;"	f
ffmpeg_version	libavcodec/mpegvideo.h	/^    int ffmpeg_version;$/;"	m	struct:MpegEncContext
ffserver_daemon	ffserver.c	/^static int ffserver_daemon;$/;"	v	file:
ffserver_debug	ffserver.c	/^static int ffserver_debug;$/;"	v	file:
fft	libavcodec/ac3enc.c	/^static void fft(IComplex *z, int ln)$/;"	f	file:
fft	libavcodec/dsputil.h	/^    FFTContext fft;$/;"	m	struct:MDCTContext
fft_calc	libavcodec/dsputil.h	/^    void (*fft_calc)(struct FFTContext *s, FFTComplex *z);$/;"	m	struct:FFTContext
fft_init	libavcodec/ac3enc.c	/^static void fft_init(int ln)$/;"	f	file:
fft_ref	libavcodec/fft-test.c	/^void fft_ref(FFTComplex *tabr, FFTComplex *tab, int nbits)$/;"	f
fft_ref_init	libavcodec/fft-test.c	/^void fft_ref_init(int nbits, int inverse)$/;"	f
fft_rev	libavcodec/ac3tab.h	/^static int16_t fft_rev[512];$/;"	v
fftorder	libavcodec/liba52/imdct.c	/^static uint8_t fftorder[] = {$/;"	v	file:
ffv1_decoder	libavcodec/ffv1.c	/^AVCodec ffv1_decoder = {$/;"	v
ffv1_encoder	libavcodec/ffv1.c	/^AVCodec ffv1_encoder = {$/;"	v
ffvhuff_decoder	libavcodec/huffyuv.c	/^AVCodec ffvhuff_decoder = {$/;"	v
ffvhuff_encoder	libavcodec/huffyuv.c	/^AVCodec ffvhuff_encoder = {$/;"	v
fgaincod	libavcodec/ac3enc.c	/^    int fgaincod[AC3_MAX_CHANNELS];$/;"	m	struct:AC3EncodeContext	file:
fgaintab	libavcodec/ac3tab.h	/^static const uint16_t fgaintab[8]= {$/;"	v
fgcolor	vhook/drawtext.c	/^  unsigned char fgcolor[3]; \/* YUV *\/$/;"	m	file:
field_poc	libavcodec/mpegvideo.h	/^    int field_poc[2];           \/\/\/< h264 top\/bottom POC$/;"	m	struct:Picture
field_ref_list	libavcodec/h264.c	/^    Picture field_ref_list[2][32]; \/\/FIXME size?$/;"	m	struct:H264Context	file:
field_scan	libavcodec/h264data.h	/^static const uint8_t field_scan[16]={$/;"	v
field_select	libavcodec/mpegvideo.h	/^    int field_select[2][2];$/;"	m	struct:MpegEncContext
fifo	ffmpeg.c	/^    FifoBuffer fifo;     \/* for compression: one audio fifo per codec *\/$/;"	m	struct:AVOutputStream	file:
fifo	libavformat/mpeg.c	/^    FifoBuffer fifo;$/;"	m	file:
fifo_free	libavformat/utils.c	/^void fifo_free(FifoBuffer *f)$/;"	f
fifo_iframe_ptr	libavformat/mpeg.c	/^    uint8_t *fifo_iframe_ptr;$/;"	m	file:
fifo_init	libavformat/utils.c	/^int fifo_init(FifoBuffer *f, int size)$/;"	f
fifo_read	libavformat/utils.c	/^int fifo_read(FifoBuffer *f, uint8_t *buf, int buf_size, uint8_t **rptr_ptr)$/;"	f
fifo_realloc	libavformat/utils.c	/^void fifo_realloc(FifoBuffer *f, unsigned int new_size){$/;"	f
fifo_size	libavformat/utils.c	/^int fifo_size(FifoBuffer *f, uint8_t *rptr)$/;"	f
fifo_write	libavformat/utils.c	/^void fifo_write(FifoBuffer *f, uint8_t *buf, int size, uint8_t **wptr_ptr)$/;"	f
file	vhook/drawtext.c	/^  unsigned char *file;$/;"	m	file:
file	vhook/imlib2.c	/^    char *file;$/;"	m	file:
file_close	libavformat/file.c	/^static int file_close(URLContext *h)$/;"	f	file:
file_header	libavformat/asf.h	/^static const GUID file_header = {$/;"	v
file_iformat	ffmpeg.c	/^static AVInputFormat *file_iformat;$/;"	v	file:
file_iformat	ffplay.c	/^static AVInputFormat *file_iformat;$/;"	v	file:
file_iformat	vhook/watermark.c	/^    AVInputFormat  *file_iformat;$/;"	m	file:
file_index	ffmpeg.c	/^    int file_index;          \/* file index *\/$/;"	m	struct:AVOutputStream	file:
file_index	ffmpeg.c	/^    int file_index;$/;"	m	struct:AVInputStream	file:
file_index	ffmpeg.c	/^    int file_index;$/;"	m	struct:AVStreamMap	file:
file_limit	vhook/fish.c	/^    int file_limit;$/;"	m	file:
file_oformat	ffmpeg.c	/^static AVOutputFormat *file_oformat;$/;"	v	file:
file_open	libavformat/file.c	/^static int file_open(URLContext *h, const char *filename, int flags)$/;"	f	file:
file_overwrite	ffmpeg.c	/^static int file_overwrite = 0;$/;"	v	file:
file_protocol	libavformat/file.c	/^URLProtocol file_protocol = {$/;"	v
file_read	libavformat/file.c	/^static int file_read(URLContext *h, unsigned char *buf, int size)$/;"	f	file:
file_seek	libavformat/file.c	/^static offset_t file_seek(URLContext *h, offset_t pos, int whence)$/;"	f	file:
file_size	libavformat/asf.h	/^    uint64_t file_size;		\/\/ in bytes$/;"	m
file_size	libavformat/avformat.h	/^    int64_t file_size;$/;"	m	struct:AVFormatContext
file_size	libavformat/ffm.c	/^    offset_t write_index, file_size;$/;"	m	struct:FFMContext	file:
file_time	libavformat/gif.c	/^    int64_t time, file_time;$/;"	m	file:
file_write	libavformat/file.c	/^static int file_write(URLContext *h, unsigned char *buf, int size)$/;"	f	file:
filename	ffplay.c	/^    char filename[1024];$/;"	m	struct:VideoState	file:
filename	ffserver.c	/^    char filename[1024];     \/* stream filename *\/$/;"	m	struct:FFStream	file:
filename	libavformat/avformat.h	/^    char filename[1024]; \/* input or output filename *\/$/;"	m	struct:AVFormatContext
filename	libavformat/avformat.h	/^    const char *filename;$/;"	m	struct:AVProbeData
filename	libavformat/avio.h	/^    char filename[1]; \/* specified filename *\/$/;"	m	struct:URLContext
filename	vhook/watermark.c	/^    char            filename[2000];$/;"	m	file:
filename_number_test	libavformat/utils.c	/^int filename_number_test(const char *filename)$/;"	f
fill_all_stream_timings	libavformat/utils.c	/^static void fill_all_stream_timings(AVFormatContext *ic)$/;"	f	file:
fill_buffer	libavformat/aviobuf.c	/^static void fill_buffer(ByteIOContext *s)$/;"	f	file:
fill_caches	libavcodec/h264.c	/^static inline void fill_caches(H264Context *h, int mb_type, int for_deblock){$/;"	f	file:
fill_default_ref_list	libavcodec/h264.c	/^static int fill_default_ref_list(H264Context *h){$/;"	f	file:
fill_pad_region	ffmpeg.c	/^static void fill_pad_region(AVPicture* img, int height, int width,$/;"	f	file:
fill_random	libavcodec/motion_test.c	/^void fill_random(uint8_t *tab, int size)$/;"	f
fill_rectangle	ffplay.c	/^static inline void fill_rectangle(SDL_Surface *screen, $/;"	f	file:
fill_rectangle	libavcodec/h264.c	/^static inline void fill_rectangle(void *vp, int w, int h, int stride, uint32_t val, int size){ \/\/FIXME ensure this IS inlined$/;"	f	file:
fill_yuv_image	output_example.c	/^void fill_yuv_image(AVFrame *pict, int frame_index, int width, int height)$/;"	f
filled_mv_blocks_num	xvmc_render.h	/^  int filled_mv_blocks_num;\/\/processed mv block in this slice,change by decoder$/;"	m
film_iformat	libavformat/segafilm.c	/^static AVInputFormat film_iformat = {$/;"	v	file:
film_init	libavformat/segafilm.c	/^int film_init(void)$/;"	f
film_probe	libavformat/segafilm.c	/^static int film_probe(AVProbeData *p)$/;"	f	file:
film_read_close	libavformat/segafilm.c	/^static int film_read_close(AVFormatContext *s)$/;"	f	file:
film_read_header	libavformat/segafilm.c	/^static int film_read_header(AVFormatContext *s,$/;"	f	file:
film_read_packet	libavformat/segafilm.c	/^static int film_read_packet(AVFormatContext *s,$/;"	f	file:
film_sample_t	libavformat/segafilm.c	/^} film_sample_t;$/;"	t	file:
filter	libavcodec/mpegaudio.c	/^static void filter(MpegAudioContext *s, int ch, short *samples, int incr)$/;"	f	file:
filter181	libavcodec/error_resilience.c	/^static void filter181(int16_t *data, int width, int height, int stride){$/;"	f	file:
filter_bank	libavcodec/mpegaudiotab.h	/^static int16_t filter_bank[512];$/;"	v
filter_bank	libavcodec/resample2.c	/^    FELEM *filter_bank;$/;"	m	struct:AVResampleContext	file:
filter_channels	libavcodec/resample.c	/^    int input_channels, output_channels, filter_channels;$/;"	m	struct:ReSampleContext	file:
filter_length	libavcodec/resample2.c	/^    int filter_length;$/;"	m	struct:AVResampleContext	file:
filter_limit_values	libavcodec/vp3.c	/^    uint32_t filter_limit_values[64];$/;"	m	struct:Vp3DecodeContext	file:
filter_mb	libavcodec/h264.c	/^static void filter_mb( H264Context *h, int mb_x, int mb_y, uint8_t *img_y, uint8_t *img_cb, uint8_t *img_cr, unsigned int linesize, unsigned int uvlinesize) {$/;"	f	file:
filter_mb_edgech	libavcodec/h264.c	/^static void filter_mb_edgech( H264Context *h, uint8_t *pix, int stride, int bS[4], int qp ) {$/;"	f	file:
filter_mb_edgecv	libavcodec/h264.c	/^static void filter_mb_edgecv( H264Context *h, uint8_t *pix, int stride, int bS[4], int qp ) {$/;"	f	file:
filter_mb_edgeh	libavcodec/h264.c	/^static void filter_mb_edgeh( H264Context *h, uint8_t *pix, int stride, int bS[4], int qp ) {$/;"	f	file:
filter_mb_edgev	libavcodec/h264.c	/^static void filter_mb_edgev( H264Context *h, uint8_t *pix, int stride, int bS[4], int qp ) {$/;"	f	file:
filter_mb_mbaff_edgecv	libavcodec/h264.c	/^static void filter_mb_mbaff_edgecv( H264Context *h, uint8_t *pix, int stride, int bS[4], int qp[2] ) {$/;"	f	file:
filter_mb_mbaff_edgev	libavcodec/h264.c	/^static void filter_mb_mbaff_edgev( H264Context *h, uint8_t *pix, int stride, int bS[8], int qp[2] ) {$/;"	f	file:
filter_type	libavcodec/png.c	/^    int filter_type;$/;"	m	struct:PNGContext	file:
filter_type	libavformat/png.c	/^    int filter_type;$/;"	m	struct:PNGDecodeState	file:
filters	libavcodec/libpostproc/postprocess.c	/^static struct PPFilter filters[]=$/;"	v	file:
final	libavcodec/ra144.c	/^static void final(Real144_internal *glob, short *i1, short *i2, void *out, int *statbuf, int len)$/;"	f	file:
findPixelFormat	libavcodec/raw.c	/^static int findPixelFormat(unsigned int fourcc)$/;"	f	file:
find_any_startcode	libavformat/nut.c	/^static uint64_t find_any_startcode(ByteIOContext *bc, int64_t pos){$/;"	f	file:
find_best_tables	libavcodec/msmpeg4.c	/^static void find_best_tables(MpegEncContext * s)$/;"	f	file:
find_frame_end	libavcodec/h264.c	/^static int find_frame_end(H264Context *h, const uint8_t *buf, int buf_size){$/;"	f	file:
find_frame_end	libavcodec/mjpeg.c	/^static int find_frame_end(ParseContext *pc, const uint8_t *buf, int buf_size){$/;"	f	file:
find_frame_rate_index	libavcodec/mpeg12.c	/^static int find_frame_rate_index(MpegEncContext *s){$/;"	f	file:
find_image_range	libavformat/img.c	/^static int find_image_range(int *pfirst_index, int *plast_index, $/;"	f	file:
find_image_range	libavformat/img2.c	/^static int find_image_range(int *pfirst_index, int *plast_index, $/;"	f	file:
find_info_tag	libavformat/utils.c	/^int find_info_tag(char *arg, int arg_size, const char *tag1, const char *info)$/;"	f
find_marker	libavcodec/mjpeg.c	/^static int find_marker(uint8_t **pbuf_ptr, uint8_t *buf_end)$/;"	f	file:
find_next_start_code	libavformat/mpeg.c	/^static int find_next_start_code(ByteIOContext *pb, int *size_ptr, $/;"	f	file:
find_rtp_session	ffserver.c	/^static HTTPContext *find_rtp_session(const char *session_id)$/;"	f	file:
find_rtp_session_with_url	ffserver.c	/^static HTTPContext *find_rtp_session_with_url(const char *url, $/;"	f	file:
find_start_code	libavcodec/mpeg12.c	/^static int find_start_code(const uint8_t **pbuf_ptr, const uint8_t *buf_end)$/;"	f	file:
find_start_code	libavcodec/parser.c	/^static int find_start_code(const uint8_t **pbuf_ptr, const uint8_t *buf_end)$/;"	f	file:
find_startcode	libavformat/nut.c	/^static int64_t find_startcode(ByteIOContext *bc, uint64_t code, int64_t pos){$/;"	f	file:
find_stream_in_feed	ffserver.c	/^static int find_stream_in_feed(FFStream *feed, AVCodecContext *codec, int bit_rate)$/;"	f	file:
find_tag	libavformat/wav.c	/^static int find_tag(ByteIOContext *pb, uint32_t tag1)$/;"	f	file:
find_transport	ffserver.c	/^static RTSPTransportField *find_transport(RTSPHeader *h, enum RTSPProtocol protocol)$/;"	f	file:
finterpflag	libavcodec/vc9.c	/^    int finterpflag;      \/\/\/< INTERPFRM present$/;"	m	struct:VC9Context	file:
first	ffserver.c	/^    struct in_addr first;$/;"	m	struct:IPAddressACL	file:
first	libavformat/mov.c	/^    long first;$/;"	m	struct:MOV_sample_to_chunk_tbl	file:
first_avcodec	libavcodec/utils.c	/^AVCodec *first_avcodec = NULL;$/;"	v
first_clear_frame	libavformat/dv1394.h	/^	unsigned int first_clear_frame;$/;"	m	struct:dv1394_status
first_coded_c_fragment	libavcodec/vp3.c	/^    int first_coded_c_fragment;$/;"	m	struct:Vp3DecodeContext	file:
first_coded_y_fragment	libavcodec/vp3.c	/^    int first_coded_y_fragment;$/;"	m	struct:Vp3DecodeContext	file:
first_feed	ffserver.c	/^FFStream *first_feed;   \/* contains only feeds *\/$/;"	v
first_field	libavcodec/mpegvideo.h	/^    int first_field;         \/\/\/< is 1 for the first field of a field picture 0 otherwise$/;"	m	struct:MpegEncContext
first_frame	libavcodec/roqvideo.c	/^    int first_frame;$/;"	m	struct:RoqContext	file:
first_frame	libavcodec/vorbis.h	/^    uint_fast8_t first_frame;$/;"	m
first_hook	libavformat/framehook.c	/^static FrameHookEntry *first_hook;$/;"	v	file:
first_http_ctx	ffserver.c	/^HTTPContext *first_http_ctx;$/;"	v
first_iformat	libavformat/utils.c	/^AVInputFormat *first_iformat = NULL;$/;"	v
first_image_format	libavformat/utils.c	/^AVImageFormat *first_image_format = NULL;$/;"	v
first_oformat	libavformat/utils.c	/^AVOutputFormat *first_oformat = NULL;$/;"	v
first_packet	libavformat/ffm.c	/^    int first_packet; \/* true if first packet, needed to set the discontinuity tag *\/$/;"	m	struct:FFMContext	file:
first_packet	libavformat/rtp.c	/^    int first_packet;$/;"	m	struct:RTPDemuxContext	file:
first_picture	libavcodec/mjpeg.c	/^    int first_picture;    \/* true if decoding first picture *\/$/;"	m	struct:MJpegDecodeContext	file:
first_picture	libavcodec/parser.c	/^    int first_picture;$/;"	m	struct:ParseContext1	file:
first_pixel	libavcodec/vp3.c	/^    int first_pixel;$/;"	m	struct:Vp3Fragment	file:
first_pkt	ffplay.c	/^    AVPacketList *first_pkt, *last_pkt;$/;"	m	struct:PacketQueue	file:
first_protocol	libavformat/avio.c	/^URLProtocol *first_protocol = NULL;$/;"	v
first_pts	ffserver.c	/^    int64_t first_pts;            \/* initial pts value *\/$/;"	m	struct:HTTPContext	file:
first_rtcp_ntp_time	libavformat/rtp.c	/^    int64_t first_rtcp_ntp_time;$/;"	m	struct:RTPDemuxContext	file:
first_slice	libavcodec/mpegvideo.h	/^    int first_slice;$/;"	m	struct:MpegEncContext
first_slice_line	libavcodec/mpegvideo.h	/^    int first_slice_line;  \/\/\/< used in mpeg4 too to handle resync markers $/;"	m	struct:MpegEncContext
first_stream	ffserver.c	/^FFStream *first_stream; \/* contains all streams, including feeds *\/$/;"	v
fix	libavcodec/lcl.c	/^static inline unsigned char fix (int pix14)$/;"	f	file:
fix15	libavcodec/ac3enc.c	/^static inline int16_t fix15(float a)$/;"	f	file:
fix_bitshift	libavcodec/shorten.c	/^static void fix_bitshift(ShortenContext *s, int32_t *buffer)$/;"	f	file:
fixed_frame_rate_flag	libavcodec/h264.c	/^    int fixed_frame_rate_flag;$/;"	m	struct:SPS	file:
fixed_motion_vector_table	libavcodec/vp3data.h	/^static const int8_t fixed_motion_vector_table[64] = {$/;"	v
fixed_qscale	libavcodec/mpegvideo.h	/^    int fixed_qscale; \/\/\/< fixed qscale if non zero $/;"	m	struct:MpegEncContext
fixed_smr	libavcodec/mpegaudiotab.h	/^static const float fixed_smr[SBLIMIT] =  {$/;"	v
fixup_vorbis_headers	libavformat/oggparsevorbis.c	/^fixup_vorbis_headers(AVFormatContext * as, oggvorbis_private_t *priv,$/;"	f	file:
flac_codec	libavformat/oggparseflac.c	/^ogg_codec_t flac_codec = {$/;"	v
flac_decode_close	libavcodec/flac.c	/^static int flac_decode_close(AVCodecContext *avctx)$/;"	f	file:
flac_decode_frame	libavcodec/flac.c	/^static int flac_decode_frame(AVCodecContext *avctx,$/;"	f	file:
flac_decode_init	libavcodec/flac.c	/^static int flac_decode_init(AVCodecContext * avctx)$/;"	f	file:
flac_decoder	libavcodec/flac.c	/^AVCodec flac_decoder = {$/;"	v
flac_flush	libavcodec/flac.c	/^static void flac_flush(AVCodecContext *avctx){$/;"	f	file:
flac_header	libavformat/oggparseflac.c	/^flac_header (AVFormatContext * s, int idx)$/;"	f	file:
flag3	libavcodec/wmv2.c	/^    int flag3;$/;"	m	struct:Wmv2Context	file:
flag63	libavcodec/wmv2.c	/^    int flag63;$/;"	m	struct:Wmv2Context	file:
flags	cmdutils.h	/^    int flags;$/;"	m
flags	libavcodec/a52dec.c	/^    int flags;$/;"	m	struct:AC3DecodeState	file:
flags	libavcodec/ac3dec.c	/^    int flags;$/;"	m	struct:AC3DecodeState	file:
flags	libavcodec/avcodec.h	/^    int flags;$/;"	m	struct:AVCodecContext
flags	libavcodec/faad.c	/^    int flags;$/;"	m	file:
flags	libavcodec/ffv1.c	/^    int flags;$/;"	m	struct:FFV1Context	file:
flags	libavcodec/huffyuv.c	/^    int flags;$/;"	m	struct:HYuvContext	file:
flags	libavcodec/lcl.c	/^    int flags;$/;"	m	struct:LclContext	file:
flags	libavcodec/mpegvideo.h	/^    int flags;        \/\/\/< AVCodecContext.flags (HQ, MV4, ...) $/;"	m	struct:MpegEncContext
flags	libavcodec/mpegvideo.h	/^    int flags;$/;"	m	struct:MotionEstContext
flags	libavcodec/parser.c	/^    int flags;$/;"	m	struct:AC3ParseContext	file:
flags	libavcodec/truemotion1.c	/^    int flags;$/;"	m	struct:TrueMotion1Context	file:
flags	libavcodec/truemotion1.c	/^    uint8_t flags;$/;"	m	struct:frame_header	file:
flags	libavformat/asf.h	/^    uint32_t flags;		\/\/ 0x01 - broadcast$/;"	m
flags	libavformat/avformat.h	/^    int   flags;$/;"	m	struct:AVPacket
flags	libavformat/avformat.h	/^    int flags;$/;"	m	struct:AVImageFormat
flags	libavformat/avformat.h	/^    int flags;$/;"	m	struct:AVIndexEntry
flags	libavformat/avformat.h	/^    int flags;$/;"	m	struct:AVInputFormat
flags	libavformat/avformat.h	/^    int flags;$/;"	m	struct:AVOutputFormat
flags	libavformat/avienc.c	/^    unsigned int flags, pos, len;$/;"	m	struct:AVIIentry	file:
flags	libavformat/avio.h	/^    int flags;        $/;"	m	struct:URLContext
flags	libavformat/matroska.c	/^    MatroskaTrackFlags flags;$/;"	m	struct:Track	file:
flags	libavformat/mov.c	/^    int flags;$/;"	m	file:
flags	libavformat/mov.c	/^    uint32_t flags; \/\/ 24bit$/;"	m	file:
flags	libavformat/movenc.c	/^    unsigned int flags, pos, size;$/;"	m	struct:MOVIentry	file:
flags	libavformat/mpeg.c	/^    int flags;$/;"	m	struct:PacketDesc	file:
flags	libavformat/nut.c	/^    uint8_t flags;$/;"	m	file:
flags	libavformat/ogg2.h	/^    int flags;$/;"	m	struct:ogg_stream
flags	xvmc_render.h	/^  unsigned int flags;\/\/XVMC_SECOND_FIELD - 1'st or 2'd field in the sequence$/;"	m
flags2	libavcodec/avcodec.h	/^    int flags2;$/;"	m	struct:AVCodecContext
flags2	libavcodec/mpegvideo.h	/^    int flags2;       \/\/\/< AVCodecContext.flags2$/;"	m	struct:MpegEncContext
flatnessThreshold	libavcodec/libpostproc/postprocess_internal.h	/^	int flatnessThreshold;$/;"	m	struct:PPMode
fli_type	libavcodec/flicvideo.c	/^    int fli_type;  \/* either 0xAF11 or 0xAF12, affects palette resolution *\/$/;"	m	struct:FlicDecodeContext	file:
flic_decode_end	libavcodec/flicvideo.c	/^static int flic_decode_end(AVCodecContext *avctx)$/;"	f	file:
flic_decode_frame	libavcodec/flicvideo.c	/^static int flic_decode_frame(AVCodecContext *avctx,$/;"	f	file:
flic_decode_init	libavcodec/flicvideo.c	/^static int flic_decode_init(AVCodecContext *avctx)$/;"	f	file:
flic_decoder	libavcodec/flicvideo.c	/^AVCodec flic_decoder = {$/;"	v
flic_iformat	libavformat/flic.c	/^static AVInputFormat flic_iformat = {$/;"	v	file:
flic_init	libavformat/flic.c	/^int flic_init(void)$/;"	f
flic_probe	libavformat/flic.c	/^static int flic_probe(AVProbeData *p)$/;"	f	file:
flic_read_close	libavformat/flic.c	/^static int flic_read_close(AVFormatContext *s)$/;"	f	file:
flic_read_header	libavformat/flic.c	/^static int flic_read_header(AVFormatContext *s,$/;"	f	file:
flic_read_packet	libavformat/flic.c	/^static int flic_read_packet(AVFormatContext *s,$/;"	f	file:
flip	libavcodec/raw.c	/^static void flip(AVCodecContext *avctx, AVPicture * picture){$/;"	f	file:
flip_left	libavformat/audio.c	/^    int flip_left : 1;$/;"	m	file:
flipflop_rounding	libavcodec/mpegvideo.h	/^    int flipflop_rounding;$/;"	m	struct:MpegEncContext
flipped_image	libavcodec/vp3.c	/^    int flipped_image;$/;"	m	struct:Vp3DecodeContext	file:
float_arg	cmdutils.h	/^        float *float_arg;$/;"	m
float_to_int	libavcodec/a52dec.c	/^static inline void float_to_int (float * _f, int16_t * s16, int nchannels)$/;"	f	file:
float_to_int	libavcodec/ac3dec.c	/^static inline void float_to_int (float * _f, int16_t * s16, int nchannels)$/;"	f	file:
floor	libavcodec/ac3.h	/^    int sgain, sdecay, fdecay, dbknee, floor;$/;"	m	struct:AC3BitAllocParameters
floor1_inverse_db_table	libavcodec/vorbis.h	/^static const float floor1_inverse_db_table[256]={$/;"	v
floor_count	libavcodec/vorbis.h	/^    uint_fast8_t floor_count;$/;"	m
floor_type	libavcodec/vorbis.h	/^    uint_fast8_t floor_type;$/;"	m
floorcod	libavcodec/ac3enc.c	/^    int sgaincod, sdecaycod, fdecaycod, dbkneecod, floorcod; $/;"	m	struct:AC3EncodeContext	file:
floorf	libavcodec/common.h	/^static inline float floorf(float f) { $/;"	f
floors	libavcodec/vorbis.h	/^    vorbis_floor *floors;$/;"	m
floortab	libavcodec/ac3tab.h	/^static const uint16_t floortab[8]= { $/;"	v
flush	libavcodec/avcodec.h	/^    void (*flush)(AVCodecContext *);$/;"	m	struct:AVCodec
flush_buffer	libavformat/aviobuf.c	/^static void flush_buffer(ByteIOContext *s)$/;"	f	file:
flush_dpb	libavcodec/h264.c	/^static void flush_dpb(AVCodecContext *avctx){$/;"	f	file:
flush_packet	libavformat/asf-enc.c	/^static void flush_packet(AVFormatContext *s)$/;"	f	file:
flush_packet	libavformat/ffm.c	/^static void flush_packet(AVFormatContext *s)$/;"	f	file:
flush_packet	libavformat/mpeg.c	/^static int flush_packet(AVFormatContext *ctx, int stream_index, $/;"	f	file:
flush_packet_queue	libavformat/utils.c	/^static void flush_packet_queue(AVFormatContext *s)$/;"	f	file:
flush_put_bits	libavcodec/bitstream.h	/^static inline void flush_put_bits(PutBitContext *s)$/;"	f
flv_decoder	libavcodec/h263dec.c	/^AVCodec flv_decoder = {$/;"	v
flv_encoder	libavcodec/mpegvideo.c	/^AVCodec flv_encoder = {$/;"	v
flv_h263_decode_picture_header	libavcodec/h263.c	/^int flv_h263_decode_picture_header(MpegEncContext *s)$/;"	f
flv_iformat	libavformat/flvdec.c	/^AVInputFormat flv_iformat = {$/;"	v
flv_oformat	libavformat/flvenc.c	/^static AVOutputFormat flv_oformat = {$/;"	v	file:
flv_probe	libavformat/flvdec.c	/^static int flv_probe(AVProbeData *p)$/;"	f	file:
flv_read_close	libavformat/flvdec.c	/^static int flv_read_close(AVFormatContext *s)$/;"	f	file:
flv_read_header	libavformat/flvdec.c	/^static int flv_read_header(AVFormatContext *s,$/;"	f	file:
flv_read_packet	libavformat/flvdec.c	/^static int flv_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
flv_write_header	libavformat/flvenc.c	/^static int flv_write_header(AVFormatContext *s)$/;"	f	file:
flv_write_packet	libavformat/flvenc.c	/^static int flv_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
flv_write_trailer	libavformat/flvenc.c	/^static int flv_write_trailer(AVFormatContext *s)$/;"	f	file:
flvdec_init	libavformat/flvdec.c	/^int flvdec_init(void)$/;"	f
flvenc_init	libavformat/flvenc.c	/^int flvenc_init(void)$/;"	f
fmt	ffserver.c	/^    AVOutputFormat *fmt;$/;"	m	struct:FFStream	file:
fmt_bytecount	ffserver.c	/^static void fmt_bytecount(ByteIOContext *pb, int64_t count)$/;"	f	file:
fmt_ctx	ffserver.c	/^    AVFormatContext fmt_ctx; \/* instance of FFStream for one user *\/$/;"	m	struct:HTTPContext	file:
fmt_in	ffserver.c	/^    AVFormatContext *fmt_in;$/;"	m	struct:HTTPContext	file:
fn	vhook/imlib2.c	/^    Imlib_Font fn;$/;"	m	file:
fold	libavcodec/ffv1.c	/^static always_inline int fold(int diff, int bits){$/;"	f	file:
forcedQPTable	libavcodec/libpostproc/postprocess_internal.h	/^	QP_STORE_T *forcedQPTable;$/;"	m	struct:PPContext
forcedQuant	libavcodec/libpostproc/postprocess_internal.h	/^	int forcedQuant; 		\/\/\/< quantizer if FORCE_QUANT is used$/;"	m	struct:PPMode
format	libavformat/dv1394.c	/^    int format;$/;"	m	struct:dv1394_data	file:
format	libavformat/dv1394.h	/^	enum pal_or_ntsc format;$/;"	m	struct:dv1394_init
format_to_name	libavformat/utils.c	/^static const char* format_to_name(void* ptr)$/;"	f	file:
found_mdat	libavformat/mov.c	/^    int found_mdat; \/* we suppose we have enough data to read the file *\/$/;"	m	struct:MOVContext	file:
found_moov	libavformat/mov.c	/^    int found_moov; \/* when both 'moov' and 'mdat' sections has been found *\/$/;"	m	struct:MOVContext	file:
fourcc	libavcodec/raw.c	/^    unsigned int fourcc;$/;"	m	struct:PixleFormatTag	file:
fourcc	libavformat/matroska.c	/^    uint32_t fourcc;$/;"	m	struct:MatroskaVideoTrack	file:
fourxm_decoder	libavcodec/4xm.c	/^AVCodec fourxm_decoder = {$/;"	v
fourxm_iformat	libavformat/4xm.c	/^static AVInputFormat fourxm_iformat = {$/;"	v	file:
fourxm_init	libavformat/4xm.c	/^int fourxm_init(void)$/;"	f
fourxm_probe	libavformat/4xm.c	/^static int fourxm_probe(AVProbeData *p)$/;"	f	file:
fourxm_read_close	libavformat/4xm.c	/^static int fourxm_read_close(AVFormatContext *s)$/;"	f	file:
fourxm_read_header	libavformat/4xm.c	/^static int fourxm_read_header(AVFormatContext *s,$/;"	f	file:
fourxm_read_packet	libavformat/4xm.c	/^static int fourxm_read_packet(AVFormatContext *s,$/;"	f	file:
fp	libavcodec/alpha/regdef.h	23;"	d
fprintf	libavcodec/common.h	534;"	d
fprintf	libavcodec/utils.c	972;"	d	file:
fprintf	libavcodec/utils.c	976;"	d	file:
fps	libavformat/4xm.c	/^    float fps;$/;"	m	struct:FourxmDemuxContext	file:
fps	libavformat/dc1394.c	/^    int fps;$/;"	m	struct:dc1394_data	file:
fps	libavformat/electronicarts.c	/^    float fps;$/;"	m	struct:EaDemuxContext	file:
fps	libavformat/ipmovie.c	/^    float fps;$/;"	m	struct:IPMVEContext	file:
fps_dr	libavcodec/vc9.c	/^  fps_dr[2] = { 1000, 1001 };$/;"	v	file:
fps_nr	libavcodec/vc9.c	/^static const int fps_nr[5] = { 24, 25, 30, 50, 60 },$/;"	v	file:
fr0	libavcodec/sh4/idct_sh4.c	111;"	d	file:
fr1	libavcodec/sh4/idct_sh4.c	112;"	d	file:
fr2	libavcodec/sh4/idct_sh4.c	113;"	d	file:
fr3	libavcodec/sh4/idct_sh4.c	114;"	d	file:
frac	libavcodec/resample2.c	/^    int frac;$/;"	m	struct:AVResampleContext	file:
frag_offset	libavformat/asf.h	/^    int frag_offset;$/;"	m
fragment_count	libavcodec/vp3.c	/^    int fragment_count;$/;"	m	struct:Vp3DecodeContext	file:
fragment_height	libavcodec/vp3.c	/^    int fragment_height;$/;"	m	struct:Vp3DecodeContext	file:
fragment_run_length_vlc	libavcodec/vp3.c	/^    VLC fragment_run_length_vlc;$/;"	m	struct:Vp3DecodeContext	file:
fragment_run_length_vlc_table	libavcodec/vp3data.h	/^static const uint16_t fragment_run_length_vlc_table[30][2] = {$/;"	v
fragment_width	libavcodec/vp3.c	/^    int fragment_width;$/;"	m	struct:Vp3DecodeContext	file:
frame	ffmpeg.c	/^    unsigned long frame;     \/* current frame *\/$/;"	m	struct:AVInputStream	file:
frame	libavcodec/aasc.c	/^    AVFrame frame;$/;"	m	struct:AascContext	file:
frame	libavcodec/cinepak.c	/^    AVFrame frame;$/;"	m	struct:CinepakContext	file:
frame	libavcodec/cyuv.c	/^    AVFrame frame;$/;"	m	struct:CyuvDecodeContext	file:
frame	libavcodec/flicvideo.c	/^    AVFrame frame;$/;"	m	struct:FlicDecodeContext	file:
frame	libavcodec/fraps.c	/^    AVFrame frame;$/;"	m	struct:FrapsContext	file:
frame	libavcodec/idcinvideo.c	/^    AVFrame frame;$/;"	m	struct:IdcinContext	file:
frame	libavcodec/indeo3.c	/^    AVFrame frame;$/;"	m	struct:Indeo3DecodeContext	file:
frame	libavcodec/msrle.c	/^    AVFrame frame;$/;"	m	struct:MsrleContext	file:
frame	libavcodec/msvideo1.c	/^    AVFrame frame;$/;"	m	struct:Msvideo1Context	file:
frame	libavcodec/qtrle.c	/^    AVFrame frame;$/;"	m	struct:QtrleContext	file:
frame	libavcodec/rpza.c	/^    AVFrame frame;$/;"	m	struct:RpzaContext	file:
frame	libavcodec/smc.c	/^    AVFrame frame;$/;"	m	struct:SmcContext	file:
frame	libavcodec/truemotion1.c	/^    AVFrame frame;$/;"	m	struct:TrueMotion1Context	file:
frame	libavcodec/ulti.c	/^    AVFrame frame;$/;"	m	struct:UltimotionDecodeContext	file:
frame	libavcodec/vmdav.c	/^    AVFrame frame;$/;"	m	struct:VmdVideoContext	file:
frame	libavcodec/vqavideo.c	/^    AVFrame frame;$/;"	m	struct:VqaContext	file:
frameCount	libavcodec/amr.c	/^    int frameCount;$/;"	m	struct:AMRContext	file:
frameCount	libavcodec/amr.c	/^    int frameCount;$/;"	m	struct:AMRWBContext	file:
frameFinished	vhook/watermark.c	/^    int             frameFinished;$/;"	m	file:
frameNum	libavcodec/libpostproc/postprocess_internal.h	/^	int frameNum;$/;"	m	struct:PPContext
frame_abvs	libavformat/utils.c	/^static AbvEntry frame_abvs[] = {$/;"	v	file:
frame_aspect_ratio	ffmpeg.c	/^static float frame_aspect_ratio = 0;$/;"	v	file:
frame_bits	libavcodec/avcodec.h	/^    int frame_bits;$/;"	m	struct:AVCodecContext
frame_bits	libavcodec/mpegvideo.h	/^    int frame_bits;                \/\/\/< bits used for the current frame $/;"	m	struct:MpegEncContext
frame_bottomBand	ffmpeg.c	/^static int frame_bottomBand = 0;$/;"	v	file:
frame_buf	libavformat/dv.c	/^    uint8_t     frame_buf[144000]; \/* frame under contruction *\/$/;"	m	struct:DVMuxContext	file:
frame_code	libavformat/nut.c	/^    FrameCode frame_code[256];$/;"	m	file:
frame_count	libavcodec/mpegaudiodec.c	/^    int frame_count;$/;"	m	struct:MPADecodeContext	file:
frame_count	libavcodec/mpegvideo.h	/^    int frame_count[5];$/;"	m	struct:RateControlContext
frame_count	libavcodec/msmpeg4.c	/^int frame_count = 0;$/;"	v
frame_count	libavcodec/wmadec.c	/^    int frame_count;$/;"	m	struct:WMADecodeContext	file:
frame_count	libavformat/sierravmd.c	/^    unsigned int frame_count;$/;"	m	struct:VmdDemuxContext	file:
frame_count	output_example.c	/^int frame_count, video_outbuf_size;$/;"	v
frame_format	libavformat/grab.c	/^    int frame_format; \/* see VIDEO_PALETTE_xxx *\/$/;"	m	file:
frame_frac	libavcodec/mpegaudio.c	/^    int frame_frac, frame_frac_incr, do_padding;$/;"	m	struct:MpegAudioContext	file:
frame_frac_incr	libavcodec/mpegaudio.c	/^    int frame_frac, frame_frac_incr, do_padding;$/;"	m	struct:MpegAudioContext	file:
frame_header	libavcodec/truemotion1.c	/^struct frame_header {$/;"	s	file:
frame_height	ffmpeg.c	/^static int frame_height = 0;$/;"	v	file:
frame_height	libavcodec/svq1.c	/^    int frame_height;$/;"	m	struct:SVQ1Context	file:
frame_hook_add	libavformat/framehook.c	/^int frame_hook_add(int argc, char *argv[])$/;"	f
frame_hook_process	libavformat/framehook.c	/^void frame_hook_process(AVPicture *pict, enum PixelFormat pix_fmt, int width, int height)$/;"	f
frame_hook_release	libavformat/framehook.c	/^void frame_hook_release(void)$/;"	f
frame_last_delay	ffplay.c	/^    double frame_last_delay;$/;"	m	struct:VideoState	file:
frame_last_pts	ffplay.c	/^    double frame_last_pts;$/;"	m	struct:VideoState	file:
frame_leftBand	ffmpeg.c	/^static int frame_leftBand  = 0;$/;"	v	file:
frame_len	libavcodec/wmadec.c	/^    int frame_len;       \/* frame length in samples *\/$/;"	m	struct:WMADecodeContext	file:
frame_len_bits	libavcodec/wmadec.c	/^    int frame_len_bits;  \/* frame_len = 1 << frame_len_bits *\/$/;"	m	struct:WMADecodeContext	file:
frame_mbs_only_flag	libavcodec/h264.c	/^    int frame_mbs_only_flag;$/;"	m	struct:SPS	file:
frame_num	libavcodec/h264.c	/^    int frame_num;$/;"	m	struct:H264Context	file:
frame_num	libavcodec/mpegvideo.h	/^    int frame_num;              \/\/\/< h264 frame_num$/;"	m	struct:Picture
frame_num_offset	libavcodec/h264.c	/^    int frame_num_offset;         \/\/\/< for POC type 2$/;"	m	struct:H264Context	file:
frame_number	ffmpeg.c	/^    int frame_number;$/;"	m	struct:AVOutputStream	file:
frame_number	libavcodec/avcodec.h	/^    int frame_number;   \/\/\/< audio or video frame number $/;"	m	struct:AVCodecContext
frame_offset	libavcodec/avcodec.h	/^    int64_t frame_offset; \/* offset of the current frame *\/$/;"	m	struct:AVCodecParserContext
frame_offset	libavformat/avidec.c	/^    int64_t frame_offset; \/* current frame (video) or byte (audio) counter$/;"	m	struct:AVIStream	file:
frame_offset	libavformat/ffm.c	/^    int frame_offset;$/;"	m	struct:FFMContext	file:
frame_offset	libavformat/nsvdec.c	/^    int frame_offset; \/* current frame (video) or byte (audio) counter$/;"	m	struct:NSVStream	file:
frame_offset	libavformat/sierravmd.c	/^  offset_t frame_offset;$/;"	m	file:
frame_out	libavcodec/wmadec.c	/^    float frame_out[MAX_CHANNELS][BLOCK_MAX_SIZE * 2] __attribute__((aligned(16)));$/;"	m	struct:WMADecodeContext	file:
frame_padbottom	ffmpeg.c	/^static int frame_padbottom = 0;$/;"	v	file:
frame_padleft	ffmpeg.c	/^static int frame_padleft  = 0;$/;"	v	file:
frame_padright	ffmpeg.c	/^static int frame_padright = 0;$/;"	v	file:
frame_padtop	ffmpeg.c	/^static int frame_padtop  = 0;$/;"	v	file:
frame_pix_fmt	ffmpeg.c	/^static enum PixelFormat frame_pix_fmt = PIX_FMT_NONE;$/;"	v	file:
frame_pred_frame_dct	libavcodec/mpegvideo.h	/^    int frame_pred_frame_dct;$/;"	m	struct:MpegEncContext
frame_pts_inc	libavformat/flic.c	/^    int frame_pts_inc;$/;"	m	struct:FlicDemuxContext	file:
frame_pts_inc	libavformat/idroq.c	/^    int frame_pts_inc;$/;"	m	struct:RoqDemuxContext	file:
frame_pts_inc	libavformat/ipmovie.c	/^    int frame_pts_inc;$/;"	m	struct:IPMVEContext	file:
frame_rate	ffmpeg.c	/^static int frame_rate = 25;$/;"	v	file:
frame_rate	libavcodec/dvdata.h	/^    int              frame_rate;      $/;"	m	struct:DVprofile
frame_rate	libavcodec/parser.c	/^    int frame_rate;$/;"	m	struct:ParseContext1	file:
frame_rate	libavformat/dc1394.c	/^    int frame_rate;$/;"	m	struct:dc1394_frame_rate	file:
frame_rate	libavformat/grab.c	/^    int frame_rate;$/;"	m	file:
frame_rate	libavformat/rm.c	/^    float frame_rate;$/;"	m	file:
frame_rate	libavformat/utils.c	/^    int frame_rate, frame_rate_base;$/;"	m	file:
frame_rate_base	ffmpeg.c	/^static int frame_rate_base = 1;$/;"	v	file:
frame_rate_base	libavcodec/dvdata.h	/^    int              frame_rate_base;$/;"	m	struct:DVprofile
frame_rate_base	libavformat/grab.c	/^    int frame_rate_base;$/;"	m	file:
frame_rate_base	libavformat/utils.c	/^    int frame_rate, frame_rate_base;$/;"	m	file:
frame_rate_ext	libavcodec/mpeg12.c	/^    AVRational frame_rate_ext;       \/\/\/< MPEG-2 specific framerate modificator$/;"	m	struct:Mpeg1Context	file:
frame_rate_id	libavformat/dc1394.c	/^    int frame_rate_id;$/;"	m	struct:dc1394_frame_rate	file:
frame_rate_index	libavcodec/mpegvideo.h	/^    int frame_rate_index;$/;"	m	struct:MpegEncContext
frame_rate_tab	libavcodec/mpeg12data.h	/^static const AVRational frame_rate_tab[] = {$/;"	v
frame_rate_tab	libavcodec/parser.c	/^static const int frame_rate_tab[16] = {$/;"	v	file:
frame_record	libavformat/sierravmd.c	/^  unsigned char frame_record[BYTES_PER_FRAME_RECORD];$/;"	m	file:
frame_rightBand	ffmpeg.c	/^static int frame_rightBand = 0;$/;"	v	file:
frame_size	libavcodec/a52dec.c	/^    int frame_size;$/;"	m	struct:AC3DecodeState	file:
frame_size	libavcodec/ac3dec.c	/^    int frame_size;$/;"	m	struct:AC3DecodeState	file:
frame_size	libavcodec/ac3enc.c	/^    unsigned int frame_size; \/* current frame size in words *\/$/;"	m	struct:AC3EncodeContext	file:
frame_size	libavcodec/avcodec.h	/^    int frame_size;     \/\/\/< in samples, initialized when calling 'init' $/;"	m	struct:AVCodecContext
frame_size	libavcodec/dvdata.h	/^    int              frame_size;          \/* total size of one frame in bytes *\/$/;"	m	struct:DVprofile
frame_size	libavcodec/faad.c	/^    int frame_size;$/;"	m	file:
frame_size	libavcodec/mpegaudio.c	/^    int frame_size; \/* frame size, in bits, without padding *\/$/;"	m	struct:MpegAudioContext	file:
frame_size	libavcodec/mpegaudiodec.c	/^    int frame_size;$/;"	m	struct:MPADecodeContext	file:
frame_size	libavcodec/parser.c	/^    int frame_size;$/;"	m	struct:AC3ParseContext	file:
frame_size	libavcodec/parser.c	/^    int frame_size;$/;"	m	struct:MpegAudioParseContext	file:
frame_size	libavcodec/sonic.c	/^    int channels, samplerate, block_align, frame_size;$/;"	m	struct:SonicContext	file:
frame_size	libavformat/audio.c	/^    int frame_size; \/* in bytes ! *\/$/;"	m	file:
frame_size	libavformat/beosaudio.cpp	/^    int frame_size; \/* in bytes ! *\/$/;"	m	file:
frame_size	libavformat/grab.c	/^    int frame_size;$/;"	m	file:
frame_size	libavformat/sierravmd.c	/^  unsigned int frame_size;$/;"	m	file:
frame_size_id	libavformat/dc1394.c	/^    int frame_size_id;$/;"	m	struct:dc1394_frame_format	file:
frame_size_min	libavcodec/ac3enc.c	/^    unsigned int frame_size_min; \/* minimum frame size in case rounding is necessary *\/$/;"	m	struct:AC3EncodeContext	file:
frame_skip_cmp	ffmpeg.c	/^static int frame_skip_cmp= FF_CMP_DCTMAX;$/;"	v	file:
frame_skip_cmp	libavcodec/avcodec.h	/^    int frame_skip_cmp;$/;"	m	struct:AVCodecContext
frame_skip_cmp	libavcodec/dsputil.h	/^    me_cmp_func frame_skip_cmp[5]; \/\/only width 8 used$/;"	m	struct:DSPContext
frame_skip_exp	ffmpeg.c	/^static int frame_skip_exp= 0;$/;"	v	file:
frame_skip_exp	libavcodec/avcodec.h	/^    int frame_skip_exp;$/;"	m	struct:AVCodecContext
frame_skip_factor	ffmpeg.c	/^static int frame_skip_factor= 0;$/;"	v	file:
frame_skip_factor	libavcodec/avcodec.h	/^    int frame_skip_factor;$/;"	m	struct:AVCodecContext
frame_skip_threshold	ffmpeg.c	/^static int frame_skip_threshold= 0;$/;"	v	file:
frame_skip_threshold	libavcodec/avcodec.h	/^    int frame_skip_threshold;$/;"	m	struct:AVCodecContext
frame_start	libavcodec/h264.c	/^static void frame_start(H264Context *h){$/;"	f	file:
frame_start_found	libavcodec/mpegvideo.h	/^    int frame_start_found;$/;"	m	struct:ParseContext
frame_table	libavformat/sierravmd.c	/^    vmd_frame_t *frame_table;$/;"	m	struct:VmdDemuxContext	file:
frame_timer	ffplay.c	/^    double frame_timer;$/;"	m	struct:VideoState	file:
frame_topBand	ffmpeg.c	/^static int frame_topBand  = 0;$/;"	v	file:
frame_width	ffmpeg.c	/^static int frame_width  = 0;$/;"	v	file:
frame_width	libavcodec/svq1.c	/^    int frame_width;$/;"	m	struct:SVQ1Context	file:
framerate	libavformat/idroq.c	/^    int framerate;$/;"	m	struct:RoqDemuxContext	file:
frames	libavcodec/mpegaudiodec.c	/^    int frames;   \/\/\/< number of mp3 frames per block (number of mp3 decoder instances)$/;"	m	struct:MP3On4DecodeContext	file:
frames	libavformat/dv.c	/^    int              frames;$/;"	m	struct:DVDemuxContext	file:
frames	libavformat/dv.c	/^    int         frames;       \/* Number of a current frame *\/$/;"	m	struct:DVMuxContext	file:
frames_hdr_all	libavformat/avienc.c	/^    offset_t frames_hdr_all, frames_hdr_strm[MAX_STREAMS];$/;"	m	file:
frames_hdr_strm	libavformat/avienc.c	/^    offset_t frames_hdr_all, frames_hdr_strm[MAX_STREAMS];$/;"	m	file:
frandom	libavcodec/fft-test.c	/^float frandom(void)$/;"	f
fraps_decoder	libavcodec/fraps.c	/^AVCodec fraps_decoder = {$/;"	v
free	libavcodec/common.h	525;"	d
free	libavcodec/liba52/a52.h	30;"	d
free	libavcodec/mem.c	29;"	d	file:
free	libavformat/dc1394.c	25;"	d	file:
free_bitplane	libavcodec/vc9.c	/^void free_bitplane(BitPlane *bp)$/;"	f
free_duplicate_context	libavcodec/mpegvideo.c	/^static void free_duplicate_context(MpegEncContext *s){$/;"	f	file:
free_format_frame_size	libavcodec/mpegaudiodec.c	/^    int free_format_frame_size; \/* frame size in case of free format$/;"	m	struct:MPADecodeContext	file:
free_format_frame_size	libavcodec/parser.c	/^    int free_format_frame_size;$/;"	m	struct:MpegAudioParseContext	file:
free_format_next_header	libavcodec/mpegaudiodec.c	/^    uint32_t free_format_next_header; $/;"	m	struct:MPADecodeContext	file:
free_format_next_header	libavcodec/parser.c	/^    int free_format_next_header;$/;"	m	struct:MpegAudioParseContext	file:
free_picture	libavcodec/mpegvideo.c	/^static void free_picture(MpegEncContext *s, Picture *pic){$/;"	f	file:
free_tables	libavcodec/h264.c	/^static void free_tables(H264Context *h){$/;"	f	file:
free_vlc	libavcodec/bitstream.c	/^void free_vlc(VLC *vlc)$/;"	f
freq	libavcodec/mpegaudio.c	/^    int freq, bit_rate;$/;"	m	struct:MpegAudioContext	file:
freq_index	libavcodec/mpegaudio.c	/^    int freq_index;$/;"	m	struct:MpegAudioContext	file:
frmrtq_postproc	libavcodec/vc9.c	/^    int frmrtq_postproc;  \/\/\/< 3bits, $/;"	m	struct:VC9Context	file:
frmsizecod	libavcodec/ac3enc.c	/^    unsigned int frmsizecod;$/;"	m	struct:AC3EncodeContext	file:
from_addr	ffserver.c	/^    struct sockaddr_in from_addr; \/* origin *\/$/;"	m	struct:HTTPContext	file:
fs_screen_height	ffplay.c	/^static int fs_screen_height;$/;"	v	file:
fs_screen_width	ffplay.c	/^static int fs_screen_width;$/;"	v	file:
fscod	libavcodec/ac3.h	/^    int fscod; \/* frequency *\/$/;"	m	struct:AC3BitAllocParameters
fscod	libavcodec/ac3enc.c	/^    unsigned int fscod; \/* frequency *\/$/;"	m	struct:AC3EncodeContext	file:
fscod	libavcodec/liba52/a52_internal.h	/^    uint8_t fscod;		\/* sample rate *\/$/;"	m	struct:a52_state_s
fsnroffst	libavcodec/ac3enc.c	/^    int fsnroffst[AC3_MAX_CHANNELS];$/;"	m	struct:AC3EncodeContext	file:
ftable1	libavcodec/ra144.h	/^static const unsigned long ftable1[128]={$/;"	v
ftable2	libavcodec/ra144.h	/^static const unsigned long ftable2[128]={$/;"	v
ftrv	libavcodec/sh4/idct_sh4.c	105;"	d	file:
ftrv	libavcodec/sh4/idct_sh4.c	71;"	d	file:
ftrv_	libavcodec/sh4/idct_sh4.c	/^static void ftrv_(const float xf[],float fv[])$/;"	f	file:
full_pel	libavcodec/mpegvideo.h	/^    int full_pel[2];$/;"	m	struct:MpegEncContext
func	libavcodec/beosthread.c	/^    int (*func)(AVCodecContext *c, void *arg);$/;"	m	struct:ThreadContext	file:
func	libavcodec/pthread.c	/^    action_t *func;$/;"	m	struct:ThreadContext	file:
func	libavcodec/w32thread.c	/^    int (*func)(AVCodecContext *c, void *arg);$/;"	m	struct:ThreadContext	file:
func	libavformat/mov.c	/^    mov_parse_function func;$/;"	m	struct:MOVParseTableEntry	file:
func	tests/dsptest.c	/^    op_pixels_func func;$/;"	m	struct:pix_func	file:
func1	libavcodec/eval.c	/^    double (**func1)(void *, double a); \/\/ NULL terminated$/;"	m	struct:Parser	file:
func1_name	libavcodec/eval.c	/^    const char **func1_name;          \/\/ NULL terminated$/;"	m	struct:Parser	file:
func2	libavcodec/eval.c	/^    double (**func2)(void *, double a, double b); \/\/ NULL terminated$/;"	m	struct:Parser	file:
func2_name	libavcodec/eval.c	/^    char **func2_name;          \/\/ NULL terminated$/;"	m	struct:Parser	file:
func_arg	cmdutils.h	/^        void (*func_arg)(const char *);$/;"	m
funny_diamond_search	libavcodec/motion_est_template.c	/^static int funny_diamond_search(MpegEncContext * s, int *best, int dmin,$/;"	f	file:
g	libavformat/gif.c	/^    unsigned char g;$/;"	m	file:
g	tests/videogen.c	/^    int r, g, b;$/;"	m	struct:VObj	file:
g	vhook/imlib2.c	/^    int r, g, b;$/;"	m	file:
g726_close	libavcodec/g726.c	/^static int g726_close(AVCodecContext *avctx)$/;"	f	file:
g726_decode	libavcodec/g726.c	/^static int16_t g726_decode(G726Context* c, int16_t i)$/;"	f	file:
g726_decode_frame	libavcodec/g726.c	/^static int g726_decode_frame(AVCodecContext *avctx,$/;"	f	file:
g726_encode	libavcodec/g726.c	/^static int16_t g726_encode(G726Context* c, int16_t sig)$/;"	f	file:
g726_encode_frame	libavcodec/g726.c	/^static int g726_encode_frame(AVCodecContext *avctx,$/;"	f	file:
g726_init	libavcodec/g726.c	/^static int g726_init(AVCodecContext * avctx)$/;"	f	file:
g726_iterate	libavcodec/g726.c	/^static inline int16_t g726_iterate(G726Context* c, int16_t I)$/;"	f	file:
g726_reset	libavcodec/g726.c	/^static int g726_reset(G726Context* c, int bit_rate)$/;"	f	file:
gaps_in_frame_num_allowed_flag	libavcodec/h264.c	/^    int gaps_in_frame_num_allowed_flag;$/;"	m	struct:SPS	file:
gb	libavcodec/4xm.c	/^    GetBitContext gb;$/;"	m	struct:FourXContext	file:
gb	libavcodec/alac.c	/^    GetBitContext gb;$/;"	m	file:
gb	libavcodec/asv1.c	/^    GetBitContext gb;$/;"	m	struct:ASV1Context	file:
gb	libavcodec/cljr.c	/^    GetBitContext gb;$/;"	m	struct:CLJRContext	file:
gb	libavcodec/ffv1.c	/^    GetBitContext gb;$/;"	m	struct:FFV1Context	file:
gb	libavcodec/flac.c	/^    GetBitContext gb;$/;"	m	struct:FLACContext	file:
gb	libavcodec/huffyuv.c	/^    GetBitContext gb;$/;"	m	struct:HYuvContext	file:
gb	libavcodec/indeo2.c	/^    GetBitContext gb;$/;"	m	struct:Ir2Context	file:
gb	libavcodec/loco.c	/^    GetBitContext gb;$/;"	m	struct:RICEContext	file:
gb	libavcodec/mdec.c	/^    GetBitContext gb;$/;"	m	struct:MDECContext	file:
gb	libavcodec/mjpeg.c	/^    GetBitContext gb;$/;"	m	struct:MJpegDecodeContext	file:
gb	libavcodec/mpegaudiodec.c	/^    GetBitContext gb;$/;"	m	struct:MPADecodeContext	file:
gb	libavcodec/mpegvideo.h	/^    GetBitContext gb;$/;"	m	struct:MpegEncContext
gb	libavcodec/shorten.c	/^    GetBitContext gb;$/;"	m	struct:ShortenContext	file:
gb	libavcodec/svq1.c	/^    GetBitContext gb;$/;"	m	struct:SVQ1Context	file:
gb	libavcodec/vorbis.h	/^    GetBitContext gb;$/;"	m
gb	libavcodec/wmadec.c	/^    GetBitContext gb;$/;"	m	struct:WMADecodeContext	file:
gb	libavcodec/wnv1.c	/^    GetBitContext gb;$/;"	m	struct:WNV1Context	file:
gb_buf	libavformat/grab.c	/^    struct video_mmap gb_buf;$/;"	m	file:
gb_buffers	libavformat/grab.c	/^    struct video_mbuf gb_buffers;$/;"	m	file:
gb_frame	libavformat/grab.c	/^    int gb_frame;$/;"	m	file:
gbuf1	libavcodec/ra144.c	/^	unsigned int	 gbuf1[8];$/;"	m	file:
gbuf2	libavcodec/ra144.c	/^	unsigned short	 gbuf2[120];$/;"	m	file:
gce_delay	libavformat/gifdec.c	/^    int gce_delay;$/;"	m	struct:GifState	file:
gce_disposal	libavformat/gifdec.c	/^    int gce_disposal;$/;"	m	struct:GifState	file:
gen_image	tests/rotozoom.c	/^void gen_image(int num, int w, int h)$/;"	f
gen_image	tests/videogen.c	/^void gen_image(int num, int w, int h)$/;"	f
gen_vector_table15	libavcodec/truemotion1.c	/^static void gen_vector_table15(TrueMotion1Context *s, uint8_t *sel_vector_table)$/;"	f	file:
gen_vector_table16	libavcodec/truemotion1.c	/^static void gen_vector_table16(TrueMotion1Context *s, uint8_t *sel_vector_table)$/;"	f	file:
gen_vector_table24	libavcodec/truemotion1.c	/^static void gen_vector_table24(TrueMotion1Context *s, uint8_t *sel_vector_table)$/;"	f	file:
generate_bits_table	libavcodec/huffyuv.c	/^static int generate_bits_table(uint32_t *dst, uint8_t *len_table){$/;"	f	file:
generate_len_table	libavcodec/huffyuv.c	/^static void generate_len_table(uint8_t *dst, uint64_t *stats, int size){$/;"	f	file:
genre	libavformat/avformat.h	/^    char genre[32]; \/* ID3 genre *\/$/;"	m	struct:AVFormatContext
gensym	doc/texi2pod.pl	/^    sub gensym$/;"	s
get16	libavformat/mpegts.c	/^static inline int get16(const uint8_t **pp, const uint8_t *p_end)$/;"	f	file:
get32	libavcodec/4xm.c	/^static int get32(void *p){$/;"	f	file:
get32	libavcodec/png.c	/^static unsigned int get32(uint8_t **b){$/;"	f	file:
get8	libavformat/mpegts.c	/^static inline int get8(const uint8_t **pp, const uint8_t *p_end)$/;"	f	file:
getBitrateMode	libavcodec/amr.c	/^static enum Mode getBitrateMode(int bitrate)$/;"	f	file:
getWBBitrateMode	libavcodec/amr.c	/^static int getWBBitrateMode(int bitrate)$/;"	f	file:
get_alpha_info_pal8	libavcodec/imgconvert.c	/^static int get_alpha_info_pal8(const AVPicture *src, int width, int height)$/;"	f	file:
get_amv	libavcodec/h263.c	/^static inline int get_amv(MpegEncContext *s, int n){$/;"	f	file:
get_arg	ffserver.c	/^static void get_arg(char *buf, int buf_size, const char **pp)$/;"	f	file:
get_audio_clock	ffplay.c	/^static double get_audio_clock(VideoState *is)$/;"	f	file:
get_audio_flags	libavformat/flvenc.c	/^static int get_audio_flags(AVCodecContext *enc){$/;"	f	file:
get_audio_frame	output_example.c	/^void get_audio_frame(int16_t *samples, int frame_size, int nb_channels)$/;"	f
get_audio_frame_size	libavformat/utils.c	/^static int get_audio_frame_size(AVCodecContext *enc, int size)$/;"	f	file:
get_b	libavcodec/lcl.c	/^static inline unsigned char get_b (unsigned char yq, signed char bq)$/;"	f	file:
get_b_cbp	libavcodec/h263.c	/^static inline int get_b_cbp(MpegEncContext * s, DCTELEM block[6][64],$/;"	f	file:
get_be16	libavformat/aviobuf.c	/^unsigned int get_be16(ByteIOContext *s)$/;"	f
get_be24	libavformat/flvdec.c	/^unsigned int get_be24(ByteIOContext *s)$/;"	f
get_be24	libavformat/mov.c	/^static inline unsigned int get_be24(ByteIOContext *s)$/;"	f	file:
get_be32	libavformat/aviobuf.c	/^unsigned int get_be32(ByteIOContext *s)$/;"	f
get_be64	libavformat/aviobuf.c	/^uint64_t get_be64(ByteIOContext *s)$/;"	f
get_be64_double	libavformat/aviobuf.c	/^double get_be64_double(ByteIOContext *s)$/;"	f
get_bits	libavcodec/bitstream.h	/^static inline unsigned int get_bits(GetBitContext *s, int n){$/;"	f
get_bits	libavcodec/bitstream.h	863;"	d
get_bits1	libavcodec/bitstream.h	/^static inline unsigned int get_bits1(GetBitContext *s){$/;"	f
get_bits1	libavcodec/bitstream.h	864;"	d
get_bits_count	libavcodec/bitstream.h	/^static inline int get_bits_count(GetBitContext *s){$/;"	f
get_bits_diff	libavcodec/mpegvideo.h	/^static inline int get_bits_diff(MpegEncContext *s){$/;"	f
get_bits_left	libavcodec/dv.c	/^static inline int get_bits_left(GetBitContext *s)$/;"	f	file:
get_bits_long	libavcodec/bitstream.c	/^unsigned int get_bits_long(GetBitContext *s, int n){$/;"	f
get_bits_long_le	libavcodec/vorbis.c	/^unsigned int get_bits_long_le(GetBitContext *s, int n){$/;"	f
get_bits_size	libavcodec/dv.c	/^static inline int get_bits_size(GetBitContext *s)$/;"	f	file:
get_bits_trace	libavcodec/bitstream.h	/^static inline int get_bits_trace(GetBitContext *s, int n, char *file, const char *func, int line){$/;"	f
get_bitsz	libavcodec/mpegaudiodec.c	/^static inline int get_bitsz(GetBitContext *s, int n)$/;"	f	file:
get_block_rate	libavcodec/h263.c	/^static inline int get_block_rate(MpegEncContext * s, DCTELEM block[64], int block_last_index, uint8_t scantable[64]){$/;"	f	file:
get_buffer	libavcodec/avcodec.h	/^    int (*get_buffer)(struct AVCodecContext *c, AVFrame *pic);$/;"	m	struct:AVCodecContext
get_buffer	libavformat/aviobuf.c	/^int get_buffer(ByteIOContext *s, unsigned char *buf, int size)$/;"	f
get_byte	libavcodec/roqvideo.c	77;"	d	file:
get_byte	libavformat/aviobuf.c	/^int get_byte(ByteIOContext *s)$/;"	f
get_cabac	libavcodec/cabac.h	/^static inline int get_cabac(CABACContext *c, uint8_t * const state){$/;"	f
get_cabac_bypass	libavcodec/cabac.h	/^static inline int get_cabac_bypass(CABACContext *c){$/;"	f
get_cabac_cbf_ctx	libavcodec/h264.c	/^static int inline get_cabac_cbf_ctx( H264Context *h, int cat, int idx ) {$/;"	f	file:
get_cabac_terminate	libavcodec/cabac.h	/^static inline int get_cabac_terminate(CABACContext *c){$/;"	f
get_cabac_u	libavcodec/cabac.h	/^static inline int get_cabac_u(CABACContext *c, uint8_t * state, int max, int max_index, int truncated){$/;"	f
get_cabac_ueg	libavcodec/cabac.h	/^static inline int get_cabac_ueg(CABACContext *c, uint8_t * state, int max, int is_signed, int k, int max_index){$/;"	f
get_cached_image	vhook/imlib2.c	/^static Imlib_Image get_cached_image(ContextInfo *ci, int width, int height)$/;"	f	file:
get_cbp	libavcodec/h261.c	/^static inline int get_cbp(MpegEncContext * s,$/;"	f	file:
get_checksum	libavformat/aviobuf.c	/^unsigned long get_checksum(ByteIOContext *s){$/;"	f
get_chroma_qp	libavcodec/h264.c	/^static inline int get_chroma_qp(int chroma_qp_index_offset, int qscale){$/;"	f	file:
get_consumed_bytes	libavcodec/h261.c	/^static int get_consumed_bytes(MpegEncContext *s, int buf_size){$/;"	f	file:
get_consumed_bytes	libavcodec/h263dec.c	/^static int get_consumed_bytes(MpegEncContext *s, int buf_size){$/;"	f	file:
get_consumed_bytes	libavcodec/h264.c	/^static int get_consumed_bytes(MpegEncContext *s, int pos, int buf_size){$/;"	f	file:
get_context	libavcodec/ffv1.c	/^static inline int get_context(FFV1Context *f, int_fast16_t *src, int_fast16_t *last, int_fast16_t *last2){$/;"	f	file:
get_crc8	libavcodec/flac.c	/^static int get_crc8(const uint8_t *buf, int count){$/;"	f	file:
get_dc	libavcodec/msmpeg4.c	/^static int get_dc(uint8_t *src, int stride, int scale)$/;"	f	file:
get_diff_limited_q	libavcodec/ratecontrol.c	/^static double get_diff_limited_q(MpegEncContext *s, RateControlEntry *rce, double q){$/;"	f	file:
get_dmv	libavcodec/mpeg12.c	/^static inline int get_dmv(MpegEncContext *s)$/;"	f	file:
get_external_clock	ffplay.c	/^static double get_external_clock(VideoState *is)$/;"	f	file:
get_flags	libavcodec/motion_est.c	/^static int get_flags(MotionEstContext *c, int direct, int chroma){$/;"	f	file:
get_format	libavcodec/avcodec.h	/^    enum PixelFormat (*get_format)(struct AVCodecContext *s, const enum PixelFormat * fmt);$/;"	m	struct:AVCodecContext
get_fragment_run_length	libavcodec/vp3.c	/^static int get_fragment_run_length(GetBitContext *gb)$/;"	f	file:
get_frame_filename	libavformat/utils.c	/^int get_frame_filename(char *buf, int buf_size,$/;"	f
get_g	libavcodec/lcl.c	/^static inline unsigned char get_g (unsigned char yq, signed char bq, signed char rq)$/;"	f	file:
get_guid	libavformat/asf.c	/^static void get_guid(ByteIOContext *s, GUID *g)$/;"	f	file:
get_hsv	vhook/fish.c	/^static void get_hsv(HSV *hsv, int r, int g, int b)$/;"	f	file:
get_intra_count	libavcodec/mpegvideo.c	/^static int get_intra_count(MpegEncContext *s, uint8_t *src, uint8_t *ref, int stride){$/;"	f	file:
get_le16	libavcodec/shorten.c	/^static short inline get_le16(GetBitContext *gb)$/;"	f	file:
get_le16	libavformat/aviobuf.c	/^unsigned int get_le16(ByteIOContext *s)$/;"	f
get_le32	libavcodec/shorten.c	/^static int inline get_le32(GetBitContext *gb)$/;"	f	file:
get_le32	libavformat/aviobuf.c	/^unsigned int get_le32(ByteIOContext *s)$/;"	f
get_le64	libavformat/aviobuf.c	/^uint64_t get_le64(ByteIOContext *s)$/;"	f
get_le_float	libavformat/4xm.c	/^static float get_le_float(unsigned char *buffer)$/;"	f	file:
get_length	libavformat/nut.c	/^static int get_length(uint64_t val){$/;"	f	file:
get_level_prefix	libavcodec/h264.c	/^static inline int get_level_prefix(GetBitContext *gb){$/;"	f	file:
get_limits	libavcodec/motion_est.c	/^static inline void get_limits(MpegEncContext *s, int x, int y)$/;"	f	file:
get_long	libavcodec/roqvideo.c	80;"	d	file:
get_longterm_datarate	ffserver.c	/^static int get_longterm_datarate(DataRateData *drd, int64_t count)$/;"	f	file:
get_master_clock	ffplay.c	/^static double get_master_clock(VideoState *is)$/;"	f	file:
get_mode_code	libavcodec/vp3.c	/^static int get_mode_code(GetBitContext *gb)$/;"	f	file:
get_motion_vector_fixed	libavcodec/vp3.c	/^static int get_motion_vector_fixed(GetBitContext *gb)$/;"	f	file:
get_motion_vector_vlc	libavcodec/vp3.c	/^static int get_motion_vector_vlc(GetBitContext *gb)$/;"	f	file:
get_nb_frames	libavformat/mpeg.c	/^static int get_nb_frames(AVFormatContext *ctx, StreamInfo *stream, int len){$/;"	f	file:
get_num	libavformat/rm.c	/^static int get_num(ByteIOContext *pb, int *len)$/;"	f	file:
get_p_cbp	libavcodec/h263.c	/^static inline int get_p_cbp(MpegEncContext * s,$/;"	f	file:
get_packet_send_clock	ffserver.c	/^static int64_t get_packet_send_clock(HTTPContext *c)$/;"	f	file:
get_packet_size	libavformat/mpegts.c	/^static int get_packet_size(const uint8_t *buf, int size)$/;"	f	file:
get_packetheader	libavformat/nut.c	/^static int get_packetheader(NUTContext *nut, ByteIOContext *bc, int calculate_checksum)$/;"	f	file:
get_partial_buffer	libavformat/aviobuf.c	/^int get_partial_buffer(ByteIOContext *s, unsigned char *buf, int size)$/;"	f
get_penalty_factor	libavcodec/dsputil.h	/^static inline int get_penalty_factor(int lambda, int lambda2, int type){$/;"	f
get_phase	libavcodec/imgresample.c	/^static inline int get_phase(int pos)$/;"	f	file:
get_pixels	libavcodec/dsputil.h	/^    void (*get_pixels)(DCTELEM *block\/*align 16*\/, const uint8_t *pixels\/*align 8*\/, int line_size);$/;"	m	struct:DSPContext
get_pixels	libavcodec/dv.c	/^    void (*get_pixels)(DCTELEM *block, const uint8_t *pixels, int line_size);$/;"	m	struct:DVVideoContext	file:
get_pixels_altivec	libavcodec/ppc/dsputil_altivec.c	/^void get_pixels_altivec(DCTELEM *restrict block, const uint8_t *pixels, int line_size)$/;"	f
get_pixels_c	libavcodec/dsputil.c	/^static void get_pixels_c(DCTELEM *restrict block, const uint8_t *pixels, int line_size)$/;"	f	file:
get_pixels_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void get_pixels_mlib(DCTELEM *restrict block, const uint8_t *pixels, int line_size)$/;"	f	file:
get_pixels_mmi	libavcodec/ps2/dsputil_mmi.c	/^static void get_pixels_mmi(DCTELEM *block, const uint8_t *pixels, int line_size)$/;"	f	file:
get_pixels_mmx	libavcodec/i386/dsputil_mmx.c	/^static void get_pixels_mmx(DCTELEM *block, const uint8_t *pixels, int line_size)$/;"	f	file:
get_pixels_mvi	libavcodec/alpha/motion_est_alpha.c	/^void get_pixels_mvi(DCTELEM *restrict block,$/;"	f
get_prefix	libavcodec/vc9.c	/^static int get_prefix(GetBitContext *gb, int stop, int len)$/;"	f	file:
get_pts	libavformat/ffm.c	/^static int64_t get_pts(AVFormatContext *s, offset_t pos)$/;"	f	file:
get_pts	libavformat/mpeg.c	/^static int64_t get_pts(ByteIOContext *pb, int c)$/;"	f	file:
get_pts	libavformat/mpegts.c	/^static int64_t get_pts(const uint8_t *p)$/;"	f	file:
get_qminmax	libavcodec/ratecontrol.c	/^static void get_qminmax(int *qmin_ret, int *qmax_ret, MpegEncContext *s, int pict_type){$/;"	f	file:
get_qscale	libavcodec/mpeg12.c	/^static inline int get_qscale(MpegEncContext *s)$/;"	f	file:
get_qscale	libavcodec/ratecontrol.c	/^static double get_qscale(MpegEncContext *s, RateControlEntry *rce, double rate_factor, int frame_num){$/;"	f	file:
get_r	libavcodec/lcl.c	/^static inline unsigned char get_r (unsigned char yq, signed char rq)$/;"	f	file:
get_rac	libavcodec/rangecoder.h	/^static inline int get_rac(RangeCoder *c, uint8_t * const state){$/;"	f
get_riff	libavformat/avidec.c	/^static int get_riff(AVIContext *avi, ByteIOContext *pb)$/;"	f	file:
get_rl_index	libavcodec/mpegvideo.h	/^static inline int get_rl_index(const RLTable *rl, int last, int run, int level)$/;"	f
get_s	libavformat/nut.c	/^static int64_t get_s(ByteIOContext *bc){$/;"	f	file:
get_s	libavformat/nut.c	320;"	d	file:
get_s_trace	libavformat/nut.c	/^static inline int64_t get_s_trace(ByteIOContext *bc, char *file, char *func, int line){$/;"	f	file:
get_sae	libavcodec/mpegvideo.c	/^static int get_sae(uint8_t *src, int ref, int stride){$/;"	f	file:
get_sbits	libavcodec/bitstream.h	/^static inline int get_sbits(GetBitContext *s, int n){$/;"	f
get_se	libavcodec/golomb.h	/^static inline int get_se(GetBitContext *s, char *file, const char *func, int line){$/;"	f
get_se_golomb	libavcodec/golomb.h	/^static inline int get_se_golomb(GetBitContext *gb){$/;"	f
get_se_golomb	libavcodec/golomb.h	353;"	d
get_server_clock	ffserver.c	/^static int64_t get_server_clock(HTTPContext *c)$/;"	f	file:
get_size_of_code	libavcodec/msmpeg4.c	/^static int get_size_of_code(MpegEncContext * s, RLTable *rl, int last, int run, int level, int intra){$/;"	f	file:
get_sr_golomb	libavcodec/golomb.h	/^static inline int get_sr_golomb(GetBitContext *gb, int k, int limit, int esc_len){$/;"	f
get_sr_golomb_flac	libavcodec/golomb.h	/^static inline int get_sr_golomb_flac(GetBitContext *gb, int k, int limit, int esc_len){$/;"	f
get_sr_golomb_shorten	libavcodec/golomb.h	/^static inline int get_sr_golomb_shorten(GetBitContext* gb, int k)$/;"	f
get_str	libavformat/nut.c	/^static int get_str(ByteIOContext *bc, char *string, unsigned int maxlen){$/;"	f	file:
get_str	libavformat/rm.c	/^static void get_str(ByteIOContext *pb, char *buf, int buf_size)$/;"	f	file:
get_str16_nolen	libavformat/asf.c	/^static void get_str16_nolen(ByteIOContext *pb, int len, char *buf, int buf_size)$/;"	f	file:
get_str8	libavformat/rm.c	/^static void get_str8(ByteIOContext *pb, char *buf, int buf_size)$/;"	f	file:
get_strz	libavformat/aviobuf.c	/^char *get_strz(ByteIOContext *s, char *buf, int maxlen)$/;"	f
get_superblock_run_length	libavcodec/vp3.c	/^static int get_superblock_run_length(GetBitContext *gb)$/;"	f	file:
get_swf_tag	libavformat/swf.c	/^static int get_swf_tag(ByteIOContext *pb, int *len_ptr)$/;"	f	file:
get_symbol	libavcodec/ffv1.c	/^static inline int get_symbol(RangeCoder *c, uint8_t *state, int is_signed){$/;"	f	file:
get_symbol	libavcodec/snow.c	/^static inline int get_symbol(RangeCoder *c, uint8_t *state, int is_signed){$/;"	f	file:
get_symbol2	libavcodec/snow.c	/^static inline int get_symbol2(RangeCoder *c, uint8_t *state, int log2){$/;"	f	file:
get_sync_ipts	ffmpeg.c	/^get_sync_ipts(const AVOutputStream *ost)$/;"	f	file:
get_system_header_size	libavformat/mpeg.c	/^static int get_system_header_size(AVFormatContext *ctx)$/;"	f	file:
get_te	libavcodec/golomb.h	/^static inline int get_te(GetBitContext *s, int r, char *file, const char *func, int line){$/;"	f
get_te0_golomb	libavcodec/golomb.h	/^static inline int get_te0_golomb(GetBitContext *gb, int range){$/;"	f
get_te0_golomb	libavcodec/golomb.h	355;"	d
get_te_golomb	libavcodec/golomb.h	/^static inline int get_te_golomb(GetBitContext *gb, int range){$/;"	f
get_te_golomb	libavcodec/golomb.h	354;"	d
get_ue	libavcodec/golomb.h	/^static inline int get_ue(GetBitContext *s, char *file, const char *func, int line){$/;"	f
get_ue_golomb	libavcodec/golomb.h	/^static inline int get_ue_golomb(GetBitContext *gb){$/;"	f
get_ue_golomb	libavcodec/golomb.h	352;"	d
get_uint	libavcodec/shorten.c	/^static inline unsigned int get_uint(ShortenContext *s, int k)$/;"	f	file:
get_ur_golomb	libavcodec/golomb.h	/^static inline int get_ur_golomb(GetBitContext *gb, int k, int limit, int esc_len){$/;"	f
get_ur_golomb_jpegls	libavcodec/golomb.h	/^static inline int get_ur_golomb_jpegls(GetBitContext *gb, int k, int limit, int esc_len){$/;"	f
get_ur_golomb_shorten	libavcodec/golomb.h	/^static inline unsigned int get_ur_golomb_shorten(GetBitContext *gb, int k){$/;"	f
get_utf8	libavcodec/flac.c	/^static int64_t get_utf8(GetBitContext *gb)$/;"	f	file:
get_v	libavformat/nut.c	/^static uint64_t get_v(ByteIOContext *bc)$/;"	f	file:
get_v	libavformat/nut.c	319;"	d	file:
get_v_trace	libavformat/nut.c	/^static inline uint64_t get_v_trace(ByteIOContext *bc, char *file, char *func, int line){$/;"	f	file:
get_vb	libavformat/nut.c	/^static uint64_t get_vb(ByteIOContext *bc){$/;"	f	file:
get_vb	libavformat/nut.c	321;"	d	file:
get_vb_trace	libavformat/nut.c	/^static inline uint64_t get_vb_trace(ByteIOContext *bc, char *file, char *func, int line){$/;"	f	file:
get_vcd_padding_size	libavformat/mpeg.c	/^static int get_vcd_padding_size(AVFormatContext *ctx, int64_t pts)$/;"	f	file:
get_video_clock	ffplay.c	/^static double get_video_clock(VideoState *is)$/;"	f	file:
get_vissual_weight	libavcodec/mpegvideo.c	/^static void get_vissual_weight(int16_t *weight, uint8_t *ptr, int stride){$/;"	f	file:
get_vlc	libavcodec/bitstream.h	/^static inline int get_vlc(GetBitContext *s, VLC *vlc)$/;"	f
get_vlc	libavcodec/bitstream.h	866;"	d
get_vlc2	libavcodec/bitstream.h	/^static always_inline int get_vlc2(GetBitContext *s, VLC_TYPE (*table)[2],$/;"	f
get_vlc2	libavcodec/bitstream.h	867;"	d
get_vlc_symbol	libavcodec/ffv1.c	/^static inline int get_vlc_symbol(GetBitContext *gb, VlcState * const state, int bits){$/;"	f	file:
get_vlc_trace	libavcodec/bitstream.h	/^static inline int get_vlc_trace(GetBitContext *s, VLC_TYPE (*table)[2], int bits, int max_depth, char *file, const char *func, int line){$/;"	f
get_watermark_picture	vhook/watermark.c	/^int get_watermark_picture(ContextInfo *ci, int cleanup)$/;"	f
get_wav_header	libavformat/wav.c	/^void get_wav_header(ByteIOContext *pb, AVCodecContext *codec, int size) $/;"	f
get_word	ffserver.c	/^static void get_word(char *buf, int buf_size, const char **pp)$/;"	f	file:
get_word	libavcodec/roqvideo.c	78;"	d	file:
get_word	libavformat/rtsp.c	/^static void get_word(char *buf, int buf_size, const char **pp)$/;"	f	file:
get_word_sep	libavformat/rtsp.c	/^static void get_word_sep(char *buf, int buf_size, const char *sep, $/;"	f	file:
get_xbits	libavcodec/bitstream.h	/^static inline int get_xbits(GetBitContext *s, int n){$/;"	f
get_xbits	libavcodec/bitstream.h	865;"	d
get_xbits_trace	libavcodec/bitstream.h	/^static inline int get_xbits_trace(GetBitContext *s, int n, char *file, const char *func, int line){$/;"	f
getstr8	libavformat/mpegts.c	/^static char *getstr8(const uint8_t **pp, const uint8_t *p_end)$/;"	f	file:
gettime	libavcodec/dct-test.c	/^int64_t gettime(void)$/;"	f
gettime	libavcodec/fft-test.c	/^int64_t gettime(void)$/;"	f
gettime	libavcodec/motion_test.c	/^int64_t gettime(void)$/;"	f
gettime_ms	ffserver.c	/^static long gettime_ms(void)$/;"	f	file:
getutime	ffmpeg.c	/^static int64_t getutime(void)$/;"	f	file:
gfp	libavcodec/mp3lameaudio.c	/^	lame_global_flags *gfp;$/;"	m	struct:Mp3AudioContext	file:
gif87a_sig	libavformat/gifdec.c	/^static const uint8_t gif87a_sig[6] = "GIF87a";$/;"	v	file:
gif89a_sig	libavformat/gifdec.c	/^static const uint8_t gif89a_sig[6] = "GIF89a";$/;"	v	file:
gif_clut	libavformat/gif.c	/^static const rgb_triplet gif_clut[216] = {$/;"	v	file:
gif_clut_index	libavcodec/imgconvert.c	/^static inline unsigned char gif_clut_index(uint8_t r, uint8_t g, uint8_t b)$/;"	f	file:
gif_clut_index	libavformat/gif.c	/^static inline unsigned char gif_clut_index(uint8_t r, uint8_t g, uint8_t b)$/;"	f	file:
gif_flush_put_bits_rev	libavformat/gif.c	/^static void gif_flush_put_bits_rev(PutBitContext *s)$/;"	f	file:
gif_iformat	libavformat/gifdec.c	/^AVInputFormat gif_iformat =$/;"	v
gif_image_format	libavformat/gifdec.c	/^AVImageFormat gif_image_format = {$/;"	v
gif_image_probe	libavformat/gifdec.c	/^static int gif_image_probe(AVProbeData * pd)$/;"	f	file:
gif_image_write_header	libavformat/gif.c	/^static int gif_image_write_header(ByteIOContext *pb, $/;"	f	file:
gif_image_write_image	libavformat/gif.c	/^static int gif_image_write_image(ByteIOContext *pb, $/;"	f	file:
gif_init	libavformat/gif.c	/^int gif_init(void)$/;"	f
gif_oformat	libavformat/gif.c	/^static AVOutputFormat gif_oformat = {$/;"	v	file:
gif_parse_next_image	libavformat/gifdec.c	/^static int gif_parse_next_image(GifState *s)$/;"	f	file:
gif_put_bits_rev	libavformat/gif.c	/^static void gif_put_bits_rev(PutBitContext *s, int n, unsigned int value)$/;"	f	file:
gif_read	libavformat/gifdec.c	/^static int gif_read(ByteIOContext *f, $/;"	f	file:
gif_read_close	libavformat/gifdec.c	/^static int gif_read_close(AVFormatContext *s1)$/;"	f	file:
gif_read_extension	libavformat/gifdec.c	/^static int gif_read_extension(GifState *s)$/;"	f	file:
gif_read_header	libavformat/gifdec.c	/^static int gif_read_header(AVFormatContext * s1,$/;"	f	file:
gif_read_header1	libavformat/gifdec.c	/^static int gif_read_header1(GifState *s)$/;"	f	file:
gif_read_image	libavformat/gifdec.c	/^static int gif_read_image(GifState *s)$/;"	f	file:
gif_read_packet	libavformat/gifdec.c	/^static int gif_read_packet(AVFormatContext * s1,$/;"	f	file:
gif_video_probe	libavformat/gifdec.c	/^static int gif_video_probe(AVProbeData * pd)$/;"	f	file:
gif_write	libavformat/gif.c	/^int gif_write(ByteIOContext *pb, AVImageInfo *info)$/;"	f
gif_write_header	libavformat/gif.c	/^static int gif_write_header(AVFormatContext *s)$/;"	f	file:
gif_write_packet	libavformat/gif.c	/^static int gif_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
gif_write_trailer	libavformat/gif.c	/^static int gif_write_trailer(AVFormatContext *s)$/;"	f	file:
gif_write_video	libavformat/gif.c	/^static int gif_write_video(AVFormatContext *s, $/;"	f	file:
globalTimescale	libavformat/movenc.c	28;"	d	file:
global_gain	libavcodec/mpegaudiodec.c	/^    int global_gain;$/;"	m	struct:GranuleDef	file:
global_init	libavcodec/libpostproc/postprocess.c	/^static void global_init(void){$/;"	f	file:
global_palette	libavformat/gifdec.c	/^    uint8_t global_palette[256 * 3];$/;"	m	struct:GifState	file:
global_quality	libavcodec/avcodec.h	/^    int global_quality;$/;"	m	struct:AVCodecContext
global_video_state	ffplay.c	/^static VideoState *global_video_state;$/;"	v	file:
glue	libavcodec/imgconvert.c	43;"	d	file:
glue	libavcodec/imgconvert_template.h	/^static int glue(get_alpha_info_, RGB_NAME)(const AVPicture *src,$/;"	f
glue	libavcodec/imgconvert_template.h	/^static void glue(RGB_NAME, _to_gray)(AVPicture *dst, const AVPicture *src,$/;"	f
glue	libavcodec/imgconvert_template.h	/^static void glue(RGB_NAME, _to_pal8)(AVPicture *dst, const AVPicture *src,$/;"	f
glue	libavcodec/imgconvert_template.h	/^static void glue(RGB_NAME, _to_rgb24)(AVPicture *dst, const AVPicture *src,$/;"	f
glue	libavcodec/imgconvert_template.h	/^static void glue(RGB_NAME, _to_rgba32)(AVPicture *dst, const AVPicture *src,$/;"	f
glue	libavcodec/imgconvert_template.h	/^static void glue(RGB_NAME, _to_yuv420p)(AVPicture *dst, const AVPicture *src,$/;"	f
glue	libavcodec/imgconvert_template.h	/^static void glue(gray_to_, RGB_NAME)(AVPicture *dst, const AVPicture *src,$/;"	f
glue	libavcodec/imgconvert_template.h	/^static void glue(pal8_to_, RGB_NAME)(AVPicture *dst, const AVPicture *src,$/;"	f
glue	libavcodec/imgconvert_template.h	/^static void glue(rgb24_to_, RGB_NAME)(AVPicture *dst, const AVPicture *src,$/;"	f
glue	libavcodec/imgconvert_template.h	/^static void glue(rgba32_to_, RGB_NAME)(AVPicture *dst, const AVPicture *src,$/;"	f
glue	libavcodec/imgconvert_template.h	/^static void glue(yuv420p_to_, RGB_NAME)(AVPicture *dst, const AVPicture *src,$/;"	f
glue	libavcodec/imgconvert_template.h	/^static void glue(yuvj420p_to_, RGB_NAME)(AVPicture *dst, const AVPicture *src,$/;"	f
glyphs	vhook/drawtext.c	/^  FT_Glyph   glyphs[ 255 ]; $/;"	m	file:
glyphs_index	vhook/drawtext.c	/^  unsigned int glyphs_index[ 255 ];$/;"	m	file:
gmc	libavcodec/dsputil.h	/^    void (*gmc )(uint8_t *dst\/*align 8*\/, uint8_t *src\/*align 1*\/, int stride, int h, int ox, int oy,$/;"	m	struct:DSPContext
gmc1	libavcodec/dsputil.h	/^    void (*gmc1)(uint8_t *dst\/*align 8*\/, uint8_t *src\/*align 1*\/, int srcStride, int h, int x16, int y16, int rounder);$/;"	m	struct:DSPContext
gmc1_altivec	libavcodec/ppc/gmc_altivec.c	/^void gmc1_altivec(uint8_t *dst \/* align 8 *\/, uint8_t *src \/* align1 *\/, int stride, int h, int x16, int y16, int rounder)$/;"	f
gmc1_c	libavcodec/dsputil.c	/^static void gmc1_c(uint8_t *dst, uint8_t *src, int stride, int h, int x16, int y16, int rounder)$/;"	f	file:
gmc1_c	libavcodec/sh4/qpel.c	/^static void gmc1_c(uint8_t *dst, uint8_t *src, int stride, int h, int x16, int y16, int rounder)$/;"	f	file:
gmc1_motion	libavcodec/mpegvideo.c	/^static inline void gmc1_motion(MpegEncContext *s,$/;"	f	file:
gmc_c	libavcodec/dsputil.c	/^static void gmc_c(uint8_t *dst, uint8_t *src, int stride, int h, int ox, int oy, $/;"	f	file:
gmc_c	libavcodec/sh4/qpel.c	/^static void gmc_c(uint8_t *dst, uint8_t *src, int stride, int h, int ox, int oy, $/;"	f	file:
gmc_motion	libavcodec/mpegvideo.c	/^static inline void gmc_motion(MpegEncContext *s,$/;"	f	file:
gob_index	libavcodec/mpegvideo.h	/^    int gob_index;$/;"	m	struct:MpegEncContext
gob_number	libavcodec/h261.c	/^    int gob_number;$/;"	m	struct:H261Context	file:
gob_start_code_skipped	libavcodec/h261.c	/^    int gob_start_code_skipped; \/\/ 1 if gob start code is already read before gob header is read$/;"	m	struct:H261Context	file:
golden_frame	libavcodec/vp3.c	/^    AVFrame golden_frame;$/;"	m	struct:Vp3DecodeContext	file:
golomb_to_inter_cbp	libavcodec/h264data.h	/^static const uint8_t golomb_to_inter_cbp[48]={$/;"	v
golomb_to_intra4x4_cbp	libavcodec/h264data.h	/^static const uint8_t golomb_to_intra4x4_cbp[48]={$/;"	v
golomb_to_pict_type	libavcodec/h264data.h	/^static const uint8_t golomb_to_pict_type[5]=$/;"	v
gop_picture_number	libavcodec/mpegvideo.h	/^    int gop_picture_number;  \/\/\/< index of the first picture of a GOP based on fake_pic_num & mpeg1 specific $/;"	m	struct:MpegEncContext
gop_size	ffmpeg.c	/^static int gop_size = 12;$/;"	v	file:
gop_size	libavcodec/avcodec.h	/^    int gop_size;$/;"	m	struct:AVCodecContext
gop_size	libavcodec/mpegvideo.h	/^    int gop_size;$/;"	m	struct:MpegEncContext
got_avcC	libavcodec/h264.c	/^    int got_avcC; \/\/\/< flag used to parse avcC data only once$/;"	m	struct:H264Context	file:
got_key_frame	ffserver.c	/^    int got_key_frame; \/* stream 0 => 1, stream 1 => 2, stream 2=> 4 *\/$/;"	m	struct:HTTPContext	file:
gp	libavcodec/alpha/regdef.h	41;"	d
gpmask	libavformat/oggparsetheora.c	/^    int gpmask;$/;"	m	struct:theora_params	file:
gpshift	libavformat/oggparsetheora.c	/^    int gpshift;$/;"	m	struct:theora_params	file:
gptopts	libavformat/ogg2.h	/^    uint64_t (*gptopts)(AVFormatContext *, int, uint64_t);$/;"	m	struct:ogg_codec
grab_device	ffmpeg.c	/^static char *grab_device = NULL;$/;"	v	file:
grab_read_close	libavformat/grab.c	/^static int grab_read_close(AVFormatContext *s1)$/;"	f	file:
grab_read_header	libavformat/grab.c	/^static int grab_read_header(AVFormatContext *s1, AVFormatParameters *ap)$/;"	f	file:
grab_read_packet	libavformat/grab.c	/^static int grab_read_packet(AVFormatContext *s1, AVPacket *pkt)$/;"	f	file:
granule	libavformat/ogg2.h	/^    uint64_t granule, lastgp;$/;"	m	struct:ogg_stream
gray_to_mono	libavcodec/imgconvert.c	/^static void gray_to_mono(AVPicture *dst, const AVPicture *src,$/;"	f	file:
gray_to_monoblack	libavcodec/imgconvert.c	/^static void gray_to_monoblack(AVPicture *dst, const AVPicture *src,$/;"	f	file:
gray_to_monowhite	libavcodec/imgconvert.c	/^static void gray_to_monowhite(AVPicture *dst, const AVPicture *src,$/;"	f	file:
grow21	libavcodec/imgconvert.c	/^static void grow21(uint8_t *dst, int dst_wrap,$/;"	f	file:
grow21_line	libavcodec/imgconvert.c	/^static void grow21_line(uint8_t *dst, const uint8_t *src,$/;"	f	file:
grow22	libavcodec/imgconvert.c	/^static void grow22(uint8_t *dst, int dst_wrap,$/;"	f	file:
grow41	libavcodec/imgconvert.c	/^static void grow41(uint8_t *dst, int dst_wrap,$/;"	f	file:
grow41_line	libavcodec/imgconvert.c	/^static void grow41_line(uint8_t *dst, const uint8_t *src,$/;"	f	file:
grow44	libavcodec/imgconvert.c	/^static void grow44(uint8_t *dst, int dst_wrap,$/;"	f	file:
gsp	libavcodec/ra144.c	/^	unsigned short	*gsp;$/;"	m	file:
guess_dc	libavcodec/error_resilience.c	/^static void guess_dc(MpegEncContext *s, int16_t *dc, int w, int h, int stride, int is_luma){$/;"	f	file:
guess_format	libavformat/utils.c	/^AVOutputFormat *guess_format(const char *short_name, const char *filename, $/;"	f
guess_image_format	libavformat/utils.c	/^AVImageFormat *guess_image_format(const char *filename)$/;"	f
guess_mv	libavcodec/error_resilience.c	/^static void guess_mv(MpegEncContext *s){$/;"	f	file:
guess_ni_flag	libavformat/avidec.c	/^static int guess_ni_flag(AVFormatContext *s){$/;"	f	file:
guess_stream_format	libavformat/utils.c	/^AVOutputFormat *guess_stream_format(const char *short_name, const char *filename, $/;"	f
guid	libavformat/asf.h	/^    GUID guid;			\/\/ generated by client computer$/;"	m
gval	libavcodec/ra144.c	/^	unsigned int	 gval;$/;"	m	file:
h	libavcodec/truemotion1.c	/^    int x, y, w, h;$/;"	m	struct:TrueMotion1Context	file:
h	tests/videogen.c	/^    int x, y, w, h;$/;"	m	struct:VObj	file:
h	vhook/fish.c	/^    int h;  \/* 0 .. 360 *\/$/;"	m	file:
h261_cbp_tab	libavcodec/h261data.h	/^const uint8_t h261_cbp_tab[63][2] =$/;"	v
h261_cbp_vlc	libavcodec/h261.c	/^static VLC h261_cbp_vlc;$/;"	v	file:
h261_decode_block	libavcodec/h261.c	/^static int h261_decode_block(H261Context * h, DCTELEM * block,$/;"	f	file:
h261_decode_end	libavcodec/h261.c	/^static int h261_decode_end(AVCodecContext *avctx)$/;"	f	file:
h261_decode_frame	libavcodec/h261.c	/^static int h261_decode_frame(AVCodecContext *avctx,$/;"	f	file:
h261_decode_gob	libavcodec/h261.c	/^static int h261_decode_gob(H261Context *h){$/;"	f	file:
h261_decode_gob_header	libavcodec/h261.c	/^static int h261_decode_gob_header(H261Context *h){$/;"	f	file:
h261_decode_init	libavcodec/h261.c	/^static int h261_decode_init(AVCodecContext *avctx){$/;"	f	file:
h261_decode_init_vlc	libavcodec/h261.c	/^static void h261_decode_init_vlc(H261Context *h){$/;"	f	file:
h261_decode_mb	libavcodec/h261.c	/^static int h261_decode_mb(H261Context *h){$/;"	f	file:
h261_decode_mb_skipped	libavcodec/h261.c	/^static int h261_decode_mb_skipped(H261Context *h, int mba1, int mba2 )$/;"	f	file:
h261_decode_picture_header	libavcodec/h261.c	/^int h261_decode_picture_header(H261Context *h){$/;"	f
h261_decoder	libavcodec/h261.c	/^AVCodec h261_decoder = {$/;"	v
h261_encode_block	libavcodec/h261.c	/^static void h261_encode_block(H261Context * h, DCTELEM * block, int n){$/;"	f	file:
h261_encode_gob_header	libavcodec/h261.c	/^static void h261_encode_gob_header(MpegEncContext * s, int mb_line){$/;"	f	file:
h261_encode_motion	libavcodec/h261.c	/^static void h261_encode_motion(H261Context * h, int val){$/;"	f	file:
h261_encoder	libavcodec/h261.c	/^AVCodec h261_encoder = {$/;"	v
h261_find_frame_end	libavcodec/h261.c	/^static int h261_find_frame_end(ParseContext *pc, AVCodecContext* avctx, const uint8_t *buf, int buf_size){$/;"	f	file:
h261_iformat	libavformat/raw.c	/^AVInputFormat h261_iformat = {$/;"	v
h261_loop_filter	libavcodec/dsputil.h	/^    void (*h261_loop_filter)(uint8_t *src, int stride);$/;"	m	struct:DSPContext
h261_loop_filter_c	libavcodec/dsputil.c	/^static void h261_loop_filter_c(uint8_t *src, int stride){$/;"	f	file:
h261_mba_bits	libavcodec/h261data.h	/^const uint8_t h261_mba_bits[35] = {$/;"	v
h261_mba_code	libavcodec/h261data.h	/^const uint8_t h261_mba_code[35] = {$/;"	v
h261_mba_vlc	libavcodec/h261.c	/^static VLC h261_mba_vlc;$/;"	v	file:
h261_mtype_bits	libavcodec/h261data.h	/^const uint8_t h261_mtype_bits[10] = {$/;"	v
h261_mtype_code	libavcodec/h261data.h	/^const uint8_t h261_mtype_code[10] = {$/;"	v
h261_mtype_map	libavcodec/h261data.h	/^static const int h261_mtype_map[10]= {$/;"	v
h261_mtype_vlc	libavcodec/h261.c	/^static VLC h261_mtype_vlc;$/;"	v	file:
h261_mv_tab	libavcodec/h261data.h	/^const uint8_t h261_mv_tab[17][2] = {$/;"	v
h261_mv_vlc	libavcodec/h261.c	/^static VLC h261_mv_vlc;$/;"	v	file:
h261_oformat	libavformat/raw.c	/^AVOutputFormat h261_oformat = {$/;"	v
h261_parse	libavcodec/h261.c	/^static int h261_parse(AVCodecParserContext *s,$/;"	f	file:
h261_parser	libavcodec/h261.c	/^AVCodecParser h261_parser = {$/;"	v
h261_probe	libavformat/raw.c	/^static int h261_probe(AVProbeData *p)$/;"	f	file:
h261_rl_tcoeff	libavcodec/h261data.h	/^static RLTable h261_rl_tcoeff = {$/;"	v
h261_tcoeff_level	libavcodec/h261data.h	/^const int8_t h261_tcoeff_level[64] = {$/;"	v
h261_tcoeff_run	libavcodec/h261data.h	/^const int8_t h261_tcoeff_run[64] = {$/;"	v
h261_tcoeff_vlc	libavcodec/h261data.h	/^const uint16_t h261_tcoeff_vlc[65][2] = {$/;"	v
h263_aic	libavcodec/mpegvideo.h	/^    int h263_aic;                   \/\/\/< Advanded INTRA Coding (AIC) $/;"	m	struct:MpegEncContext
h263_aic_dir	libavcodec/mpegvideo.h	/^    int h263_aic_dir;               \/\/\/< AIC direction: 0 = left, 1 = top$/;"	m	struct:MpegEncContext
h263_chroma_roundtab	libavcodec/mpegvideo.c	/^static const uint8_t h263_chroma_roundtab[16] = {$/;"	v	file:
h263_decode_block	libavcodec/h263.c	/^static int h263_decode_block(MpegEncContext * s, DCTELEM * block,$/;"	f	file:
h263_decode_dquant	libavcodec/h263.c	/^static void h263_decode_dquant(MpegEncContext *s){$/;"	f	file:
h263_decode_gob_header	libavcodec/h263.c	/^static int h263_decode_gob_header(MpegEncContext *s)$/;"	f	file:
h263_decode_init_vlc	libavcodec/h263.c	/^void h263_decode_init_vlc(MpegEncContext *s)$/;"	f
h263_decode_motion	libavcodec/h263.c	/^static int h263_decode_motion(MpegEncContext * s, int pred, int f_code)$/;"	f	file:
h263_decode_picture_header	libavcodec/h263.c	/^int h263_decode_picture_header(MpegEncContext *s)$/;"	f
h263_decoder	libavcodec/h263dec.c	/^AVCodec h263_decoder = {$/;"	v
h263_encode_block	libavcodec/h263.c	/^static void h263_encode_block(MpegEncContext * s, DCTELEM * block, int n)$/;"	f	file:
h263_encode_gob_header	libavcodec/h263.c	/^void h263_encode_gob_header(MpegEncContext * s, int mb_line)$/;"	f
h263_encode_init	libavcodec/h263.c	/^void h263_encode_init(MpegEncContext *s)$/;"	f
h263_encode_mb	libavcodec/h263.c	/^void h263_encode_mb(MpegEncContext * s,$/;"	f
h263_encode_picture_header	libavcodec/h263.c	/^void h263_encode_picture_header(MpegEncContext * s, int picture_number)$/;"	f
h263_encoder	libavcodec/mpegvideo.c	/^AVCodec h263_encoder = {$/;"	v
h263_find_frame_end	libavcodec/h263dec.c	/^static int h263_find_frame_end(ParseContext *pc, const uint8_t *buf, int buf_size){$/;"	f	file:
h263_flv	libavcodec/mpegvideo.h	/^    int h263_flv;     \/\/\/< use flv h263 header $/;"	m	struct:MpegEncContext
h263_format	libavcodec/h263data.h	/^static const uint16_t h263_format[8][2] = {$/;"	v
h263_get_motion_length	libavcodec/h263.c	/^static inline int h263_get_motion_length(MpegEncContext * s, int val, int f_code){$/;"	f	file:
h263_get_picture_format	libavcodec/h263.c	/^int h263_get_picture_format(int width, int height)$/;"	f
h263_h_loop_filter	libavcodec/dsputil.h	/^    void (*h263_h_loop_filter)(uint8_t *src, int stride, int qscale);$/;"	m	struct:DSPContext
h263_h_loop_filter_c	libavcodec/dsputil.c	/^static void h263_h_loop_filter_c(uint8_t *src, int stride, int qscale){$/;"	f	file:
h263_h_loop_filter_mmx	libavcodec/i386/dsputil_mmx.c	/^static void h263_h_loop_filter_mmx(uint8_t *src, int stride, int qscale){$/;"	f	file:
h263_iformat	libavformat/raw.c	/^AVInputFormat h263_iformat = {$/;"	v
h263_long_vectors	libavcodec/mpegvideo.h	/^    int h263_long_vectors;      \/\/\/< use horrible h263v1 long vector mode $/;"	m	struct:MpegEncContext
h263_mb_type_b_map	libavcodec/h263data.h	/^static const int h263_mb_type_b_map[15]= {$/;"	v
h263_mbtype_b_tab	libavcodec/h263data.h	/^static const uint8_t h263_mbtype_b_tab[15][2] = {$/;"	v
h263_mbtype_b_vlc	libavcodec/h263.c	/^static VLC h263_mbtype_b_vlc;$/;"	v	file:
h263_msmpeg4	libavcodec/mpegvideo.h	/^    int h263_msmpeg4; \/\/\/< generate MSMPEG4 compatible stream (deprecated, use msmpeg4_version instead)$/;"	m	struct:MpegEncContext
h263_mv4_search	libavcodec/motion_est.c	/^static inline int h263_mv4_search(MpegEncContext *s, int mx, int my, int shift)$/;"	f	file:
h263_oformat	libavformat/raw.c	/^AVOutputFormat h263_oformat = {$/;"	v
h263_parse	libavcodec/h263dec.c	/^static int h263_parse(AVCodecParserContext *s,$/;"	f	file:
h263_parser	libavcodec/h263dec.c	/^AVCodecParser h263_parser = {$/;"	v
h263_plus	libavcodec/mpegvideo.h	/^    int h263_plus;    \/\/\/< h263 plus headers $/;"	m	struct:MpegEncContext
h263_pred	libavcodec/mpegvideo.h	/^    int h263_pred;    \/\/\/< use mpeg4\/h263 ac\/dc predictions $/;"	m	struct:MpegEncContext
h263_pred_acdc	libavcodec/h263.c	/^static void h263_pred_acdc(MpegEncContext * s, DCTELEM *block, int n)$/;"	f	file:
h263_pred_dc	libavcodec/h263.c	/^static int h263_pred_dc(MpegEncContext * s, int n, uint16_t **dc_val_ptr)$/;"	f	file:
h263_pred_motion	libavcodec/h263.c	/^int16_t *h263_pred_motion(MpegEncContext * s, int block, int dir,$/;"	f
h263_probe	libavformat/raw.c	/^static int h263_probe(AVProbeData *p)$/;"	f	file:
h263_slice_structured	libavcodec/mpegvideo.h	/^    int h263_slice_structured;$/;"	m	struct:MpegEncContext
h263_v_loop_filter	libavcodec/dsputil.h	/^    void (*h263_v_loop_filter)(uint8_t *src, int stride, int qscale);$/;"	m	struct:DSPContext
h263_v_loop_filter_c	libavcodec/dsputil.c	/^static void h263_v_loop_filter_c(uint8_t *src, int stride, int qscale){$/;"	f	file:
h263_v_loop_filter_mmx	libavcodec/i386/dsputil_mmx.c	/^static void h263_v_loop_filter_mmx(uint8_t *src, int stride, int qscale){$/;"	f	file:
h263i_decoder	libavcodec/h263dec.c	/^AVCodec h263i_decoder = {$/;"	v
h263p_decode_umotion	libavcodec/h263.c	/^static int h263p_decode_umotion(MpegEncContext * s, int pred)$/;"	f	file:
h263p_encode_umotion	libavcodec/h263.c	/^static void h263p_encode_umotion(MpegEncContext * s, int val)$/;"	f	file:
h263p_encoder	libavcodec/mpegvideo.c	/^AVCodec h263p_encoder = {$/;"	v
h264_biweight_func	libavcodec/dsputil.h	/^typedef void (*h264_biweight_func)(uint8_t *dst, uint8_t *src, int stride, int log2_denom, int weightd, int weights, int offsetd, int offsets);$/;"	t
h264_chroma_mc_func	libavcodec/dsputil.h	/^typedef void (*h264_chroma_mc_func)(uint8_t *dst\/*align 8*\/, uint8_t *src\/*align 1*\/, int srcStride, int h, int x, int y);$/;"	t
h264_decoder	libavcodec/h264.c	/^AVCodec h264_decoder = {$/;"	v
h264_h_loop_filter_chroma	libavcodec/dsputil.h	/^    void (*h264_h_loop_filter_chroma)(uint8_t *pix, int stride, int alpha, int beta, int8_t *tc0);$/;"	m	struct:DSPContext
h264_h_loop_filter_chroma_c	libavcodec/dsputil.c	/^static void h264_h_loop_filter_chroma_c(uint8_t *pix, int stride, int alpha, int beta, int8_t *tc0)$/;"	f	file:
h264_h_loop_filter_chroma_intra	libavcodec/dsputil.h	/^    void (*h264_h_loop_filter_chroma_intra)(uint8_t *pix, int stride, int alpha, int beta);$/;"	m	struct:DSPContext
h264_h_loop_filter_chroma_intra_c	libavcodec/dsputil.c	/^static void h264_h_loop_filter_chroma_intra_c(uint8_t *pix, int stride, int alpha, int beta)$/;"	f	file:
h264_h_loop_filter_chroma_intra_mmx2	libavcodec/i386/dsputil_mmx.c	/^static void h264_h_loop_filter_chroma_intra_mmx2(uint8_t *pix, int stride, int alpha, int beta)$/;"	f	file:
h264_h_loop_filter_chroma_mmx2	libavcodec/i386/dsputil_mmx.c	/^static void h264_h_loop_filter_chroma_mmx2(uint8_t *pix, int stride, int alpha, int beta, int8_t *tc0)$/;"	f	file:
h264_h_loop_filter_luma	libavcodec/dsputil.h	/^    void (*h264_h_loop_filter_luma)(uint8_t *pix, int stride, int alpha, int beta, int8_t *tc0);$/;"	m	struct:DSPContext
h264_h_loop_filter_luma_c	libavcodec/dsputil.c	/^static void h264_h_loop_filter_luma_c(uint8_t *pix, int stride, int alpha, int beta, int8_t *tc0)$/;"	f	file:
h264_h_loop_filter_luma_mmx2	libavcodec/i386/dsputil_mmx.c	/^static void h264_h_loop_filter_luma_mmx2(uint8_t *pix, int stride, int alpha, int beta, int8_t *tc0)$/;"	f	file:
h264_idct_add	libavcodec/dsputil.h	/^    void (*h264_idct_add)(uint8_t *dst, DCTELEM *block, int stride);$/;"	m	struct:DSPContext
h264_iformat	libavformat/raw.c	/^AVInputFormat h264_iformat = {$/;"	v
h264_loop_filter_chroma_c	libavcodec/dsputil.c	/^static inline void h264_loop_filter_chroma_c(uint8_t *pix, int xstride, int ystride, int alpha, int beta, int8_t *tc0)$/;"	f	file:
h264_loop_filter_chroma_intra_c	libavcodec/dsputil.c	/^static inline void h264_loop_filter_chroma_intra_c(uint8_t *pix, int xstride, int ystride, int alpha, int beta)$/;"	f	file:
h264_loop_filter_chroma_intra_mmx2	libavcodec/i386/dsputil_mmx.c	/^static inline void h264_loop_filter_chroma_intra_mmx2(uint8_t *pix, int stride, int alpha1, int beta1)$/;"	f	file:
h264_loop_filter_chroma_mmx2	libavcodec/i386/dsputil_mmx.c	/^static inline void h264_loop_filter_chroma_mmx2(uint8_t *pix, int stride, int alpha1, int beta1, int8_t *tc0)$/;"	f	file:
h264_loop_filter_luma_c	libavcodec/dsputil.c	/^static inline void h264_loop_filter_luma_c(uint8_t *pix, int xstride, int ystride, int alpha, int beta, int8_t *tc0)$/;"	f	file:
h264_loop_filter_luma_mmx2	libavcodec/i386/dsputil_mmx.c	/^static inline void h264_loop_filter_luma_mmx2(uint8_t *pix, int stride, int alpha1, int beta1, int8_t *tc0)$/;"	f	file:
h264_luma_dc_dequant_idct_c	libavcodec/h264.c	/^static void h264_luma_dc_dequant_idct_c(DCTELEM *block, int qp){$/;"	f	file:
h264_oformat	libavformat/raw.c	/^AVOutputFormat h264_oformat = {$/;"	v
h264_parse	libavcodec/h264.c	/^static int h264_parse(AVCodecParserContext *s,$/;"	f	file:
h264_parser	libavcodec/h264.c	/^AVCodecParser h264_parser = {$/;"	v
h264_v_loop_filter_chroma	libavcodec/dsputil.h	/^    void (*h264_v_loop_filter_chroma)(uint8_t *pix, int stride, int alpha, int beta, int8_t *tc0);$/;"	m	struct:DSPContext
h264_v_loop_filter_chroma_c	libavcodec/dsputil.c	/^static void h264_v_loop_filter_chroma_c(uint8_t *pix, int stride, int alpha, int beta, int8_t *tc0)$/;"	f	file:
h264_v_loop_filter_chroma_intra	libavcodec/dsputil.h	/^    void (*h264_v_loop_filter_chroma_intra)(uint8_t *pix, int stride, int alpha, int beta);$/;"	m	struct:DSPContext
h264_v_loop_filter_chroma_intra_c	libavcodec/dsputil.c	/^static void h264_v_loop_filter_chroma_intra_c(uint8_t *pix, int stride, int alpha, int beta)$/;"	f	file:
h264_v_loop_filter_chroma_intra_mmx2	libavcodec/i386/dsputil_mmx.c	/^static void h264_v_loop_filter_chroma_intra_mmx2(uint8_t *pix, int stride, int alpha, int beta)$/;"	f	file:
h264_v_loop_filter_chroma_mmx2	libavcodec/i386/dsputil_mmx.c	/^static void h264_v_loop_filter_chroma_mmx2(uint8_t *pix, int stride, int alpha, int beta, int8_t *tc0)$/;"	f	file:
h264_v_loop_filter_luma	libavcodec/dsputil.h	/^    void (*h264_v_loop_filter_luma)(uint8_t *pix, int stride, int alpha, int beta, int8_t *tc0);$/;"	m	struct:DSPContext
h264_v_loop_filter_luma_c	libavcodec/dsputil.c	/^static void h264_v_loop_filter_luma_c(uint8_t *pix, int stride, int alpha, int beta, int8_t *tc0)$/;"	f	file:
h264_v_loop_filter_luma_mmx2	libavcodec/i386/dsputil_mmx.c	/^static void h264_v_loop_filter_luma_mmx2(uint8_t *pix, int stride, int alpha, int beta, int8_t *tc0)$/;"	f	file:
h264_weight_func	libavcodec/dsputil.h	/^typedef void (*h264_weight_func)(uint8_t *block, int stride, int log2_denom, int weight, int offset);$/;"	t
hChromaSubSample	libavcodec/libpostproc/postprocess_internal.h	/^	int hChromaSubSample;$/;"	m	struct:PPContext
h_block_filter	libavcodec/error_resilience.c	/^static void h_block_filter(MpegEncContext *s, uint8_t *dst, int w, int h, int stride, int is_luma){$/;"	f	file:
h_cos	tests/rotozoom.c	/^int h_cos [360];$/;"	v
h_count	libavcodec/mjpeg.c	/^    int h_count[MAX_COMPONENTS]; \/* horizontal and vertical count for each component *\/$/;"	m	struct:MJpegDecodeContext	file:
h_edge_pos	libavcodec/mpegvideo.h	/^    int h_edge_pos, v_edge_pos;\/\/\/< horizontal \/ vertical position of the right\/bottom edge (pixel replicateion)$/;"	m	struct:MpegEncContext
h_incr	libavcodec/imgresample.c	/^    int h_incr, v_incr;$/;"	m	struct:ImgReSampleContext	file:
h_max	libavcodec/mjpeg.c	/^    int h_max, v_max; \/* maximum h and v counts *\/$/;"	m	struct:MJpegDecodeContext	file:
h_resample	libavcodec/imgresample.c	/^static void h_resample(uint8_t *dst, int dst_width, const uint8_t *src,$/;"	f	file:
h_resample_fast	libavcodec/imgresample.c	/^static void h_resample_fast(uint8_t *dst, int dst_width, const uint8_t *src,$/;"	f	file:
h_resample_fast4_mmx	libavcodec/imgresample.c	/^static void h_resample_fast4_mmx(uint8_t *dst, int dst_width,$/;"	f	file:
h_resample_slow	libavcodec/imgresample.c	/^static void h_resample_slow(uint8_t *dst, int dst_width,$/;"	f	file:
h_scount	libavcodec/mjpeg.c	/^    int h_scount[MAX_COMPONENTS];$/;"	m	struct:MJpegDecodeContext	file:
h_sin	tests/rotozoom.c	/^int h_sin [360];$/;"	v
hadamard8_diff	libavcodec/dsputil.h	/^    me_cmp_func hadamard8_diff[5];$/;"	m	struct:DSPContext
hadamard8_diff16_altivec	libavcodec/ppc/dsputil_altivec.c	/^int hadamard8_diff16_altivec(\/*MpegEncContext*\/ void *s, uint8_t *dst, uint8_t *src, int stride, int h){$/;"	f
hadamard8_diff16x8_altivec	libavcodec/ppc/dsputil_altivec.c	/^static int hadamard8_diff16x8_altivec(\/*MpegEncContext*\/ void *s, uint8_t *dst, uint8_t *src, int stride, int h) {$/;"	f	file:
hadamard8_diff8x8_altivec	libavcodec/ppc/dsputil_altivec.c	/^int hadamard8_diff8x8_altivec(\/*MpegEncContext*\/ void *s, uint8_t *dst, uint8_t *src, int stride, int h){$/;"	f
hadamard8_diff8x8_c	libavcodec/dsputil.c	/^static int hadamard8_diff8x8_c(\/*MpegEncContext*\/ void *s, uint8_t *dst, uint8_t *src, int stride, int h){$/;"	f	file:
hadamard8_diff_mmx	libavcodec/i386/dsputil_mmx.c	/^static int hadamard8_diff_mmx(void *s, uint8_t *src1, uint8_t *src2, int stride, int h){$/;"	f	file:
hadamard8_diff_mmx2	libavcodec/i386/dsputil_mmx.c	/^static int hadamard8_diff_mmx2(void *s, uint8_t *src1, uint8_t *src2, int stride, int h){$/;"	f	file:
hadamard8_intra8x8_c	libavcodec/dsputil.c	/^static int hadamard8_intra8x8_c(\/*MpegEncContext*\/ void *s, uint8_t *src, uint8_t *dummy, int stride, int h){$/;"	f	file:
halfpel_flag	libavcodec/h264.c	/^    int halfpel_flag;$/;"	m	struct:H264Context	file:
halfpq	libavcodec/vc9.c	/^    uint8_t halfpq;       \/\/\/< Uniform quant over image and qp+.5$/;"	m	struct:VC9Context	file:
halfrate	libavcodec/liba52/a52_internal.h	/^    uint8_t halfrate;		\/* halfrate factor *\/$/;"	m	struct:a52_state_s
halfrate	libavcodec/liba52/parse.c	/^static uint8_t halfrate[12] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3};$/;"	v	file:
halfratecod	libavcodec/ac3.h	/^    int halfratecod;$/;"	m	struct:AC3BitAllocParameters
halfratecod	libavcodec/ac3enc.c	/^    int halfratecod;$/;"	m	struct:AC3EncodeContext	file:
halfw	libavformat/grab.c	/^    int halfw;$/;"	m	file:
handle	libavcodec/a52dec.c	/^    void* handle;$/;"	m	struct:AC3DecodeState	file:
handle	libavcodec/faad.c	/^    void* handle;		\/* dlopen handle *\/$/;"	m	file:
handle	libavformat/avio.h	/^    URLContext *handle;$/;"	m	struct:URLPollEntry
handle	libavformat/dc1394.c	/^    raw1394handle_t handle;$/;"	m	struct:dc1394_data	file:
handle_child_exit	ffserver.c	/^static void handle_child_exit(int sig)$/;"	f	file:
handle_connection	ffserver.c	/^static int handle_connection(HTTPContext *c)$/;"	f	file:
handle_packet	libavformat/mpegts.c	/^static void handle_packet(MpegTSContext *ts, const uint8_t *packet)$/;"	f	file:
handle_packets	libavformat/mpegts.c	/^static int handle_packets(MpegTSContext *ts, int nb_packets)$/;"	f	file:
handle_slices	libavcodec/msmpeg4.c	/^static inline void handle_slices(MpegEncContext *s){$/;"	f	file:
hasAudio	libavformat/flvenc.c	/^    int hasAudio;$/;"	m	struct:FLVContext	file:
hasKeyframes	libavformat/movenc.c	/^    int         hasKeyframes;$/;"	m	struct:MOVIndex	file:
hasVideo	libavformat/flvenc.c	/^    int hasVideo;$/;"	m	struct:FLVContext	file:
has_altivec	libavcodec/ppc/dsputil_altivec.c	/^int has_altivec(void)$/;"	f
has_audio	libavformat/dv.c	/^    int         has_audio;    \/* frame under contruction has audio *\/$/;"	m	struct:DVMuxContext	file:
has_b_frames	libavcodec/avcodec.h	/^    int has_b_frames;$/;"	m	struct:AVCodecContext
has_codec_parameters	libavformat/utils.c	/^static int has_codec_parameters(AVCodecContext *enc)$/;"	f	file:
has_quit	libavformat/beosaudio.cpp	/^    int has_quit; \/* signal callbacks not to wait *\/$/;"	m	file:
has_video	libavformat/dv.c	/^    int         has_video;    \/* frame under contruction has video *\/$/;"	m	struct:DVMuxContext	file:
hbits	libavcodec/vp3.c	/^    unsigned int hbits;$/;"	m	struct:Vp3DecodeContext	file:
hd	libavformat/http.c	/^    URLContext *hd;$/;"	m	file:
hdr	libavformat/asf.h	/^    ASFMainHeader hdr;$/;"	m
head1_guid	libavformat/asf.h	/^static const GUID head1_guid = {$/;"	v
head2_guid	libavformat/asf.h	/^static const GUID head2_guid = {$/;"	v
header	libavcodec/parser.c	/^    uint32_t header;$/;"	m	struct:MpegAudioParseContext	file:
header	libavcodec/shorten.c	/^    uint8_t header[OUT_BUFFER_SIZE];$/;"	m	struct:ShortenContext	file:
header	libavformat/ffm.c	/^    uint8_t header[FRAME_HEADER_SIZE];$/;"	m	struct:FFMContext	file:
header	libavformat/mpegts.c	/^    uint8_t header[MAX_PES_HEADER_SIZE];$/;"	m	struct:PESContext	file:
header	libavformat/ogg2.h	/^    int (*header)(AVFormatContext *, int);$/;"	m	struct:ogg_codec
header	libavformat/ogg2.h	/^    int header;$/;"	m	struct:ogg_stream
header_bits	libavcodec/avcodec.h	/^    int header_bits;$/;"	m	struct:AVCodecContext
header_bits	libavcodec/mpegvideo.h	/^    int header_bits;$/;"	m	struct:MpegEncContext
header_count	libavcodec/parser.c	/^    int header_count;$/;"	m	struct:MpegAudioParseContext	file:
header_data	libavformat/mov.c	/^    uint8_t *header_data;$/;"	m	struct:MOVStreamContext	file:
header_handled	libavformat/ogg.c	/^    int header_handled ;$/;"	m	struct:OggContext	file:
header_len	libavformat/mov.c	/^    unsigned int header_len;$/;"	m	struct:MOVStreamContext	file:
header_parsed	libavcodec/adx.c	/^    int header_parsed;$/;"	m	file:
header_size	libavcodec/shorten.c	/^    int header_size;$/;"	m	struct:ShortenContext	file:
header_size	libavcodec/truemotion1.c	/^    uint8_t header_size;$/;"	m	struct:frame_header	file:
header_state	libavcodec/snow.c	/^    uint8_t header_state[32];$/;"	m	struct:SnowContext	file:
header_state	libavformat/mpeg.c	/^    int header_state;$/;"	m	struct:MpegDemuxContext	file:
header_type	libavcodec/truemotion1.c	/^    uint8_t header_type;$/;"	m	struct:frame_header	file:
headers	libavformat/ogg2.h	/^    int headers;$/;"	m	struct:ogg
height	ffplay.c	/^    int width, height, xleft, ytop;$/;"	m	struct:VideoState	file:
height	ffplay.c	/^    int width, height; \/* source height & width *\/$/;"	m	struct:VideoPicture	file:
height	libavcodec/avcodec.h	/^    int height;$/;"	m	struct:AVPanScan
height	libavcodec/avcodec.h	/^    int width, height;$/;"	m	struct:AVCodecContext
height	libavcodec/cinepak.c	/^    int width, height;$/;"	m	struct:CinepakContext	file:
height	libavcodec/cyuv.c	/^    int width, height;$/;"	m	struct:CyuvDecodeContext	file:
height	libavcodec/dvdata.h	/^    int              height;              \/* picture height in pixels *\/$/;"	m	struct:DVprofile
height	libavcodec/ffv1.c	/^    int width, height;$/;"	m	struct:FFV1Context	file:
height	libavcodec/huffyuv.c	/^    int width, height;$/;"	m	struct:HYuvContext	file:
height	libavcodec/indeo3.c	/^    int width, height;$/;"	m	struct:Indeo3DecodeContext	file:
height	libavcodec/indeo3.c	/^  long height;$/;"	m	file:
height	libavcodec/mjpeg.c	/^    int width, height;$/;"	m	struct:MJpegDecodeContext	file:
height	libavcodec/motion_est.c	/^    int height;$/;"	m	struct:Minima	file:
height	libavcodec/mpegvideo.h	/^    int width, height;\/\/\/< picture size. must be a multiple of 16 $/;"	m	struct:MpegEncContext
height	libavcodec/parser.c	/^    int width, height;$/;"	m	struct:ParseContext1	file:
height	libavcodec/png.c	/^    int width, height;$/;"	m	struct:PNGContext	file:
height	libavcodec/snow.c	/^    int height;$/;"	m	struct:Plane	file:
height	libavcodec/snow.c	/^    int height;$/;"	m	struct:SubBand	file:
height	libavcodec/svq1.c	/^static struct { int width; int height; } svq1_frame_size_table[8] = {$/;"	m	file:
height	libavcodec/truemotion1.c	/^    uint16_t height;$/;"	m	struct:frame_header	file:
height	libavcodec/tscc.c	/^    int height;$/;"	m	struct:TsccContext	file:
height	libavcodec/ulti.c	/^    int width, height, blocks;$/;"	m	struct:UltimotionDecodeContext	file:
height	libavcodec/vc9.c	/^    int height;         \/\/\/< Plane height$/;"	m	struct:BitPlane	file:
height	libavcodec/vp3.c	/^    int width, height;$/;"	m	struct:Vp3DecodeContext	file:
height	libavcodec/vqavideo.c	/^    int height;   \/* height of a frame *\/$/;"	m	struct:VqaContext	file:
height	libavformat/4xm.c	/^    int height;$/;"	m	struct:FourxmDemuxContext	file:
height	libavformat/avformat.h	/^    int height; \/* requested height *\/$/;"	m	struct:AVImageInfo
height	libavformat/avformat.h	/^    int height;$/;"	m	struct:AVFormatParameters
height	libavformat/dc1394.c	/^    int height;$/;"	m	struct:dc1394_frame_format	file:
height	libavformat/electronicarts.c	/^    int height;$/;"	m	struct:EaDemuxContext	file:
height	libavformat/grab.c	/^    int width, height;$/;"	m	file:
height	libavformat/idroq.c	/^    int height;$/;"	m	struct:RoqDemuxContext	file:
height	libavformat/img.c	/^    int height;$/;"	m	file:
height	libavformat/png.c	/^    int width, height;$/;"	m	struct:PNGDecodeState	file:
height	libavformat/psxstr.c	/^    int height;$/;"	m	struct:StrChannel	file:
height	libavformat/utils.c	/^    int width, height;$/;"	m	file:
height	libavformat/wc3movie.c	/^    int height;$/;"	m	struct:Wc3DemuxContext	file:
height	tests/rotozoom.c	/^int width, height, wrap;$/;"	v
height	tests/videogen.c	/^int width, height, wrap;$/;"	v
height	vhook/imlib2.c	/^    int height;$/;"	m	struct:_CachedImage	file:
help	cmdutils.h	/^    const char *help;$/;"	m
help	libavcodec/avcodec.h	/^    const char *help; \/\/	const struct AVOption* sub;$/;"	m	struct:AVOption
help	libavcodec/dct-test.c	/^void help(void)$/;"	f
help	libavcodec/fft-test.c	/^void help(void)$/;"	f
help	libavcodec/motion_test.c	/^void help(void)$/;"	f
hex_to_data	libavformat/rtsp.c	/^static int hex_to_data(uint8_t *data, const char *p)$/;"	f	file:
hf_noise16_mmx	libavcodec/i386/dsputil_mmx.c	/^static int hf_noise16_mmx(uint8_t * pix1, int line_size, int h) {$/;"	f	file:
hf_noise8_mmx	libavcodec/i386/dsputil_mmx.c	/^static int hf_noise8_mmx(uint8_t * pix1, int line_size, int h) {$/;"	f	file:
hgain_huffbits	libavcodec/wmadata.h	/^static const uint8_t hgain_huffbits[37] = {$/;"	v
hgain_huffcodes	libavcodec/wmadata.h	/^static const uint16_t hgain_huffcodes[37] = {$/;"	v
hgain_vlc	libavcodec/wmadec.c	/^    VLC hgain_vlc;$/;"	m	struct:WMADecodeContext	file:
hierachy_type	libavcodec/mpegvideo.h	/^    int hierachy_type;$/;"	m	struct:MpegEncContext
high_band_coded	libavcodec/wmadec.c	/^    int high_band_coded[MAX_CHANNELS][HIGH_BAND_MAX_SIZE];$/;"	m	struct:WMADecodeContext	file:
high_band_start	libavcodec/wmadec.c	/^    int high_band_start[BLOCK_NB_SIZES]; \/* index of first coef in high band *\/$/;"	m	struct:WMADecodeContext	file:
high_band_values	libavcodec/wmadec.c	/^    int high_band_values[MAX_CHANNELS][HIGH_BAND_MAX_SIZE];$/;"	m	struct:WMADecodeContext	file:
high_neighbour	libavcodec/vorbis.h	/^    uint_fast16_t *high_neighbour;$/;"	m
history	libavcodec/ra288.c	/^	float	history[8];$/;"	m	file:
hl_decode_mb	libavcodec/h264.c	/^static void hl_decode_mb(H264Context *h){$/;"	f	file:
hl_motion	libavcodec/h264.c	/^static void hl_motion(H264Context *h, uint8_t *dest_y, uint8_t *dest_cb, uint8_t *dest_cr,$/;"	f	file:
hnode_t	libavcodec/idcinvideo.c	/^} hnode_t;$/;"	t	file:
horizClassify_C	libavcodec/libpostproc/postprocess.c	/^static inline int horizClassify_C(uint8_t src[], int stride, PPContext *c){$/;"	f	file:
horizX1Filter	libavcodec/libpostproc/postprocess.c	/^static inline void horizX1Filter(uint8_t *src, int stride, int QP)$/;"	f	file:
horizontal_compose53i	libavcodec/snow.c	/^static void horizontal_compose53i(DWTELEM *b, int width){$/;"	f	file:
horizontal_compose97i	libavcodec/snow.c	/^static void horizontal_compose97i(DWTELEM *b, int width){$/;"	f	file:
horizontal_composeX	libavcodec/snow.c	/^static void horizontal_composeX(DWTELEM *b, int width){$/;"	f	file:
horizontal_decompose53i	libavcodec/snow.c	/^static void horizontal_decompose53i(DWTELEM *b, int width){$/;"	f	file:
horizontal_decompose97i	libavcodec/snow.c	/^static void horizontal_decompose97i(DWTELEM *b, int width){$/;"	f	file:
horizontal_decomposeX	libavcodec/snow.c	/^static void horizontal_decomposeX(DWTELEM *b, int width){$/;"	f	file:
horizontal_filter	libavcodec/vp3.c	/^static void horizontal_filter(unsigned char *first_pixel, int stride,$/;"	f	file:
hpel_avg	libavcodec/mpegvideo.h	/^    op_pixels_func (*hpel_avg)[4];$/;"	m	struct:MotionEstContext
hpel_motion	libavcodec/mpegvideo.c	/^static inline int hpel_motion(MpegEncContext *s, $/;"	f	file:
hpel_motion_lowres	libavcodec/mpegvideo.c	/^static inline int hpel_motion_lowres(MpegEncContext *s, $/;"	f	file:
hpel_motion_search	libavcodec/motion_est_template.c	/^static int hpel_motion_search(MpegEncContext * s,$/;"	f	file:
hpel_put	libavcodec/mpegvideo.h	/^    op_pixels_func (*hpel_put)[4];$/;"	m	struct:MotionEstContext
hrd_buffer	libavcodec/vc9.c	/^    uint16_t *hrd_rate, *hrd_buffer;$/;"	m	struct:VC9Context	file:
hrd_fullness	libavcodec/vc9.c	/^    uint8_t *hrd_fullness;$/;"	m	struct:VC9Context	file:
hrd_num_leaky_buckets	libavcodec/vc9.c	/^    int hrd_num_leaky_buckets;$/;"	m	struct:VC9Context	file:
hrd_param_flag	libavcodec/vc9.c	/^    int hrd_param_flag;   \/\/\/< Presence of Hypothetical Reference$/;"	m	struct:VC9Context	file:
hrd_rate	libavcodec/vc9.c	/^    uint16_t *hrd_rate, *hrd_buffer;$/;"	m	struct:VC9Context	file:
hshift	libavcodec/wmv2.c	/^    int hshift;$/;"	m	struct:Wmv2Context	file:
hth	libavcodec/ac3tab.h	/^static const uint16_t hth[50][3]= {$/;"	v
hthtab	libavcodec/liba52/bit_allocate.c	/^static int hthtab[3][50] = {$/;"	v	file:
hti	libavcodec/vp3.c	/^    int hti;$/;"	m	struct:Vp3DecodeContext	file:
http_close	libavformat/http.c	/^static int http_close(URLContext *h)$/;"	f	file:
http_code	libavformat/http.c	/^    int http_code;$/;"	m	file:
http_connect	libavformat/http.c	/^static int http_connect(URLContext *h, const char *path, const char *hoststr,$/;"	f	file:
http_error	ffserver.c	/^    int http_error;$/;"	m	struct:HTTPContext	file:
http_getc	libavformat/http.c	/^static int http_getc(HTTPContext *s)$/;"	f	file:
http_log	ffserver.c	/^static void __attribute__ ((format (printf, 1, 2))) http_log(const char *fmt, ...) $/;"	f	file:
http_open	libavformat/http.c	/^static int http_open(URLContext *h, const char *uri, int flags)$/;"	f	file:
http_parse_request	ffserver.c	/^static int http_parse_request(HTTPContext *c)$/;"	f	file:
http_prepare_data	ffserver.c	/^static int http_prepare_data(HTTPContext *c)$/;"	f	file:
http_protocol	libavformat/http.c	/^URLProtocol http_protocol = {$/;"	v
http_read	libavformat/http.c	/^static int http_read(URLContext *h, uint8_t *buf, int size)$/;"	f	file:
http_receive_data	ffserver.c	/^static int http_receive_data(HTTPContext *c)$/;"	f	file:
http_send_data	ffserver.c	/^static int http_send_data(HTTPContext *c)$/;"	f	file:
http_server	ffserver.c	/^static int http_server(void)$/;"	f	file:
http_start_receive_data	ffserver.c	/^static int http_start_receive_data(HTTPContext *c)$/;"	f	file:
http_state	ffserver.c	/^const char *http_state[] = {$/;"	v
http_write	libavformat/http.c	/^static int http_write(URLContext *h, uint8_t *buf, int size)$/;"	f	file:
huff_build_tree	libavcodec/idcinvideo.c	/^static void huff_build_tree(IdcinContext *s, int prev) {$/;"	f	file:
huff_code_ac_chrominance	libavcodec/mjpeg.c	/^    uint16_t huff_code_ac_chrominance[256];$/;"	m	struct:MJpegContext	file:
huff_code_ac_luminance	libavcodec/mjpeg.c	/^    uint16_t huff_code_ac_luminance[256];$/;"	m	struct:MJpegContext	file:
huff_code_dc_chrominance	libavcodec/mjpeg.c	/^    uint16_t huff_code_dc_chrominance[12];$/;"	m	struct:MJpegContext	file:
huff_code_dc_luminance	libavcodec/mjpeg.c	/^    uint16_t huff_code_dc_luminance[12];$/;"	m	struct:MJpegContext	file:
huff_code_size	libavcodec/vp3.c	/^    int huff_code_size;$/;"	m	struct:Vp3DecodeContext	file:
huff_code_table	libavcodec/mpegaudiodec.c	/^static uint8_t *huff_code_table[16];$/;"	v	file:
huff_nodes	libavcodec/idcinvideo.c	/^    hnode_t huff_nodes[256][HUF_TOKENS*2];$/;"	m	struct:IdcinContext	file:
huff_quad_vlc	libavcodec/mpegaudiodec.c	/^static VLC huff_quad_vlc[2];$/;"	v	file:
huff_size_ac_chrominance	libavcodec/mjpeg.c	/^    uint8_t huff_size_ac_chrominance[256];$/;"	m	struct:MJpegContext	file:
huff_size_ac_luminance	libavcodec/mjpeg.c	/^    uint8_t huff_size_ac_luminance[256];$/;"	m	struct:MJpegContext	file:
huff_size_dc_chrominance	libavcodec/mjpeg.c	/^    uint8_t huff_size_dc_chrominance[12];$/;"	m	struct:MJpegContext	file:
huff_size_dc_luminance	libavcodec/mjpeg.c	/^    uint8_t huff_size_dc_luminance[12]; \/\/FIXME use array [3] instead of lumi \/ chrom, for easier addressing $/;"	m	struct:MJpegContext	file:
huff_smallest_node	libavcodec/idcinvideo.c	/^static int huff_smallest_node(hnode_t *hnodes, int num_hnodes) {$/;"	f	file:
huff_vlc	libavcodec/mpegaudiodec.c	/^static VLC huff_vlc[16]; $/;"	v	file:
huffbits	libavcodec/wmadec.c	/^    const uint8_t *huffbits;   \/* VLC bit size *\/$/;"	m	struct:CoefVLCTable	file:
huffcodes	libavcodec/wmadec.c	/^    const uint32_t *huffcodes; \/* VLC bit values *\/$/;"	m	struct:CoefVLCTable	file:
huffman_decode	libavcodec/mpegaudiodec.c	/^static int huffman_decode(MPADecodeContext *s, GranuleDef *g,$/;"	f	file:
huffman_table	libavcodec/vp3.c	/^    uint16_t huffman_table[80][32][2];$/;"	m	struct:Vp3DecodeContext	file:
huffyuv_decoder	libavcodec/huffyuv.c	/^AVCodec huffyuv_decoder = {$/;"	v
huffyuv_encoder	libavcodec/huffyuv.c	/^AVCodec huffyuv_encoder = {$/;"	v
hurry_up	libavcodec/avcodec.h	/^    int hurry_up;$/;"	m	struct:AVCodecContext
hurry_up	libavcodec/mpegvideo.h	/^    int hurry_up;     \/**< when set to 1 during decoding, b frames will be skipped$/;"	m	struct:MpegEncContext
i	vhook/watermark.c	/^    int             i;$/;"	m	file:
i2f	libavcodec/g726.c	/^static inline Float11* i2f(int16_t i, Float11* f)$/;"	f	file:
i_count	libavcodec/avcodec.h	/^    int i_count;$/;"	m	struct:AVCodecContext
i_count	libavcodec/mpegvideo.h	/^    int i_count;$/;"	m	struct:MpegEncContext
i_count	libavcodec/mpegvideo.h	/^    int i_count;$/;"	m	struct:RateControlEntry
i_cplx_sum	libavcodec/mpegvideo.h	/^    uint64_t i_cplx_sum[5];$/;"	m	struct:RateControlContext
i_mb_type_info	libavcodec/h264data.h	/^static const IMbInfo i_mb_type_info[26]={$/;"	v
i_quant_factor	libavcodec/avcodec.h	/^    float i_quant_factor;$/;"	m	struct:AVCodecContext
i_quant_offset	libavcodec/avcodec.h	/^    float i_quant_offset;$/;"	m	struct:AVCodecContext
i_tex_bits	libavcodec/avcodec.h	/^    int i_tex_bits;$/;"	m	struct:AVCodecContext
i_tex_bits	libavcodec/mpegvideo.h	/^    int i_tex_bits;$/;"	m	struct:MpegEncContext
i_tex_bits	libavcodec/mpegvideo.h	/^    int i_tex_bits;$/;"	m	struct:RateControlEntry
iabs	libavcodec/vp3.c	/^static inline int iabs (int x) { return ((x < 0) ? -x : x); }$/;"	f	file:
ic	ffplay.c	/^    AVFormatContext *ic;$/;"	m	struct:VideoState	file:
ic	libavformat/rtp.c	/^    AVFormatContext *ic;$/;"	m	struct:RTPDemuxContext	file:
icos36	libavcodec/mpegaudiodec.c	/^static const int icos36[9] = {$/;"	v	file:
id	libavcodec/4xm.c	/^    int id;$/;"	m	struct:CFrameBuffer	file:
id	libavcodec/avcodec.h	/^    enum CodecID id;$/;"	m	struct:AVCodec
id	libavcodec/avcodec.h	/^    int id;$/;"	m	struct:AVPanScan
id	libavcodec/cinepak.c	/^    uint16_t          id;$/;"	m	file:
id	libavformat/avformat.h	/^    int id;       \/* format specific stream id *\/$/;"	m	struct:AVStream
id	libavformat/avi.h	/^    int id;$/;"	m	struct:CodecTag
id	libavformat/img2.c	/^    enum CodecID id;$/;"	m	file:
id	libavformat/mov.c	/^    long id;$/;"	m	struct:MOV_sample_to_chunk_tbl	file:
id	libavformat/mpeg.c	/^    uint8_t id;$/;"	m	file:
id	libavformat/mpegts.c	/^    uint16_t id;$/;"	m	struct:SectionHeader	file:
id3_create_tag	libavformat/mp3.c	/^static void id3_create_tag(AVFormatContext *s, uint8_t *buf)$/;"	f	file:
id3_genre_str	libavformat/mp3.c	/^static const char *id3_genre_str[ID3_GENRE_MAX + 1] = {$/;"	v	file:
id3_get_string	libavformat/mp3.c	/^static void id3_get_string(char *str, int str_size, $/;"	f	file:
id3_match	libavformat/mp3.c	/^static int id3_match(const uint8_t *buf)$/;"	f	file:
id3_parse_tag	libavformat/mp3.c	/^static int id3_parse_tag(AVFormatContext *s, const uint8_t *buf)$/;"	f	file:
idcin_decode_end	libavcodec/idcinvideo.c	/^static int idcin_decode_end(AVCodecContext *avctx)$/;"	f	file:
idcin_decode_frame	libavcodec/idcinvideo.c	/^static int idcin_decode_frame(AVCodecContext *avctx,$/;"	f	file:
idcin_decode_init	libavcodec/idcinvideo.c	/^static int idcin_decode_init(AVCodecContext *avctx)$/;"	f	file:
idcin_decode_vlcs	libavcodec/idcinvideo.c	/^static void idcin_decode_vlcs(IdcinContext *s)$/;"	f	file:
idcin_decoder	libavcodec/idcinvideo.c	/^AVCodec idcin_decoder = {$/;"	v
idcin_iformat	libavformat/idcin.c	/^static AVInputFormat idcin_iformat = {$/;"	v	file:
idcin_init	libavformat/idcin.c	/^int idcin_init(void)$/;"	f
idcin_probe	libavformat/idcin.c	/^static int idcin_probe(AVProbeData *p)$/;"	f	file:
idcin_read_close	libavformat/idcin.c	/^static int idcin_read_close(AVFormatContext *s)$/;"	f	file:
idcin_read_header	libavformat/idcin.c	/^static int idcin_read_header(AVFormatContext *s,$/;"	f	file:
idcin_read_packet	libavformat/idcin.c	/^static int idcin_read_packet(AVFormatContext *s,$/;"	f	file:
idct	ffplay.c	/^static int idct = FF_IDCT_AUTO;$/;"	v	file:
idct	libavcodec/4xm.c	/^static void idct(DCTELEM block[64]){$/;"	f	file:
idct	libavcodec/dsputil.h	/^    void (*idct)(DCTELEM *block\/* align 16*\/);$/;"	m	struct:DSPContext
idct	libavcodec/fdctref.c	/^void idct(block)$/;"	f
idct	libavcodec/i386/simple_idct_mmx.c	/^static inline void idct(int16_t *block)$/;"	f	file:
idct	libavcodec/vp3dsp.c	/^static always_inline void idct(uint8_t *dst, int stride, int16_t *input, int type)$/;"	f	file:
idct	xvmc_render.h	/^  int idct;\/\/does we use IDCT acceleration?$/;"	m
idct248_error	libavcodec/dct-test.c	/^void idct248_error(const char *name, $/;"	f
idct248_ref	libavcodec/dct-test.c	/^void idct248_ref(uint8_t *dest, int linesize, int16_t *block)$/;"	f
idct32	libavcodec/mpegaudio.c	/^static void idct32(int *out, int *tab)$/;"	f	file:
idct4col	libavcodec/simple_idct.c	/^static inline void idct4col(uint8_t *dest, int line_size, const DCTELEM *col)$/;"	f	file:
idct4col_add	libavcodec/simple_idct.c	/^static inline void idct4col_add(uint8_t *dest, int line_size, const DCTELEM *col)$/;"	f	file:
idct4row	libavcodec/simple_idct.c	/^static inline void idct4row(DCTELEM *row)$/;"	f	file:
idctCol	libavcodec/i386/simple_idct_mmx.c	/^static void inline idctCol (int16_t * col, int16_t *input)$/;"	f	file:
idctRow	libavcodec/i386/simple_idct_mmx.c	/^static void inline idctRow (int16_t * output, int16_t * input)$/;"	f	file:
idctRowCondDC	libavcodec/simple_idct.c	/^static inline void idctRowCondDC (DCTELEM * row)$/;"	f	file:
idctSparseCol	libavcodec/simple_idct.c	/^static inline void idctSparseCol (DCTELEM * col)$/;"	f	file:
idctSparseColAdd	libavcodec/simple_idct.c	/^static inline void idctSparseColAdd (uint8_t *dest, int line_size, $/;"	f	file:
idctSparseColPut	libavcodec/simple_idct.c	/^static inline void idctSparseColPut (uint8_t *dest, int line_size, $/;"	f	file:
idct_add	libavcodec/dsputil.h	/^    void (*idct_add)(uint8_t *dest\/*align 8*\/, int line_size, DCTELEM *block\/*align 16*\/);$/;"	m	struct:DSPContext
idct_add	libavcodec/sh4/dsputil_sh4.c	/^static void idct_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
idct_add_altivec	libavcodec/ppc/idct_altivec.c	/^void idct_add_altivec(uint8_t* dest, int stride, vector_s16_t* block)$/;"	f
idct_algo	ffmpeg.c	/^static int idct_algo = 0;$/;"	v	file:
idct_algo	libavcodec/avcodec.h	/^    int idct_algo;$/;"	m	struct:AVCodecContext
idct_col	libavcodec/alpha/simple_idct_alpha.c	/^static inline void idct_col(DCTELEM *col)$/;"	f	file:
idct_col	libavcodec/i386/idct_mmx.c	/^static inline void idct_col (int16_t * col, int offset)$/;"	f	file:
idct_col2	libavcodec/alpha/simple_idct_alpha.c	/^static inline void idct_col2(DCTELEM *col)$/;"	f	file:
idct_constants	libavcodec/i386/vp3dsp_mmx.c	/^static uint16_t idct_constants[(4 + 7 + 1) * 4];$/;"	v	file:
idct_cosine_table	libavcodec/i386/vp3dsp_mmx.c	/^static uint16_t idct_cosine_table[7] = {$/;"	v	file:
idct_internal	libavcodec/h264idct.c	/^static always_inline void idct_internal(uint8_t *dst, DCTELEM *block, int stride, int block_stride, int shift, int add){$/;"	f	file:
idct_mmx_init	libavcodec/dct-test.c	/^void idct_mmx_init(void)$/;"	f
idct_mmx_perm	libavcodec/dct-test.c	/^static short idct_mmx_perm[64];$/;"	v	file:
idct_permutation	libavcodec/dsputil.h	/^    uint8_t idct_permutation[64];$/;"	m	struct:DSPContext
idct_permutation_type	libavcodec/dsputil.h	/^    int idct_permutation_type;$/;"	m	struct:DSPContext
idct_put	libavcodec/4xm.c	/^static inline void idct_put(FourXContext *f, int x, int y){$/;"	f	file:
idct_put	libavcodec/asv1.c	/^static inline void idct_put(ASV1Context *a, int mb_x, int mb_y){$/;"	f	file:
idct_put	libavcodec/dsputil.h	/^    void (*idct_put)(uint8_t *dest\/*align 8*\/, int line_size, DCTELEM *block\/*align 16*\/);$/;"	m	struct:DSPContext
idct_put	libavcodec/dv.c	/^    void (*idct_put[2])(uint8_t *dest, int line_size, DCTELEM *block);$/;"	m	struct:DVVideoContext	file:
idct_put	libavcodec/mdec.c	/^static inline void idct_put(MDECContext *a, int mb_x, int mb_y){$/;"	f	file:
idct_put	libavcodec/mjpeg.c	/^    void (*idct_put)(uint8_t *dest\/*align 8*\/, int line_size, DCTELEM *block\/*align 16*\/);$/;"	m	struct:MJpegDecodeContext	file:
idct_put	libavcodec/sh4/dsputil_sh4.c	/^static void idct_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
idct_put_altivec	libavcodec/ppc/idct_altivec.c	/^void idct_put_altivec(uint8_t* dest, int stride, vector_s16_t* block)$/;"	f
idct_row	libavcodec/alpha/simple_idct_alpha.c	/^static inline int idct_row(DCTELEM *row)$/;"	f	file:
idct_sh4	libavcodec/sh4/idct_sh4.c	/^void idct_sh4(DCTELEM *block)$/;"	f
idct_simple_mmx_perm	libavcodec/dct-test.c	/^static short idct_simple_mmx_perm[64]={$/;"	v	file:
ideal_dst_incr	libavcodec/resample2.c	/^    int ideal_dst_incr;$/;"	m	struct:AVResampleContext	file:
idelta	libavcodec/adpcm.c	/^    int idelta;$/;"	m	struct:ADPCMChannelStatus	file:
idr	libavcodec/h264.c	/^static void idr(H264Context *h){$/;"	f	file:
idx	libavcodec/roqvideo.c	/^  int idx[4];$/;"	m	file:
ifft128	libavcodec/liba52/imdct.c	/^static void (* ifft128) (complex_t * buf);$/;"	v	file:
ifft128_c	libavcodec/liba52/imdct.c	/^static void ifft128_c (complex_t * buf)$/;"	f	file:
ifft16	libavcodec/liba52/imdct.c	/^static void ifft16 (complex_t * buf)$/;"	f	file:
ifft2	libavcodec/liba52/imdct.c	/^static inline void ifft2 (complex_t * buf)$/;"	f	file:
ifft32	libavcodec/liba52/imdct.c	/^static void ifft32 (complex_t * buf)$/;"	f	file:
ifft4	libavcodec/liba52/imdct.c	/^static inline void ifft4 (complex_t * buf)$/;"	f	file:
ifft64	libavcodec/liba52/imdct.c	/^static void (* ifft64) (complex_t * buf);$/;"	v	file:
ifft64_c	libavcodec/liba52/imdct.c	/^static void ifft64_c (complex_t * buf)$/;"	f	file:
ifft8	libavcodec/liba52/imdct.c	/^static inline void ifft8 (complex_t * buf)$/;"	f	file:
ifft_pass	libavcodec/liba52/imdct.c	/^static void ifft_pass (complex_t * buf, sample_t * weight, int n)$/;"	f	file:
ifmt	ffserver.c	/^    AVInputFormat *ifmt;       \/* if non NULL, force input format *\/$/;"	m	struct:FFStream	file:
iformat	ffplay.c	/^    AVInputFormat *iformat;$/;"	m	struct:VideoState	file:
iformat	libavformat/avformat.h	/^    struct AVInputFormat *iformat;$/;"	m	struct:AVFormatContext
ifrm_TAG	libavformat/4xm.c	42;"	d	file:
ignore	libavformat/asf.h	/^    uint32_t ignore;            \/\/ preroll is 64bit - but let's just ignore it$/;"	m
iheight	libavcodec/imgresample.c	/^    int iwidth, iheight, owidth, oheight;$/;"	m	struct:ImgReSampleContext	file:
ildct_cmp	ffmpeg.c	/^static int ildct_cmp = FF_CMP_VSAD;$/;"	v	file:
ildct_cmp	libavcodec/avcodec.h	/^    int ildct_cmp;$/;"	m	struct:AVCodecContext
ildct_cmp	libavcodec/dsputil.h	/^    me_cmp_func ildct_cmp[5]; \/\/only width 16 used$/;"	m	struct:DSPContext
ilog	libavcodec/vorbis.c	/^static unsigned int ilog(unsigned int i) { \/\/ unfortunatelly av_log2 uses different rounding$/;"	f	file:
im	libavcodec/ac3enc.c	/^    short re,im;$/;"	m	struct:IComplex	file:
im	libavcodec/dsputil.h	/^    FFTSample re, im;$/;"	m	struct:FFTComplex
imag	libavcodec/liba52/imdct.c	/^    sample_t imag;$/;"	m	struct:complex_s	file:
image	vhook/imlib2.c	/^    Imlib_Image image;$/;"	m	struct:_CachedImage	file:
image2_iformat	libavformat/img2.c	/^static AVInputFormat image2_iformat = {$/;"	v	file:
image2_oformat	libavformat/img2.c	/^static AVOutputFormat image2_oformat = {$/;"	v	file:
image2pipe_iformat	libavformat/img2.c	/^static AVInputFormat image2pipe_iformat = {$/;"	v	file:
image2pipe_oformat	libavformat/img2.c	/^static AVOutputFormat image2pipe_oformat = {$/;"	v	file:
image_buf	libavcodec/png.c	/^    uint8_t *image_buf;$/;"	m	struct:PNGContext	file:
image_buf	libavformat/gifdec.c	/^    uint8_t *image_buf;$/;"	m	struct:GifState	file:
image_buf	libavformat/png.c	/^    uint8_t *image_buf;$/;"	m	struct:PNGDecodeState	file:
image_format	ffmpeg.c	/^static AVImageFormat *image_format;$/;"	v	file:
image_format	ffplay.c	/^static AVImageFormat *image_format;$/;"	v	file:
image_format	libavformat/avformat.h	/^    struct AVImageFormat *image_format;$/;"	m	struct:AVFormatParameters
image_iformat	libavformat/img.c	/^static AVInputFormat image_iformat = {$/;"	v	file:
image_linesize	libavcodec/png.c	/^    int image_linesize;$/;"	m	struct:PNGContext	file:
image_linesize	libavformat/gifdec.c	/^    int image_linesize;$/;"	m	struct:GifState	file:
image_linesize	libavformat/png.c	/^    int image_linesize;$/;"	m	struct:PNGDecodeState	file:
image_oformat	libavformat/img.c	/^static AVOutputFormat image_oformat = {$/;"	v	file:
image_palette	libavformat/gifdec.c	/^    uint32_t *image_palette;$/;"	m	struct:GifState	file:
image_probe	libavformat/img.c	/^static int image_probe(AVProbeData *p)$/;"	f	file:
image_probe	libavformat/img2.c	/^static int image_probe(AVProbeData *p)$/;"	f	file:
imagepipe_iformat	libavformat/img.c	/^static AVInputFormat imagepipe_iformat = {$/;"	v	file:
imagepipe_oformat	libavformat/img.c	/^static AVOutputFormat imagepipe_oformat = {$/;"	v	file:
imdct12	libavcodec/mpegaudiodec.c	/^static void imdct12(int *out, int *in)$/;"	f	file:
imdct36	libavcodec/mpegaudiodec.c	/^static void imdct36(int *out, int *buf, int *in, int *win)$/;"	f	file:
imdct_ref	libavcodec/fft-test.c	/^void imdct_ref(float *out, float *in, int n)$/;"	f
img	libavcodec/imgresample.c	/^uint8_t img[XSIZE * YSIZE];$/;"	v
img1	libavcodec/imgresample.c	/^uint8_t img1[XSIZE1 * YSIZE1];$/;"	v
img1	libavcodec/motion_test.c	/^uint8_t img1[WIDTH * HEIGHT];$/;"	v
img2	libavcodec/imgresample.c	/^uint8_t img2[XSIZE1 * YSIZE1];$/;"	v
img2	libavcodec/motion_test.c	/^uint8_t img2[WIDTH * HEIGHT];$/;"	v
img2_init	libavformat/img2.c	/^int img2_init(void)$/;"	f
img_apply_table	libavcodec/imgconvert.c	/^static void img_apply_table(uint8_t *dst, int dst_wrap, $/;"	f	file:
img_convert	libavcodec/imgconvert.c	/^int img_convert(AVPicture *dst, int dst_pix_fmt,$/;"	f
img_convert_init	libavcodec/imgconvert.c	/^static void img_convert_init(void)$/;"	f	file:
img_copy	libavcodec/imgconvert.c	/^void img_copy(AVPicture *dst, const AVPicture *src,$/;"	f
img_copy_plane	libavcodec/imgconvert.c	/^static void img_copy_plane(uint8_t *dst, int dst_wrap, $/;"	f	file:
img_count	libavformat/img.c	/^    int img_count;$/;"	m	file:
img_count	libavformat/img2.c	/^    int img_count;$/;"	m	file:
img_dest	libavcodec/dct-test.c	/^static uint8_t img_dest[64] __attribute__ ((aligned (8)));$/;"	v	file:
img_dest1	libavcodec/dct-test.c	/^static uint8_t img_dest1[64] __attribute__ ((aligned (8)));$/;"	v	file:
img_first	libavformat/img.c	/^    int img_first;$/;"	m	file:
img_first	libavformat/img2.c	/^    int img_first;$/;"	m	file:
img_fmt	libavformat/img.c	/^    AVImageFormat *img_fmt;$/;"	m	file:
img_get_alpha_info	libavcodec/imgconvert.c	/^int img_get_alpha_info(const AVPicture *src,$/;"	f
img_init	libavformat/img.c	/^int img_init(void)$/;"	f
img_last	libavformat/img.c	/^    int img_last;$/;"	m	file:
img_last	libavformat/img2.c	/^    int img_last;$/;"	m	file:
img_number	libavformat/img.c	/^    int img_number;$/;"	m	file:
img_number	libavformat/img2.c	/^    int img_number;$/;"	m	file:
img_probe	libavformat/avformat.h	/^    int (*img_probe)(AVProbeData *);$/;"	m	struct:AVImageFormat
img_read	libavformat/avformat.h	/^    int (*img_read)(ByteIOContext *, $/;"	m	struct:AVImageFormat
img_read_close	libavformat/img.c	/^static int img_read_close(AVFormatContext *s1)$/;"	f	file:
img_read_close	libavformat/img2.c	/^static int img_read_close(AVFormatContext *s1)$/;"	f	file:
img_read_header	libavformat/img.c	/^static int img_read_header(AVFormatContext *s1, AVFormatParameters *ap)$/;"	f	file:
img_read_header	libavformat/img2.c	/^static int img_read_header(AVFormatContext *s1, AVFormatParameters *ap)$/;"	f	file:
img_read_packet	libavformat/img.c	/^static int img_read_packet(AVFormatContext *s1, AVPacket *pkt)$/;"	f	file:
img_read_packet	libavformat/img2.c	/^static int img_read_packet(AVFormatContext *s1, AVPacket *pkt)$/;"	f	file:
img_resample	libavcodec/imgresample.c	/^void img_resample(ImgReSampleContext *s, $/;"	f
img_resample_close	libavcodec/imgresample.c	/^void img_resample_close(ImgReSampleContext *s)$/;"	f
img_resample_ctx	ffmpeg.c	/^    ImgReSampleContext *img_resample_ctx; \/* for image resampling *\/$/;"	m	struct:AVOutputStream	file:
img_resample_full_init	libavcodec/imgresample.c	/^ImgReSampleContext *img_resample_full_init(int owidth, int oheight,$/;"	f
img_resample_init	libavcodec/imgresample.c	/^ImgReSampleContext *img_resample_init(int owidth, int oheight,$/;"	f
img_set_parameters	libavformat/img.c	/^static int img_set_parameters(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
img_size	libavformat/img.c	/^    int img_size;$/;"	m	file:
img_tags	libavformat/img2.c	/^static const IdStrMap img_tags[] = {$/;"	v	file:
img_write	libavformat/avformat.h	/^    int (*img_write)(ByteIOContext *, AVImageInfo *);$/;"	m	struct:AVImageFormat
img_write_header	libavformat/img.c	/^static int img_write_header(AVFormatContext *s)$/;"	f	file:
img_write_header	libavformat/img2.c	/^static int img_write_header(AVFormatContext *s)$/;"	f	file:
img_write_packet	libavformat/img.c	/^static int img_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
img_write_packet	libavformat/img2.c	/^static int img_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
img_write_trailer	libavformat/img.c	/^static int img_write_trailer(AVFormatContext *s)$/;"	f	file:
img_write_trailer	libavformat/img2.c	/^static int img_write_trailer(AVFormatContext *s)$/;"	f	file:
imgtype	libavcodec/lcl.c	/^    int imgtype;$/;"	m	struct:LclContext	file:
implicit_weight	libavcodec/h264.c	/^    int implicit_weight[16][16];$/;"	m	struct:H264Context	file:
implicit_weight_table	libavcodec/h264.c	/^static void implicit_weight_table(H264Context *h){$/;"	f	file:
implver	libavcodec/alpha/asm.h	144;"	d
implver	libavcodec/alpha/asm.h	83;"	d
implver	libavcodec/alpha/asm.h	97;"	d
imr_interface	libavformat/barpainet.h	/^    struct in_addr imr_interface;  \/* local IP address of interface *\/$/;"	m	struct:ip_mreq
imr_multiaddr	libavformat/barpainet.h	/^    struct in_addr imr_multiaddr;  \/* IP multicast address of group *\/$/;"	m	struct:ip_mreq
in_file	ffmpeg.c	/^    int in_file;$/;"	m	struct:AVMetaDataMap	file:
in_temp	libavcodec/adx.c	/^    int in_temp;$/;"	m	file:
inbuf	libavcodec/a52dec.c	/^    uint8_t inbuf[4096]; \/* input buffer *\/$/;"	m	struct:AC3DecodeState	file:
inbuf	libavcodec/ac3dec.c	/^    uint8_t inbuf[4096]; \/* input buffer *\/$/;"	m	struct:AC3DecodeState	file:
inbuf	libavcodec/mpegaudiodec.c	/^    uint8_t *inbuf_ptr, *inbuf;$/;"	m	struct:MPADecodeContext	file:
inbuf	libavcodec/parser.c	/^    uint8_t inbuf[4096]; \/* input buffer *\/$/;"	m	struct:AC3ParseContext	file:
inbuf	libavcodec/parser.c	/^    uint8_t inbuf[MPA_MAX_CODED_FRAME_SIZE];	\/* input buffer *\/$/;"	m	struct:MpegAudioParseContext	file:
inbuf1	libavcodec/mpegaudiodec.c	/^    uint8_t inbuf1[2][MPA_MAX_CODED_FRAME_SIZE + BACKSTEP_SIZE];	\/* input buffer *\/$/;"	m	struct:MPADecodeContext	file:
inbuf_index	libavcodec/mpegaudiodec.c	/^    int inbuf_index;$/;"	m	struct:MPADecodeContext	file:
inbuf_ptr	libavcodec/a52dec.c	/^    uint8_t *inbuf_ptr;$/;"	m	struct:AC3DecodeState	file:
inbuf_ptr	libavcodec/ac3dec.c	/^    uint8_t *inbuf_ptr;$/;"	m	struct:AC3DecodeState	file:
inbuf_ptr	libavcodec/mpegaudiodec.c	/^    uint8_t *inbuf_ptr, *inbuf;$/;"	m	struct:MPADecodeContext	file:
inbuf_ptr	libavcodec/parser.c	/^    uint8_t *inbuf_ptr;$/;"	m	struct:AC3ParseContext	file:
inbuf_ptr	libavcodec/parser.c	/^    uint8_t *inbuf_ptr;$/;"	m	struct:MpegAudioParseContext	file:
indeo2_decoder	libavcodec/indeo2.c	/^AVCodec indeo2_decoder = {$/;"	v
indeo3_decode_end	libavcodec/indeo3.c	/^static int indeo3_decode_end(AVCodecContext *avctx)$/;"	f	file:
indeo3_decode_frame	libavcodec/indeo3.c	/^static int indeo3_decode_frame(AVCodecContext *avctx,$/;"	f	file:
indeo3_decode_init	libavcodec/indeo3.c	/^static int indeo3_decode_init(AVCodecContext *avctx)$/;"	f	file:
indeo3_decoder	libavcodec/indeo3.c	/^AVCodec indeo3_decoder = {$/;"	v
index	ffmpeg.c	/^    int index;               \/* stream index in the output file *\/$/;"	m	struct:AVOutputStream	file:
index	ffmpeg.c	/^    int index;$/;"	m	struct:AVInputStream	file:
index	libavcodec/bitstream.h	/^    int index;$/;"	m	struct:GetBitContext
index	libavcodec/bitstream.h	/^    int index;$/;"	m	struct:PutBitContext
index	libavcodec/mace.c	/^  short index, lev, factor, prev2, previous, level;$/;"	m	struct:MACEContext	file:
index	libavcodec/mpegvideo.h	/^    int index;$/;"	m	struct:ParseContext
index	libavcodec/resample2.c	/^    int index;$/;"	m	struct:AVResampleContext	file:
index	libavcodec/vp3.c	/^    uint8_t index;$/;"	m	struct:Coeff	file:
index	libavformat/avformat.h	/^    int index;    \/* stream index in AVFormatContext *\/$/;"	m	struct:AVStream
index	libavformat/dv1394.c	/^    int index;  \/* Current frame index *\/$/;"	m	struct:dv1394_data	file:
index	libavformat/matroska.c	/^    MatroskaDemuxIndex *index;$/;"	m	struct:MatroskaDemuxContext	file:
index	libavformat/rtp.h	/^        int index;$/;"	m	struct:rtp_payload_data_s::AUHeaders
index_built	libavformat/avformat.h	/^    int index_built;$/;"	m	struct:AVFormatContext
index_entries	libavformat/avformat.h	/^    AVIndexEntry *index_entries; \/* only used if the format does not$/;"	m	struct:AVStream
index_entries	libavformat/nsvdec.c	/^    int index_entries;$/;"	m	file:
index_entries_allocated_size	libavformat/avformat.h	/^    int index_entries_allocated_size;$/;"	m	struct:AVStream
index_guid	libavformat/asf.c	/^static const GUID index_guid = {$/;"	v	file:
index_loaded	libavformat/avidec.c	/^    int index_loaded;$/;"	m	file:
index_parsed	libavformat/matroska.c	/^        index_parsed,$/;"	m	struct:MatroskaDemuxContext	file:
index_ptr	libavformat/asf.h	/^    ASFIndex* index_ptr;$/;"	m
index_run	libavcodec/mpegvideo.h	/^    uint8_t *index_run[2];         \/\/\/< encoding only $/;"	m	struct:RLTable
index_stream	libavcodec/truemotion1.c	/^    uint8_t *index_stream;$/;"	m	struct:TrueMotion1Context	file:
index_stream_size	libavcodec/truemotion1.c	/^    int index_stream_size;$/;"	m	struct:TrueMotion1Context	file:
index_table	libavcodec/adpcm.c	/^static const int index_table[16] = {$/;"	v	file:
indexdeltalength	libavformat/rtp.h	/^    int indexdeltalength;$/;"	m	struct:rtp_payload_data_s
indexes	libavformat/avienc.c	/^    AVIIndex indexes[MAX_STREAMS];$/;"	m	file:
indexlength	libavformat/rtp.h	/^    int indexlength;$/;"	m	struct:rtp_payload_data_s
indx_start	libavformat/avienc.c	/^    offset_t    indx_start;$/;"	m	struct:AVIIndex	file:
inet_aton	libavformat/barpainet.c	/^int inet_aton (const char * str, struct in_addr * add) {$/;"	f
infer_size	libavformat/img2.c	/^static int infer_size(int *width_ptr, int *height_ptr, int size)$/;"	f	file:
infer_size	libavformat/yuv.c	/^static int infer_size(int *width_ptr, int *height_ptr, int size)$/;"	f	file:
info	libavcodec/oggtheora.c	/^    theora_info info;$/;"	m	struct:TheoraContext	file:
info_table	libavformat/nut.c	/^static char *info_table[][2]={$/;"	v	file:
init	libavcodec/avcodec.h	/^    int (*init)(AVCodecContext *);$/;"	m	struct:AVCodec
init	libavformat/dv1394.h	/^	struct dv1394_init init;$/;"	m	struct:dv1394_status
init_2d_vlc_rl	libavcodec/mpeg12.c	/^static void init_2d_vlc_rl(RLTable *rl, int use_static)$/;"	f	file:
init_block_mapping	libavcodec/vp3.c	/^static int init_block_mapping(Vp3DecodeContext *s) $/;"	f	file:
init_checksum	libavformat/aviobuf.c	/^void init_checksum(ByteIOContext *s, unsigned long (*update_checksum)(unsigned long c, const uint8_t *p, unsigned int len), unsigned long checksum){$/;"	f
init_coef_vlc	libavcodec/wmadec.c	/^static void init_coef_vlc(VLC *vlc, $/;"	f	file:
init_demo	tests/rotozoom.c	/^void init_demo(const char *filename) {$/;"	f
init_dequantizer	libavcodec/vp3.c	/^static void init_dequantizer(Vp3DecodeContext *s)$/;"	f	file:
init_duplicate_context	libavcodec/mpegvideo.c	/^static int init_duplicate_context(MpegEncContext *s, MpegEncContext *base){$/;"	f	file:
init_fdct	libavcodec/fdctref.c	/^void init_fdct()$/;"	f
init_frame	libavcodec/vp3.c	/^static void init_frame(Vp3DecodeContext *s, GetBitContext *gb)$/;"	f	file:
init_get_bits	libavcodec/bitstream.h	/^static inline void init_get_bits(GetBitContext *s,$/;"	f
init_h263_dc_for_msmpeg4	libavcodec/msmpeg4.c	/^static void init_h263_dc_for_msmpeg4(void)$/;"	f	file:
init_interlaced_ref	libavcodec/motion_est.c	/^static inline void init_interlaced_ref(MpegEncContext *s, int ref_index){$/;"	f	file:
init_loop_filter	libavcodec/vp3.c	/^static void init_loop_filter(Vp3DecodeContext *s)$/;"	f	file:
init_mv	libavcodec/4xm.c	/^static void init_mv(FourXContext *f){$/;"	f	file:
init_mv4_ref	libavcodec/motion_est.c	/^static inline void init_mv4_ref(MotionEstContext *c){$/;"	f	file:
init_mv_penalty_and_fcode	libavcodec/h263.c	/^static void init_mv_penalty_and_fcode(MpegEncContext *s)$/;"	f	file:
init_mv_table	libavcodec/msmpeg4.c	/^static void init_mv_table(MVTable *tab)$/;"	f	file:
init_offset	libavcodec/shorten.c	/^static void init_offset(ShortenContext *s)$/;"	f	file:
init_pass2	libavcodec/ratecontrol.c	/^static int init_pass2(MpegEncContext *s)$/;"	f	file:
init_poc	libavcodec/h264.c	/^static int init_poc(H264Context *h){$/;"	f	file:
init_pred_ptrs	libavcodec/h264.c	/^static void init_pred_ptrs(H264Context *h){$/;"	f	file:
init_put_bits	libavcodec/bitstream.h	/^static inline void init_put_bits(PutBitContext *s, uint8_t *buffer, int buffer_size)$/;"	f
init_put_byte	libavformat/aviobuf.c	/^int init_put_byte(ByteIOContext *s,$/;"	f
init_qp	libavcodec/h264.c	/^    int init_qp;                \/\/\/< pic_init_qp_minus26 + 26$/;"	m	struct:PPS	file:
init_qs	libavcodec/h264.c	/^    int init_qs;                \/\/\/< pic_init_qs_minus26 + 26$/;"	m	struct:PPS	file:
init_ref	libavcodec/motion_est.c	/^static inline void init_ref(MotionEstContext *c, uint8_t *src[3], uint8_t *ref[3], uint8_t *ref2[3], int x, int y, int ref_index){$/;"	f	file:
init_ref	libavcodec/snow.c	/^static inline void init_ref(MotionEstContext *c, uint8_t *src[3], uint8_t *ref[3], uint8_t *ref2[3], int x, int y, int ref_index){$/;"	f	file:
init_rl	libavcodec/mpegvideo.c	/^void init_rl(RLTable *rl, int use_static)$/;"	f
init_uni_ac_vlc	libavcodec/mpeg12.c	/^static void init_uni_ac_vlc(RLTable *rl, uint32_t *uni_ac_vlc_bits, uint8_t *uni_ac_vlc_len){$/;"	f	file:
init_uni_dc_tab	libavcodec/h263.c	/^static void init_uni_dc_tab(void)$/;"	f	file:
init_uni_h263_rl_tab	libavcodec/h263.c	/^static void init_uni_h263_rl_tab(RLTable *rl, uint32_t *bits_tab, uint8_t *len_tab){$/;"	f	file:
init_uni_mpeg4_rl_tab	libavcodec/h263.c	/^static void init_uni_mpeg4_rl_tab(RLTable *rl, uint32_t *bits_tab, uint8_t *len_tab){$/;"	f	file:
init_vlc	libavcodec/bitstream.c	/^int init_vlc(VLC *vlc, int nb_bits, int nb_codes,$/;"	f
init_vlc_rl	libavcodec/h263.c	/^void init_vlc_rl(RLTable *rl, int use_static)$/;"	f
init_vlcs	libavcodec/4xm.c	/^static void init_vlcs(FourXContext *f){$/;"	f	file:
init_vlcs	libavcodec/asv1.c	/^static void init_vlcs(ASV1Context *a){$/;"	f	file:
init_vlcs	libavcodec/mpeg12.c	/^static void init_vlcs(void)$/;"	f	file:
initial_pause	libavformat/avformat.h	/^    int initial_pause:1;       \/* do not begin to play the stream$/;"	m	struct:AVFormatParameters
initialize_after	libavcodec/beosthread.c	/^void initialize_after(void)$/;"	f
inline	libavcodec/common.h	160;"	d
inplace_lift	libavcodec/snow.c	/^static void inplace_lift(DWTELEM *dst, int width, int *coeffs, int n, int shift, int start, int inverse){$/;"	f	file:
inplace_liftV	libavcodec/snow.c	/^static void inplace_liftV(DWTELEM *dst, int width, int height, int stride, int *coeffs, int n, int shift, int start, int inverse){$/;"	f	file:
input_channels	libavcodec/resample.c	/^    int input_channels, output_channels, filter_channels;$/;"	m	struct:ReSampleContext	file:
input_filename	ffplay.c	/^static const char *input_filename;$/;"	v	file:
input_files	ffmpeg.c	/^static AVFormatContext *input_files[MAX_FILES];$/;"	v	file:
input_files_ts_offset	ffmpeg.c	/^static int64_t input_files_ts_offset[MAX_FILES];$/;"	v	file:
input_index	libavformat/beosaudio.cpp	/^    int input_index;$/;"	m	file:
input_picture	libavcodec/mpegvideo.h	/^    Picture **input_picture;   \/\/\/< next pictures on display order for encoding$/;"	m	struct:MpegEncContext
input_picture	libavcodec/snow.c	/^    AVFrame input_picture;$/;"	m	struct:SnowContext	file:
input_picture_number	libavcodec/mpegvideo.h	/^    int input_picture_number;  \/\/\/< used to set pic->display_picture_number, shouldnt be used for\/by anything else$/;"	m	struct:MpegEncContext
input_sem	libavformat/beosaudio.cpp	/^    sem_id input_sem;$/;"	m	file:
input_sync	ffmpeg.c	/^static int input_sync;$/;"	v	file:
input_ts_offset	ffmpeg.c	/^static int64_t input_ts_offset = 0;$/;"	v	file:
inset	vhook/fish.c	/^    int inset;$/;"	m	file:
int16_t	libavcodec/common.h	/^    typedef signed short int16_t;$/;"	t
int32_t	libavcodec/common.h	/^    typedef signed int   int32_t;$/;"	t
int64_t	libavcodec/common.h	/^        typedef signed __int64   int64_t;$/;"	t
int64_t	libavcodec/common.h	/^        typedef signed long long   int64_t;$/;"	t
int64_t_C	libavcodec/common.h	156;"	d
int64_t_C	libavcodec/common.h	164;"	d
int64_t_C	libavcodec/common.h	182;"	d
int64_t_C	libavcodec/common.h	202;"	d
int8_t	libavcodec/common.h	/^    typedef signed char  int8_t;$/;"	t
int_arg	cmdutils.h	/^        int *int_arg;$/;"	m
int_cos	tests/audiogen.c	/^static int int_cos(int a)$/;"	f	file:
int_cos	tests/videogen.c	/^int int_cos(int a)$/;"	f
int_fast16_t	libavcodec/common.h	/^typedef signed int  int_fast16_t;$/;"	t
int_fast32_t	libavcodec/common.h	/^typedef signed int  int_fast32_t;$/;"	t
int_fast8_t	libavcodec/common.h	/^typedef signed char int_fast8_t;$/;"	t
int_pow	tests/rotozoom.c	/^static int64_t int_pow(int64_t a, int p){$/;"	f	file:
int_pow_init	libavcodec/mpegaudiodec.c	/^static void int_pow_init(void)$/;"	f	file:
int_samples	libavcodec/sonic.c	/^    int *int_samples;$/;"	m	struct:SonicContext	file:
int_sin	tests/rotozoom.c	/^static int64_t int_sin(int64_t a){$/;"	f	file:
int_sqrt	tests/tiny_psnr.c	/^static uint64_t int_sqrt(uint64_t a)$/;"	f	file:
intel_h263_decode_picture_header	libavcodec/h263.c	/^int intel_h263_decode_picture_header(MpegEncContext *s)$/;"	f
inter_MCBPC_bits	libavcodec/h263data.h	/^const uint8_t inter_MCBPC_bits[28] = { $/;"	v
inter_MCBPC_code	libavcodec/h263data.h	/^const uint8_t inter_MCBPC_code[28] = { $/;"	v
inter_MCBPC_vlc	libavcodec/h263.c	/^static VLC inter_MCBPC_vlc;$/;"	v	file:
inter_ac_vlc_last_length	libavcodec/mpegvideo.h	/^    uint8_t *inter_ac_vlc_last_length;$/;"	m	struct:MpegEncContext
inter_ac_vlc_length	libavcodec/mpegvideo.h	/^    uint8_t *inter_ac_vlc_length;$/;"	m	struct:MpegEncContext
inter_cbp_to_golomb	libavcodec/h264data.h	/^static const uint8_t inter_cbp_to_golomb[48]={$/;"	v
inter_dequant	libavcodec/vp3.c	/^    int16_t __align16 inter_dequant[64];$/;"	m	struct:Vp3DecodeContext	file:
inter_gb	libavcodec/h264.c	/^    GetBitContext inter_gb;$/;"	m	struct:H264Context	file:
inter_gb_ptr	libavcodec/h264.c	/^    GetBitContext *inter_gb_ptr;$/;"	m	struct:H264Context	file:
inter_intra_pred	libavcodec/mpegvideo.h	/^    int inter_intra_pred;$/;"	m	struct:MpegEncContext
inter_intra_vlc	libavcodec/msmpeg4.c	/^static VLC inter_intra_vlc;$/;"	v	file:
inter_level	libavcodec/h263data.h	/^const int8_t inter_level[102] = {$/;"	v
inter_matrix	ffmpeg.c	/^static uint16_t *inter_matrix = NULL;$/;"	v	file:
inter_matrix	libavcodec/avcodec.h	/^    uint16_t *inter_matrix;$/;"	m	struct:AVCodecContext
inter_matrix	libavcodec/mpegvideo.h	/^    uint16_t inter_matrix[64];$/;"	m	struct:MpegEncContext
inter_matrix	libavcodec/xvidff.c	/^    unsigned char *inter_matrix;   \/** I-Frame Quant Matrix *\/$/;"	m	struct:xvid_context	file:
inter_quant_bias	libavcodec/avcodec.h	/^    int inter_quant_bias;$/;"	m	struct:AVCodecContext
inter_quant_bias	libavcodec/mpegvideo.h	/^    int inter_quant_bias;    \/\/\/< bias for the quantizer $/;"	m	struct:MpegEncContext
inter_run	libavcodec/h263data.h	/^const int8_t inter_run[102] = {$/;"	v
inter_rvlc	libavcodec/mpeg4data.h	/^static const uint16_t inter_rvlc[170][2]={ \/\/note this is identical to the intra rvlc except that its reordered$/;"	v
inter_rvlc_level	libavcodec/mpeg4data.h	/^static const uint8_t inter_rvlc_level[169]={$/;"	v
inter_rvlc_run	libavcodec/mpeg4data.h	/^static const uint8_t inter_rvlc_run[169]={$/;"	v
inter_scantable	libavcodec/mpegvideo.h	/^    ScanTable inter_scantable; \/\/\/< if inter == intra then intra should be used to reduce tha cache usage$/;"	m	struct:MpegEncContext
inter_threshold	libavcodec/avcodec.h	/^    int inter_threshold;$/;"	m	struct:AVCodecContext
inter_vlc	libavcodec/h263data.h	/^const uint16_t inter_vlc[103][2] = {$/;"	v
interlace	libavcodec/vc9.c	/^    int interlace;        \/\/\/< Progressive\/interlaced (RPTFTM syntax element)$/;"	m	struct:VC9Context	file:
interlace_bit_state	libavcodec/ffv1.c	/^    uint8_t interlace_bit_state[2];$/;"	m	struct:PlaneContext	file:
interlace_polarity	libavcodec/mjpeg.c	/^    int interlace_polarity;$/;"	m	struct:MJpegDecodeContext	file:
interlace_type	libavcodec/png.c	/^    int interlace_type;$/;"	m	struct:PNGContext	file:
interlace_type	libavformat/png.c	/^    int interlace_type;$/;"	m	struct:PNGDecodeState	file:
interlaced	libavcodec/huffyuv.c	/^    int interlaced;$/;"	m	struct:HYuvContext	file:
interlaced	libavcodec/mjpeg.c	/^    int interlaced;     \/* true if interlaced *\/$/;"	m	struct:MJpegDecodeContext	file:
interlaced_dct	libavcodec/h264.c	39;"	d	file:
interlaced_dct	libavcodec/mpegvideo.h	/^    int interlaced_dct;$/;"	m	struct:MpegEncContext
interlaced_search	libavcodec/motion_est.c	/^static int interlaced_search(MpegEncContext *s, int ref_index, $/;"	f	file:
interleave_buffer	libavcodec/shorten.c	/^static int16_t * interleave_buffer(int16_t *samples, int nchan, int blocksize, int32_t **buffer) {$/;"	f	file:
interleave_packet	libavformat/avformat.h	/^    int (*interleave_packet)(struct AVFormatContext *, AVPacket *out, AVPacket *in, int flush);$/;"	m	struct:AVOutputFormat
interleaved	libavformat/avformat.h	/^    int interleaved; \/* image is interleaved (e.g. interleaved GIF) *\/$/;"	m	struct:AVImageInfo
interleaved_max	libavformat/rtsp.c	/^    int interleaved_min, interleaved_max;  \/* interleave ids, if TCP transport *\/$/;"	m	struct:RTSPStream	file:
interleaved_max	libavformat/rtsp.h	/^    int interleaved_min, interleaved_max;  \/* interleave ids, if TCP transport *\/$/;"	m	struct:RTSPTransportField
interleaved_min	libavformat/rtsp.c	/^    int interleaved_min, interleaved_max;  \/* interleave ids, if TCP transport *\/$/;"	m	struct:RTSPStream	file:
interleaved_min	libavformat/rtsp.h	/^    int interleaved_min, interleaved_max;  \/* interleave ids, if TCP transport *\/$/;"	m	struct:RTSPTransportField
internal_buffer	libavcodec/avcodec.h	/^    void *internal_buffer;$/;"	m	struct:AVCodecContext
internal_buffer_count	libavcodec/avcodec.h	/^    int internal_buffer_count;$/;"	m	struct:AVCodecContext
internal_ftype	libavcodec/shorten.c	/^    int internal_ftype;$/;"	m	struct:ShortenContext	file:
interpfrm	libavcodec/vc9.c	/^    uint8_t interpfrm;$/;"	m	struct:VC9Context	file:
interplay_delta_table	libavcodec/dpcm.c	/^static int interplay_delta_table[] = {$/;"	v	file:
interplay_dpcm_decoder	libavcodec/dpcm.c	/^AVCodec interplay_dpcm_decoder = {$/;"	v
interplay_video_decoder	libavcodec/interplayvideo.c	/^AVCodec interplay_video_decoder = {$/;"	v
interpolate_array	libavcodec/wmadec.c	/^static void interpolate_array(float *scale, int old_size, int new_size)$/;"	f	file:
interpolated	libavcodec/mpegvideo.h	/^    uint8_t *interpolated[3];$/;"	m	struct:Picture
intlist_read	libavcodec/sonic.c	/^static inline int intlist_read(GetBitContext *gb, int *buf, int entries, int base_2_part)$/;"	f	file:
intlist_read	libavcodec/sonic.c	/^static int intlist_read(GetBitContext *gb, int *buf, int entries, int base_2_part)$/;"	f	file:
intlist_write	libavcodec/sonic.c	/^static inline int intlist_write(PutBitContext *pb, int *buf, int entries, int base_2_part)$/;"	f	file:
intlist_write	libavcodec/sonic.c	/^static int intlist_write(PutBitContext *pb, int *buf, int entries, int base_2_part)$/;"	f	file:
intra16x16_pred_mode	libavcodec/h264.c	/^    int intra16x16_pred_mode;$/;"	m	struct:H264Context	file:
intra4x4_cbp_to_golomb	libavcodec/h264data.h	/^static const uint8_t intra4x4_cbp_to_golomb[48]={$/;"	v
intra4x4_pred_mode	libavcodec/h264.c	/^    int8_t (*intra4x4_pred_mode)[8];$/;"	m	struct:H264Context	file:
intra4x4_pred_mode_cache	libavcodec/h264.c	/^    int8_t intra4x4_pred_mode_cache[5*8];$/;"	m	struct:H264Context	file:
intra_MCBPC_bits	libavcodec/h263data.h	/^const uint8_t intra_MCBPC_bits[9] = { 1, 3, 3, 3, 4, 6, 6, 6, 9 };$/;"	v
intra_MCBPC_code	libavcodec/h263data.h	/^const uint8_t intra_MCBPC_code[9] = { 1, 1, 2, 3, 1, 1, 2, 3, 1 };$/;"	v
intra_MCBPC_vlc	libavcodec/h263.c	/^static VLC intra_MCBPC_vlc;$/;"	v	file:
intra_ac_vlc_last_length	libavcodec/mpegvideo.h	/^    uint8_t *intra_ac_vlc_last_length;$/;"	m	struct:MpegEncContext
intra_ac_vlc_length	libavcodec/mpegvideo.h	/^    uint8_t *intra_ac_vlc_length;$/;"	m	struct:MpegEncContext
intra_c_dequant	libavcodec/vp3.c	/^    int16_t __align16 intra_c_dequant[64];$/;"	m	struct:Vp3DecodeContext	file:
intra_count	libavcodec/msmpeg4.c	/^int intra_count = 0;$/;"	v
intra_dc_precision	ffmpeg.c	/^static int intra_dc_precision = 8;$/;"	v	file:
intra_dc_precision	libavcodec/avcodec.h	/^     int intra_dc_precision;$/;"	m	struct:AVCodecContext
intra_dc_precision	libavcodec/mpegvideo.h	/^    int intra_dc_precision;$/;"	m	struct:MpegEncContext
intra_dc_threshold	libavcodec/mpegvideo.h	/^    int intra_dc_threshold;          \/\/\/< QP above whch the ac VLC should be used for intra dc $/;"	m	struct:MpegEncContext
intra_gb	libavcodec/h264.c	/^    GetBitContext intra_gb;$/;"	m	struct:H264Context	file:
intra_gb_ptr	libavcodec/h264.c	/^    GetBitContext *intra_gb_ptr;$/;"	m	struct:H264Context	file:
intra_h_scantable	libavcodec/mpegvideo.h	/^    ScanTable intra_h_scantable;$/;"	m	struct:MpegEncContext
intra_level	libavcodec/mpeg4data.h	/^const int8_t intra_level[102] = {$/;"	v
intra_level_aic	libavcodec/h263data.h	/^const int8_t intra_level_aic[102] = {$/;"	v
intra_matrix	ffmpeg.c	/^static uint16_t *intra_matrix = NULL;$/;"	v	file:
intra_matrix	libavcodec/asv1.c	/^    uint16_t __align8 intra_matrix[64];$/;"	m	struct:ASV1Context	file:
intra_matrix	libavcodec/avcodec.h	/^    uint16_t *intra_matrix;$/;"	m	struct:AVCodecContext
intra_matrix	libavcodec/mdec.c	/^    uint16_t __align8 intra_matrix[64];$/;"	m	struct:MDECContext	file:
intra_matrix	libavcodec/mpegvideo.h	/^    uint16_t intra_matrix[64];$/;"	m	struct:MpegEncContext
intra_matrix	libavcodec/xvidff.c	/^    unsigned char *intra_matrix;   \/** P-Frame Quant Matrix *\/$/;"	m	struct:xvid_context	file:
intra_only	ffmpeg.c	/^static int intra_only = 0;$/;"	v	file:
intra_only	libavcodec/mpegvideo.h	/^    int intra_only;   \/\/\/< if true, only intra pictures are generated $/;"	m	struct:MpegEncContext
intra_quant_bias	libavcodec/avcodec.h	/^    int intra_quant_bias;$/;"	m	struct:AVCodecContext
intra_quant_bias	libavcodec/mpegvideo.h	/^    int intra_quant_bias;    \/\/\/< bias for the quantizer $/;"	m	struct:MpegEncContext
intra_run	libavcodec/mpeg4data.h	/^const int8_t intra_run[102] = {$/;"	v
intra_run_aic	libavcodec/h263data.h	/^const int8_t intra_run_aic[102] = {$/;"	v
intra_rvlc	libavcodec/mpeg4data.h	/^static const uint16_t intra_rvlc[170][2]={$/;"	v
intra_rvlc_level	libavcodec/mpeg4data.h	/^static const uint8_t intra_rvlc_level[169]={$/;"	v
intra_rvlc_run	libavcodec/mpeg4data.h	/^static const uint8_t intra_rvlc_run[169]={$/;"	v
intra_scantable	libavcodec/mpegvideo.h	/^    ScanTable __align8 intra_scantable;$/;"	m	struct:MpegEncContext
intra_v_scantable	libavcodec/mpegvideo.h	/^    ScanTable intra_v_scantable;$/;"	m	struct:MpegEncContext
intra_vlc	libavcodec/mpeg4data.h	/^const uint16_t intra_vlc[103][2] = {$/;"	v
intra_vlc_aic	libavcodec/h263data.h	/^const uint16_t intra_vlc_aic[103][2] = {$/;"	v
intra_vlc_format	libavcodec/mpegvideo.h	/^    int intra_vlc_format;$/;"	m	struct:MpegEncContext
intra_y_dequant	libavcodec/vp3.c	/^    int16_t __align16 intra_y_dequant[64];$/;"	m	struct:Vp3DecodeContext	file:
inv_qscale	libavcodec/asv1.c	/^    int inv_qscale;$/;"	m	struct:ASV1Context	file:
inv_zigzag_direct16	libavcodec/dsputil.c	/^uint16_t __align8 inv_zigzag_direct16[64] = {0, };$/;"	v
invalid_asf	libavformat/avi.h	/^    unsigned int invalid_asf : 1;$/;"	m	struct:CodecTag
inverse	libavcodec/dsputil.c	/^const uint32_t inverse[256]={$/;"	v
inverse	libavcodec/dsputil.h	/^    int inverse;$/;"	m	struct:FFTContext
inverse	libavcodec/mpegvideo.h	/^    uint8_t __align8 inverse[64];$/;"	m	struct:ScanTable
inverse_quant	libavcodec/g726.c	/^static inline int16_t inverse_quant(G726Context* c, int i)$/;"	f	file:
io_buffer	libavformat/aviobuf.c	/^    uint8_t io_buffer[1];$/;"	m	struct:DynBuffer	file:
io_buffer_size	libavformat/aviobuf.c	/^    int io_buffer_size;$/;"	m	struct:DynBuffer	file:
ip_mreq	libavformat/barpainet.h	/^struct ip_mreq {$/;"	s
ipaddr	libavformat/rtsp.h	/^    uint32_t ipaddr;$/;"	m	struct:RTSPActionServerSetup
ipmovie_iformat	libavformat/ipmovie.c	/^static AVInputFormat ipmovie_iformat = {$/;"	v	file:
ipmovie_init	libavformat/ipmovie.c	/^int ipmovie_init(void)$/;"	f
ipmovie_probe	libavformat/ipmovie.c	/^static int ipmovie_probe(AVProbeData *p)$/;"	f	file:
ipmovie_read_close	libavformat/ipmovie.c	/^static int ipmovie_read_close(AVFormatContext *s)$/;"	f	file:
ipmovie_read_header	libavformat/ipmovie.c	/^static int ipmovie_read_header(AVFormatContext *s,$/;"	f	file:
ipmovie_read_packet	libavformat/ipmovie.c	/^static int ipmovie_read_packet(AVFormatContext *s,$/;"	f	file:
ipol	tests/rotozoom.c	/^static int ipol(uint8_t *src, int x, int y){$/;"	f	file:
iptr	libavcodec/ra144.c	/^	unsigned int	*iptr;				\/* pointer to current input (from unpacked) *\/$/;"	m	file:
ipvideo_decode_block	libavcodec/interplayvideo.c	/^static int (*ipvideo_decode_block[16])(IpvideoContext *s);$/;"	v	file:
ipvideo_decode_block_opcode_0x0	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x0(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x1	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x1(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x2	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x2(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x3	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x3(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x4	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x4(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x5	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x5(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x6	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x6(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x7	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x7(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x8	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x8(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x9	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x9(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0xA	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0xA(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0xB	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0xB(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0xC	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0xC(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0xD	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0xD(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0xE	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0xE(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0xF	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0xF(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_end	libavcodec/interplayvideo.c	/^static int ipvideo_decode_end(AVCodecContext *avctx)$/;"	f	file:
ipvideo_decode_frame	libavcodec/interplayvideo.c	/^static int ipvideo_decode_frame(AVCodecContext *avctx,$/;"	f	file:
ipvideo_decode_init	libavcodec/interplayvideo.c	/^static int ipvideo_decode_init(AVCodecContext *avctx)$/;"	f	file:
ipvideo_decode_opcodes	libavcodec/interplayvideo.c	/^static void ipvideo_decode_opcodes(IpvideoContext *s)$/;"	f	file:
iquant	libavcodec/g726.c	/^	int* iquant;          \/**< inverse quantization table *\/$/;"	m	struct:G726Tables	file:
iquant_tbl16	libavcodec/g726.c	/^static int iquant_tbl16[] =$/;"	v	file:
iquant_tbl24	libavcodec/g726.c	/^static int iquant_tbl24[] =$/;"	v	file:
iquant_tbl32	libavcodec/g726.c	/^static int iquant_tbl32[] =$/;"	v	file:
iquant_tbl40	libavcodec/g726.c	/^static int iquant_tbl40[] =$/;"	v	file:
ir2_codes	libavcodec/indeo2data.h	/^static const uint16_t ir2_codes[IR2_CODES][2] = {$/;"	v
ir2_decode_frame	libavcodec/indeo2.c	/^static int ir2_decode_frame(AVCodecContext *avctx, $/;"	f	file:
ir2_decode_init	libavcodec/indeo2.c	/^static int ir2_decode_init(AVCodecContext *avctx){$/;"	f	file:
ir2_decode_plane	libavcodec/indeo2.c	/^static int ir2_decode_plane(Ir2Context *ctx, int width, int height, uint8_t *dst, int stride,$/;"	f	file:
ir2_decode_plane_inter	libavcodec/indeo2.c	/^static int ir2_decode_plane_inter(Ir2Context *ctx, int width, int height, uint8_t *dst, int stride,$/;"	f	file:
ir2_get_code	libavcodec/indeo2.c	/^static inline int ir2_get_code(GetBitContext *gb)$/;"	f	file:
ir2_luma_table	libavcodec/indeo2data.h	/^static const uint8_t ir2_luma_table[256] = {$/;"	v
ir2_vlc	libavcodec/indeo2.c	/^static VLC ir2_vlc;$/;"	v	file:
irms	libavcodec/ra144.c	/^static int irms(short *data, int factor)$/;"	f	file:
isHorizDC_C	libavcodec/libpostproc/postprocess.c	/^static inline int isHorizDC_C(uint8_t src[], int stride, PPContext *c)$/;"	f	file:
isHorizMinMaxOk_C	libavcodec/libpostproc/postprocess.c	/^static inline int isHorizMinMaxOk_C(uint8_t src[], int stride, int QP)$/;"	f	file:
isVertDC_C	libavcodec/libpostproc/postprocess.c	/^static inline int isVertDC_C(uint8_t src[], int stride, PPContext *c){$/;"	f	file:
isVertMinMaxOk_C	libavcodec/libpostproc/postprocess.c	/^static inline int isVertMinMaxOk_C(uint8_t src[], int stride, int QP)$/;"	f	file:
is_adx	libavcodec/adx.c	/^int is_adx(const unsigned char *buf,size_t bufsize)$/;"	f
is_alpha	libavcodec/imgconvert.c	/^    uint8_t is_alpha : 1;    \/* true if alpha can be specified *\/$/;"	m	struct:PixFmtInfo	file:
is_avc	libavcodec/h264.c	/^    int is_avc; \/\/\/< this flag is != 0 if codec is avc1$/;"	m	struct:H264Context	file:
is_done	vhook/watermark.c	/^    int             is_done;    $/;"	m	file:
is_dvd	libavformat/mpeg.c	/^    int is_dvd;$/;"	m	file:
is_feed	ffserver.c	/^    int is_feed;         \/* true if it is a feed *\/$/;"	m	struct:FFStream	file:
is_ff_stream	libavformat/mov.c	/^    int is_ff_stream; \/* Is this stream presented to ffmpeg ? i.e. is this an audio or video stream ? *\/$/;"	m	struct:MOVStreamContext	file:
is_full_screen	ffplay.c	/^static int is_full_screen;$/;"	v	file:
is_intra_more_likely	libavcodec/error_resilience.c	/^static int is_intra_more_likely(MpegEncContext *s){$/;"	f	file:
is_intra_only	libavformat/utils.c	/^static int is_intra_only(AVCodecContext *enc){$/;"	f	file:
is_mpeg2	libavformat/mpeg.c	/^    int is_mpeg2;$/;"	m	file:
is_multicast	ffserver.c	/^    int is_multicast;$/;"	m	struct:FFStream	file:
is_multicast	libavformat/udp.c	/^    int is_multicast;$/;"	m	file:
is_odml	libavformat/avidec.c	/^    int is_odml;$/;"	m	file:
is_packetized	ffserver.c	/^    int is_packetized; \/* if true, the stream is packetized *\/$/;"	m	struct:HTTPContext	file:
is_pipe	libavformat/img.c	/^    int is_pipe;$/;"	m	file:
is_pipe	libavformat/img2.c	/^    int is_pipe;$/;"	m	file:
is_raw	libavcodec/vc9.c	/^    uint8_t is_raw;     \/\/\/< Bit values must be read at MB level$/;"	m	struct:BitPlane	file:
is_raw_stream	libavformat/utils.c	/^static int is_raw_stream(AVFormatContext *s)$/;"	f	file:
is_start	ffmpeg.c	/^    int is_start;            \/* is 1 at the start and after a discontinuity *\/$/;"	m	struct:AVInputStream	file:
is_streamed	libavformat/asf.h	/^    int is_streamed;$/;"	m
is_streamed	libavformat/avio.h	/^    int is_streamed;  \/* true if streamed (no seek possible), default = false *\/$/;"	m	struct:URLContext
is_streamed	libavformat/avio.h	/^    int is_streamed;$/;"	m
is_svcd	libavformat/mpeg.c	/^    int is_svcd;$/;"	m	file:
is_table	libavcodec/mpegaudiodec.c	/^static int32_t is_table[2][16];$/;"	v	file:
is_table_lsf	libavcodec/mpegaudiodec.c	/^static int32_t is_table_lsf[2][2][16];$/;"	v	file:
is_vcd	libavformat/mpeg.c	/^    int is_vcd;$/;"	m	file:
is_yuv_planar	libavcodec/imgconvert.c	/^static inline int is_yuv_planar(PixFmtInfo *ps)$/;"	f	file:
ist_index	ffmpeg.c	/^    int ist_index;        \/* index of first stream in ist_table *\/$/;"	m	struct:AVInputFile	file:
item_name	libavcodec/avcodec.h	/^    const char* (*item_name)(void*); \/* actually passing a pointer to an AVCodecContext$/;"	m	struct:AVCLASS
iv_Decode_Chunk	libavcodec/indeo3.c	/^static void iv_Decode_Chunk(Indeo3DecodeContext *s,$/;"	f	file:
iv_alloc_frames	libavcodec/indeo3.c	/^static void iv_alloc_frames(Indeo3DecodeContext *s) $/;"	f	file:
iv_decode_frame	libavcodec/indeo3.c	/^static unsigned long iv_decode_frame(Indeo3DecodeContext *s, $/;"	f	file:
iv_frame	libavcodec/indeo3.c	/^    YUVBufs iv_frame[2];$/;"	m	struct:Indeo3DecodeContext	file:
iv_free_func	libavcodec/indeo3.c	/^static void iv_free_func(Indeo3DecodeContext *s) $/;"	f	file:
iwidth	libavcodec/imgresample.c	/^    int iwidth, iheight, owidth, oheight;$/;"	m	struct:ImgReSampleContext	file:
j_rev_dct	libavcodec/jrevdct.c	/^void j_rev_dct(DCTBLOCK data)$/;"	f
j_rev_dct1	libavcodec/jrevdct.c	/^void j_rev_dct1(DCTBLOCK data){$/;"	f
j_rev_dct2	libavcodec/jrevdct.c	/^void j_rev_dct2(DCTBLOCK data){$/;"	f
j_rev_dct4	libavcodec/jrevdct.c	/^void j_rev_dct4(DCTBLOCK data)$/;"	f
j_rev_dct_ARM	libavcodec/armv4l/jrevdct_arm.S	/^j_rev_dct_ARM:$/;"	l
j_rev_dct_ARM_add	libavcodec/armv4l/dsputil_arm.c	/^static void j_rev_dct_ARM_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
j_rev_dct_ARM_put	libavcodec/armv4l/dsputil_arm.c	/^static void j_rev_dct_ARM_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
j_type	libavcodec/wmv2.c	/^    int j_type;$/;"	m	struct:Wmv2Context	file:
j_type_bit	libavcodec/wmv2.c	/^    int j_type_bit;$/;"	m	struct:Wmv2Context	file:
jmpbuf	libavcodec/ppc/dsputil_altivec.c	/^static sigjmp_buf jmpbuf;$/;"	v	file:
jmpbuf	libavcodec/sparc/dsputil_vis.c	/^static sigjmp_buf jmpbuf;$/;"	v	file:
job_count	libavcodec/pthread.c	/^    int job_count;$/;"	m	struct:ThreadContext	file:
jpeg_get_buffer	libavformat/jpeg.c	/^static int jpeg_get_buffer(AVCodecContext *c, AVFrame *picture)$/;"	f	file:
jpeg_image_format	libavformat/jpeg.c	/^AVImageFormat jpeg_image_format = {$/;"	v
jpeg_img_copy	libavformat/jpeg.c	/^static void jpeg_img_copy(uint8_t *dst, int dst_wrap, $/;"	f	file:
jpeg_init	libavformat/mpjpeg.c	/^int jpeg_init(void)$/;"	f
jpeg_parse	libavcodec/mjpeg.c	/^static int jpeg_parse(AVCodecParserContext *s,$/;"	f	file:
jpeg_probe	libavformat/jpeg.c	/^static int jpeg_probe(AVProbeData *pd)$/;"	f	file:
jpeg_put_comments	libavcodec/mjpeg.c	/^static void jpeg_put_comments(MpegEncContext *s)$/;"	f	file:
jpeg_read	libavformat/jpeg.c	/^static int jpeg_read(ByteIOContext *f, $/;"	f	file:
jpeg_table_header	libavcodec/mjpeg.c	/^static void jpeg_table_header(MpegEncContext *s)$/;"	f	file:
jpeg_write	libavformat/jpeg.c	/^static int jpeg_write(ByteIOContext *pb, AVImageInfo *info)$/;"	f	file:
k_x	libavcodec/vc9.c	/^    int k_x;              \/\/\/< Number of bits for MVs (depends on MV range)$/;"	m	struct:VC9Context	file:
k_y	libavcodec/vc9.c	/^    int k_y;              \/\/\/< Number of bits for MVs (depends on MV range)$/;"	m	struct:VC9Context	file:
key_frame	libavformat/movenc.c	/^    char         key_frame;$/;"	m	struct:MOVIentry	file:
keyframe	libavcodec/snow.c	/^    int keyframe;$/;"	m	struct:SnowContext	file:
keyframe	libavcodec/vp3.c	/^    int keyframe;$/;"	m	struct:Vp3DecodeContext	file:
keyframe	libavformat/segafilm.c	/^  int keyframe;$/;"	m	file:
keyframe	libavformat/sierravmd.c	/^  int keyframe;$/;"	m	file:
keyframe_count	libavformat/mov.c	/^    long keyframe_count;$/;"	m	struct:MOVStreamContext	file:
keyframes	libavformat/mov.c	/^    long *keyframes;$/;"	m	struct:MOVStreamContext	file:
l	libavcodec/alpha/asm.h	/^struct unaligned_long { uint64_t l; } __attribute__((packed));$/;"	m	struct:unaligned_long
l	libavcodec/dsputil.h	/^struct unaligned_16 { uint16_t l; } __attribute__((packed));$/;"	m	struct:unaligned_16
l	libavcodec/dsputil.h	/^struct unaligned_32 { uint32_t l; } __attribute__((packed));$/;"	m	struct:unaligned_32
l	libavcodec/dsputil.h	/^struct unaligned_64 { uint64_t l; } __attribute__((packed));$/;"	m	struct:unaligned_64
l1_unscale	libavcodec/mpegaudiodec.c	/^static inline int l1_unscale(int n, int mant, int scale_factor)$/;"	f	file:
l2_select_table	libavcodec/mpegaudiodec.c	/^int l2_select_table(int bitrate, int nb_channels, int freq, int lsf)$/;"	f
l2_unscale_group	libavcodec/mpegaudiodec.c	/^static inline int l2_unscale_group(int steps, int mant, int scale_factor)$/;"	f	file:
l3_unscale	libavcodec/mpegaudiodec.c	/^static inline int l3_unscale(int value, int exponent)$/;"	f	file:
lambda	libavcodec/mpegvideo.h	/^    int lambda;                 \/\/\/< lagrange multipler used in rate distortion$/;"	m	struct:MpegEncContext
lambda	libavcodec/snow.c	/^    int lambda;$/;"	m	struct:SnowContext	file:
lambda2	libavcodec/mpegvideo.h	/^    int lambda2;                \/\/\/< (lambda*lambda) >> FF_LAMBDA_SHIFT $/;"	m	struct:MpegEncContext
lambda2	libavcodec/snow.c	/^    int lambda2;$/;"	m	struct:SnowContext	file:
lambda_table	libavcodec/mpegvideo.h	/^    int *lambda_table;$/;"	m	struct:MpegEncContext
language	libavformat/matroska.c	/^        *language;$/;"	m	struct:Track	file:
last	ffserver.c	/^    struct in_addr last;$/;"	m	struct:IPAddressACL	file:
last	libavcodec/mpegvideo.h	/^    int last;                      \/\/\/< number of values for last = 0 $/;"	m	struct:RLTable
last_IP_duration	libavformat/avformat.h	/^    int last_IP_duration;$/;"	m	struct:AVStream
last_IP_pts	libavformat/avformat.h	/^    int64_t last_IP_pts;$/;"	m	struct:AVStream
last_bitoffset	libavcodec/wmadec.c	/^    int last_bitoffset;$/;"	m	struct:WMADecodeContext	file:
last_bits	libavcodec/mpegvideo.h	/^    int last_bits; \/\/\/< temp var used for calculating the above vars$/;"	m	struct:MpegEncContext
last_cc	libavformat/mpegts.c	/^    int last_cc; \/* last cc code (-1 if first packet) *\/$/;"	m	struct:MpegTSFilter	file:
last_coded_c_fragment	libavcodec/vp3.c	/^    int last_coded_c_fragment;$/;"	m	struct:Vp3DecodeContext	file:
last_coded_y_fragment	libavcodec/vp3.c	/^    int last_coded_y_fragment;$/;"	m	struct:Vp3DecodeContext	file:
last_dc	libavcodec/4xm.c	/^    int last_dc;$/;"	m	struct:FourXContext	file:
last_dc	libavcodec/mdec.c	/^    int last_dc[3];$/;"	m	struct:MDECContext	file:
last_dc	libavcodec/mjpeg.c	/^    int last_dc[MAX_COMPONENTS]; \/* last DEQUANTIZED dc (XXX: am I right to do that ?) *\/$/;"	m	struct:MJpegDecodeContext	file:
last_dc	libavcodec/mpegvideo.h	/^    int last_dc[3];                \/\/\/< last DC values for MPEG1 $/;"	m	struct:MpegEncContext
last_deltaset	libavcodec/truemotion1.c	/^    int last_deltaset, last_vectable;$/;"	m	struct:TrueMotion1Context	file:
last_dts	libavcodec/avcodec.h	/^    int64_t last_dts;$/;"	m	struct:AVCodecParserContext
last_frame	libavcodec/interplayvideo.c	/^    AVFrame last_frame;$/;"	m	struct:IpvideoContext	file:
last_frame	libavcodec/roqvideo.c	/^    AVFrame last_frame;$/;"	m	struct:RoqContext	file:
last_frame	libavcodec/vp3.c	/^    AVFrame last_frame;$/;"	m	struct:Vp3DecodeContext	file:
last_frame	libavcodec/xan.c	/^    AVFrame last_frame;$/;"	m	struct:XanContext	file:
last_frame_offset	libavcodec/avcodec.h	/^    int64_t last_frame_offset; \/* offset of the last frame *\/$/;"	m	struct:AVCodecParserContext
last_i_start	ffplay.c	/^    int last_i_start;$/;"	m	struct:VideoState	file:
last_index	libavcodec/mpegvideo.h	/^    int last_index;$/;"	m	struct:ParseContext
last_indexed_pts	libavformat/asf.h	/^    int64_t last_indexed_pts;$/;"	m
last_job_cond	libavcodec/pthread.c	/^    pthread_cond_t last_job_cond;$/;"	m	struct:ThreadContext	file:
last_key_frame	libavformat/nut.c	/^    int last_key_frame;$/;"	m	file:
last_mb_var_sum	libavcodec/mpegvideo.h	/^    int last_mb_var_sum;$/;"	m	struct:RateControlContext
last_mc_mb_var_sum	libavcodec/mpegvideo.h	/^    int last_mc_mb_var_sum;$/;"	m	struct:RateControlContext
last_mv	libavcodec/mpegvideo.h	/^    int last_mv[2][2][2];             \/\/\/< last MV, used for MV prediction in MPEG1 & B-frame MPEG4 $/;"	m	struct:MpegEncContext
last_mv_dir	libavcodec/mpegvideo.h	/^    int last_mv_dir;         \/\/\/< last mv_dir, used for b frame encoding $/;"	m	struct:MpegEncContext
last_non_b_pict_type	libavcodec/mpegvideo.h	/^    int last_non_b_pict_type;   \/\/\/< used for mpeg4 gmc b-frames & ratecontrol $/;"	m	struct:MpegEncContext
last_non_b_pict_type	libavcodec/mpegvideo.h	/^    int last_non_b_pict_type;$/;"	m	struct:RateControlContext
last_non_b_time	libavcodec/mpegvideo.h	/^    int64_t last_non_b_time;$/;"	m	struct:MpegEncContext
last_octet_count	libavformat/rtp.c	/^    unsigned int last_octet_count;$/;"	m	struct:RTPDemuxContext	file:
last_packet_sent	ffserver.c	/^    int last_packet_sent; \/* true if last data packet was sent *\/$/;"	m	struct:HTTPContext	file:
last_paused	ffplay.c	/^    int last_paused;$/;"	m	struct:VideoState	file:
last_pic_num	libavcodec/utils.c	/^    int last_pic_num;$/;"	m	struct:InternalBuffer	file:
last_pict_type	libavcodec/mpegvideo.h	/^    int last_pict_type; \/\/FIXME removes$/;"	m	struct:MpegEncContext
last_picture	libavcodec/4xm.c	/^    AVFrame current_picture, last_picture;$/;"	m	struct:FourXContext	file:
last_picture	libavcodec/mpegvideo.h	/^    Picture last_picture;       $/;"	m	struct:MpegEncContext
last_picture	libavcodec/snow.c	/^    AVFrame last_picture;$/;"	m	struct:SnowContext	file:
last_picture	libavcodec/svq1.c	/^    AVFrame last_picture;$/;"	m	struct:SVQ1Context	file:
last_picture_ptr	libavcodec/mpegvideo.h	/^    Picture *last_picture_ptr;     \/\/\/< pointer to the previous picture.$/;"	m	struct:MpegEncContext
last_pkt	ffplay.c	/^    AVPacketList *first_pkt, *last_pkt;$/;"	m	struct:PacketQueue	file:
last_predictor_count	libavcodec/avcodec.h	/^    int last_predictor_count;$/;"	m	struct:AVCodecContext
last_pts	libavcodec/avcodec.h	/^    int64_t last_pts;$/;"	m	struct:AVCodecParserContext
last_pts	libavformat/nut.c	/^    int64_t last_pts;$/;"	m	file:
last_qscale	libavcodec/mpegvideo.h	/^    double last_qscale;$/;"	m	struct:RateControlContext
last_qscale_diff	libavcodec/h264.c	/^    int         last_qscale_diff;$/;"	m	struct:H264Context	file:
last_qscale_for	libavcodec/mpegvideo.h	/^    double last_qscale_for[5];    \/\/\/< last qscale for a specific pict type, used for max_diff & ipb factor stuff $/;"	m	struct:RateControlContext
last_quality_index	libavcodec/vp3.c	/^    int last_quality_index;$/;"	m	struct:Vp3DecodeContext	file:
last_reply	libavformat/rtsp.c	/^    char last_reply[2048]; \/* XXX: allocate ? *\/$/;"	m	struct:RTSPState	file:
last_resync_gb	libavcodec/mpegvideo.h	/^    GetBitContext last_resync_gb;    \/\/\/< used to search for the next resync marker $/;"	m	struct:MpegEncContext
last_row	libavcodec/png.c	/^    uint8_t *last_row;$/;"	m	struct:PNGContext	file:
last_row	libavformat/png.c	/^    uint8_t *last_row;$/;"	m	struct:PNGDecodeState	file:
last_rtcp_ntp_time	libavformat/rtp.c	/^    int64_t last_rtcp_ntp_time;$/;"	m	struct:RTPDemuxContext	file:
last_rtcp_timestamp	libavformat/rtp.c	/^    uint32_t last_rtcp_timestamp;$/;"	m	struct:RTPDemuxContext	file:
last_samples	libavcodec/ac3enc.c	/^    short last_samples[AC3_MAX_CHANNELS][256];$/;"	m	struct:AC3EncodeContext	file:
last_scr	libavformat/mpeg.c	/^    int64_t last_scr; \/* current system clock *\/$/;"	m	file:
last_sec_num	libavformat/mpegts.c	/^    uint8_t last_sec_num;$/;"	m	struct:SectionHeader	file:
last_slice_end	libavcodec/huffyuv.c	/^    int last_slice_end;$/;"	m	struct:HYuvContext	file:
last_static	libavcodec/utils.c	/^static unsigned int last_static = 0;$/;"	v	file:
last_superframe	libavcodec/wmadec.c	/^    uint8_t last_superframe[MAX_CODED_SUPERFRAME_SIZE + 4]; \/* padding added *\/$/;"	m	struct:WMADecodeContext	file:
last_superframe_len	libavcodec/wmadec.c	/^    int last_superframe_len;$/;"	m	struct:WMADecodeContext	file:
last_sync_pos	libavformat/nut.c	/^    int64_t last_sync_pos;                    \/\/\/<pos of last 1\/2 type frame$/;"	m	file:
last_time_base	libavcodec/mpegvideo.h	/^    int last_time_base;$/;"	m	struct:MpegEncContext
last_vectable	libavcodec/truemotion1.c	/^    int last_deltaset, last_vectable;$/;"	m	struct:TrueMotion1Context	file:
lastgp	libavformat/ogg2.h	/^    uint64_t granule, lastgp;$/;"	m	struct:ogg_stream
latab	libavcodec/ac3tab.h	/^static const uint8_t latab[260]= {$/;"	v
latab	libavcodec/liba52/bit_allocate.c	/^static int8_t latab[256] = {$/;"	v	file:
lavc_build	libavcodec/mpegvideo.h	/^    int lavc_build;$/;"	m	struct:MpegEncContext
layer	libavcodec/mpegaudiodec.c	/^    int layer;$/;"	m	struct:MPADecodeContext	file:
ld3	libavcodec/ps2/mmi.h	56;"	d
ldl	libavcodec/alpha/asm.h	60;"	d
ldl3	libavcodec/ps2/mmi.h	62;"	d
ldq	libavcodec/alpha/asm.h	59;"	d
ldq_u	libavcodec/alpha/asm.h	135;"	d
ldq_u	libavcodec/alpha/asm.h	67;"	d
ldr3	libavcodec/ps2/mmi.h	59;"	d
le2me_16	libavcodec/bswap.h	130;"	d
le2me_16	libavcodec/bswap.h	137;"	d
le2me_32	libavcodec/bswap.h	131;"	d
le2me_32	libavcodec/bswap.h	138;"	d
le2me_64	libavcodec/bswap.h	132;"	d
le2me_64	libavcodec/bswap.h	139;"	d
leftBand	ffmpeg.c	/^    int leftBand;$/;"	m	struct:AVOutputStream	file:
leftBand	libavcodec/imgresample.c	/^    int topBand, bottomBand, leftBand, rightBand;$/;"	m	struct:ImgReSampleContext	file:
left_border	libavcodec/h264.c	/^    uint8_t left_border[2*(17+2*9)];$/;"	m	struct:H264Context	file:
left_cbp	libavcodec/h264.c	/^    int left_cbp;$/;"	m	struct:H264Context	file:
left_in_chunk	libavformat/mov.c	/^    long left_in_chunk; \/* how many samples before next chunk *\/$/;"	m	struct:MOVStreamContext	file:
left_mb_xy	libavcodec/h264.c	/^    int left_mb_xy[2];$/;"	m	struct:H264Context	file:
left_samples_available	libavcodec/h264.c	/^    unsigned int left_samples_available;$/;"	m	struct:H264Context	file:
len	libavcodec/bitstream.h	/^    int8_t len;$/;"	m	struct:RL_VLC_ELEM
len	libavcodec/huffyuv.c	/^    uint8_t len[3][256];$/;"	m	struct:HYuvContext	file:
len	libavformat/avienc.c	/^    unsigned int flags, pos, len;$/;"	m	struct:AVIIentry	file:
len	libavformat/oggparsevorbis.c	/^    unsigned int len[3];$/;"	m	file:
length	libavcodec/raw.c	/^    int             length;  \/* number of bytes in buffer *\/$/;"	m	struct:RawVideoContext	file:
length	libavformat/matroska.c	/^    uint64_t start, length;$/;"	m	struct:MatroskaLevel	file:
lev	libavcodec/mace.c	/^  short index, lev, factor, prev2, previous, level;$/;"	m	struct:MACEContext	file:
level	libavcodec/avcodec.h	/^     int level;$/;"	m	struct:AVCodecContext
level	libavcodec/bitstream.h	/^    int16_t level;$/;"	m	struct:RL_VLC_ELEM
level	libavcodec/liba52/a52_internal.h	/^    level_t level;		\/* output level *\/$/;"	m	struct:a52_state_s
level	libavcodec/mace.c	/^  short index, lev, factor, prev2, previous, level;$/;"	m	struct:MACEContext	file:
level	libavcodec/snow.c	/^    int level;$/;"	m	struct:SubBand	file:
level	libavcodec/snow.c	/^    uint8_t level; \/\/FIXME merge into type?$/;"	m	struct:BlockNode	file:
level	libavcodec/svq3.c	/^static const struct { uint8_t run; uint8_t level; } svq3_dct_tables[2][16] = {$/;"	m	file:
level	libavcodec/vc9.c	/^    int level;            \/\/\/< 3bits, for Advanced\/Simple Profile, provided by TS layer$/;"	m	struct:VC9Context	file:
level_idc	libavcodec/h264.c	/^    int level_idc;$/;"	m	struct:SPS	file:
level_t	libavcodec/liba52/a52.h	/^typedef double level_t;$/;"	t
level_t	libavcodec/liba52/a52.h	/^typedef float level_t;$/;"	t
level_t	libavcodec/liba52/a52.h	/^typedef int32_t level_t;$/;"	t
level_tab	libavcodec/asv1.c	/^static const uint8_t level_tab[7][2]={$/;"	v	file:
level_table	libavcodec/wmadec.c	/^    uint16_t *level_table[2];$/;"	m	struct:WMADecodeContext	file:
level_up	libavformat/matroska.c	/^    int level_up;$/;"	m	struct:MatroskaDemuxContext	file:
level_vlc	libavcodec/asv1.c	/^static VLC level_vlc;$/;"	v	file:
levels	libavcodec/wmadec.c	/^    const uint16_t *levels; \/* table to build run\/level tables *\/$/;"	m	struct:CoefVLCTable	file:
levels	libavformat/matroska.c	/^    MatroskaLevel levels[EBML_MAX_DEPTH];$/;"	m	struct:MatroskaDemuxContext	file:
levels0	libavcodec/wmadata.h	/^static const uint16_t levels0[60] = {$/;"	v
levels1	libavcodec/wmadata.h	/^static const uint16_t levels1[40] = {$/;"	v
levels2	libavcodec/wmadata.h	/^static const uint16_t levels2[340] = {$/;"	v
levels3	libavcodec/wmadata.h	/^static const uint16_t levels3[180] = {$/;"	v
levels4	libavcodec/wmadata.h	/^static const uint16_t levels4[70] = {$/;"	v
levels5	libavcodec/wmadata.h	/^static const uint16_t levels5[40] = {$/;"	v
lfe	libavcodec/ac3enc.c	/^    int lfe;$/;"	m	struct:AC3EncodeContext	file:
lfe_channel	libavcodec/ac3enc.c	/^    int lfe_channel;$/;"	m	struct:AC3EncodeContext	file:
lfe_expbap	libavcodec/liba52/a52_internal.h	/^    expbap_t lfe_expbap;$/;"	m	struct:a52_state_s
lfeba	libavcodec/liba52/a52_internal.h	/^    ba_t lfeba;			\/* lfe bit allocation parameters *\/$/;"	m	struct:a52_state_s
lfeon	libavcodec/liba52/a52_internal.h	/^    uint8_t lfeon;		\/* coded lfe channel *\/$/;"	m	struct:a52_state_s
lfsr_state	libavcodec/liba52/a52_internal.h	/^    uint16_t lfsr_state;	\/* dither state *\/$/;"	m	struct:a52_state_s
lhist	libavcodec/ra288.c	/^	float lhist[10];$/;"	m	file:
liba52name	libavcodec/a52dec.c	/^static const char* liba52name = "liba52.so.0";$/;"	v	file:
libdir	config.mak	/^libdir=\/usr\/local\/lib$/;"	m
libfaadname	libavcodec/faad.c	/^static const char* libfaadname = "libfaad.so.0";$/;"	v	file:
libgsm_close	libavcodec/libgsm.c	/^static int libgsm_close(AVCodecContext *avctx) {$/;"	f	file:
libgsm_decode_frame	libavcodec/libgsm.c	/^static int libgsm_decode_frame(AVCodecContext *avctx,$/;"	f	file:
libgsm_decoder	libavcodec/libgsm.c	/^AVCodec libgsm_decoder = {$/;"	v
libgsm_encode_frame	libavcodec/libgsm.c	/^static int libgsm_encode_frame(AVCodecContext *avctx,$/;"	f	file:
libgsm_encoder	libavcodec/libgsm.c	/^AVCodec libgsm_encoder = {$/;"	v
libgsm_init	libavcodec/libgsm.c	/^static int libgsm_init(AVCodecContext *avctx) {$/;"	f	file:
libogg_init	libavformat/ogg.c	/^int libogg_init(void) {$/;"	f
library	vhook/drawtext.c	/^  FT_Library library;$/;"	m	file:
lift	libavcodec/snow.c	/^static always_inline void lift(DWTELEM *dst, DWTELEM *src, DWTELEM *ref, int dst_step, int src_step, int ref_step, int width, int mul, int add, int shift, int highpass, int inverse){$/;"	f	file:
lift5	libavcodec/snow.c	/^static always_inline void lift5(DWTELEM *dst, DWTELEM *src, DWTELEM *ref, int dst_step, int src_step, int ref_step, int width, int mul, int add, int shift, int highpass, int inverse){$/;"	f	file:
lift5	libavcodec/snow.c	1097;"	d	file:
liftS	libavcodec/snow.c	/^static always_inline void liftS(DWTELEM *dst, DWTELEM *src, DWTELEM *ref, int dst_step, int src_step, int ref_step, int width, int mul, int add, int shift, int highpass, int inverse){$/;"	f	file:
liftS	libavcodec/snow.c	1096;"	d	file:
liftS	libavcodec/snow.c	1103;"	d	file:
likely	libavcodec/alpha/asm.h	33;"	d
likely	libavcodec/alpha/asm.h	36;"	d
limit_filesize	ffmpeg.c	/^static int limit_filesize = 0; \/\/$/;"	v	file:
line	libavcodec/snow.c	/^    DWTELEM * * line; \/\/\/< For use by idwt and predict_slices.$/;"	m	file:
line_buf	libavcodec/imgresample.c	/^    uint8_t *line_buf;$/;"	m	struct:ImgReSampleContext	file:
line_count	libavcodec/snow.c	/^    int line_count;$/;"	m	file:
line_count	libavformat/http.c	/^    int line_count;$/;"	m	file:
line_inc	libavcodec/interplayvideo.c	/^    int line_inc;$/;"	m	struct:IpvideoContext	file:
line_width	libavcodec/snow.c	/^    int line_width;$/;"	m	file:
linear	libavcodec/resample2.c	/^    int linear;$/;"	m	struct:AVResampleContext	file:
linear_to_alaw	libavcodec/pcm.c	/^static uint8_t *linear_to_alaw = NULL;$/;"	v	file:
linear_to_alaw_ref	libavcodec/pcm.c	/^static int linear_to_alaw_ref = 0;$/;"	v	file:
linear_to_ulaw	libavcodec/pcm.c	/^static uint8_t *linear_to_ulaw = NULL;$/;"	v	file:
linear_to_ulaw_ref	libavcodec/pcm.c	/^static int linear_to_ulaw_ref = 0;$/;"	v	file:
linecpy	libavcodec/libpostproc/postprocess_internal.h	/^static inline void linecpy(void *dest, void *src, int lines, int stride)$/;"	f
linesize	libavcodec/avcodec.h	/^    int linesize[4];       \/\/\/< number of bytes per line$/;"	m	struct:AVPicture
linesize	libavcodec/mjpeg.c	/^    int linesize[MAX_COMPONENTS];                   \/\/\/< linesize << interlaced$/;"	m	struct:MJpegDecodeContext	file:
linesize	libavcodec/mpegvideo.h	/^    int linesize;              \/\/\/< line size, in bytes, may be different from width $/;"	m	struct:MpegEncContext
linesize	libavcodec/utils.c	/^    int linesize[4];$/;"	m	struct:InternalBuffer	file:
ljpeg_decode_rgb_scan	libavcodec/mjpeg.c	/^static int ljpeg_decode_rgb_scan(MJpegDecodeContext *s, int predictor, int point_transform){$/;"	f	file:
ljpeg_decode_yuv_scan	libavcodec/mjpeg.c	/^static int ljpeg_decode_yuv_scan(MJpegDecodeContext *s, int predictor, int point_transform){$/;"	f	file:
ljpeg_encoder	libavcodec/mjpeg.c	/^AVCodec ljpeg_encoder = { \/\/FIXME avoid MPV_* lossless jpeg shouldnt need them$/;"	v
lmax	libavcodec/avcodec.h	/^    int lmax;$/;"	m	struct:AVCodecContext
lmin	libavcodec/avcodec.h	/^    int lmin;$/;"	m	struct:AVCodecContext
load_input_picture	libavcodec/mpegvideo.c	/^static int load_input_picture(MpegEncContext *s, AVFrame *pic_arg){$/;"	f	file:
load_ipmovie_packet	libavformat/ipmovie.c	/^static int load_ipmovie_packet(IPMVEContext *s, ByteIOContext *pb, $/;"	f	file:
load_matrix	libavcodec/sh4/idct_sh4.c	106;"	d	file:
load_matrix	libavcodec/sh4/idct_sh4.c	54;"	d	file:
load_matrix_	libavcodec/sh4/idct_sh4.c	/^static void load_matrix_(float xf[],const float table[])$/;"	f	file:
load_module	ffserver.c	/^void load_module(const char *filename)$/;"	f
local_palette	libavformat/gifdec.c	/^    uint8_t local_palette[256 * 3];$/;"	m	struct:GifState	file:
local_port	libavformat/udp.c	/^    int local_port;$/;"	m	file:
localtime_r	libavformat/os_support.c	/^struct tm *localtime_r(const time_t *t, struct tm *tp)$/;"	f
location	libavformat/http.c	/^    char location[URL_SIZE];$/;"	m	file:
lock_ben	libavcodec/beosthread.c	/^static inline int lock_ben(struct benaphore *ben)$/;"	f	file:
loco_decode_plane	libavcodec/loco.c	/^static int loco_decode_plane(LOCOContext *l, uint8_t *data, int width, int height,$/;"	f	file:
loco_decoder	libavcodec/loco.c	/^AVCodec loco_decoder = {$/;"	v
loco_get_rice	libavcodec/loco.c	/^static inline int loco_get_rice(RICEContext *r)$/;"	f	file:
loco_get_rice_param	libavcodec/loco.c	/^static int loco_get_rice_param(RICEContext *r)$/;"	f	file:
loco_predict	libavcodec/loco.c	/^static inline int loco_predict(uint8_t* data, int stride, int step)$/;"	f	file:
loco_update_rice_param	libavcodec/loco.c	/^static inline void loco_update_rice_param(RICEContext *r, int val)$/;"	f	file:
log16	tests/tiny_psnr.c	/^static int64_t log16(uint64_t a){$/;"	f	file:
log2_max_frame_num	libavcodec/h264.c	/^    int log2_max_frame_num;            \/\/\/< log2_max_frame_num_minus4 + 4$/;"	m	struct:SPS	file:
log2_max_poc_lsb	libavcodec/h264.c	/^    int log2_max_poc_lsb;              \/\/\/< log2_max_pic_order_cnt_lsb_minus4$/;"	m	struct:SPS	file:
log2_run	libavcodec/ffv1.c	/^static const uint8_t log2_run[32]={$/;"	v	file:
log2_tab	libavcodec/ac3enc.c	/^static int log2_tab(int16_t *tab, int n)$/;"	f	file:
log_connection	ffserver.c	/^static void log_connection(HTTPContext *c)$/;"	f	file:
logfile	ffmpeg.c	/^    FILE *logfile;$/;"	m	struct:AVOutputStream	file:
logfile	ffserver.c	/^static FILE *logfile = NULL;$/;"	v	file:
logfilename	ffserver.c	/^char logfilename[1024];$/;"	v
longName	libavcodec/libpostproc/postprocess_internal.h	/^	char *longName;$/;"	m	struct:PPFilter
long_end	libavcodec/mpegaudiodec.c	/^    int short_start, long_end; \/* long\/short band indexes *\/$/;"	m	struct:GranuleDef	file:
long_index	libavcodec/h264.c	/^    int long_index;$/;"	m	struct:MMCO	file:
long_name	libavformat/avformat.h	/^    const char *long_name;$/;"	m	struct:AVInputFormat
long_name	libavformat/avformat.h	/^    const char *long_name;$/;"	m	struct:AVOutputFormat
long_ref	libavcodec/h264.c	/^    Picture *long_ref[32];$/;"	m	struct:H264Context	file:
long_ref	libavcodec/mpegvideo.h	/^    int long_ref;               \/\/\/< 1->long term reference 0->short term reference$/;"	m	struct:Picture
long_ref_count	libavcodec/h264.c	/^    int long_ref_count;  \/\/\/< number of actual long term references$/;"	m	struct:H264Context	file:
lookup_type	libavcodec/vorbis.h	/^    uint_fast8_t lookup_type;$/;"	m
loop	ffserver.c	/^    int loop; \/* if true, send the stream in loops (only meaningful if file) *\/$/;"	m	struct:FFStream	file:
loop_filter	libavcodec/mpegvideo.h	/^    int loop_filter;    $/;"	m	struct:MpegEncContext
loop_input	libavformat/img.c	/^int loop_input = 0;$/;"	v
lossless	libavcodec/mjpeg.c	/^    int lossless;$/;"	m	struct:MJpegDecodeContext	file:
lossless	libavcodec/sonic.c	/^    int lossless, decorrelation;$/;"	m	struct:SonicContext	file:
lossy	libavcodec/loco.c	/^    int lossy;$/;"	m	struct:LOCOContext	file:
lossy	libavcodec/loco.c	/^    int lossy;$/;"	m	struct:RICEContext	file:
low	libavcodec/cabac.h	/^    int low;$/;"	m	struct:CABACContext
low	libavcodec/rangecoder.h	/^    int low;$/;"	m	struct:RangeCoder
low_delay	libavcodec/mpegvideo.h	/^    int low_delay;                   \/\/\/< no reordering needed \/ has no b-frames $/;"	m	struct:MpegEncContext
low_latency_sprite	libavcodec/mpegvideo.h	/^    int low_latency_sprite;$/;"	m	struct:MpegEncContext
low_neighbour	libavcodec/vorbis.h	/^    uint_fast16_t *low_neighbour;$/;"	m
lowres	ffmpeg.c	/^static int lowres= 0;$/;"	v	file:
lowres	ffplay.c	/^static int lowres = 0;$/;"	v	file:
lowres	libavcodec/avcodec.h	/^     int lowres;$/;"	m	struct:AVCodecContext
lpcm_align	libavformat/mpeg.c	/^    int lpcm_align;$/;"	m	file:
lpcm_freq_tab	libavformat/mpeg.c	/^static const int lpcm_freq_tab[4] = { 48000, 96000, 44100, 32000 };$/;"	v	file:
lpcm_header	libavformat/mpeg.c	/^    uint8_t lpcm_header[3];$/;"	m	file:
lpcqoffset	libavcodec/shorten.c	/^    int32_t lpcqoffset;$/;"	m	struct:ShortenContext	file:
lps_range	libavcodec/cabac.h	/^    uint8_t lps_range[2*65][4];   \/\/\/< rangeTabLPS$/;"	m	struct:CABACContext
lps_state	libavcodec/cabac.h	/^    uint8_t lps_state[2*64];      \/\/\/< transIdxLPS$/;"	m	struct:CABACContext
lq	libavcodec/ps2/mmi.h	42;"	d
lq2	libavcodec/ps2/mmi.h	45;"	d
lrintf	libavcodec/dsputil.h	/^static always_inline long int lrintf(float x)$/;"	f
lsb2full	libavformat/nut.c	/^static int64_t lsb2full(StreamContext *stream, int64_t lsb){$/;"	f	file:
lsb2full	libavformat/utils.c	/^static int64_t lsb2full(int64_t lsb, int64_t last_ts, int lsb_bits){$/;"	f	file:
lsf	libavcodec/mpegaudio.c	/^    int lsf;           \/* 1 if mpeg2 low bitrate selected *\/$/;"	m	struct:MpegAudioContext	file:
lsf	libavcodec/mpegaudiodec.c	/^    int lsf;$/;"	m	struct:MPADecodeContext	file:
lsf_nsf_table	libavcodec/mpegaudiodectab.h	/^static const uint8_t lsf_nsf_table[6][3][4] = {$/;"	v
lsf_sf_expand	libavcodec/mpegaudiodec.c	/^static inline void lsf_sf_expand(int *slen,$/;"	f	file:
lshift_tab	libavcodec/ac3enc.c	/^static void lshift_tab(int16_t *tab, int n, int lshift)$/;"	f	file:
lsp_codebook	libavcodec/wmadata.h	/^static const float lsp_codebook[NB_LSP_COEFS][16] = {$/;"	v
lsp_cos_table	libavcodec/wmadec.c	/^    float lsp_cos_table[BLOCK_MAX_SIZE];$/;"	m	struct:WMADecodeContext	file:
lsp_pow_e_table	libavcodec/wmadec.c	/^    float lsp_pow_e_table[256];$/;"	m	struct:WMADecodeContext	file:
lsp_pow_m_table1	libavcodec/wmadec.c	/^    float lsp_pow_m_table1[(1 << LSP_POW_BITS)];$/;"	m	struct:WMADecodeContext	file:
lsp_pow_m_table2	libavcodec/wmadec.c	/^    float lsp_pow_m_table2[(1 << LSP_POW_BITS)];$/;"	m	struct:WMADecodeContext	file:
ltc_divisor	libavcodec/dvdata.h	/^    int              ltc_divisor;         \/* FPS from the LTS standpoint *\/$/;"	m	struct:DVprofile
lumMode	libavcodec/libpostproc/postprocess_internal.h	/^	int lumMode; 			\/\/\/< acivates filters for luminance$/;"	m	struct:PPMode
lum_m4_mem	libavformat/grab.c	/^    uint8_t *lum_m4_mem;$/;"	m	file:
luma_dc_field_scan	libavcodec/h264data.h	/^static const uint8_t luma_dc_field_scan[16]={$/;"	v
luma_dc_vlc_length	libavcodec/mpegvideo.h	/^    uint8_t *luma_dc_vlc_length;$/;"	m	struct:MpegEncContext
luma_dc_zigzag_scan	libavcodec/h264data.h	/^static const uint8_t luma_dc_zigzag_scan[16]={$/;"	v
luma_elim_threshold	libavcodec/avcodec.h	/^    int luma_elim_threshold;$/;"	m	struct:AVCodecContext
luma_elim_threshold	libavcodec/mpegvideo.h	/^    int luma_elim_threshold;$/;"	m	struct:MpegEncContext
luma_log2_weight_denom	libavcodec/h264.c	/^    int luma_log2_weight_denom;$/;"	m	struct:H264Context	file:
luma_offset	libavcodec/h264.c	/^    int luma_offset[2][16];$/;"	m	struct:H264Context	file:
luma_weight	libavcodec/h264.c	/^    int luma_weight[2][16];$/;"	m	struct:H264Context	file:
lumi_mask	ffmpeg.c	/^static float lumi_mask = 0;$/;"	v	file:
lumi_masking	libavcodec/avcodec.h	/^    float lumi_masking;$/;"	m	struct:AVCodecContext
lumscale	libavcodec/vc9.c	/^    uint8_t lumscale;$/;"	m	struct:VC9Context	file:
lumshift	libavcodec/vc9.c	/^    uint8_t lumshift;$/;"	m	struct:VC9Context	file:
lwin	libavcodec/vorbis.h	/^    const float * lwin;$/;"	m
lz_unpack	libavcodec/vmdav.c	/^static void lz_unpack(unsigned char *src, unsigned char *dest)$/;"	f	file:
m	libavcodec/snow.c	/^    MpegEncContext m; \/\/ needed for motion estimation, should not be used for anything else, the idea is to make the motion estimation eventually independant of MpegEncContext, so this will be removed then (FIXME\/XXX)$/;"	m	struct:SnowContext	file:
m	libavcodec/svq1.c	/^    MpegEncContext m; \/\/ needed for motion estimation, should not be used for anything else, the idea is to make the motion estimation eventually independant of MpegEncContext, so this will be removed then (FIXME\/XXX)$/;"	m	struct:SVQ1Context	file:
m4v_iformat	libavformat/raw.c	/^AVInputFormat m4v_iformat = {$/;"	v
m4v_oformat	libavformat/raw.c	/^AVOutputFormat m4v_oformat = {$/;"	v
mace3_decoder	libavcodec/mace.c	/^AVCodec mace3_decoder = {$/;"	v
mace6_decoder	libavcodec/mace.c	/^AVCodec mace6_decoder = {$/;"	v
mace_decode_frame	libavcodec/mace.c	/^static int mace_decode_frame(AVCodecContext *avctx,$/;"	f	file:
mace_decode_init	libavcodec/mace.c	/^static int mace_decode_init(AVCodecContext * avctx)$/;"	f	file:
macroblock	libavcodec/vp3.c	/^    uint16_t macroblock;$/;"	m	struct:Vp3Fragment	file:
macroblock_coding	libavcodec/vp3.c	/^    unsigned char *macroblock_coding;$/;"	m	struct:Vp3DecodeContext	file:
macroblock_count	libavcodec/vp3.c	/^    int macroblock_count;$/;"	m	struct:Vp3DecodeContext	file:
macroblock_fragments	libavcodec/vp3.c	/^    int *macroblock_fragments;$/;"	m	struct:Vp3DecodeContext	file:
macroblock_height	libavcodec/vp3.c	/^    int macroblock_height;$/;"	m	struct:Vp3DecodeContext	file:
macroblock_width	libavcodec/vp3.c	/^    int macroblock_width;$/;"	m	struct:Vp3DecodeContext	file:
magic	libavformat/ogg2.h	/^    uint8_t *magic;$/;"	m	struct:ogg_codec
magic	libavformat/sgi.c	/^    short magic;$/;"	m	struct:SGIInfo	file:
magic	xvmc_render.h	/^  int  magic;$/;"	m
magicF2W	libavcodec/liba52/resample_mmx.c	/^static uint64_t __attribute__((aligned(8))) attribute_used magicF2W= 0x43c0000043c00000LL;$/;"	v	file:
magicsize	libavformat/ogg2.h	/^    uint8_t magicsize;$/;"	m	struct:ogg_codec
magnitude	libavcodec/vorbis.h	/^    uint_fast8_t *magnitude;$/;"	m
main	cws2fws.c	/^main(int argc, char *argv[])$/;"	f
main	ffmpeg.c	/^int main(int argc, char **argv)$/;"	f
main	ffplay.c	/^int main(int argc, char **argv)$/;"	f
main	ffplay.c	28;"	d	file:
main	ffserver.c	/^int main(int argc, char **argv)$/;"	f
main	libavcodec/apiexample.c	/^int main(int argc, char **argv)$/;"	f
main	libavcodec/cabac.c	/^int main(){$/;"	f
main	libavcodec/dct-test.c	/^int main(int argc, char **argv)$/;"	f
main	libavcodec/eval.c	/^main(){$/;"	f
main	libavcodec/fft-test.c	/^int main(int argc, char **argv)$/;"	f
main	libavcodec/i386/cputest.c	/^int main ( void )$/;"	f
main	libavcodec/imgresample.c	/^int main(int argc, char **argv)$/;"	f
main	libavcodec/motion_test.c	/^int main(int argc, char **argv)$/;"	f
main	output_example.c	/^int main(int argc, char **argv)$/;"	f
main	pktdumper.c	/^int main(int argc, char **argv)$/;"	f
main	qt-faststart.c	/^int main(int argc, char *argv[])$/;"	f
main	tests/audiogen.c	/^int main(int argc, char **argv)$/;"	f
main	tests/dsptest.c	/^int main(int argc, char* argv[])$/;"	f
main	tests/rotozoom.c	/^int main(int argc, char **argv)$/;"	f
main	tests/tiny_psnr.c	/^int main(int argc,char* argv[]){$/;"	f
main	tests/videogen.c	/^int main(int argc, char **argv)$/;"	f
main_thid	libavformat/beosaudio.cpp	/^static thread_id main_thid;$/;"	v	file:
make_cdt15_entry	libavcodec/truemotion1.c	/^static int make_cdt15_entry(int p2, int p1, int16_t *cdt)$/;"	f	file:
make_cdt16_entry	libavcodec/truemotion1.c	/^static int make_cdt16_entry(int p2, int p1, int16_t *cdt)$/;"	f	file:
make_cdt24_entry	libavcodec/truemotion1.c	/^static int make_cdt24_entry(int p2, int p1, int16_t *cdt)$/;"	f	file:
make_ydt15_entry	libavcodec/truemotion1.c	/^static int make_ydt15_entry(int p2, int p1, int16_t *ydt)$/;"	f	file:
make_ydt16_entry	libavcodec/truemotion1.c	/^static int make_ydt16_entry(int p2, int p1, int16_t *ydt)$/;"	f	file:
make_ydt24_entry	libavcodec/truemotion1.c	/^static int make_ydt24_entry(int p2, int p1, int16_t *ydt)$/;"	f	file:
malloc	libavcodec/common.h	524;"	d
malloc	libavcodec/liba52/a52.h	29;"	d
malloc	libavcodec/mem.c	28;"	d	file:
mandir	config.mak	/^mandir=\/usr\/local\/man$/;"	m
mant	libavcodec/g726.c	/^	int mant;   \/**< 6bit mantissa *\/$/;"	m	struct:Float11	file:
mant1_cnt	libavcodec/ac3enc.c	/^    int mant1_cnt, mant2_cnt, mant4_cnt;$/;"	m	struct:AC3EncodeContext	file:
mant2_cnt	libavcodec/ac3enc.c	/^    int mant1_cnt, mant2_cnt, mant4_cnt;$/;"	m	struct:AC3EncodeContext	file:
mant4_cnt	libavcodec/ac3enc.c	/^    int mant1_cnt, mant2_cnt, mant4_cnt;$/;"	m	struct:AC3EncodeContext	file:
map	libavcodec/mpegvideo.h	/^    uint32_t *map;                     \/\/\/< map to avoid duplicate evaluations $/;"	m	struct:MotionEstContext
map_col_to_list0	libavcodec/h264.c	/^    int map_col_to_list0[2][16];$/;"	m	struct:H264Context	file:
map_generation	libavcodec/mpegvideo.h	/^    int map_generation;  $/;"	m	struct:MotionEstContext
mapping	libavcodec/vorbis.h	/^    uint_fast8_t mapping;$/;"	m
mapping_count	libavcodec/vorbis.h	/^    uint_fast8_t mapping_count;$/;"	m
mappings	libavcodec/vorbis.h	/^    vorbis_mapping *mappings;$/;"	m
mask	libavcodec/libpostproc/postprocess_internal.h	/^	int mask; 		\/\/\/< Bitmask to turn this filter on$/;"	m	struct:PPFilter
mask	libavformat/gifdec.c	/^static const uint16_t mask[17] =$/;"	v	file:
maskmovq	libavcodec/i386/mmx.h	205;"	d
masktab	libavcodec/ac3tab.h	/^static uint8_t masktab[253];$/;"	v
match_ext	libavformat/utils.c	/^int match_ext(const char *filename, const char *extensions)$/;"	f
matrix_coef	libavcodec/vc9.c	/^    int matrix_coef;      \/\/\/< 8bits, Color primaries->YCbCr transform matrix$/;"	m	struct:VC9Context	file:
matroska_add_stream	libavformat/matroska.c	/^matroska_add_stream (MatroskaDemuxContext *matroska)$/;"	f	file:
matroska_deliver_packet	libavformat/matroska.c	/^matroska_deliver_packet (MatroskaDemuxContext *matroska,$/;"	f	file:
matroska_ebmlnum_sint	libavformat/matroska.c	/^matroska_ebmlnum_sint (uint8_t  *data,$/;"	f	file:
matroska_ebmlnum_uint	libavformat/matroska.c	/^matroska_ebmlnum_uint (uint8_t  *data,$/;"	f	file:
matroska_find_track_by_num	libavformat/matroska.c	/^matroska_find_track_by_num (MatroskaDemuxContext *matroska,$/;"	f	file:
matroska_iformat	libavformat/matroska.c	/^static AVInputFormat matroska_iformat = {$/;"	v	file:
matroska_init	libavformat/matroska.c	/^matroska_init(void)$/;"	f
matroska_parse_blockgroup	libavformat/matroska.c	/^matroska_parse_blockgroup (MatroskaDemuxContext *matroska,$/;"	f	file:
matroska_parse_cluster	libavformat/matroska.c	/^matroska_parse_cluster (MatroskaDemuxContext *matroska)$/;"	f	file:
matroska_parse_index	libavformat/matroska.c	/^matroska_parse_index (MatroskaDemuxContext *matroska)$/;"	f	file:
matroska_parse_info	libavformat/matroska.c	/^matroska_parse_info (MatroskaDemuxContext *matroska)$/;"	f	file:
matroska_parse_metadata	libavformat/matroska.c	/^matroska_parse_metadata (MatroskaDemuxContext *matroska)$/;"	f	file:
matroska_parse_seekhead	libavformat/matroska.c	/^matroska_parse_seekhead (MatroskaDemuxContext *matroska)$/;"	f	file:
matroska_parse_tracks	libavformat/matroska.c	/^matroska_parse_tracks (MatroskaDemuxContext *matroska)$/;"	f	file:
matroska_probe	libavformat/matroska.c	/^matroska_probe (AVProbeData *p)$/;"	f	file:
matroska_queue_packet	libavformat/matroska.c	/^matroska_queue_packet (MatroskaDemuxContext *matroska,$/;"	f	file:
matroska_read_close	libavformat/matroska.c	/^matroska_read_close (AVFormatContext *s)$/;"	f	file:
matroska_read_header	libavformat/matroska.c	/^matroska_read_header (AVFormatContext    *s,$/;"	f	file:
matroska_read_packet	libavformat/matroska.c	/^matroska_read_packet (AVFormatContext *s,$/;"	f	file:
max	libavcodec/avcodec.h	/^    double max;$/;"	m	struct:AVOption
maxAllowedY	libavcodec/libpostproc/postprocess_internal.h	/^	int maxAllowedY; 		\/\/\/< for brihtness correction$/;"	m	struct:PPMode
maxClippedThreshold	libavcodec/libpostproc/postprocess_internal.h	/^	float maxClippedThreshold;	\/\/\/< amount of "black" u r willing to loose to get a brightness corrected picture$/;"	m	struct:PPMode
maxTmpNoise	libavcodec/libpostproc/postprocess_internal.h	/^	int maxTmpNoise[3]; 		\/\/\/< for Temporal Noise Reducing filter (Maximal sum of abs differences)$/;"	m	struct:PPMode
max_b_frames	libavcodec/avcodec.h	/^    int max_b_frames;$/;"	m	struct:AVCodecContext
max_b_frames	libavcodec/mpegvideo.h	/^    int max_b_frames; \/\/\/< max number of b-frames for encoding $/;"	m	struct:MpegEncContext
max_bandwidth	ffserver.c	/^int max_bandwidth;$/;"	v
max_bitrate	libavformat/asf.h	/^    uint32_t max_bitrate;	\/\/ bandwith of stream in bps$/;"	m
max_bitrate	libavformat/mov.c	/^    uint32_t max_bitrate;$/;"	m	file:
max_blocksize	libavcodec/flac.c	/^    int min_blocksize, max_blocksize;$/;"	m	struct:FLACContext	file:
max_buffer_size	libavformat/mpeg.c	/^    int max_buffer_size; \/* in bytes *\/$/;"	m	file:
max_comp_size	libavcodec/lcl.c	/^    unsigned int max_comp_size;$/;"	m	struct:LclContext	file:
max_delay	libavformat/avformat.h	/^    int max_delay;$/;"	m	struct:AVFormatContext
max_distance	libavformat/nut.c	/^    int max_distance;$/;"	m	file:
max_exponent	libavcodec/wmadec.c	/^    float max_exponent[MAX_CHANNELS];$/;"	m	struct:WMADecodeContext	file:
max_frames	ffmpeg.c	/^static int max_frames[3] = {INT_MAX, INT_MAX, INT_MAX};$/;"	v	file:
max_framesize	libavcodec/flac.c	/^    int min_framesize, max_framesize;$/;"	m	struct:FLACContext	file:
max_framesize	libavcodec/shorten.c	/^    int min_framesize, max_framesize;$/;"	m	struct:ShortenContext	file:
max_level	libavcodec/mpegvideo.h	/^    int8_t *max_level[2];          \/\/\/< encoding & decoding $/;"	m	struct:RLTable
max_nbits	libavformat/swf.c	/^static inline void max_nbits(int *nbits_ptr, int val)$/;"	f	file:
max_packet_size	libavformat/avio.h	/^    int max_packet_size;  \/* if non zero, the stream is packetized with this max packet size *\/$/;"	m	struct:URLContext
max_packet_size	libavformat/avio.h	/^    int max_packet_size;$/;"	m
max_payload_size	libavformat/rtp.c	/^    int max_payload_size;$/;"	m	struct:RTPDemuxContext	file:
max_pic_num	libavcodec/h264.c	/^    int max_pic_num;$/;"	m	struct:H264Context	file:
max_pktsize	libavformat/asf.h	/^    uint32_t max_pktsize;	\/\/ shall be the same as for min_pktsize$/;"	m
max_qcoeff	libavcodec/mpegvideo.h	/^    int max_qcoeff;          \/\/\/< maximum encodable coefficient $/;"	m	struct:MpegEncContext
max_qdiff	libavcodec/avcodec.h	/^    int max_qdiff;$/;"	m	struct:AVCodecContext
max_run	libavcodec/mpegvideo.h	/^    int8_t *max_run[2];            \/\/\/< encoding & decoding $/;"	m	struct:RLTable
max_short_distance	libavformat/nut.c	/^    int max_short_distance;$/;"	m	file:
max_time	ffserver.c	/^    long max_time;      \/* Number of milliseconds to run *\/$/;"	m	struct:FFStream	file:
maxdepth	libavcodec/vorbis.h	/^    uint_fast8_t maxdepth;$/;"	m
maximum_class	libavcodec/vorbis.h	/^    uint_fast8_t maximum_class;$/;"	m
maximum_packet	libavformat/asf.h	/^    uint16_t maximum_packet;$/;"	m
maxpass	libavcodec/vorbis.h	/^    uint_fast8_t maxpass;$/;"	m
maxsb8	libavcodec/alpha/asm.h	108;"	d
maxsb8	libavcodec/alpha/asm.h	122;"	d
maxsb8	libavcodec/alpha/asm.h	151;"	d
maxsw4	libavcodec/alpha/asm.h	110;"	d
maxsw4	libavcodec/alpha/asm.h	124;"	d
maxsw4	libavcodec/alpha/asm.h	153;"	d
maxub8	libavcodec/alpha/asm.h	107;"	d
maxub8	libavcodec/alpha/asm.h	121;"	d
maxub8	libavcodec/alpha/asm.h	150;"	d
maxuw4	libavcodec/alpha/asm.h	109;"	d
maxuw4	libavcodec/alpha/asm.h	123;"	d
maxuw4	libavcodec/alpha/asm.h	152;"	d
mb	libavcodec/dv.c	/^    DCTELEM *mb;$/;"	m	struct:EncBlockInfo	file:
mb2b8_xy	libavcodec/h264.c	/^    uint32_t *mb2b8_xy;$/;"	m	struct:H264Context	file:
mb2b_xy	libavcodec/h264.c	/^    uint32_t *mb2b_xy; \/\/FIXME are these 4 a good idea?$/;"	m	struct:H264Context	file:
mbAddrIncrTable	libavcodec/mpeg12data.h	/^static const uint8_t mbAddrIncrTable[36][2] = {$/;"	v
mbMotionVectorTable	libavcodec/mpeg12data.h	/^static const uint8_t mbMotionVectorTable[17][2] = {$/;"	v
mbPatTable	libavcodec/mpeg12data.h	/^static const uint8_t mbPatTable[64][2] = {$/;"	v
mb_aff	libavcodec/h264.c	/^    int mb_aff;                        \/\/\/<mb_adaptive_frame_field_flag$/;"	m	struct:SPS	file:
mb_aff_frame	libavcodec/h264.c	/^    int mb_aff_frame;$/;"	m	struct:H264Context	file:
mb_area_start	libavcodec/dv.c	/^static const int mb_area_start[5] = { 1, 6, 21, 43, 64 }; $/;"	v	file:
mb_btype_vlc	libavcodec/mpeg12.c	/^static VLC mb_btype_vlc;$/;"	v	file:
mb_change_bits	libavcodec/truemotion1.c	/^    uint8_t *mb_change_bits;$/;"	m	struct:TrueMotion1Context	file:
mb_change_bits_row_size	libavcodec/truemotion1.c	/^    int mb_change_bits_row_size;$/;"	m	struct:TrueMotion1Context	file:
mb_cmp	ffmpeg.c	/^static int mb_cmp = FF_CMP_SAD;$/;"	v	file:
mb_cmp	libavcodec/avcodec.h	/^    int mb_cmp;$/;"	m	struct:AVCodecContext
mb_cmp	libavcodec/dsputil.h	/^    me_cmp_func mb_cmp[5];$/;"	m	struct:DSPContext
mb_cmp_score	libavcodec/mpegvideo.h	/^    int32_t *mb_cmp_score;	\/\/\/< Table for MB cmp scores, for mb decission FIXME remove$/;"	m	struct:Picture
mb_decision	ffmpeg.c	/^static int mb_decision = FF_MB_DECISION_SIMPLE;$/;"	v	file:
mb_decision	libavcodec/avcodec.h	/^    int mb_decision;$/;"	m	struct:AVCodecContext
mb_field_decoding_flag	libavcodec/h264.c	/^    int mb_field_decoding_flag;$/;"	m	struct:H264Context	file:
mb_flags	libavcodec/mpegvideo.h	/^    int mb_flags;$/;"	m	struct:MotionEstContext
mb_height	libavcodec/asv1.c	/^    int mb_height;$/;"	m	struct:ASV1Context	file:
mb_height	libavcodec/h264.c	/^    int mb_height;                     \/\/\/< frame_height_in_mbs_minus1 + 1$/;"	m	struct:SPS	file:
mb_height	libavcodec/mdec.c	/^    int mb_height;$/;"	m	struct:MDECContext	file:
mb_height	libavcodec/mjpeg.c	/^    int mb_width, mb_height;$/;"	m	struct:MJpegDecodeContext	file:
mb_height	libavcodec/mpegvideo.h	/^    int mb_width, mb_height;   \/\/\/< number of MBs horizontally & vertically $/;"	m	struct:MpegEncContext
mb_height2	libavcodec/asv1.c	/^    int mb_height2;$/;"	m	struct:ASV1Context	file:
mb_index2xy	libavcodec/mpegvideo.h	/^    int *mb_index2xy;        \/\/\/< mb_index -> mb_x + mb_y*mb_stride$/;"	m	struct:MpegEncContext
mb_intra	libavcodec/h264.c	40;"	d	file:
mb_intra	libavcodec/mpegvideo.h	/^    int mb_intra;$/;"	m	struct:MpegEncContext
mb_lmax	libavcodec/avcodec.h	/^    int mb_lmax;$/;"	m	struct:AVCodecContext
mb_lmin	libavcodec/avcodec.h	/^    int mb_lmin;$/;"	m	struct:AVCodecContext
mb_mean	libavcodec/mpegvideo.h	/^    uint8_t *mb_mean;           \/\/\/< Table for MB luminance $/;"	m	struct:Picture
mb_non_intra_vlc	libavcodec/msmpeg4.c	/^static VLC mb_non_intra_vlc[4];$/;"	v	file:
mb_num	libavcodec/mpegvideo.h	/^    int mb_num;                \/\/\/< number of MBs of a picture $/;"	m	struct:MpegEncContext
mb_num_left	libavcodec/mpegvideo.h	/^    int mb_num_left;                 \/\/\/< number of MBs left in this video packet (for partitioned Slices only)$/;"	m	struct:MpegEncContext
mb_pat_vlc	libavcodec/mpeg12.c	/^static VLC mb_pat_vlc;$/;"	v	file:
mb_penalty_factor	libavcodec/mpegvideo.h	/^    int mb_penalty_factor;$/;"	m	struct:MotionEstContext
mb_ptype_vlc	libavcodec/mpeg12.c	/^static VLC mb_ptype_vlc;$/;"	v	file:
mb_qmax	libavcodec/avcodec.h	/^    int mb_qmax;$/;"	m	struct:AVCodecContext
mb_qmin	libavcodec/avcodec.h	/^    int mb_qmin;$/;"	m	struct:AVCodecContext
mb_skip_run	libavcodec/mpegvideo.h	/^    int mb_skip_run;$/;"	m	struct:MpegEncContext
mb_skipped	libavcodec/mpegvideo.h	/^    int mb_skipped;                \/\/\/< MUST BE SET only during DECODING $/;"	m	struct:MpegEncContext
mb_slice_group_map_type	libavcodec/h264.c	/^    int mb_slice_group_map_type;$/;"	m	struct:PPS	file:
mb_stride	libavcodec/mpegvideo.h	/^    int mb_stride;             \/\/\/< mb_width+1 used for some arrays to allow simple addressng of left & top MBs withoutt sig11$/;"	m	struct:MpegEncContext
mb_threshold	ffmpeg.c	/^static int mb_threshold = 0;$/;"	v	file:
mb_threshold	libavcodec/avcodec.h	/^     int mb_threshold;$/;"	m	struct:AVCodecContext
mb_type	libavcodec/mpegvideo.h	/^    uint16_t *mb_type;           \/\/\/< Table for candidate MB types for encoding$/;"	m	struct:MpegEncContext
mb_type	libavcodec/svq1.c	/^    uint16_t *mb_type;$/;"	m	struct:SVQ1Context	file:
mb_type_b_map	libavcodec/mpeg4data.h	/^static const int mb_type_b_map[4]= {$/;"	v
mb_type_b_tab	libavcodec/mpeg4data.h	/^static const uint8_t mb_type_b_tab[4][2] = {$/;"	v
mb_type_b_vlc	libavcodec/h263.c	/^static VLC mb_type_b_vlc;$/;"	v	file:
mb_type_base	libavcodec/mpegvideo.h	/^    uint32_t *mb_type_base;$/;"	m	struct:Picture
mb_var	libavcodec/mpegvideo.h	/^    uint16_t *mb_var;           \/\/\/< Table for MB variances $/;"	m	struct:Picture
mb_var_sum	libavcodec/mpegvideo.h	/^    int mb_var_sum;             \/\/\/< sum of MB variance for current frame $/;"	m	struct:Picture
mb_var_sum	libavcodec/mpegvideo.h	/^    int mb_var_sum;$/;"	m	struct:RateControlEntry
mb_var_sum_temp	libavcodec/mpegvideo.h	/^    int mb_var_sum_temp;$/;"	m	struct:MotionEstContext
mb_var_thread	libavcodec/mpegvideo.c	/^static int mb_var_thread(AVCodecContext *c, void *arg){$/;"	f	file:
mb_width	libavcodec/asv1.c	/^    int mb_width;$/;"	m	struct:ASV1Context	file:
mb_width	libavcodec/h264.c	/^    int mb_width;                      \/\/\/< frame_width_in_mbs_minus1 + 1$/;"	m	struct:SPS	file:
mb_width	libavcodec/mdec.c	/^    int mb_width;$/;"	m	struct:MDECContext	file:
mb_width	libavcodec/mjpeg.c	/^    int mb_width, mb_height;$/;"	m	struct:MJpegDecodeContext	file:
mb_width	libavcodec/mpegvideo.h	/^    int mb_width, mb_height;   \/\/\/< number of MBs horizontally & vertically $/;"	m	struct:MpegEncContext
mb_width2	libavcodec/asv1.c	/^    int mb_width2;$/;"	m	struct:ASV1Context	file:
mb_x	libavcodec/mdec.c	/^    int mb_x, mb_y;$/;"	m	struct:MDECContext	file:
mb_x	libavcodec/mpegvideo.h	/^    int mb_x, mb_y;$/;"	m	struct:MpegEncContext
mb_y	libavcodec/mdec.c	/^    int mb_x, mb_y;$/;"	m	struct:MDECContext	file:
mb_y	libavcodec/mpegvideo.h	/^    int mb_x, mb_y;$/;"	m	struct:MpegEncContext
mba_diff	libavcodec/h261.c	/^    int mba_diff;$/;"	m	struct:H261Context	file:
mbincr_vlc	libavcodec/mpeg12.c	/^static VLC mbincr_vlc;$/;"	v	file:
mbintra_table	libavcodec/mpegvideo.h	/^    uint8_t *mbintra_table;       \/\/\/< used to avoid setting {ac, dc, cbp}-pred stuff to zero on inter MB decoding $/;"	m	struct:MpegEncContext
mbskip_table	libavcodec/mpegvideo.h	/^    uint8_t *mbskip_table;        \/**< used to avoid copy if macroblock skipped (for black regions for example) $/;"	m	struct:MpegEncContext
mc_block	libavcodec/snow.c	/^static void mc_block(uint8_t *dst, uint8_t *src, uint8_t *tmp, int stride, int b_w, int b_h, int dx, int dy){$/;"	f	file:
mc_dir_part	libavcodec/h264.c	/^static inline void mc_dir_part(H264Context *h, Picture *pic, int n, int square, int chroma_height, int delta, int list,$/;"	f	file:
mc_mb_var	libavcodec/mpegvideo.h	/^    uint16_t *mc_mb_var;        \/\/\/< Table for motion compensated MB variances $/;"	m	struct:Picture
mc_mb_var_sum	libavcodec/mpegvideo.h	/^    int mc_mb_var_sum;          \/\/\/< motion compensated MB variance for current frame $/;"	m	struct:Picture
mc_mb_var_sum	libavcodec/mpegvideo.h	/^    int mc_mb_var_sum;$/;"	m	struct:RateControlEntry
mc_mb_var_sum_temp	libavcodec/mpegvideo.h	/^    int mc_mb_var_sum_temp;$/;"	m	struct:MotionEstContext
mc_part	libavcodec/h264.c	/^static inline void mc_part(H264Context *h, int n, int square, int chroma_height, int delta,$/;"	f	file:
mc_part_std	libavcodec/h264.c	/^static inline void mc_part_std(H264Context *h, int n, int square, int chroma_height, int delta,$/;"	f	file:
mc_part_weighted	libavcodec/h264.c	/^static inline void mc_part_weighted(H264Context *h, int n, int square, int chroma_height, int delta,$/;"	f	file:
mc_type	xvmc_render.h	/^  int mc_type;\/\/XVMC_MPEG1\/2\/4,XVMC_H263 without XVMC_IDCT$/;"	m
mca	libavcodec/snow.c	2412;"	d	file:
mcdc	libavcodec/4xm.c	/^static inline void mcdc(uint16_t *dst, uint16_t *src, int log2w, int h, int stride, int scale, int dc){$/;"	f	file:
mconly_picture	libavcodec/snow.c	/^    AVFrame mconly_picture;$/;"	m	struct:SnowContext	file:
mcsel	libavcodec/mpegvideo.h	/^    int mcsel;$/;"	m	struct:MpegEncContext
mdat_offset	libavformat/mov.c	/^    int64_t mdat_offset;$/;"	m	struct:MOVContext	file:
mdat_pos	libavformat/movenc.c	/^    offset_t mdat_pos;$/;"	m	struct:MOVContext	file:
mdat_size	libavformat/mov.c	/^    int64_t mdat_size;$/;"	m	struct:MOVContext	file:
mdat_size	libavformat/movenc.c	/^    int         mdat_size;$/;"	m	struct:MOVIndex	file:
mdat_written	libavformat/movenc.c	/^    int     mdat_written;$/;"	m	struct:MOVContext	file:
mdct0	libavcodec/vorbis.h	/^    MDCTContext mdct0;$/;"	m
mdct1	libavcodec/vorbis.h	/^    MDCTContext mdct1;$/;"	m
mdct512	libavcodec/ac3enc.c	/^static void mdct512(int32_t *out, int16_t *in)$/;"	f	file:
mdct_buf	libavcodec/mpegaudiodec.c	/^    int32_t mdct_buf[MPA_MAX_CHANNELS][SBLIMIT * 18]; \/* previous samples, for layer 3 MDCT *\/$/;"	m	struct:MPADecodeContext	file:
mdct_ctx	libavcodec/wmadec.c	/^    MDCTContext mdct_ctx[BLOCK_NB_SIZES];$/;"	m	struct:WMADecodeContext	file:
mdct_ref	libavcodec/fft-test.c	/^void mdct_ref(float *output, float *input, int n)$/;"	f
mdct_tmp	libavcodec/wmadec.c	/^    FFTSample mdct_tmp[BLOCK_MAX_SIZE] __attribute__((aligned(16))); \/* temporary storage for imdct *\/$/;"	m	struct:WMADecodeContext	file:
mdct_win	libavcodec/mpegaudiodec.c	/^static int32_t mdct_win[8][36];$/;"	v	file:
mdec_common_init	libavcodec/mdec.c	/^static void mdec_common_init(AVCodecContext *avctx){$/;"	f	file:
mdec_decode_block_intra	libavcodec/mdec.c	/^static inline int mdec_decode_block_intra(MDECContext *a, DCTELEM *block, int n)$/;"	f	file:
mdec_decoder	libavcodec/mdec.c	/^AVCodec mdec_decoder = {$/;"	v
me	libavcodec/mpegvideo.h	/^    MotionEstContext me;$/;"	m	struct:MpegEncContext
me_cmp	libavcodec/avcodec.h	/^    int me_cmp;$/;"	m	struct:AVCodecContext
me_cmp	libavcodec/dsputil.h	/^    me_cmp_func me_cmp[5];$/;"	m	struct:DSPContext
me_cmp_func	libavcodec/dsputil.h	/^typedef int (*me_cmp_func)(void \/*MpegEncContext*\/ *s, uint8_t *blk1\/*align width (8 or 16)*\/, uint8_t *blk2\/*align 1*\/, int line_size, int h)\/* __attribute__ ((const))*\/;$/;"	t
me_flags	libavcodec/xvidff.c	/^    int me_flags;                  \/** Motion Estimation flags *\/$/;"	m	struct:xvid_context	file:
me_method	ffmpeg.c	/^static int me_method = ME_EPZS;$/;"	v	file:
me_method	libavcodec/avcodec.h	/^    int me_method;$/;"	m	struct:AVCodecContext
me_method	libavcodec/mpegvideo.h	/^    int me_method;                       \/\/\/< ME algorithm $/;"	m	struct:MpegEncContext
me_penalty_compensation	ffmpeg.c	/^static int me_penalty_compensation= 256;$/;"	v	file:
me_penalty_compensation	libavcodec/avcodec.h	/^    int me_penalty_compensation;$/;"	m	struct:AVCodecContext
me_pre_cmp	libavcodec/avcodec.h	/^    int me_pre_cmp;$/;"	m	struct:AVCodecContext
me_pre_cmp	libavcodec/dsputil.h	/^    me_cmp_func me_pre_cmp[5];$/;"	m	struct:DSPContext
me_range	ffmpeg.c	/^static int me_range = 0;$/;"	v	file:
me_range	libavcodec/avcodec.h	/^    int me_range;$/;"	m	struct:AVCodecContext
me_sub_cmp	libavcodec/avcodec.h	/^    int me_sub_cmp;$/;"	m	struct:AVCodecContext
me_sub_cmp	libavcodec/dsputil.h	/^    me_cmp_func me_sub_cmp[5];$/;"	m	struct:DSPContext
me_subpel_quality	libavcodec/avcodec.h	/^    int me_subpel_quality;$/;"	m	struct:AVCodecContext
me_threshold	ffmpeg.c	/^static int me_threshold = 0;$/;"	v	file:
me_threshold	libavcodec/avcodec.h	/^     int me_threshold;$/;"	m	struct:AVCodecContext
memalign	libavcodec/liba52/parse.c	33;"	d	file:
memalign	libavcodec/libpostproc/postprocess.c	100;"	d	file:
memsetw	libavcodec/h263.c	/^static inline void memsetw(short *tab, int val, int n)$/;"	f	file:
memzero_align8	libavcodec/sh4/dsputil_sh4.c	/^static void memzero_align8(void *dst,size_t size)$/;"	f	file:
merge_context_after_encode	libavcodec/mpegvideo.c	/^static void merge_context_after_encode(MpegEncContext *dst, MpegEncContext *src){$/;"	f	file:
merge_context_after_me	libavcodec/mpegvideo.c	/^static void merge_context_after_me(MpegEncContext *dst, MpegEncContext *src){$/;"	f	file:
meta_data_maps	ffmpeg.c	/^static AVMetaDataMap meta_data_maps[MAX_FILES];$/;"	v	file:
metadata_parsed	libavformat/matroska.c	/^    int metadata_parsed,$/;"	m	struct:MatroskaDemuxContext	file:
metadata_streaminfo	libavcodec/flac.c	/^static void metadata_streaminfo(FLACContext *s)$/;"	f	file:
method	ffserver.c	/^    char method[16];$/;"	m	struct:HTTPContext	file:
mid_pred	libavcodec/common.h	/^static inline int mid_pred(int a, int b, int c)$/;"	f
mime_type	libavformat/avformat.h	/^    const char *mime_type;$/;"	m	struct:AVOutputFormat
min	libavcodec/avcodec.h	/^    double min;$/;"	m	struct:AVOption
min	libavcodec/indeo3.c	99;"	d	file:
minAllowedY	libavcodec/libpostproc/postprocess_internal.h	/^	int minAllowedY; 		\/\/\/< for brigtness correction$/;"	m	struct:PPMode
minChromQuality	libavcodec/libpostproc/postprocess_internal.h	/^	int minChromQuality;	\/\/\/< minimum quality to turn chrominance filtering on$/;"	m	struct:PPFilter
minLumQuality	libavcodec/libpostproc/postprocess_internal.h	/^	int minLumQuality; 	\/\/\/< minimum quality to turn luminance filtering on$/;"	m	struct:PPFilter
min_blocksize	libavcodec/flac.c	/^    int min_blocksize, max_blocksize;$/;"	m	struct:FLACContext	file:
min_distance	libavformat/avformat.h	/^    int min_distance;         \/* min distance between this and the previous keyframe, used to avoid unneeded searching *\/$/;"	m	struct:AVIndexEntry
min_framesize	libavcodec/flac.c	/^    int min_framesize, max_framesize;$/;"	m	struct:FLACContext	file:
min_framesize	libavcodec/shorten.c	/^    int min_framesize, max_framesize;$/;"	m	struct:ShortenContext	file:
min_interval	vhook/fish.c	/^    int min_interval;$/;"	m	file:
min_pktsize	libavformat/asf.h	/^    uint32_t min_pktsize;	\/\/ size of a data packet$/;"	m
min_qcoeff	libavcodec/mpegvideo.h	/^    int min_qcoeff;          \/\/\/< minimum encodable coefficient $/;"	m	struct:MpegEncContext
min_width	vhook/fish.c	/^    int min_width;$/;"	m	file:
minima_cmp	libavcodec/motion_est.c	/^static int minima_cmp(const void *a, const void *b){$/;"	f	file:
minsb8	libavcodec/alpha/asm.h	104;"	d
minsb8	libavcodec/alpha/asm.h	118;"	d
minsb8	libavcodec/alpha/asm.h	147;"	d
minsw4	libavcodec/alpha/asm.h	106;"	d
minsw4	libavcodec/alpha/asm.h	120;"	d
minsw4	libavcodec/alpha/asm.h	149;"	d
minub8	libavcodec/alpha/asm.h	103;"	d
minub8	libavcodec/alpha/asm.h	117;"	d
minub8	libavcodec/alpha/asm.h	146;"	d
minuw4	libavcodec/alpha/asm.h	105;"	d
minuw4	libavcodec/alpha/asm.h	119;"	d
minuw4	libavcodec/alpha/asm.h	148;"	d
mirror	libavcodec/snow.c	/^static inline int mirror(int v, int m){$/;"	f	file:
misc_bits	libavcodec/avcodec.h	/^    int misc_bits;$/;"	m	struct:AVCodecContext
misc_bits	libavcodec/mpegvideo.h	/^    int misc_bits; \/\/\/< cbp, mb_type$/;"	m	struct:MpegEncContext
misc_bits	libavcodec/mpegvideo.h	/^    int misc_bits;$/;"	m	struct:RateControlEntry
mix21to2	libavcodec/liba52/downmix.c	/^static void mix21to2 (sample_t * left, sample_t * right, sample_t bias)$/;"	f	file:
mix21toS	libavcodec/liba52/downmix.c	/^static void mix21toS (sample_t * samples, sample_t bias)$/;"	f	file:
mix22toS	libavcodec/liba52/downmix.c	/^static void mix22toS (sample_t * samples, sample_t bias)$/;"	f	file:
mix2to1	libavcodec/liba52/downmix.c	/^static void mix2to1 (sample_t * dest, sample_t * src, sample_t bias)$/;"	f	file:
mix31to2	libavcodec/liba52/downmix.c	/^static void mix31to2 (sample_t * samples, sample_t bias)$/;"	f	file:
mix31toS	libavcodec/liba52/downmix.c	/^static void mix31toS (sample_t * samples, sample_t bias)$/;"	f	file:
mix32to2	libavcodec/liba52/downmix.c	/^static void mix32to2 (sample_t * samples, sample_t bias)$/;"	f	file:
mix32toS	libavcodec/liba52/downmix.c	/^static void mix32toS (sample_t * samples, sample_t bias)$/;"	f	file:
mix3to1	libavcodec/liba52/downmix.c	/^static void mix3to1 (sample_t * samples, sample_t bias)$/;"	f	file:
mix3to2	libavcodec/liba52/downmix.c	/^static void mix3to2 (sample_t * samples, sample_t bias)$/;"	f	file:
mix4to1	libavcodec/liba52/downmix.c	/^static void mix4to1 (sample_t * samples, sample_t bias)$/;"	f	file:
mix5to1	libavcodec/liba52/downmix.c	/^static void mix5to1 (sample_t * samples, sample_t bias)$/;"	f	file:
mjpb_skiptosod	libavcodec/mjpeg.c	/^    int mjpb_skiptosod;$/;"	m	struct:MJpegDecodeContext	file:
mjpeg_close	libavcodec/mjpeg.c	/^void mjpeg_close(MpegEncContext *s)$/;"	f
mjpeg_ctx	libavcodec/mpegvideo.h	/^    struct MJpegContext *mjpeg_ctx;$/;"	m	struct:MpegEncContext
mjpeg_data_only_frames	libavcodec/mpegvideo.h	/^    int mjpeg_data_only_frames; \/\/\/< frames only with SOI, SOS and EOI markers $/;"	m	struct:MpegEncContext
mjpeg_decode_app	libavcodec/mjpeg.c	/^static int mjpeg_decode_app(MJpegDecodeContext *s)$/;"	f	file:
mjpeg_decode_com	libavcodec/mjpeg.c	/^static int mjpeg_decode_com(MJpegDecodeContext *s)$/;"	f	file:
mjpeg_decode_dc	libavcodec/mjpeg.c	/^static inline int mjpeg_decode_dc(MJpegDecodeContext *s, int dc_index)$/;"	f	file:
mjpeg_decode_dht	libavcodec/mjpeg.c	/^static int mjpeg_decode_dht(MJpegDecodeContext *s)$/;"	f	file:
mjpeg_decode_dqt	libavcodec/mjpeg.c	/^static int mjpeg_decode_dqt(MJpegDecodeContext *s)$/;"	f	file:
mjpeg_decode_dri	libavcodec/mjpeg.c	/^static int mjpeg_decode_dri(MJpegDecodeContext *s)$/;"	f	file:
mjpeg_decode_end	libavcodec/mjpeg.c	/^static int mjpeg_decode_end(AVCodecContext *avctx)$/;"	f	file:
mjpeg_decode_frame	libavcodec/mjpeg.c	/^static int mjpeg_decode_frame(AVCodecContext *avctx, $/;"	f	file:
mjpeg_decode_init	libavcodec/mjpeg.c	/^static int mjpeg_decode_init(AVCodecContext *avctx)$/;"	f	file:
mjpeg_decode_scan	libavcodec/mjpeg.c	/^static int mjpeg_decode_scan(MJpegDecodeContext *s){$/;"	f	file:
mjpeg_decode_sof	libavcodec/mjpeg.c	/^static int mjpeg_decode_sof(MJpegDecodeContext *s)$/;"	f	file:
mjpeg_decode_sos	libavcodec/mjpeg.c	/^static int mjpeg_decode_sos(MJpegDecodeContext *s)$/;"	f	file:
mjpeg_decoder	libavcodec/mjpeg.c	/^AVCodec mjpeg_decoder = {$/;"	v
mjpeg_encode_dc	libavcodec/mjpeg.c	/^static inline void mjpeg_encode_dc(MpegEncContext *s, int val,$/;"	f	file:
mjpeg_encode_mb	libavcodec/mjpeg.c	/^void mjpeg_encode_mb(MpegEncContext *s, $/;"	f
mjpeg_encoder	libavcodec/mpegvideo.c	/^AVCodec mjpeg_encoder = {$/;"	v
mjpeg_hsample	libavcodec/mpegvideo.h	/^    int mjpeg_hsample[3];       \/\/\/< horizontal sampling factors, default = {2, 1, 1} $/;"	m	struct:MpegEncContext
mjpeg_iformat	libavformat/raw.c	/^AVInputFormat mjpeg_iformat = {$/;"	v
mjpeg_init	libavcodec/mjpeg.c	/^int mjpeg_init(MpegEncContext *s)$/;"	f
mjpeg_oformat	libavformat/raw.c	/^AVOutputFormat mjpeg_oformat = {$/;"	v
mjpeg_parser	libavcodec/mjpeg.c	/^AVCodecParser mjpeg_parser = {$/;"	v
mjpeg_picture_header	libavcodec/mjpeg.c	/^void mjpeg_picture_header(MpegEncContext *s)$/;"	f
mjpeg_picture_trailer	libavcodec/mjpeg.c	/^void mjpeg_picture_trailer(MpegEncContext *s)$/;"	f
mjpeg_vsample	libavcodec/mpegvideo.h	/^    int mjpeg_vsample[3];       \/\/\/< vertical sampling factors, default = {2, 1, 1} $/;"	m	struct:MpegEncContext
mjpeg_write_tables	libavcodec/mpegvideo.h	/^    int mjpeg_write_tables;     \/\/\/< do we want to have quantisation- and huffmantables in the jpeg file ? $/;"	m	struct:MpegEncContext
mjpegb_decode_frame	libavcodec/mjpeg.c	/^static int mjpegb_decode_frame(AVCodecContext *avctx, $/;"	f	file:
mjpegb_decoder	libavcodec/mjpeg.c	/^AVCodec mjpegb_decoder = {$/;"	v
mktimegm	libavformat/cutils.c	/^time_t mktimegm(struct tm *tm)$/;"	f
mm_flags	libavcodec/fft-test.c	/^int mm_flags;$/;"	v
mm_flags	libavcodec/i386/dsputil_mmx.c	/^int mm_flags; \/* multimedia extension flags *\/$/;"	v
mm_flags	libavcodec/imgresample.c	/^int mm_flags;$/;"	v
mm_flags	libavcodec/ppc/dsputil_ppc.c	/^int mm_flags = 0;$/;"	v
mm_flags	tests/dsptest.c	/^    int mm_flags;$/;"	m	struct:pix_func	file:
mm_support	libavcodec/i386/cputest.c	/^int mm_support(void)$/;"	f
mm_support	libavcodec/ppc/dsputil_ppc.c	/^int mm_support(void)$/;"	f
mm_wabs	libavcodec/i386/mpegvideo_mmx.c	/^static const unsigned long long int mm_wabs __attribute__ ((aligned(8))) = 0xffffffffffffffffULL;$/;"	v	file:
mm_wone	libavcodec/i386/mpegvideo_mmx.c	/^static const unsigned long long int mm_wone __attribute__ ((aligned(8))) = 0x0001000100010001ULL;$/;"	v	file:
mmco	libavcodec/h264.c	/^    MMCO mmco[MAX_MMCO_COUNT];$/;"	m	struct:H264Context	file:
mmco_index	libavcodec/h264.c	/^    int mmco_index;$/;"	m	struct:H264Context	file:
mmxDcOffset	libavcodec/libpostproc/postprocess_internal.h	/^	uint64_t __attribute__((aligned(8))) mmxDcOffset[64];$/;"	m	struct:PPContext
mmxDcThreshold	libavcodec/libpostproc/postprocess_internal.h	/^	uint64_t __attribute__((aligned(8))) mmxDcThreshold[64];$/;"	m	struct:PPContext
mmx_fetch	libavcodec/i386/mmx.h	199;"	d
mmx_i2r	libavcodec/i386/mmx.h	33;"	d
mmx_m2r	libavcodec/i386/mmx.h	38;"	d
mmx_m2ri	libavcodec/i386/mmx.h	190;"	d
mmx_r2m	libavcodec/i386/mmx.h	43;"	d
mmx_r2r	libavcodec/i386/mmx.h	48;"	d
mmx_r2ri	libavcodec/i386/mmx.h	194;"	d
mmx_row	libavcodec/i386/idct_mmx.c	/^static inline void mmx_row (int16_t * table, int32_t * rounder)$/;"	f	file:
mmx_row_head	libavcodec/i386/idct_mmx.c	/^static inline void mmx_row_head (int16_t * row, int offset, int16_t * table)$/;"	f	file:
mmx_row_mid	libavcodec/i386/idct_mmx.c	/^static inline void mmx_row_mid (int16_t * row, int store,$/;"	f	file:
mmx_row_tail	libavcodec/i386/idct_mmx.c	/^static inline void mmx_row_tail (int16_t * row, int store)$/;"	f	file:
mmx_t	libavcodec/i386/mmx.h	/^} mmx_t;	\/* On an 8-byte (64-bit) boundary *\/$/;"	t
mmx_table	libavcodec/i386/idct_mmx.c	192;"	d	file:
mmxext_row	libavcodec/i386/idct_mmx.c	/^static inline void mmxext_row (int16_t * table, int32_t * rounder)$/;"	f	file:
mmxext_row_head	libavcodec/i386/idct_mmx.c	/^static inline void mmxext_row_head (int16_t * row, int offset, int16_t * table)$/;"	f	file:
mmxext_row_mid	libavcodec/i386/idct_mmx.c	/^static inline void mmxext_row_mid (int16_t * row, int store,$/;"	f	file:
mmxext_row_tail	libavcodec/i386/idct_mmx.c	/^static inline void mmxext_row_tail (int16_t * row, int store)$/;"	f	file:
mmxext_table	libavcodec/i386/idct_mmx.c	80;"	d	file:
mode	libavcodec/amr.c	/^    enum Mode mode;$/;"	m	struct:AMRContext	file:
mode	libavcodec/amr.c	/^    enum Mode mode;$/;"	m	struct:AMR_bitrates	file:
mode	libavcodec/amr.c	/^    int mode;$/;"	m	struct:AMRWBContext	file:
mode	libavcodec/amr.c	/^    int mode;$/;"	m	struct:AMRWB_bitrates	file:
mode	libavcodec/loco.c	/^    int mode;$/;"	m	struct:LOCOContext	file:
mode	libavcodec/mpegaudiodec.c	/^    int mode;$/;"	m	struct:MPADecodeContext	file:
mode	libavformat/movenc.c	/^    int         mode;$/;"	m	struct:MOVIndex	file:
mode	libavformat/movenc.c	/^    int     mode;$/;"	m	struct:MOVContext	file:
mode	libavformat/rtp.h	/^    char *mode;$/;"	m	struct:rtp_payload_data_s
mode_8bit	libavcodec/msvideo1.c	/^    int mode_8bit;  \/* if it's not 8-bit, it's 16-bit *\/$/;"	m	struct:Msvideo1Context	file:
mode_code_vlc	libavcodec/vp3.c	/^    VLC mode_code_vlc;$/;"	m	struct:Vp3DecodeContext	file:
mode_code_vlc_table	libavcodec/vp3data.h	/^static const uint8_t mode_code_vlc_table[30][2] = {$/;"	v
mode_count	libavcodec/vorbis.h	/^    uint_fast8_t mode_count;$/;"	m
mode_ext	libavcodec/mpegaudiodec.c	/^    int mode_ext;$/;"	m	struct:MPADecodeContext	file:
modes	libavcodec/vorbis.h	/^    vorbis_mode *modes;$/;"	m
modified_levinson_durbin	libavcodec/sonic.c	/^static void modified_levinson_durbin(int *window, int window_entries,$/;"	f	file:
modified_quant	libavcodec/mpegvideo.h	/^    int modified_quant;$/;"	m	struct:MpegEncContext
modified_quant_tab	libavcodec/h263data.h	/^static const uint8_t modified_quant_tab[2][32]={$/;"	v
modify_current_stream	ffserver.c	/^static int modify_current_stream(HTTPContext *c, char *rates)$/;"	f	file:
modify_qscale	libavcodec/ratecontrol.c	/^static double modify_qscale(MpegEncContext *s, RateControlEntry *rce, double q, int frame_num){$/;"	f	file:
mono_to_gray	libavcodec/imgconvert.c	/^static void mono_to_gray(AVPicture *dst, const AVPicture *src,$/;"	f	file:
mono_to_stereo	libavcodec/resample.c	/^static void mono_to_stereo(short *output, short *input, int n1)$/;"	f	file:
monoblack_to_gray	libavcodec/imgconvert.c	/^static void monoblack_to_gray(AVPicture *dst, const AVPicture *src,$/;"	f	file:
monowhite_to_gray	libavcodec/imgconvert.c	/^static void monowhite_to_gray(AVPicture *dst, const AVPicture *src,$/;"	f	file:
motion_func	libavcodec/motion_test.c	/^typedef int motion_func(uint8_t *blk1, uint8_t *blk2, int lx);$/;"	t	file:
motion_str	ffmpeg.c	/^const char *motion_str[] = {$/;"	v
motion_val16	libavcodec/svq1.c	/^    int16_t (*motion_val16[3])[2];$/;"	m	struct:SVQ1Context	file:
motion_val8	libavcodec/svq1.c	/^    int16_t (*motion_val8[3])[2];$/;"	m	struct:SVQ1Context	file:
motion_val_base	libavcodec/mpegvideo.h	/^    int16_t (*motion_val_base[2])[2];$/;"	m	struct:Picture
motion_vector_table	libavcodec/vp3data.h	/^static const int motion_vector_table[63] = {$/;"	v
motion_vector_vlc	libavcodec/vp3.c	/^    VLC motion_vector_vlc;$/;"	m	struct:Vp3DecodeContext	file:
motion_vector_vlc_table	libavcodec/vp3data.h	/^static const uint8_t motion_vector_vlc_table[63][2] = {$/;"	v
motion_x	libavcodec/vp3.c	/^    int8_t motion_x;$/;"	m	struct:Vp3Fragment	file:
motion_y	libavcodec/vp3.c	/^    int8_t motion_y;$/;"	m	struct:Vp3Fragment	file:
mov_audio_tags	libavformat/mov.c	/^static const CodecTag mov_audio_tags[] = {$/;"	v	file:
mov_default_parse_table	libavformat/mov.c	/^static const MOVParseTableEntry mov_default_parse_table[] = {$/;"	v	file:
mov_free_stream_context	libavformat/mov.c	/^static void mov_free_stream_context(MOVStreamContext *sc)$/;"	f	file:
mov_iformat	libavformat/mov.c	/^static AVInputFormat mov_iformat = {$/;"	v	file:
mov_init	libavformat/mov.c	/^int mov_init(void)$/;"	f
mov_mp4_read_descr	libavformat/mov.c	/^static int mov_mp4_read_descr(ByteIOContext *pb, int *tag)$/;"	f	file:
mov_mp4_read_descr_len	libavformat/mov.c	/^static int mov_mp4_read_descr_len(ByteIOContext *pb)$/;"	f	file:
mov_oformat	libavformat/movenc.c	/^static AVOutputFormat mov_oformat = {$/;"	v	file:
mov_parse_function	libavformat/mov.c	/^typedef int (*mov_parse_function)(MOVContext *ctx, ByteIOContext *pb, MOV_atom_t atom);$/;"	t	file:
mov_probe	libavformat/mov.c	/^static int mov_probe(AVProbeData *p)$/;"	f	file:
mov_read_avcC	libavformat/mov.c	/^static int mov_read_avcC(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_close	libavformat/mov.c	/^static int mov_read_close(AVFormatContext *s)$/;"	f	file:
mov_read_cmov	libavformat/mov.c	/^static int mov_read_cmov(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_ctab	libavformat/mov.c	/^static int mov_read_ctab(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_ctts	libavformat/mov.c	/^static int mov_read_ctts(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_default	libavformat/mov.c	/^static int mov_read_default(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_elst	libavformat/mov.c	/^static int mov_read_elst(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_esds	libavformat/mov.c	/^static int mov_read_esds(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_hdlr	libavformat/mov.c	/^static int mov_read_hdlr(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_header	libavformat/mov.c	/^static int mov_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
mov_read_leaf	libavformat/mov.c	/^static int mov_read_leaf(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_mdat	libavformat/mov.c	/^static int mov_read_mdat(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_mdhd	libavformat/mov.c	/^static int mov_read_mdhd(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_moov	libavformat/mov.c	/^static int mov_read_moov(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_mvhd	libavformat/mov.c	/^static int mov_read_mvhd(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_packet	libavformat/mov.c	/^static int mov_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
mov_read_seek	libavformat/mov.c	/^static int mov_read_seek(AVFormatContext *s, int stream_index, int64_t timestamp, int flags)$/;"	f	file:
mov_read_smi	libavformat/mov.c	/^static int mov_read_smi(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_stco	libavformat/mov.c	/^static int mov_read_stco(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_stsc	libavformat/mov.c	/^static int mov_read_stsc(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_stsd	libavformat/mov.c	/^static int mov_read_stsd(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_stss	libavformat/mov.c	/^static int mov_read_stss(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_stsz	libavformat/mov.c	/^static int mov_read_stsz(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_stts	libavformat/mov.c	/^static int mov_read_stts(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_tkhd	libavformat/mov.c	/^static int mov_read_tkhd(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_trak	libavformat/mov.c	/^static int mov_read_trak(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_read_wide	libavformat/mov.c	/^static int mov_read_wide(MOVContext *c, ByteIOContext *pb, MOV_atom_t atom)$/;"	f	file:
mov_to_tag	libavformat/mov.c	/^static inline uint32_t mov_to_tag(uint8_t *buf)$/;"	f	file:
mov_video_tags	libavformat/mov.c	/^static const CodecTag mov_video_tags[] = {$/;"	v	file:
mov_write_ART_tag	libavformat/movenc.c	/^static int mov_write_ART_tag(ByteIOContext *pb, MOVContext* mov,$/;"	f	file:
mov_write_alb_tag	libavformat/movenc.c	/^static int mov_write_alb_tag(ByteIOContext *pb, MOVContext* mov,$/;"	f	file:
mov_write_audio_tag	libavformat/movenc.c	/^static int mov_write_audio_tag(ByteIOContext *pb, MOVTrack* track)$/;"	f	file:
mov_write_cmt_tag	libavformat/movenc.c	/^static int mov_write_cmt_tag(ByteIOContext *pb, MOVContext* mov,$/;"	f	file:
mov_write_d263_tag	libavformat/movenc.c	/^static int mov_write_d263_tag(ByteIOContext *pb)$/;"	f	file:
mov_write_damr_tag	libavformat/movenc.c	/^static int mov_write_damr_tag(ByteIOContext *pb)$/;"	f	file:
mov_write_day_tag	libavformat/movenc.c	/^static int mov_write_day_tag(ByteIOContext *pb, MOVContext* mov,$/;"	f	file:
mov_write_dinf_tag	libavformat/movenc.c	/^static int mov_write_dinf_tag(ByteIOContext *pb)$/;"	f	file:
mov_write_dref_tag	libavformat/movenc.c	/^static int mov_write_dref_tag(ByteIOContext *pb)$/;"	f	file:
mov_write_edts_tag	libavformat/movenc.c	/^static int mov_write_edts_tag(ByteIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_esds_tag	libavformat/movenc.c	/^static int mov_write_esds_tag(ByteIOContext *pb, MOVTrack* track) \/\/ Basic$/;"	f	file:
mov_write_ftyp_tag	libavformat/movenc.c	/^int mov_write_ftyp_tag(ByteIOContext *pb, AVFormatContext *s)$/;"	f
mov_write_gen_tag	libavformat/movenc.c	/^static int mov_write_gen_tag(ByteIOContext *pb, MOVContext* mov,$/;"	f	file:
mov_write_hdlr_tag	libavformat/movenc.c	/^static int mov_write_hdlr_tag(ByteIOContext *pb, MOVTrack* track)$/;"	f	file:
mov_write_header	libavformat/movenc.c	/^static int mov_write_header(AVFormatContext *s)$/;"	f	file:
mov_write_ilst_tag	libavformat/movenc.c	/^static int mov_write_ilst_tag(ByteIOContext *pb, MOVContext* mov,$/;"	f	file:
mov_write_itunes_hdlr_tag	libavformat/movenc.c	/^static int mov_write_itunes_hdlr_tag(ByteIOContext *pb, MOVContext* mov,$/;"	f	file:
mov_write_mdat_tag	libavformat/movenc.c	/^int mov_write_mdat_tag(ByteIOContext *pb, MOVContext* mov)$/;"	f
mov_write_mdhd_tag	libavformat/movenc.c	/^static int mov_write_mdhd_tag(ByteIOContext *pb, MOVTrack* track)$/;"	f	file:
mov_write_mdia_tag	libavformat/movenc.c	/^static int mov_write_mdia_tag(ByteIOContext *pb, MOVTrack* track)$/;"	f	file:
mov_write_meta_tag	libavformat/movenc.c	/^static int mov_write_meta_tag(ByteIOContext *pb, MOVContext* mov,$/;"	f	file:
mov_write_minf_tag	libavformat/movenc.c	/^static int mov_write_minf_tag(ByteIOContext *pb, MOVTrack* track)$/;"	f	file:
mov_write_moov_tag	libavformat/movenc.c	/^static int mov_write_moov_tag(ByteIOContext *pb, MOVContext *mov,$/;"	f	file:
mov_write_mvhd_tag	libavformat/movenc.c	/^static int mov_write_mvhd_tag(ByteIOContext *pb, MOVContext *mov)$/;"	f	file:
mov_write_nam_tag	libavformat/movenc.c	/^static int mov_write_nam_tag(ByteIOContext *pb, MOVContext* mov,$/;"	f	file:
mov_write_packet	libavformat/movenc.c	/^static int mov_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
mov_write_smhd_tag	libavformat/movenc.c	/^static int mov_write_smhd_tag(ByteIOContext *pb)$/;"	f	file:
mov_write_stbl_tag	libavformat/movenc.c	/^static int mov_write_stbl_tag(ByteIOContext *pb, MOVTrack* track)$/;"	f	file:
mov_write_stco_tag	libavformat/movenc.c	/^static int mov_write_stco_tag(ByteIOContext *pb, MOVTrack* track)$/;"	f	file:
mov_write_string_data_tag	libavformat/movenc.c	/^static int mov_write_string_data_tag(ByteIOContext *pb, MOVContext* mov,$/;"	f	file:
mov_write_stsc_tag	libavformat/movenc.c	/^static int mov_write_stsc_tag(ByteIOContext *pb, MOVTrack* track)$/;"	f	file:
mov_write_stsd_tag	libavformat/movenc.c	/^static int mov_write_stsd_tag(ByteIOContext *pb, MOVTrack* track)$/;"	f	file:
mov_write_stss_tag	libavformat/movenc.c	/^static int mov_write_stss_tag(ByteIOContext *pb, MOVTrack* track)$/;"	f	file:
mov_write_stsz_tag	libavformat/movenc.c	/^static int mov_write_stsz_tag(ByteIOContext *pb, MOVTrack* track)$/;"	f	file:
mov_write_stts_tag	libavformat/movenc.c	/^static int mov_write_stts_tag(ByteIOContext *pb, MOVTrack* track)$/;"	f	file:
mov_write_svq3_tag	libavformat/movenc.c	/^static int mov_write_svq3_tag(ByteIOContext *pb)$/;"	f	file:
mov_write_tkhd_tag	libavformat/movenc.c	/^static int mov_write_tkhd_tag(ByteIOContext *pb, MOVTrack* track)$/;"	f	file:
mov_write_too_tag	libavformat/movenc.c	/^static int mov_write_too_tag(ByteIOContext *pb, MOVContext* mov,$/;"	f	file:
mov_write_trailer	libavformat/movenc.c	/^static int mov_write_trailer(AVFormatContext *s)$/;"	f	file:
mov_write_trak_tag	libavformat/movenc.c	/^static int mov_write_trak_tag(ByteIOContext *pb, MOVTrack* track)$/;"	f	file:
mov_write_trkn_tag	libavformat/movenc.c	/^static int mov_write_trkn_tag(ByteIOContext *pb, MOVContext* mov,$/;"	f	file:
mov_write_udta_tag	libavformat/movenc.c	/^static int mov_write_udta_tag(ByteIOContext *pb, MOVContext* mov,$/;"	f	file:
mov_write_uuid_tag_psp	libavformat/movenc.c	/^static int mov_write_uuid_tag_psp(ByteIOContext *pb, MOVTrack *mov)$/;"	f	file:
mov_write_uuidprof_tag	libavformat/movenc.c	/^static void mov_write_uuidprof_tag(ByteIOContext *pb, AVFormatContext *s)$/;"	f	file:
mov_write_video_tag	libavformat/movenc.c	/^static int mov_write_video_tag(ByteIOContext *pb, MOVTrack* track)$/;"	f	file:
mov_write_vmhd_tag	libavformat/movenc.c	/^static int mov_write_vmhd_tag(ByteIOContext *pb)$/;"	f	file:
mov_write_wave_tag	libavformat/movenc.c	/^static int mov_write_wave_tag(ByteIOContext *pb, MOVTrack* track)$/;"	f	file:
mov_write_wrt_tag	libavformat/movenc.c	/^static int mov_write_wrt_tag(ByteIOContext *pb, MOVContext* mov,$/;"	f	file:
movd_m2r	libavcodec/i386/mmx.h	54;"	d
movd_r2m	libavcodec/i386/mmx.h	55;"	d
movd_r2r	libavcodec/i386/mmx.h	56;"	d
movdqa_m2r	libavcodec/i386/mmx.h	257;"	d
movdqa_r2m	libavcodec/i386/mmx.h	258;"	d
movdqa_r2r	libavcodec/i386/mmx.h	259;"	d
movdqu_m2r	libavcodec/i386/mmx.h	260;"	d
movdqu_r2m	libavcodec/i386/mmx.h	261;"	d
movdqu_r2r	libavcodec/i386/mmx.h	262;"	d
move2to1	libavcodec/liba52/downmix.c	/^static void move2to1 (sample_t * src, sample_t * dest, sample_t bias)$/;"	f	file:
movenc_init	libavformat/movenc.c	/^int movenc_init(void)$/;"	f
movi_end	libavformat/avidec.c	/^    int64_t  movi_end;$/;"	m	file:
movi_list	libavformat/avidec.c	/^    offset_t movi_list;$/;"	m	file:
movi_list	libavformat/avienc.c	/^    offset_t riff_start, movi_list, odml_list;$/;"	m	file:
movntq_r2m	libavcodec/i386/mmx.h	207;"	d
movq_m2r	libavcodec/i386/mmx.h	58;"	d
movq_r2m	libavcodec/i386/mmx.h	59;"	d
movq_r2r	libavcodec/i386/mmx.h	60;"	d
mp2_decoder	libavcodec/mpegaudiodec.c	/^AVCodec mp2_decoder =$/;"	v
mp2_encoder	libavcodec/mpegaudio.c	/^AVCodec mp2_encoder = {$/;"	v
mp2_oformat	libavformat/mp3.c	/^AVOutputFormat mp2_oformat = {$/;"	v
mp3Channels	libavcodec/mpegaudiodec.c	/^static int mp3Channels[16] = {0,1,2,3,4,5,6,8,4}; \/* total output channels *\/$/;"	v	file:
mp3Frames	libavcodec/mpegaudiodec.c	/^static int mp3Frames[16] = {0,1,1,2,3,3,4,5,2};   \/* number of mp3 decoder instances *\/$/;"	v	file:
mp3_decoder	libavcodec/mpegaudiodec.c	/^AVCodec mp3_decoder =$/;"	v
mp3_iformat	libavformat/mp3.c	/^AVInputFormat mp3_iformat = {$/;"	v
mp3_init	libavformat/mp3.c	/^int mp3_init(void)$/;"	f
mp3_oformat	libavformat/mp3.c	/^AVOutputFormat mp3_oformat = {$/;"	v
mp3_read_close	libavformat/mp3.c	/^static int mp3_read_close(AVFormatContext *s)$/;"	f	file:
mp3_read_header	libavformat/mp3.c	/^static int mp3_read_header(AVFormatContext *s,$/;"	f	file:
mp3_read_packet	libavformat/mp3.c	/^static int mp3_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
mp3_write_header	libavformat/mp3.c	/^static int mp3_write_header(struct AVFormatContext *s)$/;"	f	file:
mp3_write_packet	libavformat/mp3.c	/^static int mp3_write_packet(struct AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
mp3_write_trailer	libavformat/mp3.c	/^static int mp3_write_trailer(struct AVFormatContext *s)$/;"	f	file:
mp3adu_decoder	libavcodec/mpegaudiodec.c	/^AVCodec mp3adu_decoder =$/;"	v
mp3decctx	libavcodec/mpegaudiodec.c	/^    MPADecodeContext *mp3decctx[5]; \/\/\/< MPADecodeContext for every decoder instance$/;"	m	struct:MP3On4DecodeContext	file:
mp3lame_encoder	libavcodec/mp3lameaudio.c	/^AVCodec mp3lame_encoder = {$/;"	v
mp3len	libavcodec/mp3lameaudio.c	/^static int mp3len(void *data, int *samplesPerFrame, int *sampleRate)$/;"	f	file:
mp3on4_decoder	libavcodec/mpegaudiodec.c	/^AVCodec mp3on4_decoder =$/;"	v
mp4	libavformat/mov.c	/^    int mp4; \/* set to 1 as soon as we are sure that the file is an .mp4 file (even some header parsing depends on this) *\/$/;"	m	struct:MOVContext	file:
mp4_oformat	libavformat/movenc.c	/^static AVOutputFormat mp4_oformat = {$/;"	v	file:
mp_decode_frame	libavcodec/mpegaudiodec.c	/^static int mp_decode_frame(MPADecodeContext *s, $/;"	f	file:
mp_decode_layer1	libavcodec/mpegaudiodec.c	/^static int mp_decode_layer1(MPADecodeContext *s)$/;"	f	file:
mp_decode_layer2	libavcodec/mpegaudiodec.c	/^static int mp_decode_layer2(MPADecodeContext *s)$/;"	f	file:
mp_decode_layer3	libavcodec/mpegaudiodec.c	/^static int mp_decode_layer3(MPADecodeContext *s)$/;"	f	file:
mpa_bitrate_tab	libavcodec/mpegaudiodectab.h	/^const uint16_t mpa_bitrate_tab[2][3][15] = {$/;"	v
mpa_decode_header	libavcodec/mpegaudiodec.c	/^int mpa_decode_header(AVCodecContext *avctx, uint32_t head)$/;"	f
mpa_enwindow	libavcodec/mpegaudiodectab.h	/^const int32_t mpa_enwindow[257] = {$/;"	v
mpa_freq_tab	libavcodec/mpegaudiodectab.h	/^const uint16_t mpa_freq_tab[3] = { 44100, 48000, 32000 };$/;"	v
mpa_huff_data	libavcodec/mpegaudiodectab.h	/^const uint8_t mpa_huff_data[32][2] = {$/;"	v
mpa_huff_tables	libavcodec/mpegaudiodectab.h	/^const HuffTable mpa_huff_tables[16] = {$/;"	v
mpa_huffbits_1	libavcodec/mpegaudiodectab.h	/^const uint8_t mpa_huffbits_1[4] = {$/;"	v
mpa_huffbits_10	libavcodec/mpegaudiodectab.h	/^const uint8_t mpa_huffbits_10[64] = {$/;"	v
mpa_huffbits_11	libavcodec/mpegaudiodectab.h	/^const uint8_t mpa_huffbits_11[64] = {$/;"	v
mpa_huffbits_12	libavcodec/mpegaudiodectab.h	/^const uint8_t mpa_huffbits_12[64] = {$/;"	v
mpa_huffbits_13	libavcodec/mpegaudiodectab.h	/^const uint8_t mpa_huffbits_13[256] = {$/;"	v
mpa_huffbits_15	libavcodec/mpegaudiodectab.h	/^const uint8_t mpa_huffbits_15[256] = {$/;"	v
mpa_huffbits_16	libavcodec/mpegaudiodectab.h	/^const uint8_t mpa_huffbits_16[256] = {$/;"	v
mpa_huffbits_2	libavcodec/mpegaudiodectab.h	/^const uint8_t mpa_huffbits_2[9] = {$/;"	v
mpa_huffbits_24	libavcodec/mpegaudiodectab.h	/^const uint8_t mpa_huffbits_24[256] = {$/;"	v
mpa_huffbits_3	libavcodec/mpegaudiodectab.h	/^const uint8_t mpa_huffbits_3[9] = {$/;"	v
mpa_huffbits_5	libavcodec/mpegaudiodectab.h	/^const uint8_t mpa_huffbits_5[16] = {$/;"	v
mpa_huffbits_6	libavcodec/mpegaudiodectab.h	/^const uint8_t mpa_huffbits_6[16] = {$/;"	v
mpa_huffbits_7	libavcodec/mpegaudiodectab.h	/^const uint8_t mpa_huffbits_7[36] = {$/;"	v
mpa_huffbits_8	libavcodec/mpegaudiodectab.h	/^const uint8_t mpa_huffbits_8[36] = {$/;"	v
mpa_huffbits_9	libavcodec/mpegaudiodectab.h	/^const uint8_t mpa_huffbits_9[36] = {$/;"	v
mpa_huffcodes_1	libavcodec/mpegaudiodectab.h	/^const uint16_t mpa_huffcodes_1[4] = {$/;"	v
mpa_huffcodes_10	libavcodec/mpegaudiodectab.h	/^const uint16_t mpa_huffcodes_10[64] = {$/;"	v
mpa_huffcodes_11	libavcodec/mpegaudiodectab.h	/^const uint16_t mpa_huffcodes_11[64] = {$/;"	v
mpa_huffcodes_12	libavcodec/mpegaudiodectab.h	/^const uint16_t mpa_huffcodes_12[64] = {$/;"	v
mpa_huffcodes_13	libavcodec/mpegaudiodectab.h	/^const uint16_t mpa_huffcodes_13[256] = {$/;"	v
mpa_huffcodes_15	libavcodec/mpegaudiodectab.h	/^const uint16_t mpa_huffcodes_15[256] = {$/;"	v
mpa_huffcodes_16	libavcodec/mpegaudiodectab.h	/^const uint16_t mpa_huffcodes_16[256] = {$/;"	v
mpa_huffcodes_2	libavcodec/mpegaudiodectab.h	/^const uint16_t mpa_huffcodes_2[9] = {$/;"	v
mpa_huffcodes_24	libavcodec/mpegaudiodectab.h	/^const uint16_t mpa_huffcodes_24[256] = {$/;"	v
mpa_huffcodes_3	libavcodec/mpegaudiodectab.h	/^const uint16_t mpa_huffcodes_3[9] = {$/;"	v
mpa_huffcodes_5	libavcodec/mpegaudiodectab.h	/^const uint16_t mpa_huffcodes_5[16] = {$/;"	v
mpa_huffcodes_6	libavcodec/mpegaudiodectab.h	/^const uint16_t mpa_huffcodes_6[16] = {$/;"	v
mpa_huffcodes_7	libavcodec/mpegaudiodectab.h	/^const uint16_t mpa_huffcodes_7[36] = {$/;"	v
mpa_huffcodes_8	libavcodec/mpegaudiodectab.h	/^const uint16_t mpa_huffcodes_8[36] = {$/;"	v
mpa_huffcodes_9	libavcodec/mpegaudiodectab.h	/^const uint16_t mpa_huffcodes_9[36] = {$/;"	v
mpa_pretab	libavcodec/mpegaudiodectab.h	/^const uint8_t mpa_pretab[2][22] = {$/;"	v
mpa_quad_bits	libavcodec/mpegaudiodectab.h	/^static uint8_t mpa_quad_bits[2][16] = {$/;"	v
mpa_quad_codes	libavcodec/mpegaudiodectab.h	/^static uint8_t mpa_quad_codes[2][16] = {$/;"	v
mpeg1_aspect	libavcodec/mpeg12data.h	/^static const float mpeg1_aspect[16]={$/;"	v
mpeg1_chr_dc_uni	libavcodec/mpeg12.c	/^static uint32_t mpeg1_chr_dc_uni[512];$/;"	v	file:
mpeg1_decode_block_inter	libavcodec/mpeg12.c	/^static inline int mpeg1_decode_block_inter(MpegEncContext *s, $/;"	f	file:
mpeg1_decode_block_intra	libavcodec/mpeg12.c	/^static inline int mpeg1_decode_block_intra(MpegEncContext *s, $/;"	f	file:
mpeg1_decode_picture	libavcodec/mpeg12.c	/^static int mpeg1_decode_picture(AVCodecContext *avctx, $/;"	f	file:
mpeg1_decode_sequence	libavcodec/mpeg12.c	/^static int mpeg1_decode_sequence(AVCodecContext *avctx, $/;"	f	file:
mpeg1_encode_block	libavcodec/mpeg12.c	/^static void mpeg1_encode_block(MpegEncContext *s, $/;"	f	file:
mpeg1_encode_mb	libavcodec/mpeg12.c	/^void mpeg1_encode_mb(MpegEncContext *s,$/;"	f
mpeg1_encode_motion	libavcodec/mpeg12.c	/^static void mpeg1_encode_motion(MpegEncContext *s, int val, int f_or_b_code)$/;"	f	file:
mpeg1_encode_picture_header	libavcodec/mpeg12.c	/^void mpeg1_encode_picture_header(MpegEncContext *s, int picture_number)$/;"	f
mpeg1_encode_sequence_header	libavcodec/mpeg12.c	/^static void mpeg1_encode_sequence_header(MpegEncContext *s)$/;"	f	file:
mpeg1_fast_decode_block_inter	libavcodec/mpeg12.c	/^static inline int mpeg1_fast_decode_block_inter(MpegEncContext *s, DCTELEM *block, int n)$/;"	f	file:
mpeg1_index_run	libavcodec/mpeg12.c	/^static uint8_t mpeg1_index_run[2][64];$/;"	v	file:
mpeg1_level	libavcodec/mpeg12data.h	/^static const int8_t mpeg1_level[111] = {$/;"	v
mpeg1_lum_dc_uni	libavcodec/mpeg12.c	/^static uint32_t mpeg1_lum_dc_uni[512];$/;"	v	file:
mpeg1_max_level	libavcodec/mpeg12.c	/^static int8_t mpeg1_max_level[2][64];$/;"	v	file:
mpeg1_run	libavcodec/mpeg12data.h	/^static const int8_t mpeg1_run[111] = {$/;"	v
mpeg1_vlc	libavcodec/mpeg12data.h	/^static const uint16_t mpeg1_vlc[113][2] = {$/;"	v
mpeg1system_mux	libavformat/mpeg.c	/^static AVOutputFormat mpeg1system_mux = {$/;"	v	file:
mpeg1system_mux	libavformat/mpeg.c	/^static AVOutputFormat mpeg1system_mux;$/;"	v	file:
mpeg1vcd_mux	libavformat/mpeg.c	/^static AVOutputFormat mpeg1vcd_mux = {$/;"	v	file:
mpeg1vcd_mux	libavformat/mpeg.c	/^static AVOutputFormat mpeg1vcd_mux;$/;"	v	file:
mpeg1video_decoder	libavcodec/mpeg12.c	/^AVCodec mpeg1video_decoder = {$/;"	v
mpeg1video_encoder	libavcodec/mpeg12.c	/^AVCodec mpeg1video_encoder = {$/;"	v
mpeg1video_oformat	libavformat/raw.c	/^AVOutputFormat mpeg1video_oformat = {$/;"	v
mpeg2_aspect	libavcodec/mpeg12data.h	/^static const AVRational mpeg2_aspect[16]={$/;"	v
mpeg2_dc_scale_table	libavcodec/mpeg12data.h	/^static uint8_t *mpeg2_dc_scale_table[4]={$/;"	v
mpeg2_dc_scale_table1	libavcodec/mpeg12data.h	/^static uint8_t mpeg2_dc_scale_table1[128]={$/;"	v
mpeg2_dc_scale_table2	libavcodec/mpeg12data.h	/^static uint8_t mpeg2_dc_scale_table2[128]={ $/;"	v
mpeg2_dc_scale_table3	libavcodec/mpeg12data.h	/^static uint8_t mpeg2_dc_scale_table3[128]={ $/;"	v
mpeg2_decode_block_intra	libavcodec/mpeg12.c	/^static inline int mpeg2_decode_block_intra(MpegEncContext *s, $/;"	f	file:
mpeg2_decode_block_non_intra	libavcodec/mpeg12.c	/^static inline int mpeg2_decode_block_non_intra(MpegEncContext *s, $/;"	f	file:
mpeg2_fast_decode_block_intra	libavcodec/mpeg12.c	/^static inline int mpeg2_fast_decode_block_intra(MpegEncContext *s, $/;"	f	file:
mpeg2_fast_decode_block_non_intra	libavcodec/mpeg12.c	/^static inline int mpeg2_fast_decode_block_non_intra(MpegEncContext *s, $/;"	f	file:
mpeg2_vlc	libavcodec/mpeg12data.h	/^static const uint16_t mpeg2_vlc[113][2] = {$/;"	v
mpeg2dvd_mux	libavformat/mpeg.c	/^static AVOutputFormat mpeg2dvd_mux = {$/;"	v	file:
mpeg2dvd_mux	libavformat/mpeg.c	/^static AVOutputFormat mpeg2dvd_mux;$/;"	v	file:
mpeg2svcd_mux	libavformat/mpeg.c	/^static AVOutputFormat mpeg2svcd_mux = {$/;"	v	file:
mpeg2svcd_mux	libavformat/mpeg.c	/^static AVOutputFormat mpeg2svcd_mux;$/;"	v	file:
mpeg2ts_compute_pcr	libavformat/avformat.h	/^    int mpeg2ts_compute_pcr:1; \/* compute exact PCR for each transport$/;"	m	struct:AVFormatParameters
mpeg2ts_compute_pcr	libavformat/mpegts.c	/^    int mpeg2ts_compute_pcr; \/* compute exact PCR for each transport stream packet *\/$/;"	m	struct:MpegTSContext	file:
mpeg2ts_raw	libavformat/avformat.h	/^    int mpeg2ts_raw:1;  \/* force raw MPEG2 transport stream output, if possible *\/$/;"	m	struct:AVFormatParameters
mpeg2ts_raw	libavformat/mpegts.c	/^    int mpeg2ts_raw;  \/* force raw MPEG2 transport stream output, if possible *\/$/;"	m	struct:MpegTSContext	file:
mpeg2video_decoder	libavcodec/mpeg12.c	/^AVCodec mpeg2video_decoder = {$/;"	v
mpeg2video_encoder	libavcodec/mpeg12.c	/^AVCodec mpeg2video_encoder = {$/;"	v
mpeg2video_oformat	libavformat/raw.c	/^AVOutputFormat mpeg2video_oformat = {$/;"	v
mpeg2vob_mux	libavformat/mpeg.c	/^static AVOutputFormat mpeg2vob_mux = {$/;"	v	file:
mpeg2vob_mux	libavformat/mpeg.c	/^static AVOutputFormat mpeg2vob_mux;$/;"	v	file:
mpeg4_dc_threshold	libavcodec/mpeg4data.h	/^static const uint8_t mpeg4_dc_threshold[8]={$/;"	v
mpeg4_decode_block	libavcodec/h263.c	/^static inline int mpeg4_decode_block(MpegEncContext * s, DCTELEM * block,$/;"	f	file:
mpeg4_decode_dc	libavcodec/h263.c	/^static inline int mpeg4_decode_dc(MpegEncContext * s, int n, int *dir_ptr)$/;"	f	file:
mpeg4_decode_gop_header	libavcodec/h263.c	/^static int mpeg4_decode_gop_header(MpegEncContext * s, GetBitContext *gb){$/;"	f	file:
mpeg4_decode_partition_a	libavcodec/h263.c	/^static int mpeg4_decode_partition_a(MpegEncContext *s){$/;"	f	file:
mpeg4_decode_partition_b	libavcodec/h263.c	/^static int mpeg4_decode_partition_b(MpegEncContext *s, int mb_count){$/;"	f	file:
mpeg4_decode_partitioned_mb	libavcodec/h263.c	/^static int mpeg4_decode_partitioned_mb(MpegEncContext *s, DCTELEM block[6][64])$/;"	f	file:
mpeg4_decode_sprite_trajectory	libavcodec/h263.c	/^static void mpeg4_decode_sprite_trajectory(MpegEncContext * s, GetBitContext *gb)$/;"	f	file:
mpeg4_decode_video_packet_header	libavcodec/h263.c	/^static int mpeg4_decode_video_packet_header(MpegEncContext *s)$/;"	f	file:
mpeg4_decoder	libavcodec/h263dec.c	/^AVCodec mpeg4_decoder = {$/;"	v
mpeg4_encode_block	libavcodec/h263.c	/^static inline void mpeg4_encode_block(MpegEncContext * s, DCTELEM * block, int n, int intra_dc, $/;"	f	file:
mpeg4_encode_blocks	libavcodec/h263.c	/^static inline void mpeg4_encode_blocks(MpegEncContext * s, DCTELEM block[6][64], int intra_dc[6], $/;"	f	file:
mpeg4_encode_dc	libavcodec/h263.c	/^static inline void mpeg4_encode_dc(PutBitContext * s, int level, int n)$/;"	f	file:
mpeg4_encode_gop_header	libavcodec/h263.c	/^static void mpeg4_encode_gop_header(MpegEncContext * s){$/;"	f	file:
mpeg4_encode_mb	libavcodec/h263.c	/^void mpeg4_encode_mb(MpegEncContext * s,$/;"	f
mpeg4_encode_picture_header	libavcodec/h263.c	/^void mpeg4_encode_picture_header(MpegEncContext * s, int picture_number)$/;"	f
mpeg4_encode_visual_object_header	libavcodec/h263.c	/^static void mpeg4_encode_visual_object_header(MpegEncContext * s){$/;"	f	file:
mpeg4_encode_vol_header	libavcodec/h263.c	/^static void mpeg4_encode_vol_header(MpegEncContext * s, int vo_number, int vol_number)$/;"	f	file:
mpeg4_encoder	libavcodec/mpegvideo.c	/^AVCodec mpeg4_encoder = {$/;"	v
mpeg4_get_block_length	libavcodec/h263.c	/^static int mpeg4_get_block_length(MpegEncContext * s, DCTELEM * block, int n, int intra_dc, $/;"	f	file:
mpeg4_get_dc_length	libavcodec/h263.c	/^static inline int mpeg4_get_dc_length(int level, int n){$/;"	f	file:
mpeg4_is_resync	libavcodec/h263.c	/^static inline int mpeg4_is_resync(MpegEncContext *s){$/;"	f	file:
mpeg4_pred_ac	libavcodec/h263.c	/^void mpeg4_pred_ac(MpegEncContext * s, DCTELEM *block, int n,$/;"	f
mpeg4video_parse	libavcodec/parser.c	/^static int mpeg4video_parse(AVCodecParserContext *s,$/;"	f	file:
mpeg4video_parse_init	libavcodec/parser.c	/^static int mpeg4video_parse_init(AVCodecParserContext *s)$/;"	f	file:
mpeg4video_parser	libavcodec/parser.c	/^AVCodecParser mpeg4video_parser = {$/;"	v
mpeg_decode_end	libavcodec/mpeg12.c	/^static int mpeg_decode_end(AVCodecContext *avctx)$/;"	f	file:
mpeg_decode_extension	libavcodec/mpeg12.c	/^static void mpeg_decode_extension(AVCodecContext *avctx, $/;"	f	file:
mpeg_decode_frame	libavcodec/mpeg12.c	/^static int mpeg_decode_frame(AVCodecContext *avctx, $/;"	f	file:
mpeg_decode_gop	libavcodec/mpeg12.c	/^static void mpeg_decode_gop(AVCodecContext *avctx, $/;"	f	file:
mpeg_decode_init	libavcodec/mpeg12.c	/^static int mpeg_decode_init(AVCodecContext *avctx)$/;"	f	file:
mpeg_decode_mb	libavcodec/mpeg12.c	/^static int mpeg_decode_mb(MpegEncContext *s,$/;"	f	file:
mpeg_decode_motion	libavcodec/mpeg12.c	/^static int mpeg_decode_motion(MpegEncContext *s, int fcode, int pred)$/;"	f	file:
mpeg_decode_picture_coding_extension	libavcodec/mpeg12.c	/^static void mpeg_decode_picture_coding_extension(MpegEncContext *s)$/;"	f	file:
mpeg_decode_picture_display_extension	libavcodec/mpeg12.c	/^static void mpeg_decode_picture_display_extension(Mpeg1Context *s1)$/;"	f	file:
mpeg_decode_postinit	libavcodec/mpeg12.c	/^static int mpeg_decode_postinit(AVCodecContext *avctx){$/;"	f	file:
mpeg_decode_quant_matrix_extension	libavcodec/mpeg12.c	/^static void mpeg_decode_quant_matrix_extension(MpegEncContext *s)$/;"	f	file:
mpeg_decode_sequence_display_extension	libavcodec/mpeg12.c	/^static void mpeg_decode_sequence_display_extension(Mpeg1Context *s1)$/;"	f	file:
mpeg_decode_sequence_extension	libavcodec/mpeg12.c	/^static void mpeg_decode_sequence_extension(Mpeg1Context *s1)$/;"	f	file:
mpeg_decode_slice	libavcodec/mpeg12.c	/^static int mpeg_decode_slice(Mpeg1Context *s1, int mb_y,$/;"	f	file:
mpeg_decode_user_data	libavcodec/mpeg12.c	/^static void mpeg_decode_user_data(AVCodecContext *avctx, $/;"	f	file:
mpeg_enc_ctx	libavcodec/mpeg12.c	/^    MpegEncContext mpeg_enc_ctx;$/;"	m	struct:Mpeg1Context	file:
mpeg_enc_ctx_allocated	libavcodec/mjpeg.c	/^    int mpeg_enc_ctx_allocated; \/* true if decoding context allocated *\/$/;"	m	struct:MJpegDecodeContext	file:
mpeg_enc_ctx_allocated	libavcodec/mpeg12.c	/^    int mpeg_enc_ctx_allocated; \/* true if decoding context allocated *\/$/;"	m	struct:Mpeg1Context	file:
mpeg_f_code	libavcodec/mpegvideo.h	/^    int mpeg_f_code[2][2];$/;"	m	struct:MpegEncContext
mpeg_field_start	libavcodec/mpeg12.c	/^static int mpeg_field_start(MpegEncContext *s){$/;"	f	file:
mpeg_mc_decode_init	libavcodec/mpeg12.c	/^static int mpeg_mc_decode_init(AVCodecContext *avctx){$/;"	f	file:
mpeg_motion	libavcodec/mpegvideo.c	/^static always_inline void mpeg_motion(MpegEncContext *s,$/;"	f	file:
mpeg_motion_lowres	libavcodec/mpegvideo.c	/^static always_inline void mpeg_motion_lowres(MpegEncContext *s,$/;"	f	file:
mpeg_mux_end	libavformat/mpeg.c	/^static int mpeg_mux_end(AVFormatContext *ctx)$/;"	f	file:
mpeg_mux_init	libavformat/mpeg.c	/^static int mpeg_mux_init(AVFormatContext *ctx)$/;"	f	file:
mpeg_mux_write_packet	libavformat/mpeg.c	/^static int mpeg_mux_write_packet(AVFormatContext *ctx, AVPacket *pkt)$/;"	f	file:
mpeg_quant	libavcodec/avcodec.h	/^    int mpeg_quant;$/;"	m	struct:AVCodecContext
mpeg_quant	libavcodec/mpegvideo.h	/^    int mpeg_quant;$/;"	m	struct:MpegEncContext
mpeg_xvmc_decoder	libavcodec/mpeg12.c	/^AVCodec mpeg_xvmc_decoder = {$/;"	v
mpegaudio_parse	libavcodec/parser.c	/^static int mpegaudio_parse(AVCodecParserContext *s1,$/;"	f	file:
mpegaudio_parse_init	libavcodec/parser.c	/^static int mpegaudio_parse_init(AVCodecParserContext *s1)$/;"	f	file:
mpegaudio_parser	libavcodec/parser.c	/^AVCodecParser mpegaudio_parser = {$/;"	v
mpegps_demux	libavformat/mpeg.c	/^AVInputFormat mpegps_demux = {$/;"	v
mpegps_init	libavformat/mpeg.c	/^int mpegps_init(void)$/;"	f
mpegps_probe	libavformat/mpeg.c	/^static int mpegps_probe(AVProbeData *p)$/;"	f	file:
mpegps_psm_parse	libavformat/mpeg.c	/^static long mpegps_psm_parse(MpegDemuxContext *m, ByteIOContext *pb)$/;"	f	file:
mpegps_read_close	libavformat/mpeg.c	/^static int mpegps_read_close(AVFormatContext *s)$/;"	f	file:
mpegps_read_dts	libavformat/mpeg.c	/^static int64_t mpegps_read_dts(AVFormatContext *s, int stream_index, $/;"	f	file:
mpegps_read_header	libavformat/mpeg.c	/^static int mpegps_read_header(AVFormatContext *s,$/;"	f	file:
mpegps_read_packet	libavformat/mpeg.c	/^static int mpegps_read_packet(AVFormatContext *s,$/;"	f	file:
mpegps_read_pes_header	libavformat/mpeg.c	/^static int mpegps_read_pes_header(AVFormatContext *s,$/;"	f	file:
mpegts_add_service	libavformat/mpegtsenc.c	/^static MpegTSService *mpegts_add_service(MpegTSWrite *ts, $/;"	f	file:
mpegts_close_filter	libavformat/mpegts.c	/^void mpegts_close_filter(MpegTSContext *ts, MpegTSFilter *filter)$/;"	f
mpegts_crc32	libavformat/mpegtsenc.c	/^unsigned int mpegts_crc32(const uint8_t *data, int len)$/;"	f
mpegts_demux	libavformat/mpegts.c	/^AVInputFormat mpegts_demux = {$/;"	v
mpegts_get_pcr	libavformat/mpegts.c	/^static int64_t mpegts_get_pcr(AVFormatContext *s, int stream_index, $/;"	f	file:
mpegts_init	libavformat/mpegts.c	/^int mpegts_init(void)$/;"	f
mpegts_mux	libavformat/mpegtsenc.c	/^AVOutputFormat mpegts_mux = {$/;"	v
mpegts_open_pes_filter	libavformat/mpegts.c	/^MpegTSFilter *mpegts_open_pes_filter(MpegTSContext *ts, unsigned int pid, $/;"	f
mpegts_open_section_filter	libavformat/mpegts.c	/^MpegTSFilter *mpegts_open_section_filter(MpegTSContext *ts, unsigned int pid, $/;"	f
mpegts_parse_close	libavformat/mpegts.c	/^void mpegts_parse_close(MpegTSContext *ts)$/;"	f
mpegts_parse_open	libavformat/mpegts.c	/^MpegTSContext *mpegts_parse_open(AVFormatContext *s)$/;"	f
mpegts_parse_packet	libavformat/mpegts.c	/^int mpegts_parse_packet(MpegTSContext *ts, AVPacket *pkt,$/;"	f
mpegts_probe	libavformat/mpegts.c	/^static int mpegts_probe(AVProbeData *p)$/;"	f	file:
mpegts_push_data	libavformat/mpegts.c	/^static void mpegts_push_data(void *opaque,$/;"	f	file:
mpegts_raw_read_packet	libavformat/mpegts.c	/^static int mpegts_raw_read_packet(AVFormatContext *s,$/;"	f	file:
mpegts_read_close	libavformat/mpegts.c	/^static int mpegts_read_close(AVFormatContext *s)$/;"	f	file:
mpegts_read_header	libavformat/mpegts.c	/^static int mpegts_read_header(AVFormatContext *s,$/;"	f	file:
mpegts_read_packet	libavformat/mpegts.c	/^static int mpegts_read_packet(AVFormatContext *s,$/;"	f	file:
mpegts_resync	libavformat/mpegts.c	/^static int mpegts_resync(ByteIOContext *pb)$/;"	f	file:
mpegts_scan_pat	libavformat/mpegts.c	/^void mpegts_scan_pat(MpegTSContext *ts)$/;"	f
mpegts_scan_sdt	libavformat/mpegts.c	/^void mpegts_scan_sdt(MpegTSContext *ts)$/;"	f
mpegts_set_service	libavformat/mpegts.c	/^void mpegts_set_service(MpegTSContext *ts, int sid,$/;"	f
mpegts_write_end	libavformat/mpegtsenc.c	/^static int mpegts_write_end(AVFormatContext *s)$/;"	f	file:
mpegts_write_header	libavformat/mpegtsenc.c	/^static int mpegts_write_header(AVFormatContext *s)$/;"	f	file:
mpegts_write_packet	libavformat/mpegtsenc.c	/^static int mpegts_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
mpegts_write_pat	libavformat/mpegtsenc.c	/^static void mpegts_write_pat(AVFormatContext *s)$/;"	f	file:
mpegts_write_pes	libavformat/mpegtsenc.c	/^static void mpegts_write_pes(AVFormatContext *s, AVStream *st,$/;"	f	file:
mpegts_write_pmt	libavformat/mpegtsenc.c	/^static void mpegts_write_pmt(AVFormatContext *s, MpegTSService *service)$/;"	f	file:
mpegts_write_sdt	libavformat/mpegtsenc.c	/^static void mpegts_write_sdt(AVFormatContext *s)$/;"	f	file:
mpegts_write_section	libavformat/mpegtsenc.c	/^void mpegts_write_section(MpegTSSection *s, uint8_t *buf, int len)$/;"	f
mpegts_write_section1	libavformat/mpegtsenc.c	/^int mpegts_write_section1(MpegTSSection *s, int tid, int id, $/;"	f
mpegvideo_decoder	libavcodec/mpeg12.c	/^AVCodec mpegvideo_decoder = {$/;"	v
mpegvideo_extract_headers	libavcodec/parser.c	/^static void mpegvideo_extract_headers(AVCodecParserContext *s, $/;"	f	file:
mpegvideo_iformat	libavformat/raw.c	/^AVInputFormat mpegvideo_iformat = {$/;"	v
mpegvideo_parse	libavcodec/parser.c	/^static int mpegvideo_parse(AVCodecParserContext *s,$/;"	f	file:
mpegvideo_parser	libavcodec/parser.c	/^AVCodecParser mpegvideo_parser = {$/;"	v
mpegvideo_probe	libavformat/raw.c	/^static int mpegvideo_probe(AVProbeData *p)$/;"	f	file:
mpjpeg_format	libavformat/mpjpeg.c	/^static AVOutputFormat mpjpeg_format = {$/;"	v	file:
mpjpeg_write_header	libavformat/mpjpeg.c	/^static int mpjpeg_write_header(AVFormatContext *s)$/;"	f	file:
mpjpeg_write_packet	libavformat/mpjpeg.c	/^static int mpjpeg_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
mpjpeg_write_trailer	libavformat/mpjpeg.c	/^static int mpjpeg_write_trailer(AVFormatContext *s)$/;"	f	file:
mps_state	libavcodec/cabac.h	/^    uint8_t mps_state[2*64];      \/\/\/< transIdxMPS$/;"	m	struct:CABACContext
mreq	libavformat/udp.c	/^    struct ip_mreq mreq;$/;"	m	file:
ms_per_frame	libavformat/swf.c	/^    int ms_per_frame;$/;"	m	file:
ms_stereo	libavcodec/wmadec.c	/^    uint8_t ms_stereo; \/* true if mid\/side stereo mode *\/$/;"	m	struct:WMADecodeContext	file:
msb_timestamp_shift	libavformat/nut.c	/^    int msb_timestamp_shift;$/;"	m	file:
msmpeg4_decode_block	libavcodec/msmpeg4.c	/^static inline int msmpeg4_decode_block(MpegEncContext * s, DCTELEM * block,$/;"	f	file:
msmpeg4_decode_dc	libavcodec/msmpeg4.c	/^static int msmpeg4_decode_dc(MpegEncContext * s, int n, int *dir_ptr)$/;"	f	file:
msmpeg4_decode_ext_header	libavcodec/msmpeg4.c	/^int msmpeg4_decode_ext_header(MpegEncContext * s, int buf_size)$/;"	f
msmpeg4_decode_motion	libavcodec/msmpeg4.c	/^static int msmpeg4_decode_motion(MpegEncContext * s, $/;"	f	file:
msmpeg4_decode_picture_header	libavcodec/msmpeg4.c	/^int msmpeg4_decode_picture_header(MpegEncContext * s)$/;"	f
msmpeg4_encode_block	libavcodec/msmpeg4.c	/^static inline void msmpeg4_encode_block(MpegEncContext * s, DCTELEM * block, int n)$/;"	f	file:
msmpeg4_encode_dc	libavcodec/msmpeg4.c	/^static void msmpeg4_encode_dc(MpegEncContext * s, int level, int n, int *dir_ptr)$/;"	f	file:
msmpeg4_encode_ext_header	libavcodec/msmpeg4.c	/^void msmpeg4_encode_ext_header(MpegEncContext * s)$/;"	f
msmpeg4_encode_mb	libavcodec/msmpeg4.c	/^void msmpeg4_encode_mb(MpegEncContext * s, $/;"	f
msmpeg4_encode_motion	libavcodec/msmpeg4.c	/^static void msmpeg4_encode_motion(MpegEncContext * s, $/;"	f	file:
msmpeg4_encode_picture_header	libavcodec/msmpeg4.c	/^void msmpeg4_encode_picture_header(MpegEncContext * s, int picture_number)$/;"	f
msmpeg4_memsetw	libavcodec/msmpeg4.c	/^static inline void msmpeg4_memsetw(short *tab, int val, int n)$/;"	f	file:
msmpeg4_pred_dc	libavcodec/msmpeg4.c	/^static inline int msmpeg4_pred_dc(MpegEncContext * s, int n, $/;"	f	file:
msmpeg4_version	libavcodec/mpegvideo.h	/^    int msmpeg4_version;   \/\/\/< 0=not msmpeg4, 1=mp41, 2=mp42, 3=mp43\/divx3 4=wmv1\/7 5=wmv2\/8$/;"	m	struct:MpegEncContext
msmpeg4v12_decode_mb	libavcodec/msmpeg4.c	/^static int msmpeg4v12_decode_mb(MpegEncContext *s, DCTELEM block[6][64])$/;"	f	file:
msmpeg4v1_decoder	libavcodec/h263dec.c	/^AVCodec msmpeg4v1_decoder = {$/;"	v
msmpeg4v1_encoder	libavcodec/mpegvideo.c	/^AVCodec msmpeg4v1_encoder = {$/;"	v
msmpeg4v1_pred_dc	libavcodec/msmpeg4.c	/^static inline int msmpeg4v1_pred_dc(MpegEncContext * s, int n, $/;"	f	file:
msmpeg4v2_decode_motion	libavcodec/msmpeg4.c	/^static int msmpeg4v2_decode_motion(MpegEncContext * s, int pred, int f_code)$/;"	f	file:
msmpeg4v2_decoder	libavcodec/h263dec.c	/^AVCodec msmpeg4v2_decoder = {$/;"	v
msmpeg4v2_encode_motion	libavcodec/msmpeg4.c	/^static void msmpeg4v2_encode_motion(MpegEncContext * s, int val)$/;"	f	file:
msmpeg4v2_encoder	libavcodec/mpegvideo.c	/^AVCodec msmpeg4v2_encoder = {$/;"	v
msmpeg4v34_decode_mb	libavcodec/msmpeg4.c	/^static int msmpeg4v34_decode_mb(MpegEncContext *s, DCTELEM block[6][64])$/;"	f	file:
msmpeg4v3_decoder	libavcodec/h263dec.c	/^AVCodec msmpeg4v3_decoder = {$/;"	v
msmpeg4v3_encoder	libavcodec/mpegvideo.c	/^AVCodec msmpeg4v3_encoder = {$/;"	v
mspel	libavcodec/mpegvideo.h	/^    int mspel;$/;"	m	struct:MpegEncContext
mspel_bit	libavcodec/wmv2.c	/^    int mspel_bit;$/;"	m	struct:Wmv2Context	file:
msrle_decode_end	libavcodec/msrle.c	/^static int msrle_decode_end(AVCodecContext *avctx)$/;"	f	file:
msrle_decode_frame	libavcodec/msrle.c	/^static int msrle_decode_frame(AVCodecContext *avctx,$/;"	f	file:
msrle_decode_init	libavcodec/msrle.c	/^static int msrle_decode_init(AVCodecContext *avctx)$/;"	f	file:
msrle_decode_pal4	libavcodec/msrle.c	/^static void msrle_decode_pal4(MsrleContext *s)$/;"	f	file:
msrle_decode_pal8	libavcodec/msrle.c	/^static void msrle_decode_pal8(MsrleContext *s)$/;"	f	file:
msrle_decoder	libavcodec/msrle.c	/^AVCodec msrle_decoder = {$/;"	v
msvideo1_decode_16bit	libavcodec/msvideo1.c	/^static void msvideo1_decode_16bit(Msvideo1Context *s)$/;"	f	file:
msvideo1_decode_8bit	libavcodec/msvideo1.c	/^static void msvideo1_decode_8bit(Msvideo1Context *s)$/;"	f	file:
msvideo1_decode_end	libavcodec/msvideo1.c	/^static int msvideo1_decode_end(AVCodecContext *avctx)$/;"	f	file:
msvideo1_decode_frame	libavcodec/msvideo1.c	/^static int msvideo1_decode_frame(AVCodecContext *avctx,$/;"	f	file:
msvideo1_decode_init	libavcodec/msvideo1.c	/^static int msvideo1_decode_init(AVCodecContext *avctx)$/;"	f	file:
msvideo1_decoder	libavcodec/msvideo1.c	/^AVCodec msvideo1_decoder = {$/;"	v
mszh_decoder	libavcodec/lcl.c	/^AVCodec mszh_decoder = {$/;"	v
mszh_decomp	libavcodec/lcl.c	/^static unsigned int mszh_decomp(unsigned char * srcptr, int srclen, unsigned char * destptr, unsigned int destsize)$/;"	f	file:
mtype	libavcodec/h261.c	/^    int mtype;$/;"	m	struct:H261Context	file:
mul_poly	libavcodec/ac3enc.c	/^static unsigned int mul_poly(unsigned int a, unsigned int b, unsigned int poly)$/;"	f	file:
mult	libavcodec/g726.c	/^static inline int16_t mult(Float11* f1, Float11* f2)$/;"	f	file:
multi_payloads_present	libavformat/asf.h	/^    unsigned char multi_payloads_present;$/;"	m
multicast_ip	ffserver.c	/^    struct in_addr multicast_ip;$/;"	m	struct:FFStream	file:
multicast_port	ffserver.c	/^    int multicast_port; \/* first port used for multicast *\/$/;"	m	struct:FFStream	file:
multicast_ttl	ffserver.c	/^    int multicast_ttl;$/;"	m	struct:FFStream	file:
multiplier	libavcodec/vorbis.h	/^    uint_fast8_t multiplier;$/;"	m
multires	libavcodec/vc9.c	/^    int multires;         \/\/\/< frame-level RESPIC syntax element present$/;"	m	struct:VC9Context	file:
must_flush	libavformat/avio.h	/^    int must_flush; \/* true if the next seek should flush *\/$/;"	m
mutex	ffplay.c	/^    SDL_mutex *mutex;$/;"	m	struct:PacketQueue	file:
mux	libavcodec/vorbis.h	/^    uint_fast8_t *mux;$/;"	m
mux_max_delay	ffmpeg.c	/^static float mux_max_delay= 0.7;$/;"	v	file:
mux_packet_size	ffmpeg.c	/^static int mux_packet_size= 0;$/;"	v	file:
mux_preload	ffmpeg.c	/^static float mux_preload= 0.5;$/;"	v	file:
mux_rate	ffmpeg.c	/^static int mux_rate= 0;$/;"	v	file:
mux_rate	libavformat/avformat.h	/^    int mux_rate;$/;"	m	struct:AVFormatContext
mux_rate	libavformat/mpeg.c	/^    int mux_rate; \/* bitrate in units of 50 bytes\/s *\/$/;"	m	file:
muxing_app	libavformat/matroska.c	/^        *muxing_app;$/;"	m	struct:MatroskaDemuxContext	file:
mv	libavcodec/4xm.c	/^    int mv[256];$/;"	m	struct:FourXContext	file:
mv	libavcodec/4xm.c	/^static const int8_t mv[256][2]={$/;"	v	file:
mv	libavcodec/mpegvideo.h	/^    int mv[2][4][2];$/;"	m	struct:MpegEncContext
mv_bits	libavcodec/avcodec.h	/^    int mv_bits;$/;"	m	struct:AVCodecContext
mv_bits	libavcodec/mpegvideo.h	/^    int mv_bits;$/;"	m	struct:MpegEncContext
mv_bits	libavcodec/mpegvideo.h	/^    int mv_bits;$/;"	m	struct:RateControlEntry
mv_bits_sum	libavcodec/mpegvideo.h	/^    uint64_t mv_bits_sum[5];$/;"	m	struct:RateControlContext
mv_blocks	xvmc_render.h	/^  XvMCMacroBlock * mv_blocks;$/;"	m
mv_cache_clean	libavcodec/h264.c	/^    int mv_cache_clean[2];$/;"	m	struct:H264Context	file:
mv_dir	libavcodec/mpegvideo.h	/^    int mv_dir;$/;"	m	struct:MpegEncContext
mv_mode	libavcodec/vc9.c	/^    uint8_t mv_mode;      \/\/\/< MV coding monde$/;"	m	struct:VC9Context	file:
mv_mode2	libavcodec/vc9.c	/^    uint8_t mv_mode2;     \/\/\/< Secondary MV coding mode (B frames)$/;"	m	struct:VC9Context	file:
mv_penalty	libavcodec/h263.c	/^static uint8_t (*mv_penalty)[MAX_MV*2+1]= NULL;$/;"	v	file:
mv_penalty	libavcodec/mpeg12.c	/^static uint8_t (*mv_penalty)[MAX_MV*2+1]= NULL;$/;"	v	file:
mv_penalty	libavcodec/mpegvideo.h	/^    uint8_t (*mv_penalty)[MAX_MV*2+1];  \/\/\/< amount of bits needed to encode a MV $/;"	m	struct:MotionEstContext
mv_pmode_table	libavcodec/vc9.c	/^static const uint8_t mv_pmode_table[2][5] = {$/;"	v	file:
mv_scale	libavcodec/snow.c	/^    int mv_scale;$/;"	m	struct:SnowContext	file:
mv_table_index	libavcodec/mpegvideo.h	/^    int mv_table_index;$/;"	m	struct:MpegEncContext
mv_tables	libavcodec/msmpeg4data.h	/^static MVTable mv_tables[2] = {$/;"	v
mv_type	libavcodec/mpegvideo.h	/^    int mv_type;$/;"	m	struct:MpegEncContext
mv_type_mb_plane	libavcodec/vc9.c	/^    BitPlane mv_type_mb_plane;    \/\/\/< bitplane for mv_type == (4MV)$/;"	m	struct:VC9Context	file:
mv_vlc	libavcodec/h263.c	/^static VLC mv_vlc;$/;"	v	file:
mv_vlc	libavcodec/mpeg12.c	/^static VLC mv_vlc;$/;"	v	file:
mvd_table	libavcodec/h264.c	/^    int16_t     (*mvd_table[2])[2];$/;"	m	struct:H264Context	file:
mvmap	libavcodec/h261data.h	/^static const int mvmap[17] =$/;"	v
mvrange	libavcodec/vc9.c	/^    uint8_t mvrange;$/;"	m	struct:VC9Context	file:
mvtab	libavcodec/h263data.h	/^const uint8_t mvtab[33][2] =$/;"	v
mx	libavcodec/snow.c	/^    int16_t mx;$/;"	m	struct:BlockNode	file:
my	libavcodec/snow.c	/^    int16_t my;$/;"	m	struct:BlockNode	file:
my_guid	libavformat/asf.h	/^static const GUID my_guid = {$/;"	v
my_http_addr	ffserver.c	/^struct sockaddr_in my_http_addr;$/;"	v
my_program_dir	ffserver.c	/^static const char *my_program_dir;$/;"	v	file:
my_program_name	ffserver.c	/^static const char *my_program_name;$/;"	v	file:
my_rtsp_addr	ffserver.c	/^struct sockaddr_in my_rtsp_addr;$/;"	v
myrnd	tests/audiogen.c	/^static unsigned int myrnd(unsigned int *seed_ptr, int n)$/;"	f	file:
myrnd	tests/videogen.c	/^static unsigned int myrnd(unsigned int *seed_ptr, int n)$/;"	f	file:
n	libavcodec/dsputil.h	/^    int n;  \/* size of MDCT (i.e. number of input data * 2) *\/$/;"	m	struct:MDCTContext
n	libavcodec/mpegvideo.h	/^    int n;                         \/\/\/< number of entries of table_vlc minus 1 $/;"	m	struct:RLTable
n	libavcodec/msmpeg4data.h	/^    int n;$/;"	m	struct:MVTable
n	libavcodec/wmadec.c	/^    int n; \/* total number of codes *\/$/;"	m	struct:CoefVLCTable	file:
n_clear_frames	libavformat/dv1394.h	/^	unsigned int n_clear_frames;$/;"	m	struct:dv1394_status
n_frames	libavformat/dv1394.h	/^	unsigned int n_frames;$/;"	m	struct:dv1394_init
nal_length_size	libavcodec/h264.c	/^    int nal_length_size; \/\/\/< Number of bytes used for nal length (1, 2 or 4)$/;"	m	struct:H264Context	file:
nal_ref_idc	libavcodec/h264.c	/^    int nal_ref_idc;	$/;"	m	struct:H264Context	file:
nal_unit_type	libavcodec/h264.c	/^    int nal_unit_type;$/;"	m	struct:H264Context	file:
name	cmdutils.h	/^    const char *name;$/;"	m
name	libavcodec/avcodec.h	/^    const char *name; \/* if name is NULL, it indicates a link to next *\/$/;"	m	struct:AVOption
name	libavcodec/avcodec.h	/^    const char *name;$/;"	m	struct:AVCodec
name	libavcodec/imgconvert.c	/^    const char *name;$/;"	m	struct:PixFmtInfo	file:
name	libavformat/avformat.h	/^    const char *name;$/;"	m	struct:AVImageFormat
name	libavformat/avformat.h	/^    const char *name;$/;"	m	struct:AVInputFormat
name	libavformat/avformat.h	/^    const char *name;$/;"	m	struct:AVOutputFormat
name	libavformat/avio.h	/^    const char *name;$/;"	m	struct:URLProtocol
name	libavformat/matroska.c	/^    char *name,$/;"	m	struct:Track	file:
name	libavformat/mpegts.c	/^    char *name;$/;"	m	struct:MpegTSService	file:
name	libavformat/mpegtsenc.c	/^    char *name;$/;"	m	struct:MpegTSService	file:
name	libavformat/ogg2.h	/^    int8_t *name;$/;"	m	struct:ogg_codec
name	tests/dsptest.c	/^    char* name;$/;"	m	struct:pix_func	file:
name_TAG	libavformat/4xm.c	39;"	d	file:
nb_all_channels	libavcodec/ac3enc.c	/^    int nb_all_channels;$/;"	m	struct:AC3EncodeContext	file:
nb_au_headers	libavformat/rtp.h	/^    int nb_au_headers;$/;"	m	struct:rtp_payload_data_s
nb_bits	libavcodec/adpcm.c	/^    int nb_bits;$/;"	m	struct:ADPCMContext	file:
nb_block_sizes	libavcodec/wmadec.c	/^    int nb_block_sizes;  \/* number of block sizes *\/$/;"	m	struct:WMADecodeContext	file:
nb_blocks	libavcodec/mjpeg.c	/^    int nb_blocks[MAX_COMPONENTS];$/;"	m	struct:MJpegDecodeContext	file:
nb_channels	libavcodec/ac3enc.c	/^    int nb_channels;$/;"	m	struct:AC3EncodeContext	file:
nb_channels	libavcodec/imgconvert.c	/^    uint8_t nb_channels;     \/* number of channels (including alpha) *\/$/;"	m	struct:PixFmtInfo	file:
nb_channels	libavcodec/mpegaudio.c	/^    int nb_channels;$/;"	m	struct:MpegAudioContext	file:
nb_channels	libavcodec/mpegaudiodec.c	/^    int nb_channels;$/;"	m	struct:MPADecodeContext	file:
nb_channels	libavcodec/wmadec.c	/^    int nb_channels;$/;"	m	struct:WMADecodeContext	file:
nb_coefs	libavcodec/ac3enc.c	/^    int nb_coefs[AC3_MAX_CHANNELS];$/;"	m	struct:AC3EncodeContext	file:
nb_components	libavcodec/mjpeg.c	/^    int nb_components;$/;"	m	struct:MJpegDecodeContext	file:
nb_connections	ffserver.c	/^int nb_connections;$/;"	v
nb_frames	libavformat/rm.c	/^    int nb_frames;    \/* current frame number *\/$/;"	m	file:
nb_frames_drop	ffmpeg.c	/^static int nb_frames_drop = 0;$/;"	v	file:
nb_frames_dup	ffmpeg.c	/^static int nb_frames_dup = 0;$/;"	v	file:
nb_index_count	libavformat/asf.h	/^    uint32_t nb_index_count;$/;"	m
nb_index_entries	libavformat/avformat.h	/^    int nb_index_entries;$/;"	m	struct:AVStream
nb_index_memory_alloc	libavformat/asf.h	/^    uint32_t nb_index_memory_alloc;$/;"	m
nb_input_files	ffmpeg.c	/^static int nb_input_files = 0;$/;"	v	file:
nb_max_connections	ffserver.c	/^int nb_max_connections;$/;"	v
nb_meta_data_maps	ffmpeg.c	/^static int nb_meta_data_maps;$/;"	v	file:
nb_output_files	ffmpeg.c	/^static int nb_output_files = 0;$/;"	v	file:
nb_packets	ffplay.c	/^    int nb_packets;$/;"	m	struct:PacketQueue	file:
nb_packets	libavformat/asf.h	/^    int64_t nb_packets;$/;"	m
nb_packets	libavformat/rm.c	/^    int nb_packets;$/;"	m	file:
nb_rtsp_streams	libavformat/rtsp.c	/^    int nb_rtsp_streams;$/;"	m	struct:RTSPState	file:
nb_samples	libavcodec/adpcm.c	/^    int nb_samples;$/;"	m	struct:ADPCMContext	file:
nb_samples	libavcodec/mpegaudio.c	/^    int64_t nb_samples; \/* total number of samples encoded *\/$/;"	m	struct:MpegAudioContext	file:
nb_scale_factors	libavcodec/mpegaudiotab.h	/^static const unsigned char nb_scale_factors[4] = { 3, 2, 1, 2 };$/;"	v
nb_services	libavformat/mpegts.c	/^    int nb_services;$/;"	m	struct:MpegTSContext	file:
nb_services	libavformat/mpegtsenc.c	/^    int nb_services;$/;"	m	struct:MpegTSWrite	file:
nb_stream_maps	ffmpeg.c	/^static int nb_stream_maps;$/;"	v	file:
nb_streams	ffmpeg.c	/^    int nb_streams;       \/* nb streams we are aware of *\/$/;"	m	struct:AVInputFile	file:
nb_streams	ffserver.c	/^    int nb_streams;$/;"	m	struct:FFStream	file:
nb_streams	libavformat/avformat.h	/^    int nb_streams;$/;"	m	struct:AVFormatContext
nb_streams	libavformat/movenc.c	/^    int     nb_streams;$/;"	m	struct:MOVContext	file:
nb_transports	libavformat/rtsp.h	/^    int nb_transports;$/;"	m	struct:RTSPHeader
nbits	libavcodec/dsputil.h	/^    int nbits; \/* n = 2^nbits *\/$/;"	m	struct:MDCTContext
nbits	libavcodec/dsputil.h	/^    int nbits;$/;"	m	struct:FFTContext
ncplbnd	libavcodec/liba52/a52_internal.h	/^    uint8_t ncplbnd;		\/* number of coupling bands *\/$/;"	m	struct:a52_state_s
need_parsing	libavformat/avformat.h	/^    int need_parsing;$/;"	m	struct:AVStream
need_to_start_children	ffserver.c	/^static int need_to_start_children;$/;"	v	file:
new_connection	ffserver.c	/^static void new_connection(int server_fd, int is_rtsp)$/;"	f	file:
new_frame_offset	libavformat/nsvdec.c	/^    int new_frame_offset; \/* temporary storage (used during seek) *\/$/;"	m	struct:NSVStream	file:
new_palette	libavcodec/flicvideo.c	/^    int new_palette;$/;"	m	struct:FlicDecodeContext	file:
new_pict_type	libavcodec/mpegvideo.h	/^    int new_pict_type;$/;"	m	struct:RateControlEntry
new_picture	libavcodec/mpegvideo.h	/^    Picture new_picture;$/;"	m	struct:MpegEncContext
new_pred	libavcodec/mpegvideo.h	/^    int new_pred;$/;"	m	struct:MpegEncContext
new_qscale	libavcodec/mpegvideo.h	/^    float new_qscale;$/;"	m	struct:RateControlEntry
new_service	libavformat/mpegts.c	/^static MpegTSService *new_service(MpegTSContext *ts, int sid, $/;"	f	file:
newcodes	libavformat/gifdec.c	/^    int newcodes;		\/* First available code *\/$/;"	m	struct:GifState	file:
next	ffserver.c	/^    struct FFStream *next;$/;"	m	struct:FFStream	file:
next	ffserver.c	/^    struct HTTPContext *next;$/;"	m	struct:HTTPContext	file:
next	ffserver.c	/^    struct IPAddressACL *next;$/;"	m	struct:IPAddressACL	file:
next	libavcodec/avcodec.h	/^    struct AVCodec *next;$/;"	m	struct:AVCodec
next	libavcodec/avcodec.h	/^    struct AVCodecParser *next;$/;"	m	struct:AVCodecParser
next	libavcodec/vp3.c	/^    struct Coeff *next;$/;"	m	struct:Coeff	file:
next	libavformat/avformat.h	/^    struct AVImageFormat *next;$/;"	m	struct:AVImageFormat
next	libavformat/avformat.h	/^    struct AVInputFormat *next;$/;"	m	struct:AVInputFormat
next	libavformat/avformat.h	/^    struct AVOutputFormat *next;$/;"	m	struct:AVOutputFormat
next	libavformat/avformat.h	/^    struct AVPacketList *next;$/;"	m	struct:AVPacketList
next	libavformat/avio.h	/^    struct URLProtocol *next;$/;"	m	struct:URLProtocol
next	libavformat/framehook.c	/^    struct _FrameHookEntry *next;$/;"	m	struct:_FrameHookEntry	file:
next	libavformat/mpeg.c	/^    struct PacketDesc *next;$/;"	m	struct:PacketDesc	file:
next	libavformat/ogg2.h	/^    struct ogg_state *next;$/;"	m	struct:ogg_state
next	vhook/imlib2.c	/^    struct _CachedImage *next;$/;"	m	struct:_CachedImage	file:
next_block_len_bits	libavcodec/wmadec.c	/^    int next_block_len_bits; \/* log2 of next block length *\/$/;"	m	struct:WMADecodeContext	file:
next_chunk	libavformat/mov.c	/^    long next_chunk;$/;"	m	struct:MOVStreamContext	file:
next_chunk_is_video	libavformat/idcin.c	/^    int next_chunk_is_video;$/;"	m	struct:IdcinDemuxContext	file:
next_chunk_offset	libavformat/ipmovie.c	/^    offset_t next_chunk_offset;$/;"	m	struct:IPMVEContext	file:
next_chunk_offset	libavformat/mov.c	/^    int64_t next_chunk_offset;$/;"	m	struct:MOVContext	file:
next_codebook_buffer	libavcodec/vqavideo.c	/^    unsigned char *next_codebook_buffer;  \/* accumulator for next codebook *\/$/;"	m	struct:VqaContext	file:
next_codebook_buffer_index	libavcodec/vqavideo.c	/^    int next_codebook_buffer_index;$/;"	m	struct:VqaContext	file:
next_coeff	libavcodec/vp3.c	/^    Coeff *next_coeff;$/;"	m	struct:Vp3DecodeContext	file:
next_coeff	libavcodec/vp3.c	/^    Coeff *next_coeff;$/;"	m	struct:Vp3Fragment	file:
next_feed	ffserver.c	/^    struct FFStream *next_feed;$/;"	m	struct:FFStream	file:
next_free_data_block_num	xvmc_render.h	/^  int next_free_data_block_num;\/\/used in add_mv_block, pointer to next free block$/;"	m
next_p_frame_damaged	libavcodec/mpegvideo.h	/^    int next_p_frame_damaged;        \/\/\/< set if the next p frame is damaged, to avoid showing trashed b frames $/;"	m	struct:MpegEncContext
next_packet	libavformat/mpeg.c	/^    PacketDesc **next_packet;$/;"	m	file:
next_picture	libavcodec/mpegvideo.h	/^    Picture next_picture;$/;"	m	struct:MpegEncContext
next_picture_ptr	libavcodec/mpegvideo.h	/^    Picture *next_picture_ptr;     \/\/\/< pointer to the next picture (for bidir pred) $/;"	m	struct:MpegEncContext
next_pts	ffmpeg.c	/^    int64_t       next_pts;  \/* synthetic pts for cases where pkt.pts$/;"	m	struct:AVInputStream	file:
next_pts	vhook/fish.c	/^    int64_t next_pts;$/;"	m	file:
next_slice_index	libavcodec/h264.c	/^    int next_slice_index;$/;"	m	struct:H264Context	file:
next_startcode	libavformat/nut.c	/^    uint64_t next_startcode;     \/\/\/< stores the next startcode if it has alraedy been parsed but the stream isnt seekable$/;"	m	file:
ni	libavformat/mov.c	/^    int ni;                                         \/\/\/< non interleaved mode$/;"	m	struct:MOVContext	file:
nmean	libavcodec/shorten.c	/^    int nmean;$/;"	m	struct:ShortenContext	file:
no_background	ffplay.c	/^    int no_background;$/;"	m	struct:VideoState	file:
no_launch	ffserver.c	/^static int no_launch;$/;"	v	file:
no_motion_search	libavcodec/motion_est.c	/^static inline void no_motion_search(MpegEncContext * s,$/;"	f	file:
no_output	ffmpeg.c	/^static int no_output = 0;$/;"	v	file:
no_rnd_PACK	libavcodec/sh4/dsputil_align.c	35;"	d	file:
no_rnd_avg32	libavcodec/dsputil.h	/^static inline uint32_t no_rnd_avg32(uint32_t a, uint32_t b)$/;"	f
no_rounding	libavcodec/mpegvideo.h	/^    int no_rounding;  \/**< apply no rounding to motion compensation (MPEG4, msmpeg4, ...) $/;"	m	struct:MpegEncContext
no_sub_motion_search	libavcodec/motion_est_template.c	/^static int no_sub_motion_search(MpegEncContext * s,$/;"	f	file:
noise_index	libavcodec/wmadec.c	/^    int noise_index;$/;"	m	struct:WMADecodeContext	file:
noise_mult	libavcodec/wmadec.c	/^    float noise_mult; \/* XXX: suppress that and integrate it in the noise array *\/$/;"	m	struct:WMADecodeContext	file:
noise_reduction	ffmpeg.c	/^static int noise_reduction = 0;$/;"	v	file:
noise_reduction	libavcodec/avcodec.h	/^    int noise_reduction;$/;"	m	struct:AVCodecContext
noise_table	libavcodec/wmadec.c	/^    float noise_table[NOISE_TAB_SIZE];$/;"	m	struct:WMADecodeContext	file:
nonBQP	libavcodec/libpostproc/postprocess_internal.h	/^	int nonBQP;$/;"	m	struct:PPContext
nonBQPTable	libavcodec/libpostproc/postprocess_internal.h	/^	QP_STORE_T *nonBQPTable;$/;"	m	struct:PPContext
non_interleaved	libavformat/avidec.c	/^    int non_interleaved;$/;"	m	file:
non_linear_qscale	libavcodec/mpeg12data.h	/^static const uint8_t non_linear_qscale[32] = {$/;"	v
non_zero_count	libavcodec/h264.c	/^    uint8_t (*non_zero_count)[16];$/;"	m	struct:H264Context	file:
nsegs	libavformat/ogg2.h	/^    int nsegs, segp;$/;"	m	struct:ogg_stream
nsse	libavcodec/dsputil.h	/^    me_cmp_func nsse[5];$/;"	m	struct:DSPContext
nsse16_c	libavcodec/dsputil.c	/^static int nsse16_c(MpegEncContext *c, uint8_t *s1, uint8_t *s2, int stride, int h){$/;"	f	file:
nsse16_mmx	libavcodec/i386/dsputil_mmx.c	/^static int nsse16_mmx(MpegEncContext *c, uint8_t * pix1, uint8_t * pix2, int line_size, int h) {$/;"	f	file:
nsse8_c	libavcodec/dsputil.c	/^static int nsse8_c(MpegEncContext *c, uint8_t *s1, uint8_t *s2, int stride, int h){$/;"	f	file:
nsse8_mmx	libavcodec/i386/dsputil_mmx.c	/^static int nsse8_mmx(MpegEncContext *c, uint8_t * pix1, uint8_t * pix2, int line_size, int h) {$/;"	f	file:
nsse_weight	ffmpeg.c	/^static int nsse_weight = 8;$/;"	v	file:
nsse_weight	libavcodec/avcodec.h	/^     int nsse_weight;$/;"	m	struct:AVCodecContext
nstreams	libavformat/ogg2.h	/^    int nstreams;$/;"	m	struct:ogg
nsv_codec_audio_tags	libavformat/nsvdec.c	/^static const CodecTag nsv_codec_audio_tags[] = {$/;"	v	file:
nsv_codec_video_tags	libavformat/nsvdec.c	/^static const CodecTag nsv_codec_video_tags[] = {$/;"	v	file:
nsv_framerate_table	libavformat/nsvdec.c	/^static const AVRational nsv_framerate_table[] = {$/;"	v	file:
nsv_iformat	libavformat/nsvdec.c	/^static AVInputFormat nsv_iformat = {$/;"	v	file:
nsv_parse_NSVf_header	libavformat/nsvdec.c	/^static int nsv_parse_NSVf_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
nsv_parse_NSVs_header	libavformat/nsvdec.c	/^static int nsv_parse_NSVs_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
nsv_probe	libavformat/nsvdec.c	/^static int nsv_probe(AVProbeData *p)$/;"	f	file:
nsv_read_chunk	libavformat/nsvdec.c	/^static int nsv_read_chunk(AVFormatContext *s, int fill_header)$/;"	f	file:
nsv_read_close	libavformat/nsvdec.c	/^static int nsv_read_close(AVFormatContext *s)$/;"	f	file:
nsv_read_header	libavformat/nsvdec.c	/^static int nsv_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
nsv_read_packet	libavformat/nsvdec.c	/^static int nsv_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
nsv_read_seek	libavformat/nsvdec.c	/^static int nsv_read_seek(AVFormatContext *s, int stream_index, int64_t timestamp, int flags)$/;"	f	file:
nsv_resync	libavformat/nsvdec.c	/^static int nsv_resync(AVFormatContext *s)$/;"	f	file:
nsvdec_init	libavformat/nsvdec.c	/^int nsvdec_init(void)$/;"	f
nsvf_index_data	libavformat/nsvdec.c	/^    uint32_t *nsvf_index_data;$/;"	m	file:
nth_root	libavcodec/vorbis.c	/^static unsigned int nth_root(unsigned int x, unsigned int n) {   \/\/ x^(1\/n)$/;"	f	file:
null_oformat	libavformat/raw.c	/^AVOutputFormat null_oformat = {$/;"	v
null_read_packet	libavformat/mov.c	/^static int null_read_packet(void *opaque, uint8_t *buf, int buf_size)$/;"	f	file:
null_write_packet	libavformat/raw.c	/^static int null_write_packet(struct AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
num	libavcodec/rational.h	/^    int num; \/\/\/< numerator$/;"	m	struct:AVRational
num	libavformat/asf.h	/^    int num;$/;"	m
num	libavformat/avformat.h	/^    int64_t val, num, den; $/;"	m	struct:AVFrac
num	libavformat/matroska.c	/^    uint32_t num,$/;"	m	struct:Track	file:
num	libavformat/rm.c	/^    int num;$/;"	m	file:
numBytes	vhook/watermark.c	/^    int             numBytes;$/;"	m	file:
num_channels	libavformat/electronicarts.c	/^    int num_channels;$/;"	m	struct:EaDemuxContext	file:
num_entries	libavcodec/mpegvideo.h	/^    int num_entries;              \/\/\/< number of RateControlEntries $/;"	m	struct:RateControlContext
num_huff_nodes	libavcodec/idcinvideo.c	/^    int num_huff_nodes[256];$/;"	m	struct:IdcinContext	file:
num_indexes	libavformat/matroska.c	/^    int num_indexes;$/;"	m	struct:MatroskaDemuxContext	file:
num_levels	libavformat/matroska.c	/^    int num_levels;$/;"	m	struct:MatroskaDemuxContext	file:
num_packets	libavformat/matroska.c	/^    int num_packets;$/;"	m	struct:MatroskaDemuxContext	file:
num_reorder_frames	libavcodec/h264.c	/^    int num_reorder_frames;$/;"	m	struct:SPS	file:
num_samples	libavformat/electronicarts.c	/^    int num_samples;$/;"	m	struct:EaDemuxContext	file:
num_sprite_warping_points	libavcodec/mpegvideo.h	/^    int num_sprite_warping_points;$/;"	m	struct:MpegEncContext
num_streams	libavformat/matroska.c	/^    int num_tracks, num_streams;$/;"	m	struct:MatroskaDemuxContext	file:
num_taps	libavcodec/sonic.c	/^    int num_taps, downsampling;$/;"	m	struct:SonicContext	file:
num_tracks	libavformat/matroska.c	/^    int num_tracks, num_streams;$/;"	m	struct:MatroskaDemuxContext	file:
num_units_in_tick	libavcodec/h264.c	/^    uint32_t num_units_in_tick;$/;"	m	struct:SPS	file:
numchannels	libavcodec/alac.c	/^    int numchannels;$/;"	m	file:
numpanscanwin	libavcodec/vc9.c	/^    uint8_t numpanscanwin;$/;"	m	struct:VC9Context	file:
nut_iformat	libavformat/nut.c	/^static AVInputFormat nut_iformat = {$/;"	v	file:
nut_init	libavformat/nut.c	/^int nut_init(void)$/;"	f
nut_oformat	libavformat/nut.c	/^static AVOutputFormat nut_oformat = {$/;"	v	file:
nut_probe	libavformat/nut.c	/^static int nut_probe(AVProbeData *p)$/;"	f	file:
nut_read_close	libavformat/nut.c	/^static int nut_read_close(AVFormatContext *s)$/;"	f	file:
nut_read_header	libavformat/nut.c	/^static int nut_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
nut_read_packet	libavformat/nut.c	/^static int nut_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
nut_read_seek	libavformat/nut.c	/^static int nut_read_seek(AVFormatContext *s, int stream_index, int64_t target_ts, int flags){$/;"	f	file:
nut_read_timestamp	libavformat/nut.c	/^static int64_t nut_read_timestamp(AVFormatContext *s, int stream_index, int64_t *pos_arg, int64_t pos_limit){$/;"	f	file:
nut_write_header	libavformat/nut.c	/^static int nut_write_header(AVFormatContext *s)$/;"	f	file:
nut_write_packet	libavformat/nut.c	/^static int nut_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
nut_write_trailer	libavformat/nut.c	/^static int nut_write_trailer(AVFormatContext *s)$/;"	f	file:
nwrap	libavcodec/shorten.c	/^    int nwrap;$/;"	m	struct:ShortenContext	file:
object_type_id	libavformat/mov.c	/^    uint8_t  object_type_id;$/;"	m	file:
objecttype	libavformat/rtp.h	/^    int objecttype;$/;"	m	struct:rtp_payload_data_s
objs	tests/videogen.c	/^VObj objs[NB_OBJS];$/;"	v
obmc	libavcodec/mpegvideo.h	/^    int obmc;                       \/\/\/< overlapped block motion compensation$/;"	m	struct:MpegEncContext
obmc16	libavcodec/snow.c	/^static const uint8_t obmc16[256]={$/;"	v	file:
obmc32	libavcodec/snow.c	/^static const uint8_t obmc32[1024]={$/;"	v	file:
obmc4	libavcodec/snow.c	/^static const uint8_t obmc4[16]={$/;"	v	file:
obmc8	libavcodec/snow.c	/^static const uint8_t obmc8[64]={$/;"	v	file:
obmc_motion	libavcodec/mpegvideo.c	/^static inline void obmc_motion(MpegEncContext *s,$/;"	f	file:
obmc_scratchpad	libavcodec/mpegvideo.h	/^    uint8_t *obmc_scratchpad;$/;"	m	struct:MpegEncContext
obmc_tab	libavcodec/snow.c	/^static const uint8_t *obmc_tab[4]={$/;"	v	file:
oc	libavformat/gifdec.c	/^    int fc, oc;$/;"	m	struct:GifState	file:
octet_count	libavformat/rtp.c	/^    unsigned int octet_count;$/;"	m	struct:RTPDemuxContext	file:
odd_table	libavcodec/sh4/idct_sh4.c	/^const	static float odd_table[] __attribute__ ((aligned(8))) = {$/;"	v	file:
odml_list	libavformat/avienc.c	/^    offset_t riff_start, movi_list, odml_list;$/;"	m	file:
offMASK_MSHW	libavcodec/armv4l/simple_idct_arm.S	/^#define offMASK_MSHW 28$/;"	d
offW1	libavcodec/armv4l/simple_idct_arm.S	/^#define offW1  0$/;"	d
offW2	libavcodec/armv4l/simple_idct_arm.S	/^#define offW2  4$/;"	d
offW3	libavcodec/armv4l/simple_idct_arm.S	/^#define offW3  8$/;"	d
offW4	libavcodec/armv4l/simple_idct_arm.S	/^#define offW4  12$/;"	d
offW5	libavcodec/armv4l/simple_idct_arm.S	/^#define offW5  16$/;"	d
offW6	libavcodec/armv4l/simple_idct_arm.S	/^#define offW6  20$/;"	d
offW7	libavcodec/armv4l/simple_idct_arm.S	/^#define offW7  24$/;"	d
offset	libavcodec/avcodec.h	/^    int offset;$/;"	m	struct:AVOption
offset	libavcodec/cljr.c	/^    int offset[4];$/;"	m	struct:CLJRContext	file:
offset	libavcodec/shorten.c	/^    int32_t *offset[MAX_CHANNELS];$/;"	m	struct:ShortenContext	file:
offset	libavcodec/vcr1.c	/^    int offset[4];$/;"	m	struct:VCR1Context	file:
offset	libavformat/mov.c	/^    int64_t offset;$/;"	m	file:
offset	libavformat/rtsp.c	/^    uint32_t offset;$/;"	m	struct:attrname_map	file:
offset_for_non_ref_pic	libavcodec/h264.c	/^    int offset_for_non_ref_pic;$/;"	m	struct:SPS	file:
offset_for_ref_frame	libavcodec/h264.c	/^    short offset_for_ref_frame[256]; \/\/FIXME dyn aloc?$/;"	m	struct:SPS	file:
offset_for_top_to_bottom_field	libavcodec/h264.c	/^    int offset_for_top_to_bottom_field;$/;"	m	struct:SPS	file:
offset_t	libavformat/avio.h	/^typedef int64_t offset_t;$/;"	t
offsetof	libavcodec/common.h	39;"	d
oformat	libavformat/avformat.h	/^    struct AVOutputFormat *oformat;$/;"	m	struct:AVFormatContext
ogg	libavformat/ogg2.h	/^typedef struct ogg {$/;"	s
ogg_codec	libavformat/ogg2.h	/^typedef struct ogg_codec {$/;"	s
ogg_codec_t	libavformat/ogg2.h	/^} ogg_codec_t;$/;"	t
ogg_codecs	libavformat/ogg2.c	/^static ogg_codec_t *ogg_codecs[] = {$/;"	v	file:
ogg_find_codec	libavformat/ogg2.c	/^ogg_find_codec (uint8_t * buf, int size)$/;"	f	file:
ogg_find_stream	libavformat/ogg2.c	/^ogg_find_stream (ogg_t * ogg, int serial)$/;"	f	file:
ogg_get_headers	libavformat/ogg2.c	/^ogg_get_headers (AVFormatContext * s)$/;"	f	file:
ogg_get_length	libavformat/ogg2.c	/^ogg_get_length (AVFormatContext * s)$/;"	f	file:
ogg_gptopts	libavformat/ogg2.c	/^ogg_gptopts (AVFormatContext * s, int i, uint64_t gp)$/;"	f	file:
ogg_iformat	libavformat/ogg2.c	/^static AVInputFormat ogg_iformat = {$/;"	v	file:
ogg_init	libavformat/ogg2.c	/^ogg_init (void)$/;"	f
ogg_new_stream	libavformat/ogg2.c	/^ogg_new_stream (AVFormatContext * s, uint32_t serial)$/;"	f	file:
ogg_oformat	libavformat/ogg.c	/^static AVOutputFormat ogg_oformat = {$/;"	v	file:
ogg_packet	libavformat/ogg2.c	/^ogg_packet (AVFormatContext * s, int *str)$/;"	f	file:
ogg_read_close	libavformat/ogg2.c	/^ogg_read_close (AVFormatContext * s)$/;"	f	file:
ogg_read_header	libavformat/ogg2.c	/^ogg_read_header (AVFormatContext * s, AVFormatParameters * ap)$/;"	f	file:
ogg_read_packet	libavformat/ogg2.c	/^ogg_read_packet (AVFormatContext * s, AVPacket * pkt)$/;"	f	file:
ogg_read_page	libavformat/ogg2.c	/^ogg_read_page (AVFormatContext * s, int *str)$/;"	f	file:
ogg_read_seek	libavformat/ogg2.c	/^ogg_read_seek (AVFormatContext * s, int stream_index, int64_t target_ts,$/;"	f	file:
ogg_reset	libavformat/ogg2.c	/^ogg_reset (ogg_t * ogg)$/;"	f	file:
ogg_restore	libavformat/ogg2.c	/^ogg_restore (AVFormatContext * s, int discard)$/;"	f	file:
ogg_save	libavformat/ogg2.c	/^ogg_save (AVFormatContext * s)$/;"	f	file:
ogg_state	libavformat/ogg2.h	/^typedef struct ogg_state {$/;"	s
ogg_state_t	libavformat/ogg2.h	/^} ogg_state_t;$/;"	t
ogg_stream	libavformat/ogg2.h	/^typedef struct ogg_stream {$/;"	s
ogg_stream_t	libavformat/ogg2.h	/^} ogg_stream_t;$/;"	t
ogg_t	libavformat/ogg2.h	/^} ogg_t;$/;"	t
ogg_write_header	libavformat/ogg.c	/^static int ogg_write_header(AVFormatContext *avfcontext) $/;"	f	file:
ogg_write_packet	libavformat/ogg.c	/^static int ogg_write_packet(AVFormatContext *avfcontext, AVPacket *pkt)$/;"	f	file:
ogg_write_trailer	libavformat/ogg.c	/^static int ogg_write_trailer(AVFormatContext *avfcontext) {$/;"	f	file:
oggtheora_decoder	libavcodec/oggtheora.c	/^AVCodec oggtheora_decoder = {$/;"	v
oggvorbis_decode_close	libavcodec/oggvorbis.c	/^static int oggvorbis_decode_close(AVCodecContext *avccontext) {$/;"	f	file:
oggvorbis_decode_frame	libavcodec/oggvorbis.c	/^static int oggvorbis_decode_frame(AVCodecContext *avccontext,$/;"	f	file:
oggvorbis_decode_init	libavcodec/oggvorbis.c	/^static int oggvorbis_decode_init(AVCodecContext *avccontext) {$/;"	f	file:
oggvorbis_decoder	libavcodec/oggvorbis.c	/^AVCodec oggvorbis_decoder = {$/;"	v
oggvorbis_encode_close	libavcodec/oggvorbis.c	/^static int oggvorbis_encode_close(AVCodecContext *avccontext) {$/;"	f	file:
oggvorbis_encode_frame	libavcodec/oggvorbis.c	/^static int oggvorbis_encode_frame(AVCodecContext *avccontext,$/;"	f	file:
oggvorbis_encode_init	libavcodec/oggvorbis.c	/^static int oggvorbis_encode_init(AVCodecContext *avccontext) {$/;"	f	file:
oggvorbis_encoder	libavcodec/oggvorbis.c	/^AVCodec oggvorbis_encoder = {$/;"	v
oggvorbis_init_encoder	libavcodec/oggvorbis.c	/^static int oggvorbis_init_encoder(vorbis_info *vi, AVCodecContext *avccontext) {$/;"	f	file:
oggvorbis_private_t	libavformat/oggparsevorbis.c	/^} oggvorbis_private_t;$/;"	t	file:
oheight	libavcodec/imgresample.c	/^    int iwidth, iheight, owidth, oheight;$/;"	m	struct:ImgReSampleContext	file:
old_ff_c_dc_scale_table	libavcodec/msmpeg4data.h	/^static uint8_t old_ff_c_dc_scale_table[32]={$/;"	v
old_ff_y_dc_scale_table	libavcodec/msmpeg4data.h	/^static uint8_t old_ff_y_dc_scale_table[32]={$/;"	v
old_format	libavformat/rm.c	/^    int old_format;$/;"	m	file:
old_frame_size	libavcodec/mpegaudiodec.c	/^    int old_frame_size;$/;"	m	struct:MPADecodeContext	file:
old_twopassbuffer	libavcodec/xvidff.c	/^    char *old_twopassbuffer;       \/** Old character buffer (two-pass) *\/$/;"	m	struct:xvid_context	file:
oldtty	ffmpeg.c	/^static struct termios oldtty;$/;"	v	file:
oldval	libavcodec/ra144.c	/^	unsigned int	 resetflag, val, oldval;$/;"	m	file:
one_state	libavcodec/rangecoder.h	/^    uint8_t  one_state[256];$/;"	m	struct:RangeCoder
onid	libavformat/mpegtsenc.c	/^    int onid;$/;"	m	struct:MpegTSWrite	file:
op	libavcodec/oggtheora.c	/^    ogg_packet op;$/;"	m	struct:TheoraContext	file:
op	libavcodec/oggvorbis.c	/^    ogg_packet op;$/;"	m	struct:OggVorbisContext	file:
op	libavformat/ogg.c	/^    ogg_packet op;$/;"	m	struct:OggContext	file:
op2_avg	libavcodec/dsputil.c	2365;"	d	file:
op2_avg	libavcodec/dsputil.c	2379;"	d	file:
op2_avg	libavcodec/sh4/qpel.c	1525;"	d	file:
op2_avg	libavcodec/sh4/qpel.c	1539;"	d	file:
op2_put	libavcodec/dsputil.c	2366;"	d	file:
op2_put	libavcodec/dsputil.c	2380;"	d	file:
op2_put	libavcodec/sh4/qpel.c	1526;"	d	file:
op2_put	libavcodec/sh4/qpel.c	1540;"	d	file:
op_avg	libavcodec/dsputil.c	1072;"	d	file:
op_avg	libavcodec/dsputil.c	1078;"	d	file:
op_avg	libavcodec/dsputil.c	1451;"	d	file:
op_avg	libavcodec/dsputil.c	1456;"	d	file:
op_avg	libavcodec/dsputil.c	2008;"	d	file:
op_avg	libavcodec/dsputil.c	2017;"	d	file:
op_avg	libavcodec/dsputil.c	2362;"	d	file:
op_avg	libavcodec/dsputil.c	2377;"	d	file:
op_avg	libavcodec/dsputil.c	703;"	d	file:
op_avg	libavcodec/ppc/dsputil_altivec.c	728;"	d	file:
op_avg	libavcodec/sh4/qpel.c	1126;"	d	file:
op_avg	libavcodec/sh4/qpel.c	1135;"	d	file:
op_avg	libavcodec/sh4/qpel.c	1522;"	d	file:
op_avg	libavcodec/sh4/qpel.c	1537;"	d	file:
op_avg	libavcodec/sh4/qpel.c	356;"	d	file:
op_avg	libavcodec/sh4/qpel.c	361;"	d	file:
op_avg	libavcodec/sh4/qpel.c	541;"	d	file:
op_avg	libavcodec/sh4/qpel.c	546;"	d	file:
op_avg_no_rnd	libavcodec/dsputil.c	2009;"	d	file:
op_avg_no_rnd	libavcodec/dsputil.c	2018;"	d	file:
op_avg_no_rnd	libavcodec/sh4/qpel.c	1127;"	d	file:
op_avg_no_rnd	libavcodec/sh4/qpel.c	1136;"	d	file:
op_pixels_func	libavcodec/dsputil.h	/^typedef void (*op_pixels_func)(uint8_t *block\/*align width (8 or 16)*\/, const uint8_t *pixels\/*align 1*\/, int line_size, int h);$/;"	t
op_put	libavcodec/dsputil.c	1074;"	d	file:
op_put	libavcodec/dsputil.c	1079;"	d	file:
op_put	libavcodec/dsputil.c	1452;"	d	file:
op_put	libavcodec/dsputil.c	1457;"	d	file:
op_put	libavcodec/dsputil.c	2010;"	d	file:
op_put	libavcodec/dsputil.c	2019;"	d	file:
op_put	libavcodec/dsputil.c	2364;"	d	file:
op_put	libavcodec/dsputil.c	2378;"	d	file:
op_put	libavcodec/sh4/qpel.c	1128;"	d	file:
op_put	libavcodec/sh4/qpel.c	1137;"	d	file:
op_put	libavcodec/sh4/qpel.c	1524;"	d	file:
op_put	libavcodec/sh4/qpel.c	1538;"	d	file:
op_put	libavcodec/sh4/qpel.c	357;"	d	file:
op_put	libavcodec/sh4/qpel.c	362;"	d	file:
op_put	libavcodec/sh4/qpel.c	542;"	d	file:
op_put	libavcodec/sh4/qpel.c	547;"	d	file:
op_put_no_rnd	libavcodec/dsputil.c	2011;"	d	file:
op_put_no_rnd	libavcodec/dsputil.c	2020;"	d	file:
op_put_no_rnd	libavcodec/sh4/qpel.c	1129;"	d	file:
op_put_no_rnd	libavcodec/sh4/qpel.c	1138;"	d	file:
op_scale1	libavcodec/dsputil.c	2383;"	d	file:
op_scale1	libavcodec/dsputil.c	2450;"	d	file:
op_scale2	libavcodec/dsputil.c	2384;"	d	file:
op_scale2	libavcodec/dsputil.c	2451;"	d	file:
opaque	libavcodec/avcodec.h	/^    void *opaque;$/;"	m	struct:AVCodecContext
opaque	libavcodec/eval.c	/^    void *opaque;$/;"	m	struct:Parser	file:
opaque	libavcodec/mpegvideo.h	/^    void *opaque;              \/\/\/< private data for the user$/;"	m	struct:MpegEncContext
opaque	libavformat/avio.h	/^    void *opaque;$/;"	m
opaque	libavformat/jpeg.c	/^    void *opaque;$/;"	m	struct:JpegOpaque	file:
opaque	libavformat/mpegts.c	/^    void *opaque;$/;"	m	struct:MpegTSPESFilter	file:
opaque	libavformat/mpegts.c	/^    void *opaque;$/;"	m	struct:MpegTSSectionFilter	file:
opaque	libavformat/mpegtsenc.c	/^    void *opaque;$/;"	m	struct:MpegTSSection	file:
opcode	libavcodec/h264.c	/^    MMCOOpcode opcode;$/;"	m	struct:MMCO	file:
open	libavformat/file.c	27;"	d	file:
open_audio	output_example.c	/^void open_audio(AVFormatContext *oc, AVStream *st)$/;"	f
open_input_stream	ffserver.c	/^static int open_input_stream(HTTPContext *c, const char *info)$/;"	f	file:
open_parser	ffserver.c	/^static void open_parser(AVFormatContext *s, int i)$/;"	f	file:
open_video	output_example.c	/^void open_video(AVFormatContext *oc, AVStream *st)$/;"	f
opt_audio_bitrate	ffmpeg.c	/^static void opt_audio_bitrate(const char *arg)$/;"	f	file:
opt_audio_channels	ffmpeg.c	/^static void opt_audio_channels(const char *arg)$/;"	f	file:
opt_audio_codec	ffmpeg.c	/^static void opt_audio_codec(const char *arg)$/;"	f	file:
opt_audio_codec	ffserver.c	/^static int opt_audio_codec(const char *arg)$/;"	f	file:
opt_audio_device	ffmpeg.c	/^static void opt_audio_device(const char *arg)$/;"	f	file:
opt_audio_rate	ffmpeg.c	/^static void opt_audio_rate(const char *arg)$/;"	f	file:
opt_audio_tag	ffmpeg.c	/^static void opt_audio_tag(const char *arg)$/;"	f	file:
opt_b_frames	ffmpeg.c	/^static void opt_b_frames(const char *arg)$/;"	f	file:
opt_b_qfactor	ffmpeg.c	/^static void opt_b_qfactor(const char *arg)$/;"	f	file:
opt_b_qoffset	ffmpeg.c	/^static void opt_b_qoffset(const char *arg)$/;"	f	file:
opt_bitexact	ffmpeg.c	/^static void opt_bitexact(void)$/;"	f	file:
opt_celim	ffmpeg.c	/^static void opt_celim(const char *arg)$/;"	f	file:
opt_cmp	ffmpeg.c	/^static void opt_cmp(const char *arg)$/;"	f	file:
opt_dark_mask	ffmpeg.c	/^static void opt_dark_mask(const char *arg)$/;"	f	file:
opt_dct_algo	ffmpeg.c	/^static void opt_dct_algo(const char *arg)$/;"	f	file:
opt_debug	ffmpeg.c	/^static void opt_debug(const char *arg)$/;"	f	file:
opt_debug	ffplay.c	/^static void opt_debug(const char *arg)$/;"	f	file:
opt_error_concealment	ffmpeg.c	/^static void opt_error_concealment(const char *arg)$/;"	f	file:
opt_error_rate	ffmpeg.c	/^static void opt_error_rate(const char *arg)$/;"	f	file:
opt_error_resilience	ffmpeg.c	/^static void opt_error_resilience(const char *arg)$/;"	f	file:
opt_format	ffmpeg.c	/^static void opt_format(const char *arg)$/;"	f	file:
opt_format	ffplay.c	/^static void opt_format(const char *arg)$/;"	f	file:
opt_frame_aspect_ratio	ffmpeg.c	/^static void opt_frame_aspect_ratio(const char *arg)$/;"	f	file:
opt_frame_crop_bottom	ffmpeg.c	/^static void opt_frame_crop_bottom(const char *arg)$/;"	f	file:
opt_frame_crop_left	ffmpeg.c	/^static void opt_frame_crop_left(const char *arg)$/;"	f	file:
opt_frame_crop_right	ffmpeg.c	/^static void opt_frame_crop_right(const char *arg)$/;"	f	file:
opt_frame_crop_top	ffmpeg.c	/^static void opt_frame_crop_top(const char *arg)$/;"	f	file:
opt_frame_pad_bottom	ffmpeg.c	/^static void opt_frame_pad_bottom(const char *arg)$/;"	f	file:
opt_frame_pad_left	ffmpeg.c	/^static void opt_frame_pad_left(const char *arg)$/;"	f	file:
opt_frame_pad_right	ffmpeg.c	/^static void opt_frame_pad_right(const char *arg)$/;"	f	file:
opt_frame_pad_top	ffmpeg.c	/^static void opt_frame_pad_top(const char *arg)$/;"	f	file:
opt_frame_pix_fmt	ffmpeg.c	/^static void opt_frame_pix_fmt(const char *arg)$/;"	f	file:
opt_frame_rate	ffmpeg.c	/^static void opt_frame_rate(const char *arg)$/;"	f	file:
opt_frame_size	ffmpeg.c	/^static void opt_frame_size(const char *arg)$/;"	f	file:
opt_gop_size	ffmpeg.c	/^static void opt_gop_size(const char *arg)$/;"	f	file:
opt_grab	ffmpeg.c	/^static void opt_grab(const char *arg)$/;"	f	file:
opt_grab_device	ffmpeg.c	/^static void opt_grab_device(const char *arg)$/;"	f	file:
opt_height	ffplay.c	/^void opt_height(const char *arg)$/;"	f
opt_i_qfactor	ffmpeg.c	/^static void opt_i_qfactor(const char *arg)$/;"	f	file:
opt_i_qoffset	ffmpeg.c	/^static void opt_i_qoffset(const char *arg)$/;"	f	file:
opt_ibias	ffmpeg.c	/^static void opt_ibias(const char *arg)$/;"	f	file:
opt_idct_algo	ffmpeg.c	/^static void opt_idct_algo(const char *arg)$/;"	f	file:
opt_ildct_cmp	ffmpeg.c	/^static void opt_ildct_cmp(const char *arg)$/;"	f	file:
opt_image_format	ffmpeg.c	/^static void opt_image_format(const char *arg)$/;"	f	file:
opt_image_format	ffplay.c	/^static void opt_image_format(const char *arg)$/;"	f	file:
opt_input_file	ffmpeg.c	/^static void opt_input_file(const char *filename)$/;"	f	file:
opt_input_ts_offset	ffmpeg.c	/^static void opt_input_ts_offset(const char *arg)$/;"	f	file:
opt_inter_matrix	ffmpeg.c	/^void opt_inter_matrix(const char *arg)$/;"	f
opt_intra_matrix	ffmpeg.c	/^void opt_intra_matrix(const char *arg)$/;"	f
opt_lelim	ffmpeg.c	/^static void opt_lelim(const char *arg)$/;"	f	file:
opt_lmax	ffmpeg.c	/^static void opt_lmax(const char *arg)$/;"	f	file:
opt_lmin	ffmpeg.c	/^static void opt_lmin(const char *arg)$/;"	f	file:
opt_lumi_mask	ffmpeg.c	/^static void opt_lumi_mask(const char *arg)$/;"	f	file:
opt_map	ffmpeg.c	/^static void opt_map(const char *arg)$/;"	f	file:
opt_map_meta_data	ffmpeg.c	/^static void opt_map_meta_data(const char *arg)$/;"	f	file:
opt_mb_cmp	ffmpeg.c	/^static void opt_mb_cmp(const char *arg)$/;"	f	file:
opt_mb_decision	ffmpeg.c	/^static void opt_mb_decision(const char *arg)$/;"	f	file:
opt_mb_lmax	ffmpeg.c	/^static void opt_mb_lmax(const char *arg)$/;"	f	file:
opt_mb_lmin	ffmpeg.c	/^static void opt_mb_lmin(const char *arg)$/;"	f	file:
opt_mb_threshold	ffmpeg.c	/^static void opt_mb_threshold(const char *arg)$/;"	f	file:
opt_me_range	ffmpeg.c	/^static void opt_me_range(const char *arg)$/;"	f	file:
opt_me_threshold	ffmpeg.c	/^static void opt_me_threshold(const char *arg)$/;"	f	file:
opt_motion_estimation	ffmpeg.c	/^static void opt_motion_estimation(const char *arg)$/;"	f	file:
opt_noise_reduction	ffmpeg.c	/^static void opt_noise_reduction(const char *arg)$/;"	f	file:
opt_output_file	ffmpeg.c	/^static void opt_output_file(const char *filename)$/;"	f	file:
opt_p_mask	ffmpeg.c	/^static void opt_p_mask(const char *arg)$/;"	f	file:
opt_packet_size	ffmpeg.c	/^static void opt_packet_size(const char *arg)$/;"	f	file:
opt_pad_color	ffmpeg.c	/^static void opt_pad_color(const char *arg) {$/;"	f	file:
opt_pass	ffmpeg.c	/^static void opt_pass(const char *pass_str)$/;"	f	file:
opt_pbias	ffmpeg.c	/^static void opt_pbias(const char *arg)$/;"	f	file:
opt_pre_cmp	ffmpeg.c	/^static void opt_pre_cmp(const char *arg)$/;"	f	file:
opt_pre_me	ffmpeg.c	/^static void opt_pre_me(const char *arg)$/;"	f	file:
opt_qblur	ffmpeg.c	/^static void opt_qblur(const char *arg)$/;"	f	file:
opt_qcomp	ffmpeg.c	/^static void opt_qcomp(const char *arg)$/;"	f	file:
opt_qdiff	ffmpeg.c	/^static void opt_qdiff(const char *arg)$/;"	f	file:
opt_qmax	ffmpeg.c	/^static void opt_qmax(const char *arg)$/;"	f	file:
opt_qmin	ffmpeg.c	/^static void opt_qmin(const char *arg)$/;"	f	file:
opt_qns	ffmpeg.c	/^static void opt_qns(const char *arg)$/;"	f	file:
opt_qscale	ffmpeg.c	/^static void opt_qscale(const char *arg)$/;"	f	file:
opt_qsquish	ffmpeg.c	/^static void opt_qsquish(const char *arg)$/;"	f	file:
opt_rc_initial_cplx	ffmpeg.c	/^static void opt_rc_initial_cplx(const char *arg)$/;"	f	file:
opt_rec_timestamp	ffmpeg.c	/^static void opt_rec_timestamp(const char *arg)$/;"	f	file:
opt_recording_time	ffmpeg.c	/^static void opt_recording_time(const char *arg)$/;"	f	file:
opt_rtp_tcp	ffplay.c	/^void opt_rtp_tcp(void)$/;"	f
opt_sc_threshold	ffmpeg.c	/^static void opt_sc_threshold(const char *arg)$/;"	f	file:
opt_scplx_mask	ffmpeg.c	/^static void opt_scplx_mask(const char *arg)$/;"	f	file:
opt_seek	ffplay.c	/^void opt_seek(const char *arg)$/;"	f
opt_shortest	ffmpeg.c	/^static int opt_shortest = 0; \/\/$/;"	v	file:
opt_start_time	ffmpeg.c	/^static void opt_start_time(const char *arg)$/;"	f	file:
opt_strict	ffmpeg.c	/^static void opt_strict(const char *arg)$/;"	f	file:
opt_sub_cmp	ffmpeg.c	/^static void opt_sub_cmp(const char *arg)$/;"	f	file:
opt_sync	ffplay.c	/^void opt_sync(const char *arg)$/;"	f
opt_target	ffmpeg.c	/^static void opt_target(const char *arg)$/;"	f	file:
opt_tcplx_mask	ffmpeg.c	/^static void opt_tcplx_mask(const char *arg)$/;"	f	file:
opt_thread_count	ffmpeg.c	/^static void opt_thread_count(const char *arg)$/;"	f	file:
opt_thread_count	ffplay.c	/^static void opt_thread_count(const char *arg)$/;"	f	file:
opt_top_field_first	ffmpeg.c	/^static void opt_top_field_first(const char *arg)$/;"	f	file:
opt_verbose	ffmpeg.c	/^static void opt_verbose(const char *arg)$/;"	f	file:
opt_video_bitrate	ffmpeg.c	/^static void opt_video_bitrate(const char *arg)$/;"	f	file:
opt_video_bitrate_max	ffmpeg.c	/^static void opt_video_bitrate_max(const char *arg)$/;"	f	file:
opt_video_bitrate_min	ffmpeg.c	/^static void opt_video_bitrate_min(const char *arg)$/;"	f	file:
opt_video_bitrate_tolerance	ffmpeg.c	/^static void opt_video_bitrate_tolerance(const char *arg)$/;"	f	file:
opt_video_buffer_size	ffmpeg.c	/^static void opt_video_buffer_size(const char *arg)$/;"	f	file:
opt_video_channel	ffmpeg.c	/^static void opt_video_channel(const char *arg)$/;"	f	file:
opt_video_codec	ffmpeg.c	/^static void opt_video_codec(const char *arg)$/;"	f	file:
opt_video_codec	ffserver.c	/^static int opt_video_codec(const char *arg)$/;"	f	file:
opt_video_device	ffmpeg.c	/^static void opt_video_device(const char *arg)$/;"	f	file:
opt_video_rc_eq	ffmpeg.c	/^static void opt_video_rc_eq(char *arg)$/;"	f	file:
opt_video_rc_override_string	ffmpeg.c	/^static void opt_video_rc_override_string(char *arg)$/;"	f	file:
opt_video_standard	ffmpeg.c	/^static void opt_video_standard(const char *arg)$/;"	f	file:
opt_video_tag	ffmpeg.c	/^static void opt_video_tag(const char *arg)$/;"	f	file:
opt_vismv	ffmpeg.c	/^static void opt_vismv(const char *arg)$/;"	f	file:
opt_vismv	ffplay.c	/^static void opt_vismv(const char *arg)$/;"	f	file:
opt_width	ffplay.c	/^void opt_width(const char *arg)$/;"	f
opt_workaround_bugs	ffmpeg.c	/^static void opt_workaround_bugs(const char *arg)$/;"	f	file:
options	ffmpeg.c	/^const OptionDef options[] = {$/;"	v
options	ffplay.c	/^const OptionDef options[] = {$/;"	v
org_height	libavcodec/mjpeg.c	/^    int org_height;  \/* size given at codec init *\/$/;"	m	struct:MJpegDecodeContext	file:
os	libavformat/ogg.c	/^    ogg_stream_state os ;$/;"	m	struct:OggContext	file:
outPtr	libavcodec/mace.c	/^  short *outPtr;$/;"	m	struct:MACEContext	file:
out_file	ffmpeg.c	/^    int out_file;$/;"	m	struct:AVMetaDataMap	file:
out_format	libavcodec/mpegvideo.h	/^    enum OutputFormat out_format; \/\/\/< output format $/;"	m	struct:MpegEncContext
out_pic	libavcodec/x264.c	/^    AVFrame out_pic;$/;"	m	struct:X264Context	file:
outfile	tests/audiogen.c	/^FILE *outfile;$/;"	v
outline	vhook/drawtext.c	/^  int outline;$/;"	m	file:
output	libavcodec/liba52/a52_internal.h	/^    int output;			\/* type of output *\/$/;"	m	struct:a52_state_s
output	libavcodec/ra288.c	/^	float	output[40];$/;"	m	file:
output_audio_block	libavcodec/ac3enc.c	/^static void output_audio_block(AC3EncodeContext *s,$/;"	f	file:
output_buffer	libavcodec/ra144.c	/^	signed   short	 output_buffer[40];$/;"	m	file:
output_channels	libavcodec/resample.c	/^    int input_channels, output_channels, filter_channels;$/;"	m	struct:ReSampleContext	file:
output_files	ffmpeg.c	/^static AVFormatContext *output_files[MAX_FILES];$/;"	v	file:
output_frame_end	libavcodec/ac3enc.c	/^static int output_frame_end(AC3EncodeContext *s)$/;"	f	file:
output_frame_header	libavcodec/ac3enc.c	/^static void output_frame_header(AC3EncodeContext *s, unsigned char *frame)$/;"	f	file:
output_index	libavformat/beosaudio.cpp	/^    int output_index;$/;"	m	file:
output_packet	ffmpeg.c	/^static int output_packet(AVInputStream *ist, int ist_index,$/;"	f	file:
output_packet	libavformat/mpeg.c	/^static int output_packet(AVFormatContext *ctx, int flush){$/;"	f	file:
output_picture2	ffplay.c	/^static int output_picture2(VideoState *is, AVFrame *src_frame, double pts1)$/;"	f	file:
output_sem	libavformat/beosaudio.cpp	/^    sem_id output_sem;$/;"	m	file:
outputsamples_buffer_a	libavcodec/alac.c	/^    int32_t *outputsamples_buffer_a;$/;"	m	file:
outputsamples_buffer_b	libavcodec/alac.c	/^    int32_t *outputsamples_buffer_b;$/;"	m	file:
outstanding_byte	libavcodec/rangecoder.h	/^    int outstanding_byte;$/;"	m	struct:RangeCoder
outstanding_count	libavcodec/cabac.h	/^    int outstanding_count;$/;"	m	struct:CABACContext
outstanding_count	libavcodec/rangecoder.h	/^    int outstanding_count;$/;"	m	struct:RangeCoder
over_flags_plane	libavcodec/vc9.c	/^    BitPlane over_flags_plane;    \/\/\/< Overflags bitplane$/;"	m	struct:VC9Context	file:
overlap	libavcodec/vc9.c	/^    int overlap;          \/\/\/< overlapped transforms in use$/;"	m	struct:VC9Context	file:
overread	libavcodec/mpegvideo.h	/^    int overread;               \/\/\/< the number of bytes which where irreversibly read from the next frame$/;"	m	struct:ParseContext
overread_index	libavcodec/mpegvideo.h	/^    int overread_index;         \/\/\/< the index into ParseContext.buffer of the overreaded bytes$/;"	m	struct:ParseContext
owidth	libavcodec/imgresample.c	/^    int iwidth, iheight, owidth, oheight;$/;"	m	struct:ImgReSampleContext	file:
own_BApp_created	libavformat/beosaudio.cpp	/^static int own_BApp_created = 0;$/;"	v	file:
oy	libavformat/ogg.c	/^    ogg_sync_state oy ;$/;"	m	struct:OggContext	file:
p	libavcodec/raw.c	/^    unsigned char * p;       \/* current position in buffer *\/$/;"	m	struct:RawVideoContext	file:
p1p1m1m1	libavcodec/i386/fft_sse.c	/^static const float p1p1m1m1[4] __attribute__((aligned(16))) = $/;"	v	file:
p1p1m1p1	libavcodec/i386/fft_sse.c	/^static const float p1p1m1p1[4] __attribute__((aligned(16))) = $/;"	v	file:
p1p1p1m1	libavcodec/i386/fft_sse.c	/^static const float p1p1p1m1[4] __attribute__((aligned(16))) = $/;"	v	file:
pCodec	vhook/watermark.c	/^    AVCodec        *pCodec;    $/;"	m	file:
pCodecCtx	vhook/watermark.c	/^    AVCodecContext *pCodecCtx;    $/;"	m	file:
pFormatCtx	vhook/watermark.c	/^    AVFormatContext *pFormatCtx;$/;"	m	file:
pFrame	vhook/watermark.c	/^    AVFrame        *pFrame;$/;"	m	file:
pFrameRGB	vhook/watermark.c	/^    AVFrame        *pFrameRGB;$/;"	m	file:
pIQT_TAG	libavformat/electronicarts.c	30;"	d	file:
pQPb	libavcodec/libpostproc/postprocess_internal.h	/^	uint64_t __attribute__((aligned(8))) pQPb;$/;"	m	struct:PPContext
pQPb2	libavcodec/libpostproc/postprocess_internal.h	/^	uint64_t __attribute__((aligned(8))) pQPb2;$/;"	m	struct:PPContext
p_count	libavcodec/avcodec.h	/^    int p_count;$/;"	m	struct:AVCodecContext
p_cplx_sum	libavcodec/mpegvideo.h	/^    uint64_t p_cplx_sum[5];$/;"	m	struct:RateControlContext
p_ext	vhook/watermark.c	/^    const char     *p_ext;$/;"	m	file:
p_field_mv_table	libavcodec/mpegvideo.h	/^    int16_t (*p_field_mv_table[2][2])[2];   \/\/\/< MV table (2MV per MB) interlaced p-frame encoding$/;"	m	struct:MpegEncContext
p_field_mv_table_base	libavcodec/mpegvideo.h	/^    int16_t (*p_field_mv_table_base[2][2])[2];$/;"	m	struct:MpegEncContext
p_field_select_table	libavcodec/mpegvideo.h	/^    uint8_t (*p_field_select_table[2]);$/;"	m	struct:MpegEncContext
p_future_surface	xvmc_render.h	/^  XvMCSurface* p_future_surface;\/\/pointer to  the future prediction surface$/;"	m
p_mask	ffmpeg.c	/^static float p_mask = 0;$/;"	v	file:
p_masking	libavcodec/avcodec.h	/^    float p_masking;$/;"	m	struct:AVCodecContext
p_mb_type_info	libavcodec/h264data.h	/^static const PMbInfo p_mb_type_info[5]={$/;"	v
p_mv_table	libavcodec/mpegvideo.h	/^    int16_t (*p_mv_table)[2];            \/\/\/< MV table (1MV per MB) p-frame encoding $/;"	m	struct:MpegEncContext
p_mv_table_base	libavcodec/mpegvideo.h	/^    int16_t (*p_mv_table_base)[2];$/;"	m	struct:MpegEncContext
p_past_surface	xvmc_render.h	/^  XvMCSurface* p_past_surface;\/\/pointer to the past surface$/;"	m
p_sub_mb_type_info	libavcodec/h264data.h	/^static const PMbInfo p_sub_mb_type_info[4]={$/;"	v
p_surface	xvmc_render.h	/^  XvMCSurface* p_surface;\/\/pointer to rendered surface, never changed$/;"	m
p_tex_bits	libavcodec/avcodec.h	/^    int p_tex_bits;$/;"	m	struct:AVCodecContext
p_tex_bits	libavcodec/mpegvideo.h	/^    int p_tex_bits;$/;"	m	struct:MpegEncContext
p_tex_bits	libavcodec/mpegvideo.h	/^    int p_tex_bits;$/;"	m	struct:RateControlEntry
pack16to32	libavcodec/h264.c	/^static inline uint32_t pack16to32(int a, int b){$/;"	f	file:
pack_header_freq	libavformat/mpeg.c	/^    int pack_header_freq;     \/* frequency (in packets^-1) at which we send pack headers *\/$/;"	m	file:
packedYOffset	libavcodec/libpostproc/postprocess_internal.h	/^	uint64_t __attribute__((aligned(8))) packedYOffset;$/;"	m	struct:PPContext
packedYScale	libavcodec/libpostproc/postprocess_internal.h	/^	uint64_t __attribute__((aligned(8))) packedYScale;$/;"	m	struct:PPContext
packet	libavformat/dc1394.c	/^    AVPacket packet;$/;"	m	struct:dc1394_data	file:
packet	libavformat/ffm.c	/^    uint8_t packet[FFM_PACKET_SIZE];$/;"	m	struct:FFMContext	file:
packet	libavformat/ogg2.h	/^    int (*packet)(AVFormatContext *, int);$/;"	m	struct:ogg_codec
packet	libavformat/oggparsevorbis.c	/^    unsigned char *packet[3];$/;"	m	file:
packet	vhook/watermark.c	/^    AVPacket        packet;$/;"	m	file:
packet_buf	libavformat/asf.h	/^    uint8_t packet_buf[PACKET_SIZE];$/;"	m
packet_buffer	ffserver.c	/^    uint8_t *packet_buffer, *packet_buffer_ptr, *packet_buffer_end;$/;"	m	struct:HTTPContext	file:
packet_buffer	libavformat/avformat.h	/^    struct AVPacketList *packet_buffer;$/;"	m	struct:AVFormatContext
packet_buffer_end	ffserver.c	/^    uint8_t *packet_buffer, *packet_buffer_ptr, *packet_buffer_end;$/;"	m	struct:HTTPContext	file:
packet_buffer_ptr	ffserver.c	/^    uint8_t *packet_buffer, *packet_buffer_ptr, *packet_buffer_end;$/;"	m	struct:HTTPContext	file:
packet_count	libavformat/asf.h	/^    uint16_t packet_count;$/;"	m
packet_count	libavformat/avienc.c	/^    int packet_count[MAX_STREAMS];$/;"	m	file:
packet_count	libavformat/rtp.c	/^    unsigned int packet_count;$/;"	m	struct:RTPDemuxContext	file:
packet_end	libavformat/ffm.c	/^    uint8_t *packet_ptr, *packet_end;$/;"	m	struct:FFMContext	file:
packet_flags	libavformat/asf.h	/^    int packet_flags;$/;"	m
packet_frag_offset	libavformat/asf.h	/^    int packet_frag_offset;$/;"	m
packet_frag_size	libavformat/asf.h	/^    int packet_frag_size;$/;"	m
packet_frag_timestamp	libavformat/asf.h	/^    int packet_frag_timestamp;$/;"	m
packet_key_frame	libavformat/asf.h	/^    int packet_key_frame;$/;"	m
packet_max_size	libavformat/rm.c	/^    int packet_max_size;$/;"	m	file:
packet_multi_size	libavformat/asf.h	/^    int packet_multi_size;$/;"	m
packet_nb_frames	libavformat/asf.h	/^    int packet_nb_frames;$/;"	m
packet_nb_payloads	libavformat/asf.h	/^    unsigned int packet_nb_payloads;$/;"	m
packet_number	libavformat/asf.h	/^    uint32_t packet_number;$/;"	m
packet_number	libavformat/mpeg.c	/^    int packet_number;$/;"	m	file:
packet_obj_size	libavformat/asf.h	/^    int packet_obj_size;$/;"	m
packet_padsize	libavformat/asf.h	/^    int packet_padsize;$/;"	m
packet_pos	libavformat/asf.h	/^    int packet_pos;$/;"	m
packet_property	libavformat/asf.h	/^    int packet_property;$/;"	m
packet_ptr	libavformat/ffm.c	/^    uint8_t *packet_ptr, *packet_end;$/;"	m	struct:FFMContext	file:
packet_queue_abort	ffplay.c	/^static void packet_queue_abort(PacketQueue *q)$/;"	f	file:
packet_queue_end	ffplay.c	/^static void packet_queue_end(PacketQueue *q)$/;"	f	file:
packet_queue_flush	ffplay.c	/^static void packet_queue_flush(PacketQueue *q)$/;"	f	file:
packet_queue_get	ffplay.c	/^static int packet_queue_get(PacketQueue *q, AVPacket *pkt, int block)$/;"	f	file:
packet_queue_init	ffplay.c	/^static void packet_queue_init(PacketQueue *q)$/;"	f	file:
packet_queue_put	ffplay.c	/^static int packet_queue_put(PacketQueue *q, AVPacket *pkt)$/;"	f	file:
packet_replic_size	libavformat/asf.h	/^    int packet_replic_size;$/;"	m
packet_segments	libavformat/asf.h	/^    int packet_segments;$/;"	m
packet_segsizetype	libavformat/asf.h	/^    int packet_segsizetype;$/;"	m
packet_seq	libavformat/asf.h	/^    int packet_seq;$/;"	m
packet_size	ffmpeg.c	/^static int packet_size = 0;$/;"	v	file:
packet_size	libavformat/asf.h	/^    unsigned int packet_size;$/;"	m
packet_size	libavformat/avformat.h	/^    int packet_size;$/;"	m	struct:AVFormatContext
packet_size	libavformat/avidec.c	/^    int packet_size;$/;"	m	struct:AVIStream	file:
packet_size	libavformat/ffm.c	/^    int packet_size;$/;"	m	struct:FFMContext	file:
packet_size	libavformat/mpeg.c	/^    int packet_size; \/* required packet size *\/$/;"	m	file:
packet_size_left	libavformat/asf.h	/^    int packet_size_left;$/;"	m
packet_start	libavformat/nut.c	/^    int64_t packet_start[3]; \/\/0-> startcode less, 1-> short startcode 2-> long startcodes$/;"	m	file:
packet_stream_index	ffserver.c	/^    int packet_stream_index; \/* current stream for output in state machine *\/$/;"	m	struct:HTTPContext	file:
packet_time_delta	libavformat/asf.h	/^    int packet_time_delta;$/;"	m
packet_time_start	libavformat/asf.h	/^    int packet_time_start;$/;"	m
packet_timestamp	libavformat/asf.h	/^    int packet_timestamp;$/;"	m
packet_timestamp_end	libavformat/asf.h	/^    int packet_timestamp_end;$/;"	m
packet_timestamp_start	libavformat/asf.h	/^    int packet_timestamp_start;$/;"	m
packet_total_size	libavformat/rm.c	/^    int packet_total_size;$/;"	m	file:
packets	libavformat/matroska.c	/^    AVPacket **packets;$/;"	m	struct:MatroskaDemuxContext	file:
packets_count	libavformat/asf.h	/^    uint64_t packets_count;	\/\/ how many packets are there in the file$/;"	m
packssdw_m2r	libavcodec/i386/mmx.h	62;"	d
packssdw_r2r	libavcodec/i386/mmx.h	63;"	d
packsswb_m2r	libavcodec/i386/mmx.h	64;"	d
packsswb_r2r	libavcodec/i386/mmx.h	65;"	d
packuswb_m2r	libavcodec/i386/mmx.h	67;"	d
packuswb_r2r	libavcodec/i386/mmx.h	68;"	d
pad_oheight	libavcodec/imgresample.c	/^    int pad_owidth, pad_oheight;$/;"	m	struct:ImgReSampleContext	file:
pad_owidth	libavcodec/imgresample.c	/^    int pad_owidth, pad_oheight;$/;"	m	struct:ImgReSampleContext	file:
padbottom	ffmpeg.c	/^    int padbottom;$/;"	m	struct:AVOutputStream	file:
padbottom	libavcodec/imgresample.c	/^    int padtop, padbottom, padleft, padright;$/;"	m	struct:ImgReSampleContext	file:
padcolor	ffmpeg.c	/^static int padcolor[3] = {16,128,128}; \/* default to black *\/$/;"	v	file:
paddb_m2r	libavcodec/i386/mmx.h	70;"	d
paddb_r2r	libavcodec/i386/mmx.h	71;"	d
paddd_m2r	libavcodec/i386/mmx.h	72;"	d
paddd_r2r	libavcodec/i386/mmx.h	73;"	d
paddh	libavcodec/ps2/mmi.h	136;"	d
padding_bug_score	libavcodec/mpegvideo.h	/^    int padding_bug_score;             \/\/\/< used to detect the VERY common padding bug in MPEG4 $/;"	m	struct:MpegEncContext
paddsb_m2r	libavcodec/i386/mmx.h	77;"	d
paddsb_r2r	libavcodec/i386/mmx.h	78;"	d
paddsw_m2r	libavcodec/i386/mmx.h	79;"	d
paddsw_r2r	libavcodec/i386/mmx.h	80;"	d
paddusb_m2r	libavcodec/i386/mmx.h	82;"	d
paddusb_r2r	libavcodec/i386/mmx.h	83;"	d
paddusw_m2r	libavcodec/i386/mmx.h	84;"	d
paddusw_r2r	libavcodec/i386/mmx.h	85;"	d
paddw	libavcodec/ps2/mmi.h	94;"	d
paddw_m2r	libavcodec/i386/mmx.h	74;"	d
paddw_r2r	libavcodec/i386/mmx.h	75;"	d
padleft	ffmpeg.c	/^    int padleft;$/;"	m	struct:AVOutputStream	file:
padleft	libavcodec/imgresample.c	/^    int padtop, padbottom, padleft, padright;$/;"	m	struct:ImgReSampleContext	file:
padright	ffmpeg.c	/^    int padright;$/;"	m	struct:AVOutputStream	file:
padright	libavcodec/imgresample.c	/^    int padtop, padbottom, padleft, padright;$/;"	m	struct:ImgReSampleContext	file:
padtop	ffmpeg.c	/^    int padtop;              \/* padding area sizes *\/$/;"	m	struct:AVOutputStream	file:
padtop	libavcodec/imgresample.c	/^    int padtop, padbottom, padleft, padright;$/;"	m	struct:ImgReSampleContext	file:
pal_or_ntsc	libavformat/dv1394.h	/^enum pal_or_ntsc {$/;"	g
palctrl	libavcodec/avcodec.h	/^    struct AVPaletteControl *palctrl;$/;"	m	struct:AVCodecContext
palctrl	libavformat/idcin.c	/^    AVPaletteControl palctrl;$/;"	m	struct:IdcinDemuxContext	file:
palette	libavcodec/avcodec.h	/^    unsigned int palette[AVPALETTE_COUNT];$/;"	m	struct:AVPaletteControl
palette	libavcodec/flicvideo.c	/^    unsigned int palette[256];$/;"	m	struct:FlicDecodeContext	file:
palette	libavcodec/png.c	/^    uint32_t palette[256];$/;"	m	struct:PNGContext	file:
palette	libavcodec/qdrw.c	/^    uint8_t palette[256*3];$/;"	m	struct:QdrawContext	file:
palette	libavcodec/vmdav.c	/^    unsigned char palette[PALETTE_COUNT * 4];$/;"	m	struct:VmdVideoContext	file:
palette	libavcodec/vqavideo.c	/^    unsigned int palette[PALETTE_COUNT];$/;"	m	struct:VqaContext	file:
palette	libavcodec/xan.c	/^    unsigned char palette[PALETTE_COUNT * 4];$/;"	m	struct:XanContext	file:
palette	libavformat/png.c	/^    uint32_t palette[256];$/;"	m	struct:PNGDecodeState	file:
palette_changed	libavcodec/avcodec.h	/^    int palette_changed;$/;"	m	struct:AVPaletteControl
palette_control	libavformat/ipmovie.c	/^    AVPaletteControl palette_control;$/;"	m	struct:IPMVEContext	file:
palette_control	libavformat/mov.c	/^    AVPaletteControl palette_control;$/;"	m	struct:MOVContext	file:
palette_control	libavformat/wc3movie.c	/^    AVPaletteControl palette_control;$/;"	m	struct:Wc3DemuxContext	file:
palette_count	libavformat/wc3movie.c	/^    int palette_count;$/;"	m	struct:Wc3DemuxContext	file:
palette_video	libavcodec/cinepak.c	/^    int palette_video;$/;"	m	struct:CinepakContext	file:
palettes	libavformat/wc3movie.c	/^    unsigned char *palettes;$/;"	m	struct:Wc3DemuxContext	file:
pam_encode_frame	libavcodec/pnm.c	/^static int pam_encode_frame(AVCodecContext *avctx, unsigned char *outbuf, int buf_size, void *data){$/;"	f	file:
pam_encoder	libavcodec/pnm.c	/^AVCodec pam_encoder = {$/;"	v
pam_image_format	libavformat/pnm.c	/^AVImageFormat pam_image_format = {$/;"	v
pam_probe	libavformat/pnm.c	/^static int pam_probe(AVProbeData *pd)$/;"	f	file:
pam_read	libavformat/pnm.c	/^static int pam_read(ByteIOContext *f, $/;"	f	file:
pam_write	libavformat/pnm.c	/^static int pam_write(ByteIOContext *pb, AVImageInfo *info)$/;"	f	file:
pan_scan	libavcodec/mpeg12.c	/^    AVPanScan pan_scan; \/** some temporary storage for the panscan *\/$/;"	m	struct:Mpeg1Context	file:
pand_m2r	libavcodec/i386/mmx.h	87;"	d
pand_r2r	libavcodec/i386/mmx.h	88;"	d
pandn_m2r	libavcodec/i386/mmx.h	90;"	d
pandn_r2r	libavcodec/i386/mmx.h	91;"	d
panscanflag	libavcodec/vc9.c	/^    int panscanflag;      \/\/\/< NUMPANSCANWIN, TOPLEFT{X,Y}, BOTRIGHT{X,Y} present$/;"	m	struct:VC9Context	file:
params	libavcodec/x264.c	/^    x264_param_t params;$/;"	m	struct:X264Context	file:
parent	libavcodec/snow.c	/^    struct SubBand *parent;$/;"	m	struct:SubBand	file:
parse1_close	libavcodec/parser.c	/^static void parse1_close(AVCodecParserContext *s)$/;"	f	file:
parse_arg_file	ffmpeg.c	/^void parse_arg_file(const char *filename)$/;"	f
parse_arg_file	ffplay.c	/^void parse_arg_file(const char *filename)$/;"	f
parse_arg_file	vhook/watermark.c	/^void parse_arg_file(const char *filename)$/;"	f
parse_context	libavcodec/mpegvideo.h	/^    ParseContext parse_context;$/;"	m	struct:MpegEncContext
parse_date	libavformat/utils.c	/^int64_t parse_date(const char *datestr, int duration)$/;"	f
parse_deltba	libavcodec/liba52/parse.c	/^static int parse_deltba (a52_state_t * state, int8_t * deltba)$/;"	f	file:
parse_exponents	libavcodec/liba52/parse.c	/^static int parse_exponents (a52_state_t * state, int expstr, int ngrps,$/;"	f	file:
parse_ffconfig	ffserver.c	/^static int parse_ffconfig(const char *filename)$/;"	f	file:
parse_frame_rate	libavformat/utils.c	/^int parse_frame_rate(int *frame_rate, int *frame_rate_base, const char *arg)$/;"	f
parse_image_size	libavformat/utils.c	/^int parse_image_size(int *width_ptr, int *height_ptr, const char *str)$/;"	f
parse_matrix_coeffs	ffmpeg.c	/^void parse_matrix_coeffs(uint16_t *dest, const char *str)$/;"	f
parse_mb_skip	libavcodec/wmv2.c	/^static void parse_mb_skip(Wmv2Context * w){$/;"	f	file:
parse_only	libavcodec/avcodec.h	/^    int parse_only; \/* - decoding only: if true, only parsing is done$/;"	m	struct:AVCodecContext
parse_options	cmdutils.c	/^void parse_options(int argc, char **argv, const OptionDef *options)$/;"	f
parse_pcr	libavformat/mpegts.c	/^static int parse_pcr(int64_t *ppcr_high, int *ppcr_low, $/;"	f	file:
parse_section_header	libavformat/mpegts.c	/^static int parse_section_header(SectionHeader *h, $/;"	f	file:
parse_specific_params	libavformat/avienc.c	/^static void parse_specific_params(AVCodecContext *stream, int *au_rate, int *au_ssize, int *au_scale)$/;"	f	file:
parse_table	libavformat/mov.c	/^    const struct MOVParseTableEntry *parse_table; \/* could be eventually used to change the table *\/$/;"	m	struct:MOVContext	file:
parse_tid	ffplay.c	/^    SDL_Thread *parse_tid;$/;"	m	struct:VideoState	file:
parser	libavcodec/avcodec.h	/^    struct AVCodecParser *parser;$/;"	m	struct:AVCodecParserContext
parser	libavformat/avformat.h	/^    struct AVCodecParserContext *parser;$/;"	m	struct:AVStream
parser_close	libavcodec/avcodec.h	/^    void (*parser_close)(AVCodecParserContext *s);$/;"	m	struct:AVCodecParser
parser_init	libavcodec/avcodec.h	/^    int (*parser_init)(AVCodecParserContext *s);$/;"	m	struct:AVCodecParser
parser_parse	libavcodec/avcodec.h	/^    int (*parser_parse)(AVCodecParserContext *s, $/;"	m	struct:AVCodecParser
part2_3_length	libavcodec/mpegaudiodec.c	/^    int part2_3_length;$/;"	m	struct:GranuleDef	file:
partial	libavformat/mov.c	/^    MOVStreamContext *partial; \/* != 0 : there is still to read in the current chunk *\/$/;"	m	struct:MOVContext	file:
partial_bit_buffer	libavcodec/dv.c	/^    uint16_t partial_bit_buffer;$/;"	m	struct:BlockInfo	file:
partial_bit_buffer	libavcodec/dv.c	/^    uint32_t partial_bit_buffer; \/* we can't use uint16_t here *\/$/;"	m	struct:EncBlockInfo	file:
partial_bit_count	libavcodec/dv.c	/^    uint8_t partial_bit_count;$/;"	m	struct:BlockInfo	file:
partial_bit_count	libavcodec/dv.c	/^    uint8_t partial_bit_count;$/;"	m	struct:EncBlockInfo	file:
partial_count	libavcodec/vqavideo.c	/^    int partial_count;$/;"	m	struct:VqaContext	file:
partial_countdown	libavcodec/vqavideo.c	/^    int partial_countdown;$/;"	m	struct:VqaContext	file:
partition_class	libavcodec/vorbis.h	/^    uint_fast8_t partition_class[32];$/;"	m
partition_count	libavcodec/h264data.h	/^    uint8_t partition_count;$/;"	m	struct:PMbInfo
partition_size	libavcodec/vorbis.h	/^    uint_fast32_t partition_size;$/;"	m
partitioned_frame	libavcodec/mpegvideo.h	/^    int partitioned_frame;           \/\/\/< is current frame partitioned $/;"	m	struct:MpegEncContext
partitions	libavcodec/vorbis.h	/^    uint_fast8_t partitions;$/;"	m
pass	libavcodec/png.c	/^    int pass;$/;"	m	struct:PNGContext	file:
pass	libavformat/png.c	/^    int pass;$/;"	m	struct:PNGDecodeState	file:
pass1_rc_eq_output_sum	libavcodec/mpegvideo.h	/^    double pass1_rc_eq_output_sum;\/\/\/< sum of the output of the rc equation, this is used for normalization  $/;"	m	struct:RateControlContext
pass1_wanted_bits	libavcodec/mpegvideo.h	/^    double pass1_wanted_bits;     \/\/\/< bits which should have been outputed by the pass1 code (including complexity init) $/;"	m	struct:RateControlContext
pass_logfilename	ffmpeg.c	/^static char *pass_logfilename = NULL;$/;"	v	file:
pass_row_size	libavcodec/png.c	/^    int pass_row_size; \/* decompress row size of the current pass *\/$/;"	m	struct:PNGContext	file:
pass_row_size	libavformat/png.c	/^    int pass_row_size; \/* decompress row size of the current pass *\/$/;"	m	struct:PNGDecodeState	file:
pat	libavformat/mpegtsenc.c	/^    MpegTSSection pat; \/* MPEG2 pat table *\/$/;"	m	struct:MpegTSWrite	file:
pat_cb	libavformat/mpegts.c	/^static void pat_cb(void *opaque, const uint8_t *section, int section_len)$/;"	f	file:
pat_filter	libavformat/mpegts.c	/^    MpegTSFilter *pat_filter;$/;"	m	struct:MpegTSContext	file:
pat_packet_count	libavformat/mpegtsenc.c	/^    int pat_packet_count;$/;"	m	struct:MpegTSWrite	file:
pat_packet_freq	libavformat/mpegtsenc.c	/^    int pat_packet_freq;$/;"	m	struct:MpegTSWrite	file:
pat_scan_cb	libavformat/mpegts.c	/^static void pat_scan_cb(void *opaque, const uint8_t *section, int section_len)$/;"	f	file:
path	libavformat/img.c	/^    char path[1024];$/;"	m	file:
path	libavformat/img2.c	/^    char path[1024];$/;"	m	file:
paused	ffplay.c	/^    int paused;$/;"	m	struct:VideoState	file:
pavgb_m2r	libavcodec/i386/mmx.h	209;"	d
pavgb_r2r	libavcodec/i386/mmx.h	210;"	d
pavgusb_m2r	libavcodec/i386/mmx.h	183;"	d
pavgusb_r2r	libavcodec/i386/mmx.h	184;"	d
pavgw_m2r	libavcodec/i386/mmx.h	211;"	d
pavgw_r2r	libavcodec/i386/mmx.h	212;"	d
payload	libavformat/mpegtsenc.c	/^    uint8_t payload[DEFAULT_PES_PAYLOAD_SIZE];$/;"	m	struct:MpegTSWriteStream	file:
payload_index	libavformat/mpegtsenc.c	/^    int payload_index;$/;"	m	struct:MpegTSWriteStream	file:
payload_pts	libavformat/mpegtsenc.c	/^    int64_t payload_pts;$/;"	m	struct:MpegTSWriteStream	file:
payload_type	libavformat/rtp.c	/^    int payload_type;$/;"	m	struct:RTPDemuxContext	file:
pb	ffserver.c	/^    ByteIOContext *pb;$/;"	m	struct:HTTPContext	file:
pb	libavcodec/ac3enc.c	/^    PutBitContext pb;$/;"	m	struct:AC3EncodeContext	file:
pb	libavcodec/asv1.c	/^    PutBitContext pb;$/;"	m	struct:ASV1Context	file:
pb	libavcodec/cabac.h	/^    PutBitContext pb;$/;"	m	struct:CABACContext
pb	libavcodec/ffv1.c	/^    PutBitContext pb;$/;"	m	struct:FFV1Context	file:
pb	libavcodec/huffyuv.c	/^    PutBitContext pb;$/;"	m	struct:HYuvContext	file:
pb	libavcodec/lcl.c	/^    PutBitContext pb;$/;"	m	struct:LclContext	file:
pb	libavcodec/mdec.c	/^    PutBitContext pb;$/;"	m	struct:MDECContext	file:
pb	libavcodec/mpegaudio.c	/^    PutBitContext pb;$/;"	m	struct:MpegAudioContext	file:
pb	libavcodec/mpegvideo.h	/^    PutBitContext pb;$/;"	m	struct:MpegEncContext
pb	libavcodec/svq1.c	/^    PutBitContext pb;$/;"	m	struct:SVQ1Context	file:
pb	libavformat/asf.h	/^    ByteIOContext pb;$/;"	m
pb	libavformat/avformat.h	/^    ByteIOContext pb;$/;"	m	struct:AVFormatContext
pb2	libavcodec/mpegvideo.h	/^    PutBitContext pb2;               \/\/\/< used for data partitioned VOPs $/;"	m	struct:MpegEncContext
pbBufPtr	libavcodec/bitstream.h	/^static inline uint8_t* pbBufPtr(PutBitContext *s)$/;"	f
pb_buffer	ffserver.c	/^    uint8_t *pb_buffer; \/* XXX: use that in all the code *\/$/;"	m	struct:HTTPContext	file:
pb_field_time	libavcodec/mpegvideo.h	/^    uint16_t pb_field_time;         \/\/\/< like above, just for interlaced $/;"	m	struct:MpegEncContext
pb_time	libavcodec/mpegvideo.h	/^    uint16_t pb_time;               \/\/\/< time distance between the last b and p,s,i frame $/;"	m	struct:MpegEncContext
pblocks	libavcodec/mpegvideo.h	/^    short * pblocks[12];$/;"	m	struct:MpegEncContext
pbm_encoder	libavcodec/pnm.c	/^AVCodec pbm_encoder = {$/;"	v
pbm_image_format	libavformat/pnm.c	/^AVImageFormat pbm_image_format = {$/;"	v
pbuf	libavformat/gifdec.c	/^    uint8_t *pbuf, *ebuf;$/;"	m	struct:GifState	file:
pc	libavcodec/parser.c	/^    ParseContext pc;$/;"	m	struct:ParseContext1	file:
pc_tbl2	libavcodec/truemotion1data.h	/^static uint8_t pc_tbl2[] = {$/;"	v
pc_tbl3	libavcodec/truemotion1data.h	/^static uint8_t pc_tbl3[] = {$/;"	v
pc_tbl4	libavcodec/truemotion1data.h	/^static uint8_t pc_tbl4[] = {$/;"	v
pcm_decode_frame	libavcodec/pcm.c	/^static int pcm_decode_frame(AVCodecContext *avctx,$/;"	f	file:
pcm_decode_init	libavcodec/pcm.c	/^static int pcm_decode_init(AVCodecContext * avctx)$/;"	f	file:
pcm_encode_close	libavcodec/pcm.c	/^static int pcm_encode_close(AVCodecContext *avctx)$/;"	f	file:
pcm_encode_frame	libavcodec/pcm.c	/^static int pcm_encode_frame(AVCodecContext *avctx,$/;"	f	file:
pcm_encode_init	libavcodec/pcm.c	/^static int pcm_encode_init(AVCodecContext *avctx)$/;"	f	file:
pcm_read_seek	libavformat/raw.c	/^int pcm_read_seek(AVFormatContext *s, $/;"	f
pcmpeqb_m2r	libavcodec/i386/mmx.h	93;"	d
pcmpeqb_r2r	libavcodec/i386/mmx.h	94;"	d
pcmpeqd_m2r	libavcodec/i386/mmx.h	95;"	d
pcmpeqd_r2r	libavcodec/i386/mmx.h	96;"	d
pcmpeqw_m2r	libavcodec/i386/mmx.h	97;"	d
pcmpeqw_r2r	libavcodec/i386/mmx.h	98;"	d
pcmpgtb_m2r	libavcodec/i386/mmx.h	100;"	d
pcmpgtb_r2r	libavcodec/i386/mmx.h	101;"	d
pcmpgtd_m2r	libavcodec/i386/mmx.h	102;"	d
pcmpgtd_r2r	libavcodec/i386/mmx.h	103;"	d
pcmpgtw_m2r	libavcodec/i386/mmx.h	104;"	d
pcmpgtw_r2r	libavcodec/i386/mmx.h	105;"	d
pcpyh	libavcodec/ps2/mmi.h	91;"	d
pcpyld	libavcodec/ps2/mmi.h	88;"	d
pcpyud	libavcodec/ps2/mmi.h	85;"	d
pcr_incr	libavformat/mpegts.c	/^    int pcr_incr;$/;"	m	struct:MpegTSContext	file:
pcr_pid	libavformat/mpegts.c	/^    int pcr_pid;$/;"	m	struct:MpegTSContext	file:
pcr_pid	libavformat/mpegtsenc.c	/^    int pcr_pid;$/;"	m	struct:MpegTSService	file:
peek_id	libavformat/matroska.c	/^    uint32_t peek_id;$/;"	m	struct:MatroskaDemuxContext	file:
pegasus_rct	libavcodec/mjpeg.c	/^    int pegasus_rct;    \/* pegasus reversible colorspace transform *\/  $/;"	m	struct:MJpegDecodeContext	file:
penalty_factor	libavcodec/mpegvideo.h	/^    int penalty_factor;$/;"	m	struct:MotionEstContext
per_block_abt	libavcodec/wmv2.c	/^    int per_block_abt;$/;"	m	struct:Wmv2Context	file:
per_mb_abt	libavcodec/wmv2.c	/^    int per_mb_abt;$/;"	m	struct:Wmv2Context	file:
per_mb_rl_bit	libavcodec/wmv2.c	/^    int per_mb_rl_bit;$/;"	m	struct:Wmv2Context	file:
per_mb_rl_table	libavcodec/mpegvideo.h	/^    int per_mb_rl_table;$/;"	m	struct:MpegEncContext
perfdata	libavcodec/ppc/dsputil_ppc.c	/^unsigned long long perfdata[POWERPC_NUM_PMC_ENABLED][powerpc_perf_total][powerpc_data_total];$/;"	v
perfname	libavcodec/ppc/dsputil_ppc.c	/^static unsigned char* perfname[] = {$/;"	v	file:
permutated	libavcodec/mpegvideo.h	/^    uint8_t permutated[64];$/;"	m	struct:ScanTable
perr	libavcodec/alpha/asm.h	111;"	d
perr	libavcodec/alpha/asm.h	125;"	d
perr	libavcodec/alpha/asm.h	154;"	d
pes_cb	libavformat/mpegts.c	/^    PESCallback *pes_cb;$/;"	m	struct:MpegTSPESFilter	file:
pes_filter	libavformat/mpegts.c	/^        MpegTSPESFilter pes_filter;$/;"	m	union:MpegTSFilter::<anonymous>	file:
pes_header_size	libavformat/mpegts.c	/^    int pes_header_size;$/;"	m	struct:PESContext	file:
pextlb	libavcodec/ps2/mmi.h	148;"	d
pextlh	libavcodec/ps2/mmi.h	103;"	d
pextlw	libavcodec/ps2/mmi.h	97;"	d
pextrw_r2r	libavcodec/i386/mmx.h	214;"	d
pextuh	libavcodec/ps2/mmi.h	106;"	d
pextuw	libavcodec/ps2/mmi.h	100;"	d
pfrm_TAG	libavformat/4xm.c	43;"	d	file:
pgm_encoder	libavcodec/pnm.c	/^AVCodec pgm_encoder = {$/;"	v
pgm_image_format	libavformat/pnm.c	/^AVImageFormat pgm_image_format = {$/;"	v
pgm_save	libavcodec/apiexample.c	/^void pgm_save(unsigned char *buf,int wrap, int xsize,int ysize,char *filename) $/;"	f
pgmyuv_compatibility_hack	ffmpeg.c	/^static int pgmyuv_compatibility_hack=0;$/;"	v	file:
pgmyuv_encoder	libavcodec/pnm.c	/^AVCodec pgmyuv_encoder = {$/;"	v
pgmyuv_image_format	libavformat/pnm.c	/^AVImageFormat pgmyuv_image_format = {$/;"	v
pgmyuv_probe	libavformat/pnm.c	/^static int pgmyuv_probe(AVProbeData *pd)$/;"	f	file:
pgmyuv_read	libavformat/pnm.c	/^static int pgmyuv_read(ByteIOContext *f, $/;"	f	file:
pgmyuv_save	tests/rotozoom.c	/^void pgmyuv_save(const char *filename, int w, int h,$/;"	f
pgmyuv_save	tests/videogen.c	/^void pgmyuv_save(const char *filename, int w, int h,$/;"	f
phase	libavcodec/ra288.c	/^	int	phase, phasep;$/;"	m	file:
phase_mask	libavcodec/resample2.c	/^    int phase_mask;$/;"	m	struct:AVResampleContext	file:
phase_shift	libavcodec/resample2.c	/^    int phase_shift;$/;"	m	struct:AVResampleContext	file:
phasep	libavcodec/ra288.c	/^	int	phase, phasep;$/;"	m	file:
phmadh	libavcodec/ps2/mmi.h	82;"	d
phsflginu	libavcodec/liba52/a52_internal.h	/^    uint8_t phsflginu;		\/* phase flags in use (stereo only) *\/$/;"	m	struct:a52_state_s
pic	libavcodec/8bps.c	/^	AVFrame pic;$/;"	m	struct:EightBpsContext	file:
pic	libavcodec/lcl.c	/^	AVFrame pic;$/;"	m	struct:LclContext	file:
pic	libavcodec/loco.c	/^    AVFrame pic;$/;"	m	struct:LOCOContext	file:
pic	libavcodec/qdrw.c	/^    AVFrame pic;$/;"	m	struct:QdrawContext	file:
pic	libavcodec/qpeg.c	/^    AVFrame pic;$/;"	m	struct:QpegContext	file:
pic	libavcodec/raw.c	/^    AVFrame pic;             \/\/\/< AVCodecContext.coded_frame$/;"	m	struct:RawVideoContext	file:
pic	libavcodec/tscc.c	/^    AVFrame pic;$/;"	m	struct:TsccContext	file:
pic	libavcodec/wnv1.c	/^    AVFrame pic;$/;"	m	struct:WNV1Context	file:
pic	libavcodec/x264.c	/^    x264_picture_t pic;$/;"	m	struct:X264Context	file:
pic	libavcodec/xl.c	/^    AVFrame pic;$/;"	m	struct:VideoXLContext	file:
pic_id	libavcodec/mpegvideo.h	/^    int pic_id;                 \/\/\/< h264 pic_num or long_term_pic_idx$/;"	m	struct:Picture
pic_order_present	libavcodec/h264.c	/^    int pic_order_present;      \/\/\/< pic_order_present_flag$/;"	m	struct:PPS	file:
pict	libavformat/avformat.h	/^    AVPicture pict; \/* returned allocated image *\/$/;"	m	struct:AVImageInfo
pict_tmp	ffmpeg.c	/^    AVFrame pict_tmp;      \/* temporary image for resampling *\/$/;"	m	struct:AVOutputStream	file:
pict_type	libavcodec/avcodec.h	/^    int pict_type; \/* XXX: put it back in AVCodecContext *\/$/;"	m	struct:AVCodecParserContext
pict_type	libavcodec/mpegvideo.h	/^    int pict_type;              \/\/\/< I_TYPE, P_TYPE, B_TYPE, ... $/;"	m	struct:MpegEncContext
pict_type	libavcodec/mpegvideo.h	/^    int pict_type;$/;"	m	struct:RateControlEntry
pict_type_to_golomb	libavcodec/h264data.h	/^static const uint8_t pict_type_to_golomb[7]=$/;"	v
pictq	ffplay.c	/^    VideoPicture pictq[VIDEO_PICTURE_QUEUE_SIZE];$/;"	m	struct:VideoState	file:
pictq_cond	ffplay.c	/^    SDL_cond *pictq_cond;$/;"	m	struct:VideoState	file:
pictq_mutex	ffplay.c	/^    SDL_mutex *pictq_mutex;$/;"	m	struct:VideoState	file:
pictq_rindex	ffplay.c	/^    int pictq_size, pictq_rindex, pictq_windex;$/;"	m	struct:VideoState	file:
pictq_size	ffplay.c	/^    int pictq_size, pictq_rindex, pictq_windex;$/;"	m	struct:VideoState	file:
pictq_windex	ffplay.c	/^    int pictq_size, pictq_rindex, pictq_windex;$/;"	m	struct:VideoState	file:
picture	libavcodec/asv1.c	/^    AVFrame picture;$/;"	m	struct:ASV1Context	file:
picture	libavcodec/cljr.c	/^    AVFrame picture;$/;"	m	struct:CLJRContext	file:
picture	libavcodec/dv.c	/^    AVFrame picture;$/;"	m	struct:DVVideoContext	file:
picture	libavcodec/ffv1.c	/^    AVFrame picture;$/;"	m	struct:FFV1Context	file:
picture	libavcodec/huffyuv.c	/^    AVFrame picture;$/;"	m	struct:HYuvContext	file:
picture	libavcodec/indeo2.c	/^    AVFrame picture;$/;"	m	struct:Ir2Context	file:
picture	libavcodec/mdec.c	/^    AVFrame picture;$/;"	m	struct:MDECContext	file:
picture	libavcodec/mjpeg.c	/^    AVFrame picture; \/* picture structure *\/$/;"	m	struct:MJpegDecodeContext	file:
picture	libavcodec/mpegvideo.h	/^    Picture *picture;          \/\/\/< main picture buffer $/;"	m	struct:MpegEncContext
picture	libavcodec/png.c	/^    AVFrame picture;$/;"	m	struct:PNGContext	file:
picture	libavcodec/pnm.c	/^    AVFrame picture;$/;"	m	struct:PNMContext	file:
picture	libavcodec/svq1.c	/^    AVFrame picture;$/;"	m	struct:SVQ1Context	file:
picture	libavcodec/vcr1.c	/^    AVFrame picture;$/;"	m	struct:VCR1Context	file:
picture	output_example.c	/^AVFrame *picture, *tmp_picture;$/;"	v
picture_in_gop_number	libavcodec/mpegvideo.h	/^    int picture_in_gop_number; \/\/\/< 0-> first pic in gop, ... $/;"	m	struct:MpegEncContext
picture_number	libavcodec/ffv1.c	/^    int picture_number;$/;"	m	struct:FFV1Context	file:
picture_number	libavcodec/huffyuv.c	/^    int picture_number;$/;"	m	struct:HYuvContext	file:
picture_number	libavcodec/mpegvideo.h	/^    int picture_number;       \/\/FIXME remove, unclear definition$/;"	m	struct:MpegEncContext
picture_structure	libavcodec/mpegvideo.h	/^    int picture_structure;$/;"	m	struct:MpegEncContext
picture_structure	xvmc_render.h	/^  unsigned int picture_structure;\/\/top\/bottom fields or frame  !$/;"	m
pid	ffserver.c	/^    pid_t pid;  \/* Of ffmpeg process *\/$/;"	m	struct:FFStream	file:
pid	libavformat/mpegts.c	/^    int pid;$/;"	m	struct:MpegTSFilter	file:
pid	libavformat/mpegts.c	/^    int pid;$/;"	m	struct:PESContext	file:
pid	libavformat/mpegtsenc.c	/^    int pid; \/* stream associated pid *\/$/;"	m	struct:MpegTSWriteStream	file:
pid	libavformat/mpegtsenc.c	/^    int pid;$/;"	m	struct:MpegTSSection	file:
pid	vhook/ppm.c	/^    int pid;$/;"	m	struct:rwpipe	file:
pid_start	ffserver.c	/^    time_t pid_start;  \/* Of ffmpeg process *\/$/;"	m	struct:FFStream	file:
pids	libavformat/mpegts.c	/^    MpegTSFilter *pids[NB_PID_MAX];$/;"	m	struct:MpegTSContext	file:
pinsrw_r2r	libavcodec/i386/mmx.h	216;"	d
pinteh	libavcodec/ps2/mmi.h	133;"	d
pinth	libavcodec/ps2/mmi.h	79;"	d
pipe_close	libavformat/file.c	/^static int pipe_close(URLContext *h)$/;"	f	file:
pipe_open	libavformat/file.c	/^static int pipe_open(URLContext *h, const char *filename, int flags)$/;"	f	file:
pipe_protocol	libavformat/file.c	/^URLProtocol pipe_protocol = {$/;"	v
pipe_read	libavformat/file.c	/^static int pipe_read(URLContext *h, unsigned char *buf, int size)$/;"	f	file:
pipe_write	libavformat/file.c	/^static int pipe_write(URLContext *h, unsigned char *buf, int size)$/;"	f	file:
pix_abs	libavcodec/dsputil.h	/^    me_cmp_func pix_abs[2][4];$/;"	m	struct:DSPContext
pix_abs16_c	libavcodec/dsputil.c	/^static inline int pix_abs16_c(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
pix_abs16_x2_c	libavcodec/dsputil.c	/^static int pix_abs16_x2_c(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
pix_abs16_xy2_c	libavcodec/dsputil.c	/^static int pix_abs16_xy2_c(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
pix_abs16_y2_c	libavcodec/dsputil.c	/^static int pix_abs16_y2_c(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
pix_abs16x16_mvi_asm	libavcodec/alpha/motion_est_mvi_asm.S	/^pix_abs16x16_mvi_asm:$/;"	l
pix_abs16x16_x2_mvi	libavcodec/alpha/motion_est_alpha.c	/^int pix_abs16x16_x2_mvi(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f
pix_abs16x16_xy2_mvi	libavcodec/alpha/motion_est_alpha.c	/^int pix_abs16x16_xy2_mvi(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f
pix_abs16x16_y2_mvi	libavcodec/alpha/motion_est_alpha.c	/^int pix_abs16x16_y2_mvi(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f
pix_abs8_c	libavcodec/dsputil.c	/^static inline int pix_abs8_c(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
pix_abs8_x2_c	libavcodec/dsputil.c	/^static int pix_abs8_x2_c(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
pix_abs8_xy2_c	libavcodec/dsputil.c	/^static int pix_abs8_xy2_c(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
pix_abs8_y2_c	libavcodec/dsputil.c	/^static int pix_abs8_y2_c(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
pix_abs8x8_mvi	libavcodec/alpha/motion_est_alpha.c	/^int pix_abs8x8_mvi(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f
pix_fmt	libavcodec/avcodec.h	/^    enum PixelFormat pix_fmt;$/;"	m	struct:AVCodecContext
pix_fmt	libavcodec/dvdata.h	/^    enum PixelFormat pix_fmt;             \/* picture pixel format *\/$/;"	m	struct:DVprofile
pix_fmt	libavcodec/raw.c	/^    int pix_fmt;$/;"	m	struct:PixleFormatTag	file:
pix_fmt	libavformat/avformat.h	/^    enum PixelFormat pix_fmt; \/* requested pixel format *\/$/;"	m	struct:AVImageInfo
pix_fmt	libavformat/avformat.h	/^    enum PixelFormat pix_fmt;$/;"	m	struct:AVFormatParameters
pix_fmt	libavformat/dc1394.c	/^    enum PixelFormat pix_fmt;$/;"	m	struct:dc1394_frame_format	file:
pix_fmt	libavformat/gifdec.c	/^    int pix_fmt;$/;"	m	struct:GifState	file:
pix_fmt	libavformat/img.c	/^    int pix_fmt;$/;"	m	file:
pix_fmt_info	libavcodec/imgconvert.c	/^static PixFmtInfo pix_fmt_info[PIX_FMT_NB] = {$/;"	v	file:
pix_fmts	libavcodec/avcodec.h	/^    const enum PixelFormat *pix_fmts;       \/\/\/array of supported pixel formats, or NULL if unknown, array is terminanted by -1$/;"	m	struct:AVCodec
pix_func	tests/dsptest.c	/^static const struct pix_func {$/;"	s	file:
pix_func	tests/dsptest.c	/^} pix_func[] = {$/;"	v	file:
pix_norm1	libavcodec/dsputil.h	/^    int (*pix_norm1)(uint8_t * pix, int line_size);$/;"	m	struct:DSPContext
pix_norm1	libavcodec/snow.c	/^static int pix_norm1(uint8_t * pix, int line_size, int w)$/;"	f	file:
pix_norm1_altivec	libavcodec/ppc/dsputil_altivec.c	/^int pix_norm1_altivec(uint8_t *pix, int line_size)$/;"	f
pix_norm1_c	libavcodec/dsputil.c	/^static int pix_norm1_c(uint8_t * pix, int line_size)$/;"	f	file:
pix_norm1_mmx	libavcodec/i386/dsputil_mmx.c	/^static int pix_norm1_mmx(uint8_t *pix, int line_size) {$/;"	f	file:
pix_sum	libavcodec/dsputil.h	/^    int (*pix_sum)(uint8_t * pix, int line_size);$/;"	m	struct:DSPContext
pix_sum	libavcodec/snow.c	/^static int pix_sum(uint8_t * pix, int line_size, int w)$/;"	f	file:
pix_sum16_mmx	libavcodec/i386/dsputil_mmx.c	/^static int pix_sum16_mmx(uint8_t * pix, int line_size){$/;"	f	file:
pix_sum_altivec	libavcodec/ppc/dsputil_altivec.c	/^int pix_sum_altivec(uint8_t * pix, int line_size)$/;"	f
pix_sum_c	libavcodec/dsputil.c	/^static int pix_sum_c(uint8_t * pix, int line_size)$/;"	f	file:
pixel	libavcodec/dsputil.h	462;"	d
pixel	libavcodec/dsputil.h	464;"	d
pixelFormatTags	libavcodec/raw.c	/^const PixelFormatTag pixelFormatTags[] = {$/;"	v
pixel_addresses_inited	libavcodec/vp3.c	/^    int pixel_addresses_inited;$/;"	m	struct:Vp3DecodeContext	file:
pixel_aspect	libavcodec/h264data.h	/^static const AVRational pixel_aspect[14]={$/;"	v
pixel_aspect	libavcodec/mpeg4data.h	/^static const AVRational pixel_aspect[16]={$/;"	v
pixel_height	libavformat/matroska.c	/^        pixel_height,$/;"	m	struct:MatroskaVideoTrack	file:
pixel_ptr	libavcodec/interplayvideo.c	/^    unsigned char *pixel_ptr;$/;"	m	struct:IpvideoContext	file:
pixel_type	libavcodec/imgconvert.c	/^    uint8_t pixel_type;      \/* pixel storage type (see FF_PIXEL_xxx constants) *\/$/;"	m	struct:PixFmtInfo	file:
pixel_width	libavformat/matroska.c	/^    int pixel_width,$/;"	m	struct:MatroskaVideoTrack	file:
pixfmt_rgb24	libavcodec/8bps.c	/^const enum PixelFormat pixfmt_rgb24[] = {PIX_FMT_BGR24, PIX_FMT_RGBA32, -1};$/;"	v
pixfmt_xvmc_mpg2_420	libavcodec/mpeg12.c	/^const enum PixelFormat pixfmt_xvmc_mpg2_420[] = {$/;"	v
pixfmt_yuv_420	libavcodec/mpeg12.c	/^const enum PixelFormat pixfmt_yuv_420[]= {PIX_FMT_YUV420P,-1};$/;"	v
pixfmt_yuv_422	libavcodec/mpeg12.c	/^const enum PixelFormat pixfmt_yuv_422[]= {PIX_FMT_YUV422P,-1};$/;"	v
pixfmt_yuv_444	libavcodec/mpeg12.c	/^const enum PixelFormat pixfmt_yuv_444[]= {PIX_FMT_YUV444P,-1};$/;"	v
pk	libavcodec/g726.c	/^	 int pk[2];           \/**< signs of prev. 2 sez + dq *\/$/;"	m	struct:G726Context	file:
pklb	libavcodec/alpha/asm.h	112;"	d
pklb	libavcodec/alpha/asm.h	126;"	d
pklb	libavcodec/alpha/asm.h	155;"	d
pkt	libavformat/asf.h	/^    AVPacket pkt;$/;"	m
pkt	libavformat/avformat.h	/^    AVPacket pkt;$/;"	m	struct:AVPacketList
pkt	libavformat/mpegts.c	/^    AVPacket *pkt; \/* packet containing av data *\/$/;"	m	struct:MpegTSContext	file:
pkwb	libavcodec/alpha/asm.h	113;"	d
pkwb	libavcodec/alpha/asm.h	127;"	d
pkwb	libavcodec/alpha/asm.h	156;"	d
plane	libavcodec/ffv1.c	/^    PlaneContext plane[MAX_PLANES];$/;"	m	struct:FFV1Context	file:
plane	libavcodec/snow.c	/^    Plane plane[MAX_PLANES];$/;"	m	struct:SnowContext	file:
plane_count	libavcodec/ffv1.c	/^    int plane_count;$/;"	m	struct:FFV1Context	file:
planemap	libavcodec/8bps.c	/^	unsigned char planemap[4];$/;"	m	struct:EightBpsContext	file:
planes	libavcodec/8bps.c	/^	unsigned char planes;$/;"	m	struct:EightBpsContext	file:
play_time	libavformat/asf.h	/^    uint64_t play_time;		\/\/ play time, in 100-nanosecond units$/;"	m
player	libavformat/beosaudio.cpp	/^    BSoundPlayer *player;$/;"	m	file:
pmaddwd_m2r	libavcodec/i386/mmx.h	107;"	d
pmaddwd_r2r	libavcodec/i386/mmx.h	108;"	d
pmaxh	libavcodec/ps2/mmi.h	127;"	d
pmaxsw_m2r	libavcodec/i386/mmx.h	218;"	d
pmaxsw_r2r	libavcodec/i386/mmx.h	219;"	d
pmaxub_m2r	libavcodec/i386/mmx.h	221;"	d
pmaxub_r2r	libavcodec/i386/mmx.h	222;"	d
pmfhl_uw	libavcodec/ps2/mmi.h	145;"	d
pminh	libavcodec/ps2/mmi.h	130;"	d
pminsw_m2r	libavcodec/i386/mmx.h	224;"	d
pminsw_r2r	libavcodec/i386/mmx.h	225;"	d
pminub_m2r	libavcodec/i386/mmx.h	227;"	d
pminub_r2r	libavcodec/i386/mmx.h	228;"	d
pmovmskb	libavcodec/i386/mmx.h	230;"	d
pmt	libavformat/mpegtsenc.c	/^    MpegTSSection pmt; \/* MPEG2 pmt table context *\/$/;"	m	struct:MpegTSService	file:
pmt_cb	libavformat/mpegts.c	/^static void pmt_cb(void *opaque, const uint8_t *section, int section_len)$/;"	f	file:
pmt_filter	libavformat/mpegts.c	/^    MpegTSFilter *pmt_filter;$/;"	m	struct:MpegTSContext	file:
pmulhuw_m2r	libavcodec/i386/mmx.h	233;"	d
pmulhuw_r2r	libavcodec/i386/mmx.h	234;"	d
pmulhw_m2r	libavcodec/i386/mmx.h	110;"	d
pmulhw_r2r	libavcodec/i386/mmx.h	111;"	d
pmullw_m2r	libavcodec/i386/mmx.h	113;"	d
pmullw_r2m	libavcodec/i386/mmx.h	264;"	d
pmullw_r2r	libavcodec/i386/mmx.h	114;"	d
pmulth	libavcodec/ps2/mmi.h	124;"	d
png_decode_idat	libavcodec/png.c	/^static int png_decode_idat(PNGContext *s, int length)$/;"	f	file:
png_decode_idat	libavformat/png.c	/^static int png_decode_idat(PNGDecodeState *s, ByteIOContext *f, int length)$/;"	f	file:
png_decoder	libavcodec/png.c	/^AVCodec png_decoder = {$/;"	v
png_encoder	libavcodec/png.c	/^AVCodec png_encoder = {$/;"	v
png_filter_row	libavcodec/png.c	/^static void png_filter_row(uint8_t *dst, int filter_type, $/;"	f	file:
png_filter_row	libavformat/png.c	/^static void png_filter_row(uint8_t *dst, int filter_type, $/;"	f	file:
png_get_interlaced_row	libavcodec/png.c	/^static void png_get_interlaced_row(uint8_t *dst, int row_size, $/;"	f	file:
png_get_interlaced_row	libavformat/png.c	/^static void png_get_interlaced_row(uint8_t *dst, int row_size, $/;"	f	file:
png_get_nb_channels	libavcodec/png.c	/^static int png_get_nb_channels(int color_type)$/;"	f	file:
png_get_nb_channels	libavformat/png.c	/^static int png_get_nb_channels(int color_type)$/;"	f	file:
png_handle_row	libavcodec/png.c	/^static void png_handle_row(PNGContext *s)$/;"	f	file:
png_handle_row	libavformat/png.c	/^static void png_handle_row(PNGDecodeState *s)$/;"	f	file:
png_image_format	libavformat/png.c	/^AVImageFormat png_image_format = {$/;"	v
png_pass_dsp_mask	libavcodec/png.c	/^static const uint8_t png_pass_dsp_mask[NB_PASSES] = { $/;"	v	file:
png_pass_dsp_mask	libavformat/png.c	/^static const uint8_t png_pass_dsp_mask[NB_PASSES] = { $/;"	v	file:
png_pass_dsp_ymask	libavcodec/png.c	/^static const uint8_t png_pass_dsp_ymask[NB_PASSES] = {$/;"	v	file:
png_pass_dsp_ymask	libavformat/png.c	/^static const uint8_t png_pass_dsp_ymask[NB_PASSES] = {$/;"	v	file:
png_pass_mask	libavcodec/png.c	/^static const uint8_t png_pass_mask[NB_PASSES] = {$/;"	v	file:
png_pass_mask	libavformat/png.c	/^static const uint8_t png_pass_mask[NB_PASSES] = {$/;"	v	file:
png_pass_row_size	libavcodec/png.c	/^static int png_pass_row_size(int pass, int bits_per_pixel, int width)$/;"	f	file:
png_pass_row_size	libavformat/png.c	/^static int png_pass_row_size(int pass, int bits_per_pixel, int width)$/;"	f	file:
png_pass_xmin	libavcodec/png.c	/^static const uint8_t png_pass_xmin[NB_PASSES] = {$/;"	v	file:
png_pass_xmin	libavformat/png.c	/^static const uint8_t png_pass_xmin[NB_PASSES] = {$/;"	v	file:
png_pass_xshift	libavcodec/png.c	/^static const uint8_t png_pass_xshift[NB_PASSES] = {$/;"	v	file:
png_pass_xshift	libavformat/png.c	/^static const uint8_t png_pass_xshift[NB_PASSES] = {$/;"	v	file:
png_pass_ymask	libavcodec/png.c	/^static const uint8_t png_pass_ymask[NB_PASSES] = {$/;"	v	file:
png_pass_ymask	libavformat/png.c	/^static const uint8_t png_pass_ymask[NB_PASSES] = {$/;"	v	file:
png_probe	libavformat/png.c	/^static int png_probe(AVProbeData *pd)$/;"	f	file:
png_put_interlaced_row	libavcodec/png.c	/^static void png_put_interlaced_row(uint8_t *dst, int width, $/;"	f	file:
png_put_interlaced_row	libavformat/png.c	/^static void png_put_interlaced_row(uint8_t *dst, int width, $/;"	f	file:
png_read	libavformat/png.c	/^static int png_read(ByteIOContext *f, $/;"	f	file:
png_write	libavformat/png.c	/^static int png_write(ByteIOContext *f, AVImageInfo *info)$/;"	f	file:
png_write_chunk	libavcodec/png.c	/^static void png_write_chunk(uint8_t **f, uint32_t tag,$/;"	f	file:
png_write_chunk	libavformat/png.c	/^static void png_write_chunk(ByteIOContext *f, uint32_t tag,$/;"	f	file:
png_write_row	libavcodec/png.c	/^static int png_write_row(PNGContext *s, const uint8_t *data, int size)$/;"	f	file:
png_write_row	libavformat/png.c	/^static int png_write_row(PNGEncodeState *s, const uint8_t *data, int size)$/;"	f	file:
png_zalloc	libavcodec/png.c	/^static void *png_zalloc(void *opaque, unsigned int items, unsigned int size)$/;"	f	file:
png_zalloc	libavformat/png.c	/^static void *png_zalloc(void *opaque, unsigned int items, unsigned int size)$/;"	f	file:
png_zfree	libavcodec/png.c	/^static void png_zfree(void *opaque, void *ptr)$/;"	f	file:
png_zfree	libavformat/png.c	/^static void png_zfree(void *opaque, void *ptr)$/;"	f	file:
pngsig	libavcodec/png.c	/^static const uint8_t pngsig[8] = {137, 80, 78, 71, 13, 10, 26, 10};$/;"	v	file:
pngsig	libavformat/png.c	/^static const uint8_t pngsig[8] = {137, 80, 78, 71, 13, 10, 26, 10};$/;"	v	file:
pnm_decode_frame	libavcodec/pnm.c	/^static int pnm_decode_frame(AVCodecContext *avctx, $/;"	f	file:
pnm_decode_header	libavcodec/pnm.c	/^static int pnm_decode_header(AVCodecContext *avctx, PNMContext * const s){$/;"	f	file:
pnm_encode_frame	libavcodec/pnm.c	/^static int pnm_encode_frame(AVCodecContext *avctx, unsigned char *outbuf, int buf_size, void *data){$/;"	f	file:
pnm_get	libavcodec/pnm.c	/^static void pnm_get(PNMContext *sc, char *str, int buf_size) $/;"	f	file:
pnm_get	libavformat/pnm.c	/^static void pnm_get(ByteIOContext *f, char *str, int buf_size) $/;"	f	file:
pnm_image_format	libavformat/pnm.c	/^AVImageFormat pnm_image_format = {$/;"	v
pnm_parse	libavcodec/pnm.c	/^static int pnm_parse(AVCodecParserContext *s,$/;"	f	file:
pnm_parser	libavcodec/pnm.c	/^AVCodecParser pnm_parser = {$/;"	v
pnm_probe	libavformat/pnm.c	/^static int pnm_probe(AVProbeData *pd)$/;"	f	file:
pnm_read	libavformat/pnm.c	/^static int pnm_read(ByteIOContext *f, $/;"	f	file:
pnm_read1	libavformat/pnm.c	/^static int pnm_read1(ByteIOContext *f, $/;"	f	file:
pnm_space	libavcodec/pnm.c	/^static inline int pnm_space(int c)  $/;"	f	file:
pnm_space	libavformat/pnm.c	/^static inline int pnm_space(int c)  $/;"	f	file:
pnm_write	libavformat/pnm.c	/^static int pnm_write(ByteIOContext *pb, AVImageInfo *info)$/;"	f	file:
poc	libavcodec/mpegvideo.h	/^    int poc;                    \/\/\/< h264 frame POC$/;"	m	struct:Picture
poc_cycle_length	libavcodec/h264.c	/^    int poc_cycle_length;              \/\/\/< num_ref_frames_in_pic_order_cnt_cycle$/;"	m	struct:SPS	file:
poc_lsb	libavcodec/h264.c	/^    int poc_lsb;$/;"	m	struct:H264Context	file:
poc_msb	libavcodec/h264.c	/^    int poc_msb;$/;"	m	struct:H264Context	file:
poc_type	libavcodec/h264.c	/^    int poc_type;                      \/\/\/< pic_order_cnt_type$/;"	m	struct:SPS	file:
poll_entry	ffserver.c	/^    struct pollfd *poll_entry; \/* used when polling *\/$/;"	m	struct:HTTPContext	file:
por_m2r	libavcodec/i386/mmx.h	116;"	d
por_r2r	libavcodec/i386/mmx.h	117;"	d
port_max	libavformat/rtsp.h	/^    int port_min, port_max; \/* RTP ports *\/$/;"	m	struct:RTSPTransportField
port_min	libavformat/rtsp.h	/^    int port_min, port_max; \/* RTP ports *\/$/;"	m	struct:RTSPTransportField
pos	libavcodec/dv.c	/^    uint8_t pos; \/* position in block *\/$/;"	m	struct:BlockInfo	file:
pos	libavformat/avformat.h	/^    int64_t pos;$/;"	m	struct:AVIndexEntry
pos	libavformat/avienc.c	/^    unsigned int flags, pos, len;$/;"	m	struct:AVIIentry	file:
pos	libavformat/avio.h	/^    offset_t pos; \/* position in the file of the current buffer *\/$/;"	m
pos	libavformat/aviobuf.c	/^    int pos, size, allocated_size;$/;"	m	struct:DynBuffer	file:
pos	libavformat/matroska.c	/^        pos;$/;"	m	struct:MatroskaDemuxContext	file:
pos	libavformat/matroska.c	/^  uint64_t        pos;   \/* of the corresponding *cluster*! *\/$/;"	m	struct:MatroskaDemuxIndex	file:
pos	libavformat/movenc.c	/^    unsigned int flags, pos, size;$/;"	m	struct:MOVIentry	file:
pos	libavformat/ogg2.h	/^    uint64_t pos;$/;"	m	struct:ogg_state
position	libavcodec/avcodec.h	/^    int16_t position[3][2];$/;"	m	struct:AVPanScan
post1	libavcodec/liba52/imdct.c	/^static complex_t post1[64];$/;"	v	file:
post2	libavcodec/liba52/imdct.c	/^static complex_t post2[32];$/;"	v	file:
postProcess	libavcodec/libpostproc/postprocess.c	/^static inline void postProcess(uint8_t src[], int srcStride, uint8_t dst[], int dstStride, int width, int height,$/;"	f	file:
postProcess	libavcodec/libpostproc/postprocess_template.c	/^static void RENAME(postProcess)(uint8_t src[], int srcStride, uint8_t dst[], int dstStride, int width, int height,$/;"	f	file:
postproc	libavcodec/vc9.c	/^    uint8_t postproc;$/;"	m	struct:VC9Context	file:
postprocess	doc/texi2pod.pl	/^sub postprocess$/;"	s
postprocflag	libavcodec/vc9.c	/^    int postprocflag;     \/\/\/< Per-frame processing suggestion flag present$/;"	m	struct:VC9Context	file:
postscale	libavcodec/faandct.c	/^static FLOAT postscale[64]={$/;"	v	file:
pow_m1_4	libavcodec/wmadec.c	/^static inline float pow_m1_4(WMADecodeContext *s, float x)$/;"	f	file:
pow_poly	libavcodec/ac3enc.c	/^static unsigned int pow_poly(unsigned int a, unsigned int n, unsigned int poly)$/;"	f	file:
powerpc_clear_blocks_dcbz128	libavcodec/ppc/dsputil_ppc.h	/^  powerpc_clear_blocks_dcbz128,$/;"	e	enum:powerpc_perf_index
powerpc_clear_blocks_dcbz32	libavcodec/ppc/dsputil_ppc.h	/^  powerpc_clear_blocks_dcbz32,$/;"	e	enum:powerpc_perf_index
powerpc_data_index	libavcodec/ppc/dsputil_ppc.h	/^enum powerpc_data_index {$/;"	g
powerpc_data_max	libavcodec/ppc/dsputil_ppc.h	/^  powerpc_data_max,$/;"	e	enum:powerpc_data_index
powerpc_data_min	libavcodec/ppc/dsputil_ppc.h	/^  powerpc_data_min = 0,$/;"	e	enum:powerpc_data_index
powerpc_data_num	libavcodec/ppc/dsputil_ppc.h	/^  powerpc_data_num,$/;"	e	enum:powerpc_data_index
powerpc_data_sum	libavcodec/ppc/dsputil_ppc.h	/^  powerpc_data_sum,$/;"	e	enum:powerpc_data_index
powerpc_data_total	libavcodec/ppc/dsputil_ppc.h	/^  powerpc_data_total$/;"	e	enum:powerpc_data_index
powerpc_display_perf_report	libavcodec/ppc/dsputil_ppc.c	/^void powerpc_display_perf_report(void)$/;"	f
powerpc_perf_index	libavcodec/ppc/dsputil_ppc.h	/^enum powerpc_perf_index {$/;"	g
powerpc_perf_total	libavcodec/ppc/dsputil_ppc.h	/^  powerpc_perf_total$/;"	e	enum:powerpc_perf_index
ppMode	libavcodec/libpostproc/postprocess_internal.h	/^	PPMode ppMode;$/;"	m	struct:PPContext
pp_context_t	libavcodec/libpostproc/postprocess.h	/^typedef void pp_context_t;$/;"	t
pp_field_time	libavcodec/mpegvideo.h	/^    uint16_t pp_field_time;$/;"	m	struct:MpegEncContext
pp_free_context	libavcodec/libpostproc/postprocess.c	/^void pp_free_context(void *vc){$/;"	f
pp_free_mode	libavcodec/libpostproc/postprocess.c	/^void pp_free_mode(pp_mode_t *mode){$/;"	f
pp_get_context	libavcodec/libpostproc/postprocess.c	/^pp_context_t *pp_get_context(int width, int height, int cpuCaps){$/;"	f
pp_get_mode_by_name_and_quality	libavcodec/libpostproc/postprocess.c	/^pp_mode_t *pp_get_mode_by_name_and_quality(char *name, int quality)$/;"	f
pp_help	libavcodec/libpostproc/postprocess.c	/^char *pp_help=$/;"	v
pp_mode_t	libavcodec/libpostproc/postprocess.h	/^typedef void pp_mode_t;$/;"	t
pp_postprocess	libavcodec/libpostproc/postprocess.c	/^void  pp_postprocess(uint8_t * src[3], int srcStride[3],$/;"	f
pp_time	libavcodec/mpegvideo.h	/^    uint16_t pp_time;               \/\/\/< time distance between the last 2 p,s,i frames $/;"	m	struct:MpegEncContext
ppacb	libavcodec/ps2/mmi.h	118;"	d
ppach	libavcodec/ps2/mmi.h	115;"	d
ppm_encoder	libavcodec/pnm.c	/^AVCodec ppm_encoder = {$/;"	v
ppm_image_format	libavformat/pnm.c	/^AVImageFormat ppm_image_format = {$/;"	v
pps	libavcodec/h264.c	/^    PPS pps; \/\/FIXME move to Picture perhaps? (->no) do we need that?$/;"	m	struct:H264Context	file:
pps_buffer	libavcodec/h264.c	/^    PPS pps_buffer[MAX_PPS_COUNT];$/;"	m	struct:H264Context	file:
pq	libavcodec/vc9.c	/^    uint8_t pq, altpq;    \/\/\/< Current\/alternate frame quantizer scale$/;"	m	struct:VC9Context	file:
pquant_table	libavcodec/vc9.c	/^static const uint8_t pquant_table[3][32] = {$/;"	v	file:
pquantizer	libavcodec/vc9.c	/^    uint8_t pquantizer;           \/\/\/< Uniform (over sequence) quantizer in use$/;"	m	struct:VC9Context	file:
pr1	libavcodec/ra288.c	/^	float	pr1[36];$/;"	m	file:
pr2	libavcodec/ra288.c	/^	float	pr2[10];$/;"	m	file:
pre1	libavcodec/liba52/imdct.c	/^static complex_t pre1[128];$/;"	v	file:
pre2	libavcodec/liba52/imdct.c	/^static complex_t pre2[64];$/;"	v	file:
pre_cmp	ffmpeg.c	/^static int pre_cmp = FF_CMP_SAD;$/;"	v	file:
pre_dia_size	libavcodec/avcodec.h	/^    int pre_dia_size;$/;"	m	struct:AVCodecContext
pre_estimate_motion_thread	libavcodec/mpegvideo.c	/^static int pre_estimate_motion_thread(AVCodecContext *c, void *arg){$/;"	f	file:
pre_gb	libavcodec/4xm.c	/^    GetBitContext pre_gb;          \/\/\/< ac\/dc prefix$/;"	m	struct:FourXContext	file:
pre_me	ffmpeg.c	/^static int pre_me = 0;$/;"	v	file:
pre_me	libavcodec/avcodec.h	/^    int pre_me;$/;"	m	struct:AVCodecContext
pre_pass	libavcodec/mpegvideo.h	/^    int pre_pass;                      \/\/\/< = 1 for the pre pass $/;"	m	struct:MotionEstContext
pre_penalty_factor	libavcodec/mpegvideo.h	/^    int pre_penalty_factor;$/;"	m	struct:MotionEstContext
pre_process_video_frame	ffmpeg.c	/^static void pre_process_video_frame(AVInputStream *ist, AVPicture *picture, void **bufp)$/;"	f	file:
pre_vlc	libavcodec/4xm.c	/^    VLC pre_vlc;$/;"	m	struct:FourXContext	file:
prebuffer	ffserver.c	/^    int prebuffer;      \/* Number of millseconds early to start *\/$/;"	m	struct:FFStream	file:
pred	libavcodec/mpegvideo.h	/^    Predictor pred[5];$/;"	m	struct:RateControlContext
pred	libavcodec/ra288.c	/^static int pred(float *in, float *tgt, int n)$/;"	f	file:
pred16x16	libavcodec/h264.c	/^    void (*pred16x16[4+3])(uint8_t *src, int stride);$/;"	m	struct:H264Context	file:
pred16x16_128_dc_c	libavcodec/h264.c	/^static void pred16x16_128_dc_c(uint8_t *src, int stride){$/;"	f	file:
pred16x16_dc_c	libavcodec/h264.c	/^static void pred16x16_dc_c(uint8_t *src, int stride){$/;"	f	file:
pred16x16_horizontal_c	libavcodec/h264.c	/^static void pred16x16_horizontal_c(uint8_t *src, int stride){$/;"	f	file:
pred16x16_left_dc_c	libavcodec/h264.c	/^static void pred16x16_left_dc_c(uint8_t *src, int stride){$/;"	f	file:
pred16x16_plane_c	libavcodec/h264.c	/^static void pred16x16_plane_c(uint8_t *src, int stride){$/;"	f	file:
pred16x16_plane_compat_c	libavcodec/h264.c	/^static inline void pred16x16_plane_compat_c(uint8_t *src, int stride, const int svq3){$/;"	f	file:
pred16x16_plane_svq3_c	libavcodec/svq3.c	/^static void pred16x16_plane_svq3_c(uint8_t *src, int stride){$/;"	f	file:
pred16x16_top_dc_c	libavcodec/h264.c	/^static void pred16x16_top_dc_c(uint8_t *src, int stride){$/;"	f	file:
pred16x16_vertical_c	libavcodec/h264.c	/^static void pred16x16_vertical_c(uint8_t *src, int stride){$/;"	f	file:
pred4x4	libavcodec/h264.c	/^    void (*pred4x4  [9+3])(uint8_t *src, uint8_t *topright, int stride);\/\/FIXME move to dsp?$/;"	m	struct:H264Context	file:
pred4x4_128_dc_c	libavcodec/h264.c	/^static void pred4x4_128_dc_c(uint8_t *src, uint8_t *topright, int stride){$/;"	f	file:
pred4x4_dc_c	libavcodec/h264.c	/^static void pred4x4_dc_c(uint8_t *src, uint8_t *topright, int stride){$/;"	f	file:
pred4x4_down_left_c	libavcodec/h264.c	/^static void pred4x4_down_left_c(uint8_t *src, uint8_t *topright, int stride){$/;"	f	file:
pred4x4_down_left_svq3_c	libavcodec/svq3.c	/^static void pred4x4_down_left_svq3_c(uint8_t *src, uint8_t *topright, int stride){$/;"	f	file:
pred4x4_down_right_c	libavcodec/h264.c	/^static void pred4x4_down_right_c(uint8_t *src, uint8_t *topright, int stride){$/;"	f	file:
pred4x4_horizontal_c	libavcodec/h264.c	/^static void pred4x4_horizontal_c(uint8_t *src, uint8_t *topright, int stride){$/;"	f	file:
pred4x4_horizontal_down_c	libavcodec/h264.c	/^static void pred4x4_horizontal_down_c(uint8_t *src, uint8_t *topright, int stride){$/;"	f	file:
pred4x4_horizontal_up_c	libavcodec/h264.c	/^static void pred4x4_horizontal_up_c(uint8_t *src, uint8_t *topright, int stride){$/;"	f	file:
pred4x4_left_dc_c	libavcodec/h264.c	/^static void pred4x4_left_dc_c(uint8_t *src, uint8_t *topright, int stride){$/;"	f	file:
pred4x4_top_dc_c	libavcodec/h264.c	/^static void pred4x4_top_dc_c(uint8_t *src, uint8_t *topright, int stride){$/;"	f	file:
pred4x4_vertical_c	libavcodec/h264.c	/^static void pred4x4_vertical_c(uint8_t *src, uint8_t *topright, int stride){$/;"	f	file:
pred4x4_vertical_left_c	libavcodec/h264.c	/^static void pred4x4_vertical_left_c(uint8_t *src, uint8_t *topright, int stride){$/;"	f	file:
pred4x4_vertical_right_c	libavcodec/h264.c	/^static void pred4x4_vertical_right_c(uint8_t *src, uint8_t *topright, int stride){$/;"	f	file:
pred8x8	libavcodec/h264.c	/^    void (*pred8x8  [4+3])(uint8_t *src, int stride);$/;"	m	struct:H264Context	file:
pred8x8_128_dc_c	libavcodec/h264.c	/^static void pred8x8_128_dc_c(uint8_t *src, int stride){$/;"	f	file:
pred8x8_dc_c	libavcodec/h264.c	/^static void pred8x8_dc_c(uint8_t *src, int stride){$/;"	f	file:
pred8x8_horizontal_c	libavcodec/h264.c	/^static void pred8x8_horizontal_c(uint8_t *src, int stride){$/;"	f	file:
pred8x8_left_dc_c	libavcodec/h264.c	/^static void pred8x8_left_dc_c(uint8_t *src, int stride){$/;"	f	file:
pred8x8_plane_c	libavcodec/h264.c	/^static void pred8x8_plane_c(uint8_t *src, int stride){$/;"	f	file:
pred8x8_top_dc_c	libavcodec/h264.c	/^static void pred8x8_top_dc_c(uint8_t *src, int stride){$/;"	f	file:
pred8x8_vertical_c	libavcodec/h264.c	/^static void pred8x8_vertical_c(uint8_t *src, int stride){$/;"	f	file:
pred_16x8_motion	libavcodec/h264.c	/^static inline void pred_16x8_motion(H264Context * const h, int n, int list, int ref, int * const mx, int * const my){$/;"	f	file:
pred_8x16_motion	libavcodec/h264.c	/^static inline void pred_8x16_motion(H264Context * const h, int n, int list, int ref, int * const mx, int * const my){$/;"	f	file:
pred_block	libavcodec/snow.c	/^static void pred_block(SnowContext *s, uint8_t *dst, uint8_t *src, uint8_t *tmp, int stride, int sx, int sy, int b_w, int b_h, BlockNode *block, int plane_index, int w, int h){$/;"	f	file:
pred_dir_table	libavcodec/mpegvideo.h	/^    uint8_t *pred_dir_table;      \/\/\/< used to store pred_dir for partitioned decoding $/;"	m	struct:MpegEncContext
pred_direct_motion	libavcodec/h264.c	/^static inline void pred_direct_motion(H264Context * const h, int *mb_type){$/;"	f	file:
pred_intra_mode	libavcodec/h264.c	/^static inline int pred_intra_mode(H264Context *h, int n){$/;"	f	file:
pred_mode	libavcodec/h264data.h	/^    uint8_t pred_mode;$/;"	m	struct:IMbInfo
pred_motion	libavcodec/h264.c	/^static inline void pred_motion(H264Context * const h, int n, int part_width, int list, int ref, int * const mx, int * const my){$/;"	f	file:
pred_non_zero_count	libavcodec/h264.c	/^static inline int pred_non_zero_count(H264Context *h, int n){$/;"	f	file:
pred_pskip_motion	libavcodec/h264.c	/^static inline void pred_pskip_motion(H264Context * const h, int * const mx, int * const my){$/;"	f	file:
pred_weight_table	libavcodec/h264.c	/^static int pred_weight_table(H264Context *h){$/;"	f	file:
pred_x	libavcodec/mpegvideo.h	/^    int pred_x;$/;"	m	struct:MotionEstContext
pred_y	libavcodec/mpegvideo.h	/^    int pred_y;$/;"	m	struct:MotionEstContext
predecode_packet	libavformat/mpeg.c	/^    PacketDesc *predecode_packet;$/;"	m	file:
predict	libavcodec/ffv1.c	/^static inline int predict(int_fast16_t *src, int_fast16_t *last){$/;"	f	file:
predict_size	libavcodec/ratecontrol.c	/^static double predict_size(Predictor *p, double q, double var)$/;"	f	file:
predicterror_buffer_a	libavcodec/alac.c	/^    int32_t *predicterror_buffer_a;$/;"	m	file:
predicterror_buffer_b	libavcodec/alac.c	/^    int32_t *predicterror_buffer_b;$/;"	m	file:
prediction_method	libavcodec/avcodec.h	/^     int prediction_method;$/;"	m	struct:AVCodecContext
predictor	ffmpeg.c	/^static int predictor = 0;$/;"	v	file:
predictor	libavcodec/adpcm.c	/^    int predictor;$/;"	m	struct:ADPCMChannelStatus	file:
predictor	libavcodec/huffyuv.c	/^    Predictor predictor;$/;"	m	struct:HYuvContext	file:
predictor_calc_error	libavcodec/sonic.c	/^static int predictor_calc_error(int *k, int *state, int order, int error)$/;"	f	file:
predictor_decompress_fir_adapt	libavcodec/alac.c	/^static void predictor_decompress_fir_adapt(int32_t *error_buffer,$/;"	f	file:
predictor_init_state	libavcodec/sonic.c	/^static void predictor_init_state(int *k, int *state, int order)$/;"	f	file:
predictor_k	libavcodec/sonic.c	/^    int *predictor_k;$/;"	m	struct:SonicContext	file:
predictor_state	libavcodec/sonic.c	/^    int *predictor_state[MAX_CHANNELS];$/;"	m	struct:SonicContext	file:
predictors	libavcodec/vmdav.c	/^    short predictors[2];$/;"	m	struct:VmdAudioContext	file:
prefetch	libavcodec/alpha/asm.h	71;"	d
prefetch	libavcodec/alpha/asm.h	86;"	d
prefetch_en	libavcodec/alpha/asm.h	72;"	d
prefetch_en	libavcodec/alpha/asm.h	87;"	d
prefetch_m	libavcodec/alpha/asm.h	73;"	d
prefetch_m	libavcodec/alpha/asm.h	88;"	d
prefetch_men	libavcodec/alpha/asm.h	74;"	d
prefetch_men	libavcodec/alpha/asm.h	89;"	d
prefetchnta	libavcodec/i386/mmx.h	239;"	d
prefetchnta	libavcodec/libpostproc/postprocess.c	/^static inline void prefetchnta(void *p)$/;"	f	file:
prefetcht0	libavcodec/i386/mmx.h	236;"	d
prefetcht0	libavcodec/libpostproc/postprocess.c	/^static inline void prefetcht0(void *p)$/;"	f	file:
prefetcht1	libavcodec/i386/mmx.h	237;"	d
prefetcht1	libavcodec/libpostproc/postprocess.c	/^static inline void prefetcht1(void *p)$/;"	f	file:
prefetcht2	libavcodec/i386/mmx.h	238;"	d
prefetcht2	libavcodec/libpostproc/postprocess.c	/^static inline void prefetcht2(void *p)$/;"	f	file:
prefix	config.mak	/^prefix=\/usr\/local$/;"	m
prefix	libavformat/avidec.c	/^    int prefix;                       \/\/\/< normally 'd'<<8 + 'c' or 'w'<<8 + 'b'$/;"	m	struct:AVIStream	file:
prefix	libavformat/gifdec.c	/^    uint16_t prefix[SIZTABLE];$/;"	m	struct:GifState	file:
prefix_count	libavformat/avidec.c	/^    int prefix_count;$/;"	m	struct:AVIStream	file:
preflag	libavcodec/mpegaudiodec.c	/^    int preflag;$/;"	m	struct:GranuleDef	file:
preload	libavformat/avformat.h	/^    int preload;$/;"	m	struct:AVFormatContext
premux_packet	libavformat/mpeg.c	/^    PacketDesc *premux_packet;$/;"	m	file:
prepare_grab	ffmpeg.c	/^static void prepare_grab(void)$/;"	f	file:
prepare_sdp_description	ffserver.c	/^static int prepare_sdp_description(FFStream *stream, uint8_t **pbuffer, $/;"	f	file:
preroll	libavformat/asf.h	/^    uint32_t preroll;		\/\/ timestamp of the first packet, in milliseconds$/;"	m
preroll_time	libavformat/asf-enc.c	/^static int preroll_time = 2000;$/;"	v	file:
prev	libavcodec/adx.c	/^    PREV prev[2];$/;"	m	file:
prev2	libavcodec/mace.c	/^  short index, lev, factor, prev2, previous, level;$/;"	m	struct:MACEContext	file:
prev_block_len_bits	libavcodec/wmadec.c	/^    int prev_block_len_bits; \/* log2 of prev block length *\/$/;"	m	struct:WMADecodeContext	file:
prev_frame	libavcodec/truemotion1.c	/^    AVFrame prev_frame;$/;"	m	struct:TrueMotion1Context	file:
prev_frame	libavcodec/vmdav.c	/^    AVFrame prev_frame;$/;"	m	struct:VmdVideoContext	file:
prev_frame_num	libavcodec/h264.c	/^    int prev_frame_num;           \/\/\/< frame_num of the last pic for POC type 1\/2$/;"	m	struct:H264Context	file:
prev_frame_num_offset	libavcodec/h264.c	/^    int prev_frame_num_offset;    \/\/\/< for POC type 2$/;"	m	struct:H264Context	file:
prev_mb_skipped	libavcodec/h264.c	/^    int prev_mb_skipped; \/\/FIXME remove (IMHO not used)$/;"	m	struct:H264Context	file:
prev_packet_sent_time	libavformat/asf.h	/^    int prev_packet_sent_time;$/;"	m
prev_pict_types	libavcodec/mpegvideo.h	/^    uint8_t *prev_pict_types;     \/\/\/< previous picture types in bitstream order, used for mb skip $/;"	m	struct:MpegEncContext
prev_poc_lsb	libavcodec/h264.c	/^    int prev_poc_lsb;             \/\/\/< poc_lsb of the last reference pic for POC type 0$/;"	m	struct:H264Context	file:
prev_poc_msb	libavcodec/h264.c	/^    int prev_poc_msb;             \/\/\/< poc_msb of the last reference pic for POC type 0$/;"	m	struct:H264Context	file:
prev_run	libavcodec/dv.c	/^    int prev_run[4];$/;"	m	struct:EncBlockInfo	file:
prev_sample	libavcodec/adpcm.c	/^    int prev_sample;$/;"	m	struct:ADPCMChannelStatus	file:
prevh	libavcodec/ps2/mmi.h	121;"	d
preview_obmc	libavcodec/h263.c	/^static void preview_obmc(MpegEncContext *s){$/;"	f	file:
previous	libavcodec/mace.c	/^  short index, lev, factor, prev2, previous, level;$/;"	m	struct:MACEContext	file:
previous_line_cbpcy	libavcodec/vc9.c	/^    uint8_t *previous_line_cbpcy; \/\/\/< To use for predicted CBPCY$/;"	m	struct:VC9Context	file:
previous_mba	libavcodec/h261.c	/^    int previous_mba;$/;"	m	struct:H261Context	file:
print_atom	libavformat/mov.c	/^void print_atom(const char *str, MOV_atom_t atom)$/;"	f
print_atom	libavformat/mov.c	330;"	d	file:
print_bin	libavcodec/bitstream.h	/^static inline void print_bin(int bits, int n){$/;"	f
print_error	cmdutils.c	/^void print_error(const char *filename, int err)$/;"	f
print_guid	libavformat/asf.c	/^static void print_guid(const GUID *g)$/;"	f	file:
print_long_term	libavcodec/h264.c	/^static void print_long_term(H264Context *h) {$/;"	f	file:
print_report	ffmpeg.c	/^static void print_report(AVFormatContext **output_files,$/;"	f	file:
print_short_term	libavcodec/h264.c	/^static void print_short_term(H264Context *h) {$/;"	f	file:
print_stats	libavcodec/msmpeg4.c	/^void print_stats(void)$/;"	f
print_tag	libavformat/avidec.c	/^static void print_tag(const char *str, unsigned int tag, int size)$/;"	f	file:
print_tag	libavformat/nsvdec.c	/^static void print_tag(const char *str, unsigned int tag, int size)$/;"	f	file:
printf	libavcodec/common.h	533;"	d
printf	libavcodec/eval.c	205;"	d	file:
priv	libavformat/avformat.h	/^    void  *priv;$/;"	m	struct:AVPacket
priv_data	libavcodec/avcodec.h	/^    void *priv_data;$/;"	m	struct:AVCodecContext
priv_data	libavcodec/avcodec.h	/^    void *priv_data;$/;"	m	struct:AVCodecParserContext
priv_data	libavformat/avformat.h	/^    void *priv_data;$/;"	m	struct:AVFormatContext
priv_data	libavformat/avformat.h	/^    void *priv_data;$/;"	m	struct:AVStream
priv_data	libavformat/avio.h	/^    void *priv_data;$/;"	m	struct:URLContext
priv_data_size	libavcodec/avcodec.h	/^    int priv_data_size;$/;"	m	struct:AVCodec
priv_data_size	libavcodec/avcodec.h	/^    int priv_data_size;$/;"	m	struct:AVCodecParser
priv_data_size	libavformat/avformat.h	/^    int priv_data_size;$/;"	m	struct:AVInputFormat
priv_data_size	libavformat/avformat.h	/^    int priv_data_size;$/;"	m	struct:AVOutputFormat
process_ea_header	libavformat/electronicarts.c	/^static int process_ea_header(AVFormatContext *s) {$/;"	f	file:
process_ipmovie_chunk	libavformat/ipmovie.c	/^static int process_ipmovie_chunk(IPMVEContext *s, ByteIOContext *pb, $/;"	f	file:
process_line	libavformat/http.c	/^static int process_line(HTTPContext *s, char *line, int line_count)$/;"	f	file:
prodsum	libavcodec/ra288.c	/^static void prodsum(float *tgt, float *src, int len, int n)$/;"	f	file:
profile	libavcodec/avcodec.h	/^     int profile;$/;"	m	struct:AVCodecContext
profile	libavcodec/vc9.c	/^    int profile;          \/\/\/< 2bits, Profile$/;"	m	struct:VC9Context	file:
profile_idc	libavcodec/h264.c	/^    int profile_idc;$/;"	m	struct:SPS	file:
profile_level_id	libavformat/rtp.h	/^    int profile_level_id;$/;"	m	struct:rtp_payload_data_s
progressive_frame	libavcodec/mpegvideo.h	/^    int progressive_frame;$/;"	m	struct:MpegEncContext
progressive_sequence	libavcodec/mpegvideo.h	/^    int progressive_sequence;$/;"	m	struct:MpegEncContext
progressive_sequence	libavcodec/parser.c	/^    int progressive_sequence;$/;"	m	struct:ParseContext1	file:
prot	libavformat/avio.h	/^    struct URLProtocol *prot;$/;"	m	struct:URLContext
protocol	ffserver.c	/^    char protocol[16];$/;"	m	struct:HTTPContext	file:
protocol	libavformat/rtsp.c	/^    enum RTSPProtocol protocol;$/;"	m	struct:RTSPState	file:
protocol	libavformat/rtsp.h	/^    enum RTSPProtocol protocol;$/;"	m	struct:RTSPTransportField
provider_name	libavformat/mpegts.c	/^    char *provider_name;$/;"	m	struct:MpegTSService	file:
provider_name	libavformat/mpegtsenc.c	/^    char *provider_name;$/;"	m	struct:MpegTSService	file:
psadbw_m2r	libavcodec/i386/mmx.h	241;"	d
psadbw_r2r	libavcodec/i386/mmx.h	242;"	d
pshufd_r2r	libavcodec/i386/mmx.h	255;"	d
pshufhw_m2r	libavcodec/i386/mmx.h	250;"	d
pshufhw_r2r	libavcodec/i386/mmx.h	251;"	d
pshuflw_m2r	libavcodec/i386/mmx.h	252;"	d
pshuflw_r2r	libavcodec/i386/mmx.h	253;"	d
pshufw_m2r	libavcodec/i386/mmx.h	244;"	d
pshufw_r2r	libavcodec/i386/mmx.h	245;"	d
psize	libavformat/ogg2.h	/^    unsigned int psize;$/;"	m	struct:ogg_stream
pslld_i2r	libavcodec/i386/mmx.h	119;"	d
pslld_m2r	libavcodec/i386/mmx.h	120;"	d
pslld_r2r	libavcodec/i386/mmx.h	121;"	d
pslldq_i2r	libavcodec/i386/mmx.h	266;"	d
psllq_i2r	libavcodec/i386/mmx.h	122;"	d
psllq_m2r	libavcodec/i386/mmx.h	123;"	d
psllq_r2r	libavcodec/i386/mmx.h	124;"	d
psllw_i2r	libavcodec/i386/mmx.h	125;"	d
psllw_m2r	libavcodec/i386/mmx.h	126;"	d
psllw_r2r	libavcodec/i386/mmx.h	127;"	d
psm_es_type	libavformat/mpeg.c	/^    unsigned char psm_es_type[256];$/;"	m	struct:MpegDemuxContext	file:
psnr	ffmpeg.c	/^static double psnr(double d){$/;"	f	file:
psp_oformat	libavformat/movenc.c	/^static AVOutputFormat psp_oformat = {$/;"	v	file:
psrad_i2r	libavcodec/i386/mmx.h	129;"	d
psrad_m2r	libavcodec/i386/mmx.h	130;"	d
psrad_r2r	libavcodec/i386/mmx.h	131;"	d
psrah	libavcodec/ps2/mmi.h	142;"	d
psraw	libavcodec/ps2/mmi.h	112;"	d
psraw_i2r	libavcodec/i386/mmx.h	132;"	d
psraw_m2r	libavcodec/i386/mmx.h	133;"	d
psraw_r2r	libavcodec/i386/mmx.h	134;"	d
psrld_i2r	libavcodec/i386/mmx.h	136;"	d
psrld_m2r	libavcodec/i386/mmx.h	137;"	d
psrld_r2r	libavcodec/i386/mmx.h	138;"	d
psrldq_i2r	libavcodec/i386/mmx.h	267;"	d
psrlq_i2r	libavcodec/i386/mmx.h	139;"	d
psrlq_m2r	libavcodec/i386/mmx.h	140;"	d
psrlq_r2r	libavcodec/i386/mmx.h	141;"	d
psrlw_i2r	libavcodec/i386/mmx.h	142;"	d
psrlw_m2r	libavcodec/i386/mmx.h	143;"	d
psrlw_r2r	libavcodec/i386/mmx.h	144;"	d
pstart	libavformat/ogg2.h	/^    unsigned int pstart;$/;"	m	struct:ogg_stream
pstrcat	libavformat/cutils.c	/^char *pstrcat(char *buf, int buf_size, const char *s)$/;"	f
pstrcpy	libavformat/cutils.c	/^void pstrcpy(char *buf, int buf_size, const char *str)$/;"	f
psubb_m2r	libavcodec/i386/mmx.h	146;"	d
psubb_r2r	libavcodec/i386/mmx.h	147;"	d
psubd_m2r	libavcodec/i386/mmx.h	148;"	d
psubd_r2r	libavcodec/i386/mmx.h	149;"	d
psubh	libavcodec/ps2/mmi.h	139;"	d
psubsb_m2r	libavcodec/i386/mmx.h	153;"	d
psubsb_r2r	libavcodec/i386/mmx.h	154;"	d
psubsw_m2r	libavcodec/i386/mmx.h	155;"	d
psubsw_r2r	libavcodec/i386/mmx.h	156;"	d
psubusb_m2r	libavcodec/i386/mmx.h	158;"	d
psubusb_r2r	libavcodec/i386/mmx.h	159;"	d
psubusw_m2r	libavcodec/i386/mmx.h	160;"	d
psubusw_r2r	libavcodec/i386/mmx.h	161;"	d
psubw	libavcodec/ps2/mmi.h	109;"	d
psubw_m2r	libavcodec/i386/mmx.h	150;"	d
psubw_r2r	libavcodec/i386/mmx.h	151;"	d
psycho_acoustic_model	libavcodec/mpegaudio.c	/^static void psycho_acoustic_model(MpegAudioContext *s, short smr[SBLIMIT])$/;"	f	file:
pt	libavformat/rtp.h	/^    int pt;$/;"	m	struct:AVRtpPayloadType_s
ptr	libavformat/img.c	/^    void *ptr;$/;"	m	file:
ptr_lastgob	libavcodec/mpegvideo.h	/^    uint8_t *ptr_lastgob;$/;"	m	struct:MpegEncContext
pts	ffmpeg.c	/^    int64_t       pts;       \/* current pts *\/$/;"	m	struct:AVInputStream	file:
pts	ffplay.c	/^    double pts; \/* presentation time stamp for this picture *\/$/;"	m	struct:VideoPicture	file:
pts	libavcodec/avcodec.h	/^    int64_t pts;     \/* pts of the current frame *\/$/;"	m	struct:AVCodecParserContext
pts	libavformat/avformat.h	/^    AVFrac pts;$/;"	m	struct:AVStream
pts	libavformat/avformat.h	/^    int64_t pts; \/* presentation time stamp in AV_TIME_BASE units (or$/;"	m	struct:AVPacket
pts	libavformat/ffm.c	/^    int64_t pts;$/;"	m	struct:FFMContext	file:
pts	libavformat/ffm.c	/^    int64_t pts;$/;"	m	struct:FFMStream	file:
pts	libavformat/flic.c	/^    int64_t pts;$/;"	m	struct:FlicDemuxContext	file:
pts	libavformat/idcin.c	/^    int64_t pts;$/;"	m	struct:IdcinDemuxContext	file:
pts	libavformat/mpeg.c	/^    int64_t pts;$/;"	m	struct:PacketDesc	file:
pts	libavformat/mpegts.c	/^    int64_t pts, dts;$/;"	m	struct:PESContext	file:
pts	libavformat/psxstr.c	/^    int64_t pts;$/;"	m	struct:StrDemuxContext	file:
pts	libavformat/segafilm.c	/^  int64_t pts;$/;"	m	file:
pts	libavformat/sierravmd.c	/^  int64_t pts;$/;"	m	file:
pts	libavformat/wc3movie.c	/^    int64_t pts;$/;"	m	struct:Wc3DemuxContext	file:
pts_stream_index	ffserver.c	/^    int pts_stream_index;        \/* stream we choose as clock reference *\/$/;"	m	struct:HTTPContext	file:
pts_wrap_bits	libavformat/avformat.h	/^    int pts_wrap_bits; \/* number of bits in pts (used for wrapping control) *\/$/;"	m	struct:AVStream
ptype2mb_type	libavcodec/mpeg12data.h	/^static const uint32_t ptype2mb_type[7] = {$/;"	v
punpckhbw_m2r	libavcodec/i386/mmx.h	163;"	d
punpckhbw_r2r	libavcodec/i386/mmx.h	164;"	d
punpckhdq_m2r	libavcodec/i386/mmx.h	165;"	d
punpckhdq_r2r	libavcodec/i386/mmx.h	166;"	d
punpckhqdq_r2r	libavcodec/i386/mmx.h	270;"	d
punpckhwd_m2r	libavcodec/i386/mmx.h	167;"	d
punpckhwd_r2r	libavcodec/i386/mmx.h	168;"	d
punpcklbw_m2r	libavcodec/i386/mmx.h	170;"	d
punpcklbw_r2r	libavcodec/i386/mmx.h	171;"	d
punpckldq_m2r	libavcodec/i386/mmx.h	172;"	d
punpckldq_r2r	libavcodec/i386/mmx.h	173;"	d
punpcklqdq_r2r	libavcodec/i386/mmx.h	269;"	d
punpcklwd_m2r	libavcodec/i386/mmx.h	174;"	d
punpcklwd_r2r	libavcodec/i386/mmx.h	175;"	d
put	libavcodec/sh4/dsputil_align.c	46;"	d	file:
put16	libavformat/mpegtsenc.c	/^static inline void put16(uint8_t **q_ptr, int val)$/;"	f	file:
put32	libavcodec/png.c	/^static void put32(uint8_t **b, unsigned int v){$/;"	f	file:
putDescr	libavformat/movenc.c	/^static void putDescr(ByteIOContext *pb, int tag, int size)$/;"	f	file:
put_au_header	libavformat/au.c	/^static int put_au_header(ByteIOContext *pb, AVCodecContext *enc)$/;"	f	file:
put_be16	libavformat/aviobuf.c	/^void put_be16(ByteIOContext *s, unsigned int val)$/;"	f
put_be24	libavformat/flvenc.c	/^static void put_be24(ByteIOContext *pb, int value)$/;"	f	file:
put_be32	libavformat/aviobuf.c	/^void put_be32(ByteIOContext *s, unsigned int val)$/;"	f
put_be64	libavformat/aviobuf.c	/^void put_be64(ByteIOContext *s, uint64_t val)$/;"	f
put_be64_double	libavformat/aviobuf.c	/^void put_be64_double(ByteIOContext *s, double val)$/;"	f
put_bits	libavcodec/bitstream.h	/^static inline void put_bits(PutBitContext *s, int n, unsigned int value)$/;"	f
put_bits_count	libavcodec/bitstream.h	/^static inline int put_bits_count(PutBitContext *s)$/;"	f
put_bits_left	libavcodec/dv.c	/^static inline int put_bits_left(PutBitContext* s)$/;"	f	file:
put_bmp_header	libavformat/avienc.c	/^void put_bmp_header(ByteIOContext *pb, AVCodecContext *enc, const CodecTag *tags, int for_asf)$/;"	f
put_buffer	libavformat/aviobuf.c	/^void put_buffer(ByteIOContext *s, const unsigned char *buf, int size)$/;"	f
put_byte	libavformat/aviobuf.c	/^void put_byte(ByteIOContext *s, int b)$/;"	f
put_cabac	libavcodec/cabac.h	/^static inline void put_cabac(CABACContext *c, uint8_t * const state, int bit){$/;"	f
put_cabac_bit	libavcodec/cabac.h	/^static inline void put_cabac_bit(CABACContext *c, int b){$/;"	f
put_cabac_bypass	libavcodec/cabac.h	/^static inline void put_cabac_bypass(CABACContext *c, int bit){$/;"	f
put_cabac_static	libavcodec/cabac.h	/^static inline void put_cabac_static(CABACContext *c, int RangeLPS, int bit){$/;"	f
put_cabac_terminate	libavcodec/cabac.h	/^static inline int put_cabac_terminate(CABACContext *c, int bit){$/;"	f
put_cabac_u	libavcodec/cabac.h	/^static inline void put_cabac_u(CABACContext *c, uint8_t * state, int v, int max, int max_index, int truncated){$/;"	f
put_cabac_ueg	libavcodec/cabac.h	/^static inline void put_cabac_ueg(CABACContext *c, uint8_t * state, int v, int max, int is_signed, int k, int max_index){$/;"	f
put_cached_image	vhook/imlib2.c	/^static void put_cached_image(ContextInfo *ci, Imlib_Image image, int width, int height)$/;"	f	file:
put_chunk	libavformat/asf-enc.c	/^static void put_chunk(AVFormatContext *s, int type, int payload_length, int flags)$/;"	f	file:
put_dc	libavcodec/error_resilience.c	/^static void put_dc(MpegEncContext *s, uint8_t *dest_y, uint8_t *dest_cb, uint8_t *dest_cr, int mb_x, int mb_y)$/;"	f	file:
put_dct	libavcodec/mpegvideo.c	/^static inline void put_dct(MpegEncContext *s, $/;"	f	file:
put_fifo	libavformat/utils.c	/^int put_fifo(ByteIOContext *pb, FifoBuffer *f, int buf_size, uint8_t **rptr_ptr)$/;"	f
put_flush_packet	libavformat/aviobuf.c	/^void put_flush_packet(ByteIOContext *s)$/;"	f
put_frame	libavformat/asf-enc.c	/^static void put_frame($/;"	f	file:
put_guid	libavformat/asf-enc.c	/^static void put_guid(ByteIOContext *s, const GUID *g)$/;"	f	file:
put_h264_chroma_pixels_tab	libavcodec/dsputil.h	/^    h264_chroma_mc_func put_h264_chroma_pixels_tab[3];$/;"	m	struct:DSPContext
put_h264_qpel_pixels_tab	libavcodec/dsputil.h	/^    qpel_mc_func put_h264_qpel_pixels_tab[3][16];$/;"	m	struct:DSPContext
put_header	libavcodec/mpeg12.c	/^static void put_header(MpegEncContext *s, int header)$/;"	f	file:
put_header	libavformat/asf-enc.c	/^static int64_t put_header(ByteIOContext *pb, const GUID *g)$/;"	f	file:
put_huffman_table	libavcodec/mjpeg.c	/^static int put_huffman_table(MpegEncContext *s, int table_class, int table_id,$/;"	f	file:
put_le16	libavformat/aviobuf.c	/^void put_le16(ByteIOContext *s, unsigned int val)$/;"	f
put_le32	libavformat/aviobuf.c	/^void put_le32(ByteIOContext *s, unsigned int val)$/;"	f
put_le64	libavformat/aviobuf.c	/^void put_le64(ByteIOContext *s, uint64_t val)$/;"	f
put_marker	libavcodec/mjpeg.c	/^static inline void put_marker(PutBitContext *p, int code)$/;"	f	file:
put_mb_modes	libavcodec/mpeg12.c	/^static inline void put_mb_modes(MpegEncContext *s, int n, int bits, $/;"	f	file:
put_mspel8_mc00_c	libavcodec/dsputil.c	/^static void put_mspel8_mc00_c (uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc00_c	libavcodec/sh4/qpel.c	/^static void put_mspel8_mc00_c (uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc02_c	libavcodec/dsputil.c	/^static void put_mspel8_mc02_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc02_c	libavcodec/sh4/qpel.c	/^static void put_mspel8_mc02_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc10_c	libavcodec/dsputil.c	/^static void put_mspel8_mc10_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc10_c	libavcodec/sh4/qpel.c	/^static void put_mspel8_mc10_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc12_c	libavcodec/dsputil.c	/^static void put_mspel8_mc12_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc12_c	libavcodec/sh4/qpel.c	/^static void put_mspel8_mc12_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc20_c	libavcodec/dsputil.c	/^static void put_mspel8_mc20_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc20_c	libavcodec/sh4/qpel.c	/^static void put_mspel8_mc20_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc22_c	libavcodec/dsputil.c	/^static void put_mspel8_mc22_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc22_c	libavcodec/sh4/qpel.c	/^static void put_mspel8_mc22_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc30_c	libavcodec/dsputil.c	/^static void put_mspel8_mc30_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc30_c	libavcodec/sh4/qpel.c	/^static void put_mspel8_mc30_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc32_c	libavcodec/dsputil.c	/^static void put_mspel8_mc32_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc32_c	libavcodec/sh4/qpel.c	/^static void put_mspel8_mc32_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel_pixels_tab	libavcodec/dsputil.h	/^    qpel_mc_func put_mspel_pixels_tab[8];$/;"	m	struct:DSPContext
put_no_rnd_pixels16_c	libavcodec/sh4/dsputil_align.c	318;"	d	file:
put_no_rnd_pixels16_l2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(put_no_rnd_pixels16_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f
put_no_rnd_pixels16_l2_c	libavcodec/dsputil.c	/^static void put_no_rnd_pixels16_l2_c(uint8_t *dst, const uint8_t *a, const uint8_t *b, int stride, int h){$/;"	f	file:
put_no_rnd_pixels16_mmx	libavcodec/i386/dsputil_mmx.c	1898;"	d	file:
put_no_rnd_pixels16_o	libavcodec/sh4/dsputil_align.c	309;"	d	file:
put_no_rnd_pixels16_x2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(put_no_rnd_pixels16_x2)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f
put_no_rnd_pixels16_xy2_altivec	libavcodec/ppc/dsputil_altivec.c	/^void put_no_rnd_pixels16_xy2_altivec(uint8_t * block, const uint8_t * pixels, int line_size, int h)$/;"	f
put_no_rnd_pixels16_y2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(put_no_rnd_pixels16_y2)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f
put_no_rnd_pixels8_c	libavcodec/sh4/dsputil_align.c	317;"	d	file:
put_no_rnd_pixels8_l2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(put_no_rnd_pixels8_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f
put_no_rnd_pixels8_l2_c	libavcodec/dsputil.c	/^static void put_no_rnd_pixels8_l2_c(uint8_t *dst, const uint8_t *a, const uint8_t *b, int stride, int h){$/;"	f	file:
put_no_rnd_pixels8_mmx	libavcodec/i386/dsputil_mmx.c	1897;"	d	file:
put_no_rnd_pixels8_o	libavcodec/sh4/dsputil_align.c	308;"	d	file:
put_no_rnd_pixels8_x2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(put_no_rnd_pixels8_x2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
put_no_rnd_pixels8_xy2_altivec	libavcodec/ppc/dsputil_altivec.c	/^void put_no_rnd_pixels8_xy2_altivec(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
put_no_rnd_pixels8_y2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(put_no_rnd_pixels8_y2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
put_no_rnd_pixels_l2	libavcodec/dsputil.h	/^    void (*put_no_rnd_pixels_l2[2])(uint8_t *block\/*align width (8 or 16)*\/, const uint8_t *a\/*align 1*\/, const uint8_t *b\/*align 1*\/, int line_size, int h);$/;"	m	struct:DSPContext
put_no_rnd_pixels_tab	libavcodec/dsputil.h	/^    op_pixels_func put_no_rnd_pixels_tab[4][4];$/;"	m	struct:DSPContext
put_no_rnd_qpel_pixels_tab	libavcodec/dsputil.h	/^    qpel_mc_func put_no_rnd_qpel_pixels_tab[2][16];$/;"	m	struct:DSPContext
put_obmc	libavcodec/mpegvideo.c	/^static inline void put_obmc(uint8_t *dst, uint8_t *src[5], int stride){$/;"	f	file:
put_pack_header	libavformat/mpeg.c	/^static int put_pack_header(AVFormatContext *ctx, $/;"	f	file:
put_packetheader	libavformat/nut.c	/^static int put_packetheader(NUTContext *nut, ByteIOContext *bc, int max_size, int calculate_checksum)$/;"	f	file:
put_padding_packet	libavformat/mpeg.c	/^static void put_padding_packet(AVFormatContext *ctx, ByteIOContext *pb,int packet_bytes)$/;"	f	file:
put_payload_header	libavformat/asf-enc.c	/^static void put_payload_header($/;"	f	file:
put_payload_parsing_info	libavformat/asf-enc.c	/^static int put_payload_parsing_info($/;"	f	file:
put_pixel	tests/rotozoom.c	/^void put_pixel(int x, int y, int r, int g, int b)$/;"	f
put_pixel	tests/videogen.c	/^void put_pixel(int x, int y, int r, int g, int b)$/;"	f
put_pixels16_altivec	libavcodec/ppc/dsputil_altivec.c	/^void put_pixels16_altivec(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
put_pixels16_axp_asm	libavcodec/alpha/dsputil_alpha.c	/^void put_pixels16_axp_asm(uint8_t *block, const uint8_t *pixels,$/;"	f
put_pixels16_c	libavcodec/sh4/dsputil_align.c	314;"	d	file:
put_pixels16_l2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(put_pixels16_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f
put_pixels16_l2	libavcodec/ppc/dsputil_h264_altivec.c	/^} static inline void put_pixels16_l2(uint8_t * dst, const uint8_t * src1, const uint8_t * src2, int dst_stride, int src_stride1, int src_stride2, int h) {$/;"	f	file:
put_pixels16_l2_altivec	libavcodec/ppc/dsputil_h264_altivec.c	224;"	d	file:
put_pixels16_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void put_pixels16_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
put_pixels16_mmi	libavcodec/ps2/dsputil_mmi.c	/^static void put_pixels16_mmi(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
put_pixels16_mmx	libavcodec/i386/dsputil_mmx.c	/^static void put_pixels16_mmx(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
put_pixels16_x2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(put_pixels16_x2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
put_pixels16_x2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void put_pixels16_x2_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
put_pixels16_xy2_altivec	libavcodec/ppc/dsputil_altivec.c	/^void put_pixels16_xy2_altivec(uint8_t * block, const uint8_t * pixels, int line_size, int h)$/;"	f
put_pixels16_xy2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void put_pixels16_xy2_mlib(uint8_t * dest, const uint8_t * ref,$/;"	f	file:
put_pixels16_y2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(put_pixels16_y2)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f
put_pixels16_y2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void put_pixels16_y2_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
put_pixels4_c	libavcodec/sh4/dsputil_align.c	/^static void put_pixels4_c(uint8_t *dest,const uint8_t *ref, const int stride,int height)$/;"	f	file:
put_pixels4_l2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(put_pixels4_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f
put_pixels4_mmx	libavcodec/i386/dsputil_mmx.c	/^static void put_pixels4_mmx(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
put_pixels8_c	libavcodec/sh4/dsputil_align.c	313;"	d	file:
put_pixels8_l2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(put_pixels8_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f
put_pixels8_l2	libavcodec/ppc/dsputil_h264_altivec.c	/^static inline void put_pixels8_l2(uint8_t * dst, const uint8_t * src1, const uint8_t * src2, int dst_stride, int src_stride1, int src_stride2, int h) {$/;"	f	file:
put_pixels8_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void put_pixels8_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
put_pixels8_mmi	libavcodec/ps2/dsputil_mmi.c	/^static void put_pixels8_mmi(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
put_pixels8_mmx	libavcodec/i386/dsputil_mmx.c	/^static void put_pixels8_mmx(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
put_pixels8_x2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(put_pixels8_x2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
put_pixels8_x2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void put_pixels8_x2_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
put_pixels8_xy2_altivec	libavcodec/ppc/dsputil_altivec.c	/^void put_pixels8_xy2_altivec(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
put_pixels8_xy2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void put_pixels8_xy2_mlib(uint8_t * dest, const uint8_t * ref,$/;"	f	file:
put_pixels8_y2	libavcodec/i386/dsputil_mmx_avg.h	/^static void DEF(put_pixels8_y2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
put_pixels8_y2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void put_pixels8_y2_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
put_pixels_axp_asm	libavcodec/alpha/dsputil_alpha_asm.S	/^put_pixels_axp_asm:$/;"	l
put_pixels_clamped	libavcodec/dsputil.h	/^    void (*put_pixels_clamped)(const DCTELEM *block\/*align 16*\/, uint8_t *pixels\/*align 8*\/, int line_size);$/;"	m	struct:DSPContext
put_pixels_clamped2_c	libavcodec/dsputil.c	/^static void put_pixels_clamped2_c(const DCTELEM *block, uint8_t *restrict pixels,$/;"	f	file:
put_pixels_clamped4_c	libavcodec/dsputil.c	/^static void put_pixels_clamped4_c(const DCTELEM *block, uint8_t *restrict pixels,$/;"	f	file:
put_pixels_clamped_axp_p	libavcodec/alpha/dsputil_alpha.c	/^void (*put_pixels_clamped_axp_p)(const DCTELEM *block, uint8_t *pixels,$/;"	v
put_pixels_clamped_c	libavcodec/dsputil.c	/^static void put_pixels_clamped_c(const DCTELEM *block, uint8_t *restrict pixels,$/;"	f	file:
put_pixels_clamped_mmx	libavcodec/i386/dsputil_mmx.c	/^void put_pixels_clamped_mmx(const DCTELEM *block, uint8_t *pixels, int line_size)$/;"	f
put_pixels_clamped_mvi_asm	libavcodec/alpha/dsputil_alpha_asm.S	/^put_pixels_clamped_mvi_asm:$/;"	l
put_pixels_tab	libavcodec/dsputil.h	/^    op_pixels_func put_pixels_tab[4][4];$/;"	m	struct:DSPContext
put_qpel_pixels_tab	libavcodec/dsputil.h	/^    qpel_mc_func put_qpel_pixels_tab[2][16];$/;"	m	struct:DSPContext
put_rac	libavcodec/rangecoder.h	/^static inline void put_rac(RangeCoder *c, uint8_t * const state, int bit){$/;"	f
put_s	libavformat/nut.c	/^static void put_s(ByteIOContext *bc, int64_t val){$/;"	f	file:
put_s	libavformat/nut.c	457;"	d	file:
put_s_trace	libavformat/nut.c	/^static inline void put_s_trace(ByteIOContext *bc, int64_t v, char *file, char *func, int line){$/;"	f	file:
put_sample	tests/audiogen.c	/^void put_sample(int v)$/;"	f
put_signed_pixels_clamped	libavcodec/dsputil.h	/^    void (*put_signed_pixels_clamped)(const DCTELEM *block\/*align 16*\/, uint8_t *pixels\/*align 8*\/, int line_size);$/;"	m	struct:DSPContext
put_signed_pixels_clamped_c	libavcodec/dsputil.c	/^static void put_signed_pixels_clamped_c(const DCTELEM *block, $/;"	f	file:
put_signed_pixels_clamped_mmx	libavcodec/i386/dsputil_mmx.c	/^void put_signed_pixels_clamped_mmx(const DCTELEM *block, uint8_t *pixels, int line_size)$/;"	f
put_str	libavformat/nut.c	/^static void put_str(ByteIOContext *bc, const char *string){$/;"	f	file:
put_str	libavformat/rm.c	/^static void put_str(ByteIOContext *s, const char *tag)$/;"	f	file:
put_str16	libavformat/asf-enc.c	/^static void put_str16(ByteIOContext *s, const char *tag)$/;"	f	file:
put_str16_nolen	libavformat/asf-enc.c	/^static void put_str16_nolen(ByteIOContext *s, const char *tag)$/;"	f	file:
put_str8	libavformat/rm.c	/^static void put_str8(ByteIOContext *s, const char *tag)$/;"	f	file:
put_string	libavcodec/bitstream.c	/^void put_string(PutBitContext * pbc, char *s, int put_zero)$/;"	f
put_strz	libavformat/aviobuf.c	/^void put_strz(ByteIOContext *s, const char *str)$/;"	f
put_swf_end_tag	libavformat/swf.c	/^static void put_swf_end_tag(AVFormatContext *s)$/;"	f	file:
put_swf_line_edge	libavformat/swf.c	/^static void put_swf_line_edge(PutBitContext *pb, int dx, int dy)$/;"	f	file:
put_swf_matrix	libavformat/swf.c	/^static void put_swf_matrix(ByteIOContext *pb,$/;"	f	file:
put_swf_rect	libavformat/swf.c	/^static void put_swf_rect(ByteIOContext *pb, $/;"	f	file:
put_swf_tag	libavformat/swf.c	/^static void put_swf_tag(AVFormatContext *s, int tag)$/;"	f	file:
put_symbol	libavcodec/ffv1.c	/^static inline void put_symbol(RangeCoder *c, uint8_t *state, int v, int is_signed){$/;"	f	file:
put_symbol	libavcodec/snow.c	/^static inline void put_symbol(RangeCoder *c, uint8_t *state, int v, int is_signed){$/;"	f	file:
put_symbol2	libavcodec/snow.c	/^static inline void put_symbol2(RangeCoder *c, uint8_t *state, int v, int log2){$/;"	f	file:
put_system_header	libavformat/mpeg.c	/^static int put_system_header(AVFormatContext *ctx, uint8_t *buf,int only_for_stream_id)$/;"	f	file:
put_tag	libavformat/aviobuf.c	/^void put_tag(ByteIOContext *s, const char *tag)$/;"	f
put_timestamp	libavformat/mpeg.c	/^static inline void put_timestamp(ByteIOContext *pb, int id, int64_t timestamp)$/;"	f	file:
put_tpel_pixels_mc00_c	libavcodec/dsputil.c	/^static inline void put_tpel_pixels_mc00_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
put_tpel_pixels_mc01_c	libavcodec/dsputil.c	/^static inline void put_tpel_pixels_mc01_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
put_tpel_pixels_mc02_c	libavcodec/dsputil.c	/^static inline void put_tpel_pixels_mc02_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
put_tpel_pixels_mc10_c	libavcodec/dsputil.c	/^static inline void put_tpel_pixels_mc10_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
put_tpel_pixels_mc11_c	libavcodec/dsputil.c	/^static inline void put_tpel_pixels_mc11_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
put_tpel_pixels_mc12_c	libavcodec/dsputil.c	/^static inline void put_tpel_pixels_mc12_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
put_tpel_pixels_mc20_c	libavcodec/dsputil.c	/^static inline void put_tpel_pixels_mc20_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
put_tpel_pixels_mc21_c	libavcodec/dsputil.c	/^static inline void put_tpel_pixels_mc21_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
put_tpel_pixels_mc22_c	libavcodec/dsputil.c	/^static inline void put_tpel_pixels_mc22_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
put_tpel_pixels_tab	libavcodec/dsputil.h	/^    tpel_mc_func put_tpel_pixels_tab[11]; \/\/FIXME individual func ptr per width?$/;"	m	struct:DSPContext
put_v	libavformat/nut.c	/^static void put_v(ByteIOContext *bc, uint64_t val)$/;"	f	file:
put_v	libavformat/nut.c	456;"	d	file:
put_v_trace	libavformat/nut.c	/^static inline void put_v_trace(ByteIOContext *bc, uint64_t v, char *file, char *func, int line){$/;"	f	file:
put_vb	libavformat/nut.c	/^static void put_vb(ByteIOContext *bc, uint64_t val){$/;"	f	file:
put_vb	libavformat/nut.c	458;"	d	file:
put_vb_trace	libavformat/nut.c	/^static inline void put_vb_trace(ByteIOContext *bc, uint64_t v, char *file, char *func, int line){$/;"	f	file:
put_vcd_padding_sector	libavformat/mpeg.c	/^static void put_vcd_padding_sector(AVFormatContext *ctx)$/;"	f	file:
put_vlc_symbol	libavcodec/ffv1.c	/^static inline void put_vlc_symbol(PutBitContext *pb, VlcState * const state, int v, int bits){$/;"	f	file:
put_wav_header	libavformat/wav.c	/^int put_wav_header(ByteIOContext *pb, AVCodecContext *enc)$/;"	f
putstr8	libavformat/mpegtsenc.c	/^static void putstr8(uint8_t **q_ptr, const char *str)$/;"	f	file:
pv	libavcodec/alpha/regdef.h	39;"	d
pxor_m2r	libavcodec/i386/mmx.h	177;"	d
pxor_r2r	libavcodec/i386/mmx.h	178;"	d
q	libavcodec/i386/mmx.h	/^	long long		q;	\/* Quadword (64-bit) value *\/$/;"	m
q1	libavcodec/liba52/parse.c	/^    quantizer_t q1[2];$/;"	m	file:
q1_ptr	libavcodec/liba52/parse.c	/^    int q1_ptr;$/;"	m	file:
q2	libavcodec/liba52/parse.c	/^    quantizer_t q2[2];$/;"	m	file:
q2_ptr	libavcodec/liba52/parse.c	/^    int q2_ptr;$/;"	m	file:
q4	libavcodec/liba52/parse.c	/^    quantizer_t q4;$/;"	m	file:
q4_ptr	libavcodec/liba52/parse.c	/^    int q4_ptr;$/;"	m	file:
q_1_0	libavcodec/liba52/tables.h	/^static const quantizer_t q_1_0[32] = {$/;"	v
q_1_1	libavcodec/liba52/tables.h	/^static const quantizer_t q_1_1[32] = {$/;"	v
q_1_2	libavcodec/liba52/tables.h	/^static const quantizer_t q_1_2[32] = {$/;"	v
q_2_0	libavcodec/liba52/tables.h	/^static const quantizer_t q_2_0[128] = {$/;"	v
q_2_1	libavcodec/liba52/tables.h	/^static const quantizer_t q_2_1[128] = {$/;"	v
q_2_2	libavcodec/liba52/tables.h	/^static const quantizer_t q_2_2[128] = {$/;"	v
q_3	libavcodec/liba52/tables.h	/^static const quantizer_t q_3[8] = {$/;"	v
q_4_0	libavcodec/liba52/tables.h	/^static const quantizer_t q_4_0[128] = {$/;"	v
q_4_1	libavcodec/liba52/tables.h	/^static const quantizer_t q_4_1[128] = {$/;"	v
q_5	libavcodec/liba52/tables.h	/^static const quantizer_t q_5[16] = {$/;"	v
q_inter_matrix	libavcodec/mpegvideo.h	/^    int (*q_inter_matrix)[64];$/;"	m	struct:MpegEncContext
q_inter_matrix16	libavcodec/mpegvideo.h	/^    uint16_t (*q_inter_matrix16)[2][64];$/;"	m	struct:MpegEncContext
q_intra_matrix	libavcodec/asv1.c	/^    int __align8 q_intra_matrix[64];$/;"	m	struct:ASV1Context	file:
q_intra_matrix	libavcodec/mdec.c	/^    int __align8 q_intra_matrix[64];$/;"	m	struct:MDECContext	file:
q_intra_matrix	libavcodec/mpegvideo.h	/^    int (*q_intra_matrix)[64];$/;"	m	struct:MpegEncContext
q_intra_matrix16	libavcodec/mpegvideo.h	/^    uint16_t (*q_intra_matrix16)[2][64];$/;"	m	struct:MpegEncContext
q_pressed	ffmpeg.c	/^static int q_pressed = 0;$/;"	v	file:
q_scale_type	libavcodec/mpegvideo.h	/^    int q_scale_type;$/;"	m	struct:MpegEncContext
qbias	libavcodec/snow.c	/^    int qbias;$/;"	m	struct:SnowContext	file:
qblur	libavcodec/avcodec.h	/^    float qblur;      \/\/\/< amount of qscale smoothing over time (0.0-1.0) $/;"	m	struct:AVCodecContext
qcells	libavcodec/roqvideo.c	/^    roq_qcell qcells[256];$/;"	m	struct:RoqContext	file:
qcompress	libavcodec/avcodec.h	/^    float qcompress;  \/\/\/< amount of qscale change between easy & hard scenes (0.0-1.0)$/;"	m	struct:AVCodecContext
qdraw_decoder	libavcodec/qdrw.c	/^AVCodec qdraw_decoder = {$/;"	v
qexp	libavcodec/snow.c	/^static uint8_t qexp[QROOT];$/;"	v	file:
qexp	libavcodec/snow.c	573;"	d	file:
qlog	libavcodec/snow.c	/^    int qlog;                                   \/\/\/< log(qscale)\/log[2^(1\/6)]$/;"	m	struct:SubBand	file:
qlog	libavcodec/snow.c	/^    int qlog;$/;"	m	struct:SnowContext	file:
qmax	libavcodec/avcodec.h	/^    int qmax;$/;"	m	struct:AVCodecContext
qmin	libavcodec/avcodec.h	/^    int qmin;$/;"	m	struct:AVCodecContext
qns	ffmpeg.c	/^static int qns = 0;$/;"	v	file:
qp2bits	libavcodec/ratecontrol.c	/^static inline double qp2bits(RateControlEntry *rce, double qp){$/;"	f	file:
qpStride	libavcodec/libpostproc/postprocess_internal.h	/^	int qpStride; \/\/\/<size of qp buffers (needed to realloc them if needed)$/;"	m	struct:PPContext
qpeg_decode_inter	libavcodec/qpeg.c	/^static void qpeg_decode_inter(uint8_t *src, uint8_t *dst, int size,$/;"	f	file:
qpeg_decode_intra	libavcodec/qpeg.c	/^static void qpeg_decode_intra(uint8_t *src, uint8_t *dst, int size,$/;"	f	file:
qpeg_decoder	libavcodec/qpeg.c	/^AVCodec qpeg_decoder = {$/;"	v
qpeg_table_h	libavcodec/qpeg.c	/^static int qpeg_table_h[16] = $/;"	v	file:
qpeg_table_w	libavcodec/qpeg.c	/^static int qpeg_table_w[16] =$/;"	v	file:
qpel_avg	libavcodec/mpegvideo.h	/^    qpel_mc_func (*qpel_avg)[16];$/;"	m	struct:MotionEstContext
qpel_mc_func	libavcodec/dsputil.h	/^typedef void (*qpel_mc_func)(uint8_t *dst\/*align width (8 or 16)*\/, uint8_t *src\/*align 1*\/, int stride);$/;"	t
qpel_motion	libavcodec/mpegvideo.c	/^static inline void qpel_motion(MpegEncContext *s,$/;"	f	file:
qpel_motion_search	libavcodec/motion_est_template.c	/^static int qpel_motion_search(MpegEncContext * s,$/;"	f	file:
qpel_put	libavcodec/mpegvideo.h	/^    qpel_mc_func (*qpel_put)[16];$/;"	m	struct:MotionEstContext
qscale	libavcodec/avcodec.h	/^    int qscale; \/\/ if this is 0 then quality_factor will be used instead$/;"	m	struct:RcOverride
qscale	libavcodec/mdec.c	/^    int qscale;$/;"	m	struct:MDECContext	file:
qscale	libavcodec/mjpeg.c	/^    int qscale[4];      \/\/\/< quantizer scale calculated from quant_matrixes$/;"	m	struct:MJpegDecodeContext	file:
qscale	libavcodec/mpegvideo.h	/^    float qscale;$/;"	m	struct:RateControlEntry
qscale	libavcodec/mpegvideo.h	/^    int qscale;                 \/\/\/< QP $/;"	m	struct:MpegEncContext
qscale	libavcodec/xvidff.c	/^    int qscale;                    \/** Do we use constant scale? *\/$/;"	m	struct:xvid_context	file:
qscale_sum	libavcodec/mpegvideo.h	/^    uint64_t qscale_sum[5];$/;"	m	struct:RateControlContext
qscale_table	libavcodec/mjpeg.c	/^    int8_t *qscale_table;$/;"	m	struct:MJpegDecodeContext	file:
qscale_table	libavcodec/vp3.c	/^    uint8_t qscale_table[2048]; \/\/FIXME dynamic alloc (width+15)\/16$/;"	m	struct:Vp3DecodeContext	file:
qtrle_decode_16bpp	libavcodec/qtrle.c	/^static void qtrle_decode_16bpp(QtrleContext *s)$/;"	f	file:
qtrle_decode_1bpp	libavcodec/qtrle.c	/^static void qtrle_decode_1bpp(QtrleContext *s)$/;"	f	file:
qtrle_decode_24bpp	libavcodec/qtrle.c	/^static void qtrle_decode_24bpp(QtrleContext *s)$/;"	f	file:
qtrle_decode_2bpp	libavcodec/qtrle.c	/^static void qtrle_decode_2bpp(QtrleContext *s)$/;"	f	file:
qtrle_decode_32bpp	libavcodec/qtrle.c	/^static void qtrle_decode_32bpp(QtrleContext *s)$/;"	f	file:
qtrle_decode_4bpp	libavcodec/qtrle.c	/^static void qtrle_decode_4bpp(QtrleContext *s)$/;"	f	file:
qtrle_decode_8bpp	libavcodec/qtrle.c	/^static void qtrle_decode_8bpp(QtrleContext *s)$/;"	f	file:
qtrle_decode_end	libavcodec/qtrle.c	/^static int qtrle_decode_end(AVCodecContext *avctx)$/;"	f	file:
qtrle_decode_frame	libavcodec/qtrle.c	/^static int qtrle_decode_frame(AVCodecContext *avctx,$/;"	f	file:
qtrle_decode_init	libavcodec/qtrle.c	/^static int qtrle_decode_init(AVCodecContext *avctx)$/;"	f	file:
qtrle_decoder	libavcodec/qtrle.c	/^AVCodec qtrle_decoder = {$/;"	v
quality	libavformat/avformat.h	/^    float quality; $/;"	m	struct:AVStream
quality_factor	libavcodec/avcodec.h	/^    float quality_factor;$/;"	m	struct:RcOverride
quality_index	libavcodec/vp3.c	/^    int quality_index;$/;"	m	struct:Vp3DecodeContext	file:
quant	libavcodec/g726.c	/^	int* quant;           \/**< quantization table *\/$/;"	m	struct:G726Tables	file:
quant	libavcodec/g726.c	/^static inline uint8_t quant(G726Context* c, int d)$/;"	f	file:
quant11	libavcodec/ffv1.c	/^static const int8_t quant11[256]={$/;"	v	file:
quant11	libavcodec/snow.c	/^static const int8_t quant11[256]={$/;"	v	file:
quant13	libavcodec/ffv1.c	/^static const int8_t quant13[256]={$/;"	v	file:
quant13	libavcodec/snow.c	/^static const int8_t quant13[256]={$/;"	v	file:
quant3	libavcodec/ffv1.c	/^static const int8_t quant3[256]={$/;"	v	file:
quant3	libavcodec/snow.c	/^static const int8_t quant3[256]={$/;"	v	file:
quant3b	libavcodec/snow.c	/^static const int8_t quant3b[256]={$/;"	v	file:
quant3bA	libavcodec/snow.c	/^static const int8_t quant3bA[256]={$/;"	v	file:
quant5	libavcodec/ffv1.c	/^static const int8_t quant5[256]={$/;"	v	file:
quant5	libavcodec/snow.c	/^static const int8_t quant5[256]={$/;"	v	file:
quant7	libavcodec/ffv1.c	/^static const int8_t quant7[256]={$/;"	v	file:
quant7	libavcodec/snow.c	/^static const int8_t quant7[256]={$/;"	v	file:
quant9	libavcodec/ffv1.c	/^static const int8_t quant9[256]={$/;"	v	file:
quant9	libavcodec/snow.c	/^static const int8_t quant9[256]={$/;"	v	file:
quant_bits	libavcodec/mpegaudiodectab.h	/^const int quant_bits[17] = {$/;"	v
quant_coeff	libavcodec/h264data.h	/^static const int quant_coeff[52][16]={$/;"	v
quant_index	libavcodec/mjpeg.c	/^    int quant_index[4];   \/* quant table index for each component *\/$/;"	m	struct:MJpegDecodeContext	file:
quant_matrix_rebuild	libavcodec/mpeg12.c	/^static void quant_matrix_rebuild(uint16_t *matrix, const uint8_t *old_perm, $/;"	f	file:
quant_matrixes	libavcodec/mjpeg.c	/^    int16_t quant_matrixes[4][64];$/;"	m	struct:MJpegDecodeContext	file:
quant_precision	libavcodec/mpegvideo.h	/^    int quant_precision;$/;"	m	struct:MpegEncContext
quant_psnr	libavcodec/dsputil.h	/^    me_cmp_func quant_psnr[5];$/;"	m	struct:DSPContext
quant_psnr8x8_c	libavcodec/dsputil.c	/^static int quant_psnr8x8_c(\/*MpegEncContext*\/ void *c, uint8_t *src1, uint8_t *src2, int stride, int h){$/;"	f	file:
quant_snr	libavcodec/mpegaudiotab.h	/^static unsigned short quant_snr[17] = { $/;"	v
quant_steps	libavcodec/mpegaudiodectab.h	/^const int quant_steps[17] = {$/;"	v
quant_table	libavcodec/ffv1.c	/^    int16_t quant_table[5][256];$/;"	m	struct:FFV1Context	file:
quant_tbl16	libavcodec/g726.c	/^static int quant_tbl16[] =                       \/**< 16kbit\/s 2bits per sample *\/$/;"	v	file:
quant_tbl24	libavcodec/g726.c	/^static int quant_tbl24[] =                       \/**< 24kbit\/s 3bits per sample *\/$/;"	v	file:
quant_tbl32	libavcodec/g726.c	/^static int quant_tbl32[] =                       \/**< 32kbit\/s 4bits per sample *\/$/;"	v	file:
quant_tbl40	libavcodec/g726.c	/^static int quant_tbl40[] =                      \/**< 40kbit\/s 5bits per sample *\/$/;"	v	file:
quantization	libavcodec/sonic.c	/^    double quantization;$/;"	m	struct:SonicContext	file:
quantize_c	libavcodec/h264.c	/^static inline int quantize_c(DCTELEM *block, uint8_t *scantable, int qscale, int intra, int seperate_dc){$/;"	f	file:
quantizer_mode	libavcodec/vc9.c	/^    int quantizer_mode;   \/\/\/< 2bits, quantizer mode used for sequence, see QUANT_*$/;"	m	struct:VC9Context	file:
quantizer_noise_shaping	libavcodec/avcodec.h	/^    int quantizer_noise_shaping;$/;"	m	struct:AVCodecContext
quantizer_set_t	libavcodec/liba52/parse.c	/^} quantizer_set_t;$/;"	t	file:
quantizer_t	libavcodec/liba52/a52_internal.h	/^typedef int16_t quantizer_t;$/;"	t
quantizer_t	libavcodec/liba52/a52_internal.h	/^typedef sample_t quantizer_t;$/;"	t
quarter_sample	libavcodec/mpegvideo.h	/^    int quarter_sample;              \/\/\/< 1->qpel, 0->half pel ME\/MC  $/;"	m	struct:MpegEncContext
queue_picture	ffplay.c	/^static int queue_picture(VideoState *is, AVFrame *src_frame, double pts)$/;"	f	file:
quicktime_format	libavcodec/xvidff.c	/^    int quicktime_format;          \/** Are we in a QT-based format? *\/$/;"	m	struct:xvid_context	file:
r	libavformat/gif.c	/^    unsigned char r;$/;"	m	file:
r	tests/videogen.c	/^    int r, g, b;$/;"	m	struct:VObj	file:
r	vhook/imlib2.c	/^    int r, g, b;$/;"	m	file:
r0	libavcodec/i386/vp3dsp_mmx.c	39;"	d	file:
r1	libavcodec/i386/vp3dsp_mmx.c	40;"	d	file:
r2	libavcodec/i386/vp3dsp_mmx.c	41;"	d	file:
r3	libavcodec/i386/vp3dsp_mmx.c	42;"	d	file:
r4	libavcodec/i386/vp3dsp_mmx.c	43;"	d	file:
r5	libavcodec/i386/vp3dsp_mmx.c	44;"	d	file:
r6	libavcodec/i386/vp3dsp_mmx.c	45;"	d	file:
r7	libavcodec/i386/vp3dsp_mmx.c	46;"	d	file:
r_frame_rate	libavformat/avformat.h	/^    AVRational r_frame_rate;     \/* real frame rate of the stream *\/$/;"	m	struct:AVStream
ra	libavcodec/alpha/regdef.h	36;"	d
ra144_decode_frame	libavcodec/ra144.c	/^static int ra144_decode_frame(AVCodecContext * avctx,$/;"	f	file:
ra144_decode_init	libavcodec/ra144.c	/^static int ra144_decode_init(AVCodecContext * avctx)$/;"	f	file:
ra288_decode_frame	libavcodec/ra288.c	/^static int ra288_decode_frame(AVCodecContext * avctx,$/;"	f	file:
ra288_decode_init	libavcodec/ra288.c	/^static int ra288_decode_init(AVCodecContext * avctx)$/;"	f	file:
ra_144_decoder	libavcodec/ra144.c	/^AVCodec ra_144_decoder =$/;"	v
ra_288_decoder	libavcodec/ra288.c	/^AVCodec ra_288_decoder =$/;"	v
rand	libavcodec/common.h	528;"	d
rand	libavcodec/resample2.c	265;"	d	file:
range	libavcodec/cabac.h	/^    int range;$/;"	m	struct:CABACContext
range	libavcodec/rangecoder.h	/^    int range;$/;"	m	struct:RangeCoder
range_end	libavformat/rtsp.h	/^    int64_t range_start, range_end; $/;"	m	struct:RTSPHeader
range_mapuv	libavcodec/vc9.c	/^    uint8_t range_mapuv;$/;"	m	struct:VC9Context	file:
range_mapuv_flag	libavcodec/vc9.c	/^    uint8_t range_mapuv_flag;$/;"	m	struct:VC9Context	file:
range_mapy	libavcodec/vc9.c	/^    uint8_t range_mapy;$/;"	m	struct:VC9Context	file:
range_mapy_flag	libavcodec/vc9.c	/^    uint8_t range_mapy_flag;$/;"	m	struct:VC9Context	file:
range_start	libavformat/rtsp.h	/^    int64_t range_start, range_end; $/;"	m	struct:RTSPHeader
rangered	libavcodec/vc9.c	/^    int rangered;         \/\/\/< RANGEREDFRM (range reduction) syntax element present$/;"	m	struct:VC9Context	file:
rangeredfrm	libavcodec/vc9.c	/^    uint8_t rangeredfrm; \/\/\/< out_sample = CLIP((in_sample-128)*2+128)$/;"	m	struct:VC9Context	file:
rap_flag	libavformat/rtp.h	/^        int rap_flag;$/;"	m	struct:rtp_payload_data_s::AUHeaders
raster_end	libavcodec/mpegvideo.h	/^    uint8_t raster_end[64];$/;"	m	struct:ScanTable
rate	libavformat/avidec.c	/^    int rate;    $/;"	m	struct:AVIStream	file:
rate	libavformat/nsvdec.c	/^    int rate;    $/;"	m	struct:NSVStream	file:
rate_den	libavformat/nut.c	/^    int rate_den;$/;"	m	file:
rate_emu	ffmpeg.c	/^static int rate_emu = 0;$/;"	v	file:
rate_emu	libavcodec/avcodec.h	/^    int rate_emu;$/;"	m	struct:AVCodecContext
rate_num	libavformat/nut.c	/^    int rate_num;$/;"	m	file:
ratio	libavcodec/resample.c	/^    float ratio;$/;"	m	struct:ReSampleContext	file:
raw_close_decoder	libavcodec/raw.c	/^static int raw_close_decoder(AVCodecContext *avctx)$/;"	f	file:
raw_decode	libavcodec/raw.c	/^static int raw_decode(AVCodecContext *avctx,$/;"	f	file:
raw_encode	libavcodec/raw.c	/^static int raw_encode(AVCodecContext *avctx,$/;"	f	file:
raw_init	libavformat/raw.c	/^int raw_init(void)$/;"	f
raw_init_decoder	libavcodec/raw.c	/^static int raw_init_decoder(AVCodecContext *avctx)$/;"	f	file:
raw_init_encoder	libavcodec/raw.c	/^static int raw_init_encoder(AVCodecContext *avctx)$/;"	f	file:
raw_packet_size	libavformat/mpegts.c	/^    int raw_packet_size; \/* raw packet size, including FEC if present *\/$/;"	m	struct:MpegTSContext	file:
raw_read_close	libavformat/raw.c	/^static int raw_read_close(AVFormatContext *s)$/;"	f	file:
raw_read_header	libavformat/raw.c	/^static int raw_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
raw_read_packet	libavformat/raw.c	/^static int raw_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
raw_read_partial_packet	libavformat/raw.c	/^static int raw_read_partial_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
raw_write_header	libavformat/raw.c	/^static int raw_write_header(struct AVFormatContext *s)$/;"	f	file:
raw_write_packet	libavformat/raw.c	/^static int raw_write_packet(struct AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
raw_write_trailer	libavformat/raw.c	/^static int raw_write_trailer(struct AVFormatContext *s)$/;"	f	file:
rawvideo_decoder	libavcodec/raw.c	/^AVCodec rawvideo_decoder = {$/;"	v
rawvideo_encoder	libavcodec/raw.c	/^AVCodec rawvideo_encoder = {$/;"	v
rawvideo_iformat	libavformat/raw.c	/^AVInputFormat rawvideo_iformat = {$/;"	v
rawvideo_oformat	libavformat/raw.c	/^AVOutputFormat rawvideo_oformat = {$/;"	v
rawvideo_read_packet	libavformat/raw.c	/^static int rawvideo_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
rbsp_buffer	libavcodec/h264.c	/^    uint8_t *rbsp_buffer;$/;"	m	struct:H264Context	file:
rbsp_buffer_size	libavcodec/h264.c	/^    int rbsp_buffer_size;$/;"	m	struct:H264Context	file:
rc_buffer_aggressivity	libavcodec/avcodec.h	/^    float rc_buffer_aggressivity;$/;"	m	struct:AVCodecContext
rc_buffer_size	libavcodec/avcodec.h	/^    int rc_buffer_size;$/;"	m	struct:AVCodecContext
rc_context	libavcodec/mpegvideo.h	/^    RateControlContext rc_context; \/\/\/< contains stuff only accessed in ratecontrol.c$/;"	m	struct:MpegEncContext
rc_eq	libavcodec/avcodec.h	/^    char *rc_eq;$/;"	m	struct:AVCodecContext
rc_initial_buffer_occupancy	libavcodec/avcodec.h	/^    int rc_initial_buffer_occupancy;$/;"	m	struct:AVCodecContext
rc_initial_cplx	libavcodec/avcodec.h	/^    float rc_initial_cplx;$/;"	m	struct:AVCodecContext
rc_max_rate	libavcodec/avcodec.h	/^    int rc_max_rate;$/;"	m	struct:AVCodecContext
rc_min_rate	libavcodec/avcodec.h	/^    int rc_min_rate;$/;"	m	struct:AVCodecContext
rc_override	libavcodec/avcodec.h	/^    RcOverride *rc_override;$/;"	m	struct:AVCodecContext
rc_override_count	libavcodec/avcodec.h	/^    int rc_override_count;$/;"	m	struct:AVCodecContext
rc_qmod_amp	libavcodec/avcodec.h	/^    float rc_qmod_amp;$/;"	m	struct:AVCodecContext
rc_qmod_freq	libavcodec/avcodec.h	/^    int rc_qmod_freq;$/;"	m	struct:AVCodecContext
rc_qsquish	libavcodec/avcodec.h	/^    float rc_qsquish;$/;"	m	struct:AVCodecContext
rc_strategy	libavcodec/avcodec.h	/^    int rc_strategy;$/;"	m	struct:AVCodecContext
rct	libavcodec/mjpeg.c	/^    int rct;            \/* standard rct *\/  $/;"	m	struct:MJpegDecodeContext	file:
rd	libavcodec/dsputil.h	/^    me_cmp_func rd[5];$/;"	m	struct:DSPContext
rd8x8_c	libavcodec/dsputil.c	/^static int rd8x8_c(\/*MpegEncContext*\/ void *c, uint8_t *src1, uint8_t *src2, int stride, int h){$/;"	f	file:
rd_scratchpad	libavcodec/mpegvideo.h	/^    uint8_t *rd_scratchpad;       \/\/\/< scartchpad for rate distortion mb decission$/;"	m	struct:MpegEncContext
rd_total	libavcodec/svq1.c	/^    int64_t rd_total;$/;"	m	struct:SVQ1Context	file:
rdtsc	tests/dsptest.c	/^static inline long long rdtsc()$/;"	f	file:
re	libavcodec/ac3enc.c	/^    short re,im;$/;"	m	struct:IComplex	file:
re	libavcodec/dsputil.h	/^    FFTSample re, im;$/;"	m	struct:FFTComplex
re_index	libavcodec/dv.c	/^static int re_index; \/\/Hack to make it compile$/;"	v	file:
read_arbitary	libavformat/electronicarts.c	/^static uint32_t read_arbitary(ByteIOContext *pb) {$/;"	f	file:
read_buf_index	libavformat/rtp.c	/^    int read_buf_index;$/;"	m	struct:RTPDemuxContext	file:
read_buf_size	libavformat/rtp.c	/^    int read_buf_size;$/;"	m	struct:RTPDemuxContext	file:
read_close	libavformat/avformat.h	/^    int (*read_close)(struct AVFormatContext *);$/;"	m	struct:AVInputFormat
read_ffserver_streams	ffmpeg.c	/^static int read_ffserver_streams(AVFormatContext *s, const char *filename)$/;"	f	file:
read_header	libavcodec/ffv1.c	/^static int read_header(FFV1Context *f){$/;"	f	file:
read_header	libavformat/avformat.h	/^    int (*read_header)(struct AVFormatContext *,$/;"	m	struct:AVInputFormat
read_header_alloc_cb	libavformat/img.c	/^static int read_header_alloc_cb(void *opaque, AVImageInfo *info)$/;"	f	file:
read_huffman_tables	libavcodec/4xm.c	/^static uint8_t *read_huffman_tables(FourXContext *f, uint8_t * const buf){$/;"	f	file:
read_huffman_tables	libavcodec/huffyuv.c	/^static int read_huffman_tables(HYuvContext *s, uint8_t *src, int length){$/;"	f	file:
read_huffman_tree	libavcodec/vp3.c	/^static int read_huffman_tree(AVCodecContext *avctx, GetBitContext *gb)$/;"	f	file:
read_key	ffmpeg.c	/^static int read_key(void)$/;"	f	file:
read_len_table	libavcodec/huffyuv.c	/^static void read_len_table(uint8_t *dst, GetBitContext *gb){$/;"	f	file:
read_long	libavcodec/adx.c	/^static uint32_t read_long(const unsigned char *p)$/;"	f	file:
read_old_huffman_tables	libavcodec/huffyuv.c	/^static int read_old_huffman_tables(HYuvContext *s){$/;"	f	file:
read_packet	libavformat/avformat.h	/^    int (*read_packet)(struct AVFormatContext *, AVPacket *pkt);$/;"	m	struct:AVInputFormat
read_packet	libavformat/avio.h	/^    int (*read_packet)(void *opaque, uint8_t *buf, int buf_size);$/;"	m
read_packet	libavformat/mpegts.c	/^static int read_packet(ByteIOContext *pb, uint8_t *buf, int raw_packet_size)$/;"	f	file:
read_packet_alloc_cb	libavformat/img.c	/^static int read_packet_alloc_cb(void *opaque, AVImageInfo *info)$/;"	f	file:
read_pause	libavformat/avformat.h	/^    int (*read_pause)(struct AVFormatContext *);$/;"	m	struct:AVInputFormat
read_play	libavformat/avformat.h	/^    int (*read_play)(struct AVFormatContext *);$/;"	m	struct:AVInputFormat
read_probe	libavformat/avformat.h	/^    int (*read_probe)(AVProbeData *);$/;"	m	struct:AVInputFormat
read_quant_table	libavcodec/ffv1.c	/^static int read_quant_table(RangeCoder *c, int16_t *quant_table, int scale){$/;"	f	file:
read_rle_sgi	libavformat/sgi.c	/^static int read_rle_sgi(const SGIInfo *sgi_info, $/;"	f	file:
read_seek	libavformat/avformat.h	/^    int (*read_seek)(struct AVFormatContext *, $/;"	m	struct:AVInputFormat
read_seek	libavformat/mpegts.c	/^static int read_seek(AVFormatContext *s, int stream_index, int64_t target_ts, int flags){$/;"	f	file:
read_sgi_header	libavformat/sgi.c	/^static void read_sgi_header(ByteIOContext *f, SGIInfo *info)$/;"	f	file:
read_state	libavformat/ffm.c	/^    int read_state;$/;"	m	struct:FFMContext	file:
read_time	libavcodec/common.h	/^static inline long long read_time(void)$/;"	f
read_time	libavcodec/common.h	/^static inline uint64_t read_time(void)$/;"	f
read_timestamp	libavformat/avformat.h	/^    int64_t (*read_timestamp)(struct AVFormatContext *s, int stream_index,$/;"	m	struct:AVInputFormat
read_uint_max	libavcodec/sonic.c	/^static unsigned int read_uint_max(GetBitContext *gb, int max)$/;"	f	file:
read_uncompressed_sgi	libavformat/sgi.c	/^static int read_uncompressed_sgi(const SGIInfo *si, $/;"	f	file:
reader	vhook/ppm.c	/^    FILE *reader;$/;"	m	struct:rwpipe	file:
readonly	ffserver.c	/^    int readonly;        \/* True if writing is prohibited to the file *\/$/;"	m	struct:FFStream	file:
real	libavcodec/liba52/imdct.c	/^    sample_t real;$/;"	m	struct:complex_s	file:
real_pict_num	libavcodec/avcodec.h	/^    int real_pict_num;  \/\/\/< returns the real picture number of previous encoded frame $/;"	m	struct:AVCodecContext
real_sprite_warping_points	libavcodec/mpegvideo.h	/^    int real_sprite_warping_points;$/;"	m	struct:MpegEncContext
realloc	libavcodec/common.h	526;"	d
realloc	libavcodec/liba52/a52.h	31;"	d
realloc	libavcodec/mem.c	30;"	d	file:
reallocAlign	libavcodec/libpostproc/postprocess.c	/^static void reallocAlign(void **p, int alignment, int size){$/;"	f	file:
reallocBuffers	libavcodec/libpostproc/postprocess.c	/^static void reallocBuffers(PPContext *c, int width, int height, int stride, int qpStride){$/;"	f	file:
rec_timestamp	ffmpeg.c	/^static int64_t rec_timestamp = 0;$/;"	v	file:
received_sigterm	ffmpeg.c	/^static volatile int received_sigterm = 0;$/;"	v	file:
received_sigterm	ffmpeg.c	/^static volatile sig_atomic_t received_sigterm = 0;$/;"	v	file:
recorder	libavformat/beosaudio.cpp	/^    BSoundRecorder *recorder;$/;"	m	file:
recording_time	ffmpeg.c	/^static int64_t recording_time = 0;$/;"	v	file:
redir_demux	libavformat/rtsp.c	/^AVInputFormat redir_demux = {$/;"	v
redir_isspace	libavformat/rtsp.c	/^static int redir_isspace(int c)$/;"	f	file:
redir_open	libavformat/rtsp.c	/^int redir_open(AVFormatContext **ic_ptr, ByteIOContext *f)$/;"	f
redir_probe	libavformat/rtsp.c	/^static int redir_probe(AVProbeData *pd)$/;"	f	file:
reduced_res_vop	libavcodec/mpegvideo.h	/^    int reduced_res_vop;$/;"	m	struct:MpegEncContext
redundant_pic_cnt_present	libavcodec/h264.c	/^    int redundant_pic_cnt_present; \/\/\/< redundant_pic_cnt_present_flag$/;"	m	struct:PPS	file:
redundant_pic_count	libavcodec/h264.c	/^    int redundant_pic_count;$/;"	m	struct:H264Context	file:
ref	libavcodec/mpegvideo.h	/^    uint8_t *ref[4][4];$/;"	m	struct:MotionEstContext
ref_count	libavcodec/h264.c	/^    int ref_count[2];           \/\/\/< num_ref_idx_l0\/1_active_minus1 + 1$/;"	m	struct:PPS	file:
ref_count	libavcodec/h264.c	/^    int ref_count[2];\/\/ FIXME split for AFF$/;"	m	struct:H264Context	file:
ref_count	libavcodec/mpegvideo.h	/^    int ref_count[2];           \/\/\/< number of entries in ref_poc$/;"	m	struct:Picture
ref_frame	libavcodec/indeo3.c	/^    YUVBufs *ref_frame;$/;"	m	struct:Indeo3DecodeContext	file:
ref_frame_count	libavcodec/h264.c	/^    int ref_frame_count;               \/\/\/< num_ref_frames$/;"	m	struct:SPS	file:
ref_list	libavcodec/h264.c	/^    Picture ref_list[2][32]; \/\/FIXME size?$/;"	m	struct:H264Context	file:
ref_poc	libavcodec/mpegvideo.h	/^    int ref_poc[2][16];         \/\/\/< h264 POCs of the frames used as reference$/;"	m	struct:Picture
refcount	libavformat/beosaudio.cpp	/^static int refcount = 0;$/;"	v	file:
refdata	libavcodec/qpeg.c	/^    uint8_t *refdata;$/;"	m	struct:QpegContext	file:
refill	libavcodec/cabac.h	/^static void refill(CABACContext *c){$/;"	f
refill	libavcodec/rangecoder.h	/^static inline void refill(RangeCoder *c){$/;"	f
reget_buffer	libavcodec/avcodec.h	/^    int (*reget_buffer)(struct AVCodecContext *c, AVFrame *pic);$/;"	m	struct:AVCodecContext
region_size	libavcodec/mpegaudiodec.c	/^    int region_size[3]; \/* number of huffman codes in each region *\/$/;"	m	struct:GranuleDef	file:
register_avcodec	libavcodec/utils.c	/^void register_avcodec(AVCodec *format)$/;"	f
register_protocol	libavformat/avio.c	/^int register_protocol(URLProtocol *protocol)$/;"	f
release_buffer	libavcodec/avcodec.h	/^    void (*release_buffer)(struct AVCodecContext *c, AVFrame *pic);$/;"	m	struct:AVCodecContext
rem6	libavcodec/h264data.h	/^static const uint8_t rem6[52]={$/;"	v
remaining	libavformat/avidec.c	/^    int remaining;$/;"	m	struct:AVIStream	file:
remaining_len	libavformat/rm.c	/^    int remaining_len;$/;"	m	file:
rematflg	libavcodec/liba52/a52_internal.h	/^    uint8_t rematflg;		\/* stereo rematrixing *\/$/;"	m	struct:a52_state_s
remove_decoded_packets	libavformat/mpeg.c	/^static int remove_decoded_packets(AVFormatContext *ctx, int64_t scr){$/;"	f	file:
remove_long	libavcodec/h264.c	/^static Picture * remove_long(H264Context *h, int i){$/;"	f	file:
remove_short	libavcodec/h264.c	/^static Picture * remove_short(H264Context *h, int frame_num){$/;"	f	file:
remove_stream	ffserver.c	/^static void remove_stream(FFStream *stream)$/;"	f	file:
render_fragments	libavcodec/vp3.c	/^static void render_fragments(Vp3DecodeContext *s,$/;"	f	file:
render_slice	libavcodec/vp3.c	/^static void render_slice(Vp3DecodeContext *s, int slice)$/;"	f	file:
renorm_cabac_decoder	libavcodec/cabac.h	/^static inline void renorm_cabac_decoder(CABACContext *c){$/;"	f
renorm_cabac_decoder_once	libavcodec/cabac.h	/^static inline void renorm_cabac_decoder_once(CABACContext *c){$/;"	f
renorm_cabac_encoder	libavcodec/cabac.h	/^static inline void renorm_cabac_encoder(CABACContext *c){$/;"	f
renorm_encoder	libavcodec/rangecoder.h	/^static inline void renorm_encoder(RangeCoder *c){$/;"	f
reorder_block	libavcodec/mpegaudiodec.c	/^static void reorder_block(MPADecodeContext *s, GranuleDef *g)$/;"	f	file:
reorder_pb	libavcodec/svq1.c	/^    PutBitContext reorder_pb[6]; \/\/why ooh why this sick breadth first order, everything is slower and more complex$/;"	m	struct:SVQ1Context	file:
reordered_input_picture	libavcodec/mpegvideo.h	/^    Picture **reordered_input_picture; \/\/\/< pointer to the next pictures in codedorder for encoding$/;"	m	struct:MpegEncContext
repeat_field	libavcodec/mpeg12.c	/^    int repeat_field; \/* true if we must repeat the field *\/$/;"	m	struct:Mpeg1Context	file:
repeat_first_field	libavcodec/mpegvideo.h	/^    int repeat_first_field;$/;"	m	struct:MpegEncContext
repeat_pict	libavcodec/avcodec.h	/^    int repeat_pict; \/* XXX: put it back in AVCodecContext *\/$/;"	m	struct:AVCodecParserContext
replaceTable	libavcodec/libpostproc/postprocess.c	/^static char *replaceTable[]=$/;"	v	file:
req_sid	libavformat/mpegts.c	/^    int req_sid;$/;"	m	struct:MpegTSContext	file:
res_fasttx	libavcodec/vc9.c	/^    int res_fasttx;       \/\/\/< reserved, always 1$/;"	m	struct:VC9Context	file:
res_rtm_flag	libavcodec/vc9.c	/^    int res_rtm_flag;     \/\/\/< reserved, set to 1$/;"	m	struct:VC9Context	file:
res_sm	libavcodec/vc9.c	/^    int res_sm;           \/\/\/< reserved, 2b$/;"	m	struct:VC9Context	file:
res_transtab	libavcodec/vc9.c	/^    int res_transtab;     \/\/\/< reserved, always 0$/;"	m	struct:VC9Context	file:
res_x8	libavcodec/vc9.c	/^    int res_x8;           \/\/\/< reserved$/;"	m	struct:VC9Context	file:
resample	ffmpeg.c	/^    ReSampleContext *resample; \/* for audio resampling *\/$/;"	m	struct:AVOutputStream	file:
resample_context	libavcodec/resample.c	/^    struct AVResampleContext *resample_context;$/;"	m	struct:ReSampleContext	file:
reserved	libavcodec/vc9.c	/^    int reserved;         \/\/\/< reserved$/;"	m	struct:VC9Context	file:
reserved	libavformat/flvenc.c	/^    int reserved;$/;"	m	struct:FLVContext	file:
reserved1	xvmc_render.h	/^  int reserved1[13];\/\/future extenstions (e.g. gmc,qpel)$/;"	m
reserved_count	libavformat/nut.c	/^    uint8_t reserved_count;$/;"	m	file:
reset	libavformat/nut.c	/^static void reset(AVFormatContext *s, int64_t global_ts){$/;"	f	file:
reset_block_lengths	libavcodec/wmadec.c	/^    int reset_block_lengths;$/;"	m	struct:WMADecodeContext	file:
reset_contexts	libavcodec/snow.c	/^static void reset_contexts(SnowContext *s){$/;"	f	file:
reset_flag	libavcodec/amr.c	/^    Word16 reset_flag;$/;"	m	struct:AMRContext	file:
reset_flag_old	libavcodec/amr.c	/^    Word16 reset_flag_old;$/;"	m	struct:AMRContext	file:
resetflag	libavcodec/ra144.c	/^	unsigned int	 resetflag, val, oldval;$/;"	m	file:
residue_count	libavcodec/vorbis.h	/^    uint_fast8_t residue_count;$/;"	m
residues	libavcodec/vorbis.h	/^    vorbis_residue *residues;$/;"	m
resolve_host	libavformat/tcp.c	/^int resolve_host(struct in_addr *sin_addr, const char *hostname)$/;"	f
respic	libavcodec/vc9.c	/^    uint8_t respic;       \/\/\/< Frame-level flag for resized images$/;"	m	struct:VC9Context	file:
restart_count	libavcodec/mjpeg.c	/^    int restart_count;$/;"	m	struct:MJpegDecodeContext	file:
restart_interval	libavcodec/mjpeg.c	/^    int restart_interval;$/;"	m	struct:MJpegDecodeContext	file:
restore_ac_coeffs	libavcodec/h263.c	/^static inline void restore_ac_coeffs(MpegEncContext * s, DCTELEM block[6][64], int dir[6], uint8_t *st[6], int zigzag_last_index[6])$/;"	f	file:
restrict	config.h	37;"	d
restrict	libavcodec/common.h	61;"	d
resync_marker	libavcodec/mpegvideo.h	/^    int resync_marker;               \/\/\/< could this stream contain resync markers$/;"	m	struct:MpegEncContext
resync_mb_x	libavcodec/mpegvideo.h	/^    int resync_mb_x;                 \/\/\/< x position of last resync marker $/;"	m	struct:MpegEncContext
resync_mb_y	libavcodec/mpegvideo.h	/^    int resync_mb_y;                 \/\/\/< y position of last resync marker $/;"	m	struct:MpegEncContext
ret	libavcodec/beosthread.c	/^    int ret;$/;"	m	struct:ThreadContext	file:
ret	libavcodec/vorbis.h	/^    float *ret;$/;"	m
ret	libavcodec/w32thread.c	/^    int ret;$/;"	m	struct:ThreadContext	file:
ret_code	libavformat/jpeg.c	/^    int ret_code;$/;"	m	struct:JpegOpaque	file:
retransmit_si_info	libavformat/mpegtsenc.c	/^static void retransmit_si_info(AVFormatContext *s)$/;"	f	file:
rets	libavcodec/pthread.c	/^    int *rets;$/;"	m	struct:ThreadContext	file:
rets_count	libavcodec/pthread.c	/^    int rets_count;$/;"	m	struct:ThreadContext	file:
revents	libavformat/avio.h	/^    int revents;$/;"	m	struct:URLPollEntry
reverse_dc_prediction	libavcodec/vp3.c	/^static void reverse_dc_prediction(Vp3DecodeContext *s,$/;"	f	file:
revtab	libavcodec/dsputil.h	/^    uint16_t *revtab;$/;"	m	struct:FFTContext
rff	libavcodec/vc9.c	/^    uint8_t rptfrm, tff, rff;$/;"	m	struct:VC9Context	file:
rgb	libavcodec/mjpeg.c	/^    int rgb;$/;"	m	struct:MJpegDecodeContext	file:
rgb24_to_yuv420p	tests/rotozoom.c	/^static void rgb24_to_yuv420p(UINT8 *lum, UINT8 *cb, UINT8 *cr,$/;"	f	file:
rgb24_to_yuv420p	tests/videogen.c	/^static void rgb24_to_yuv420p(uint8_t *lum, uint8_t *cb, uint8_t *cr,$/;"	f	file:
rgb24_to_yuv444p	libavcodec/imgconvert_template.h	/^static void rgb24_to_yuv444p(AVPicture *dst, const AVPicture *src,$/;"	f
rgb24_to_yuvj420p	libavcodec/imgconvert_template.h	/^static void rgb24_to_yuvj420p(AVPicture *dst, const AVPicture *src,$/;"	f
rgb24_to_yuvj444p	libavcodec/imgconvert_template.h	/^static void rgb24_to_yuvj444p(AVPicture *dst, const AVPicture *src,$/;"	f
rgb_tab	tests/rotozoom.c	/^unsigned char *rgb_tab;$/;"	v
rgb_tab	tests/videogen.c	/^unsigned char *rgb_tab;$/;"	v
rgb_triplet	libavformat/gif.c	/^} rgb_triplet;$/;"	t	file:
riff_end	libavformat/avidec.c	/^    int64_t  riff_end;$/;"	m	file:
riff_id	libavformat/avienc.c	/^    int riff_id;$/;"	m	file:
riff_start	libavformat/avienc.c	/^    offset_t riff_start, movi_list, odml_list;$/;"	m	file:
rightBand	libavcodec/imgresample.c	/^    int topBand, bottomBand, leftBand, rightBand;$/;"	m	struct:ImgReSampleContext	file:
ring	libavformat/dv1394.c	/^    void *ring; \/* Ring buffer *\/$/;"	m	struct:dv1394_data	file:
rl_chroma_table_index	libavcodec/mpegvideo.h	/^    int rl_chroma_table_index;$/;"	m	struct:MpegEncContext
rl_inter	libavcodec/h263data.h	/^static RLTable rl_inter = {$/;"	v
rl_intra	libavcodec/mpeg4data.h	/^static RLTable rl_intra = {$/;"	v
rl_intra_aic	libavcodec/h263data.h	/^static RLTable rl_intra_aic = {$/;"	v
rl_length	libavcodec/msmpeg4.c	/^static uint8_t rl_length[NB_RL_TABLES][MAX_LEVEL+1][MAX_RUN+1][2];$/;"	v	file:
rl_mpeg1	libavcodec/mpeg12data.h	/^static RLTable rl_mpeg1 = {$/;"	v
rl_mpeg2	libavcodec/mpeg12data.h	/^static RLTable rl_mpeg2 = {$/;"	v
rl_table	libavcodec/msmpeg4data.h	/^static RLTable rl_table[NB_RL_TABLES] = {$/;"	v
rl_table_index	libavcodec/mpegvideo.h	/^    int rl_table_index;$/;"	m	struct:MpegEncContext
rl_vlc	libavcodec/mpegvideo.h	/^    RL_VLC_ELEM *rl_vlc[32];       \/\/\/< decoding only $/;"	m	struct:RLTable
rle	libavformat/sgi.c	/^    char rle;$/;"	m	struct:SGIInfo	file:
rle_row	libavformat/sgi.c	/^static int rle_row(ByteIOContext *f, char *row, int stride, int rowsize)$/;"	f	file:
rle_unpack	libavcodec/vmdav.c	/^static int rle_unpack(unsigned char *src, unsigned char *dest, int len)$/;"	f	file:
rm_iformat	libavformat/rm.c	/^static AVInputFormat rm_iformat = {$/;"	v	file:
rm_init	libavformat/rm.c	/^int rm_init(void)$/;"	f
rm_oformat	libavformat/rm.c	/^static AVOutputFormat rm_oformat = {$/;"	v	file:
rm_probe	libavformat/rm.c	/^static int rm_probe(AVProbeData *p)$/;"	f	file:
rm_read_audio_stream_info	libavformat/rm.c	/^static void rm_read_audio_stream_info(AVFormatContext *s, AVStream *st, $/;"	f	file:
rm_read_close	libavformat/rm.c	/^static int rm_read_close(AVFormatContext *s)$/;"	f	file:
rm_read_dts	libavformat/rm.c	/^static int64_t rm_read_dts(AVFormatContext *s, int stream_index, $/;"	f	file:
rm_read_header	libavformat/rm.c	/^static int rm_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
rm_read_header_old	libavformat/rm.c	/^static int rm_read_header_old(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
rm_read_packet	libavformat/rm.c	/^static int rm_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
rm_write_audio	libavformat/rm.c	/^static int rm_write_audio(AVFormatContext *s, const uint8_t *buf, int size, int flags)$/;"	f	file:
rm_write_header	libavformat/rm.c	/^static int rm_write_header(AVFormatContext *s)$/;"	f	file:
rm_write_packet	libavformat/rm.c	/^static int rm_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
rm_write_trailer	libavformat/rm.c	/^static int rm_write_trailer(AVFormatContext *s)$/;"	f	file:
rm_write_video	libavformat/rm.c	/^static int rm_write_video(AVFormatContext *s, const uint8_t *buf, int size, int flags)$/;"	f	file:
rms	libavcodec/ra144.c	/^static unsigned int rms(int *data, int f)$/;"	f	file:
rnd_PACK	libavcodec/sh4/dsputil_align.c	34;"	d	file:
rnd_avg32	libavcodec/dsputil.h	/^static inline uint32_t rnd_avg32(uint32_t a, uint32_t b)$/;"	f
roots128	libavcodec/liba52/imdct.c	/^static sample_t roots128[31];$/;"	v	file:
roots16	libavcodec/liba52/imdct.c	/^static sample_t roots16[3];$/;"	v	file:
roots32	libavcodec/liba52/imdct.c	/^static sample_t roots32[7];$/;"	v	file:
roots64	libavcodec/liba52/imdct.c	/^static sample_t roots64[15];$/;"	v	file:
roq_cell	libavcodec/roqvideo.c	/^} roq_cell;$/;"	t	file:
roq_decode_end	libavcodec/roqvideo.c	/^static int roq_decode_end(AVCodecContext *avctx)$/;"	f	file:
roq_decode_frame	libavcodec/roqvideo.c	/^static int roq_decode_frame(AVCodecContext *avctx,$/;"	f	file:
roq_decode_init	libavcodec/roqvideo.c	/^static int roq_decode_init(AVCodecContext *avctx)$/;"	f	file:
roq_decoder	libavcodec/roqvideo.c	/^AVCodec roq_decoder = {$/;"	v
roq_dpcm_decoder	libavcodec/dpcm.c	/^AVCodec roq_dpcm_decoder = {$/;"	v
roq_iformat	libavformat/idroq.c	/^static AVInputFormat roq_iformat = {$/;"	v	file:
roq_init	libavformat/idroq.c	/^int roq_init(void)$/;"	f
roq_probe	libavformat/idroq.c	/^static int roq_probe(AVProbeData *p)$/;"	f	file:
roq_qcell	libavcodec/roqvideo.c	/^} roq_qcell;$/;"	t	file:
roq_read_close	libavformat/idroq.c	/^static int roq_read_close(AVFormatContext *s)$/;"	f	file:
roq_read_header	libavformat/idroq.c	/^static int roq_read_header(AVFormatContext *s,$/;"	f	file:
roq_read_packet	libavformat/idroq.c	/^static int roq_read_packet(AVFormatContext *s,$/;"	f	file:
roq_square_array	libavcodec/dpcm.c	/^    short roq_square_array[256];$/;"	m	struct:DPCMContext	file:
roqvideo_decode_frame	libavcodec/roqvideo.c	/^static void roqvideo_decode_frame(RoqContext *ri)$/;"	f	file:
rotate_block	libavcodec/ra144.c	/^static void rotate_block(short *source, short *target, int offset)$/;"	f	file:
round	libavcodec/i386/idct_mmx.c	35;"	d	file:
round_sample	libavcodec/mpegaudiodec.c	/^static inline int round_sample(int *sum)$/;"	f	file:
round_sample	libavcodec/mpegaudiodec.c	/^static inline int round_sample(int64_t *sum) $/;"	f	file:
round_tab	libavcodec/i386/motion_est_mmx.c	/^static const __attribute__ ((aligned(8))) uint64_t round_tab[3]={$/;"	v	file:
rounder	libavcodec/i386/idct_mmx.c	36;"	d	file:
row_fdct	libavcodec/faandct.c	/^static always_inline void row_fdct(FLOAT temp[64], DCTELEM * data)$/;"	f	file:
row_fdct	libavcodec/jfdctfst.c	/^static always_inline void row_fdct(DCTELEM * data){$/;"	f	file:
row_fdct	libavcodec/jfdctint.c	/^static always_inline void row_fdct(DCTELEM * data){$/;"	f	file:
row_loop	libavcodec/armv4l/jrevdct_arm.S	/^row_loop:$/;"	l
row_size	libavcodec/png.c	/^    int row_size; \/* decompressed row size *\/$/;"	m	struct:PNGContext	file:
row_size	libavformat/png.c	/^    int row_size; \/* decompressed row size *\/$/;"	m	struct:PNGDecodeState	file:
rpcc	libavcodec/alpha/asm.h	145;"	d
rpcc	libavcodec/alpha/asm.h	84;"	d
rpcc	libavcodec/alpha/asm.h	98;"	d
rptfrm	libavcodec/vc9.c	/^    uint8_t rptfrm, tff, rff;$/;"	m	struct:VC9Context	file:
rptr	libavformat/avformat.h	/^    uint8_t *rptr, *wptr, *end;$/;"	m	struct:FifoBuffer
rpza_decode_end	libavcodec/rpza.c	/^static int rpza_decode_end(AVCodecContext *avctx)$/;"	f	file:
rpza_decode_frame	libavcodec/rpza.c	/^static int rpza_decode_frame(AVCodecContext *avctx,$/;"	f	file:
rpza_decode_init	libavcodec/rpza.c	/^static int rpza_decode_init(AVCodecContext *avctx)$/;"	f	file:
rpza_decode_stream	libavcodec/rpza.c	/^static void rpza_decode_stream(RpzaContext *s)$/;"	f	file:
rpza_decoder	libavcodec/rpza.c	/^AVCodec rpza_decoder = {$/;"	v
rtcp_fd	libavformat/rtpproto.c	/^    int rtp_fd, rtcp_fd;$/;"	m	struct:RTPContext	file:
rtcp_hd	libavformat/rtpproto.c	/^    URLContext *rtp_hd, *rtcp_hd;$/;"	m	struct:RTPContext	file:
rtcp_parse_packet	libavformat/rtp.c	/^static int rtcp_parse_packet(RTPDemuxContext *s, const unsigned char *buf, int len)$/;"	f	file:
rtcp_sdes_type_t	libavformat/rtp.h	/^} rtcp_sdes_type_t;$/;"	t
rtcp_send_sr	libavformat/rtp.c	/^static void rtcp_send_sr(AVFormatContext *s1, int64_t ntp_time)$/;"	f	file:
rtcp_type_t	libavformat/rtp.h	/^} rtcp_type_t;$/;"	t
rtp_callback	libavcodec/avcodec.h	/^    void (*rtp_callback)(struct AVCodecContext *avctx, void *data, int size, int mb_nb); $/;"	m	struct:AVCodecContext
rtp_close	libavformat/rtpproto.c	/^static int rtp_close(URLContext *h)$/;"	f	file:
rtp_ctx	ffserver.c	/^    AVFormatContext *rtp_ctx[MAX_STREAMS];$/;"	m	struct:HTTPContext	file:
rtp_ctx	libavformat/rtsp.c	/^    RTPDemuxContext *rtp_ctx; \/* RTP parse context *\/$/;"	m	struct:RTSPStream	file:
rtp_fd	libavformat/rtpproto.c	/^    int rtp_fd, rtcp_fd;$/;"	m	struct:RTPContext	file:
rtp_get_codec_info	libavformat/rtp.c	/^int rtp_get_codec_info(AVCodecContext *codec, int payload_type)$/;"	f
rtp_get_file_handles	libavformat/rtpproto.c	/^void rtp_get_file_handles(URLContext *h, int *prtp_fd, int *prtcp_fd)$/;"	f
rtp_get_local_port	libavformat/rtpproto.c	/^int rtp_get_local_port(URLContext *h)$/;"	f
rtp_get_payload_type	libavformat/rtp.c	/^int rtp_get_payload_type(AVCodecContext *codec)$/;"	f
rtp_handle	libavformat/rtsp.c	/^    URLContext *rtp_handle; \/* RTP stream handle *\/$/;"	m	struct:RTSPStream	file:
rtp_handles	ffserver.c	/^    URLContext *rtp_handles[MAX_STREAMS];$/;"	m	struct:HTTPContext	file:
rtp_hd	libavformat/rtpproto.c	/^    URLContext *rtp_hd, *rtcp_hd;$/;"	m	struct:RTPContext	file:
rtp_init	libavformat/rtp.c	/^int rtp_init(void)$/;"	f
rtp_mode	libavcodec/avcodec.h	/^    int rtp_mode;$/;"	m	struct:AVCodecContext
rtp_mode	libavcodec/mpegvideo.h	/^    int rtp_mode;$/;"	m	struct:MpegEncContext
rtp_mux	libavformat/rtp.c	/^AVOutputFormat rtp_mux = {$/;"	v
rtp_new_av_stream	ffserver.c	/^static int rtp_new_av_stream(HTTPContext *c, $/;"	f	file:
rtp_new_connection	ffserver.c	/^static HTTPContext *rtp_new_connection(struct sockaddr_in *from_addr, $/;"	f	file:
rtp_open	libavformat/rtpproto.c	/^static int rtp_open(URLContext *h, const char *uri, int flags)$/;"	f	file:
rtp_parse_close	libavformat/rtp.c	/^void rtp_parse_close(RTPDemuxContext *s)$/;"	f
rtp_parse_mp4_au	libavformat/rtp.c	/^static int rtp_parse_mp4_au(RTPDemuxContext *s, const uint8_t *buf)$/;"	f	file:
rtp_parse_open	libavformat/rtp.c	/^RTPDemuxContext *rtp_parse_open(AVFormatContext *s1, AVStream *st, int payload_type, rtp_payload_data_t *rtp_payload_data)$/;"	f
rtp_parse_packet	libavformat/rtp.c	/^int rtp_parse_packet(RTPDemuxContext *s, AVPacket *pkt, $/;"	f
rtp_payload_data	libavformat/rtp.c	/^    rtp_payload_data_t *rtp_payload_data;$/;"	m	struct:RTPDemuxContext	file:
rtp_payload_data	libavformat/rtsp.c	/^    rtp_payload_data_t rtp_payload_data; \/* rtp payload parsing infos from SDP *\/$/;"	m	struct:RTSPStream	file:
rtp_payload_data_s	libavformat/rtp.h	/^typedef struct rtp_payload_data_s rtp_payload_data_s;$/;"	t
rtp_payload_data_s	libavformat/rtp.h	/^typedef struct rtp_payload_data_s$/;"	s
rtp_payload_data_t	libavformat/rtp.h	/^} rtp_payload_data_t;$/;"	t
rtp_payload_size	libavcodec/avcodec.h	/^    int rtp_payload_size;   \/* The size of the RTP payload, the coder will  *\/$/;"	m	struct:AVCodecContext
rtp_protocol	ffserver.c	/^    enum RTSPProtocol rtp_protocol;$/;"	m	struct:HTTPContext	file:
rtp_protocol	libavformat/rtpproto.c	/^URLProtocol rtp_protocol = {$/;"	v
rtp_read	libavformat/rtpproto.c	/^static int rtp_read(URLContext *h, uint8_t *buf, int size)$/;"	f	file:
rtp_send_data	libavformat/rtp.c	/^static void rtp_send_data(AVFormatContext *s1, const uint8_t *buf1, int len)$/;"	f	file:
rtp_send_mpegaudio	libavformat/rtp.c	/^static void rtp_send_mpegaudio(AVFormatContext *s1,$/;"	f	file:
rtp_send_mpegts_raw	libavformat/rtp.c	/^static void rtp_send_mpegts_raw(AVFormatContext *s1,$/;"	f	file:
rtp_send_mpegvideo	libavformat/rtp.c	/^static void rtp_send_mpegvideo(AVFormatContext *s1,$/;"	f	file:
rtp_send_raw	libavformat/rtp.c	/^static void rtp_send_raw(AVFormatContext *s1,$/;"	f	file:
rtp_send_samples	libavformat/rtp.c	/^static void rtp_send_samples(AVFormatContext *s1,$/;"	f	file:
rtp_set_remote_url	libavformat/rtpproto.c	/^int rtp_set_remote_url(URLContext *h, const char *uri)$/;"	f
rtp_write	libavformat/rtpproto.c	/^static int rtp_write(URLContext *h, uint8_t *buf, int size)$/;"	f	file:
rtp_write_header	libavformat/rtp.c	/^static int rtp_write_header(AVFormatContext *s1)$/;"	f	file:
rtp_write_packet	libavformat/rtp.c	/^static int rtp_write_packet(AVFormatContext *s1, AVPacket *pkt)$/;"	f	file:
rtp_write_trailer	libavformat/rtp.c	/^static int rtp_write_trailer(AVFormatContext *s1)$/;"	f	file:
rtsp_c	ffserver.c	/^    struct HTTPContext *rtsp_c;$/;"	m	struct:HTTPContext	file:
rtsp_close_streams	libavformat/rtsp.c	/^static void rtsp_close_streams(RTSPState *rt)$/;"	f	file:
rtsp_cmd_describe	ffserver.c	/^static void rtsp_cmd_describe(HTTPContext *c, const char *url)$/;"	f	file:
rtsp_cmd_options	ffserver.c	/^static void rtsp_cmd_options(HTTPContext *c, const char *url)$/;"	f	file:
rtsp_cmd_pause	ffserver.c	/^static void rtsp_cmd_pause(HTTPContext *c, const char *url, RTSPHeader *h)$/;"	f	file:
rtsp_cmd_play	ffserver.c	/^static void rtsp_cmd_play(HTTPContext *c, const char *url, RTSPHeader *h)$/;"	f	file:
rtsp_cmd_setup	ffserver.c	/^static void rtsp_cmd_setup(HTTPContext *c, const char *url, $/;"	f	file:
rtsp_cmd_teardown	ffserver.c	/^static void rtsp_cmd_teardown(HTTPContext *c, const char *url, RTSPHeader *h)$/;"	f	file:
rtsp_default_protocols	libavformat/rtsp.c	/^int rtsp_default_protocols = (1 << RTSP_PROTOCOL_RTP_UDP);$/;"	v
rtsp_demux	libavformat/rtsp.c	/^AVInputFormat rtsp_demux = {$/;"	v
rtsp_hd	libavformat/rtsp.c	/^    URLContext *rtsp_hd; \/* RTSP TCP connexion handle *\/$/;"	m	struct:RTSPState	file:
rtsp_init	libavformat/rtsp.c	/^int rtsp_init(void)$/;"	f
rtsp_option	ffserver.c	/^    char *rtsp_option;$/;"	m	struct:FFStream	file:
rtsp_parse_line	libavformat/rtsp.c	/^void rtsp_parse_line(RTSPHeader *reply, const char *buf)$/;"	f
rtsp_parse_range	libavformat/rtsp.c	/^static void rtsp_parse_range(int *min_ptr, int *max_ptr, const char **pp)$/;"	f	file:
rtsp_parse_range_npt	libavformat/rtsp.c	/^static void rtsp_parse_range_npt(RTSPHeader *reply, const char *p)$/;"	f	file:
rtsp_parse_request	ffserver.c	/^static int rtsp_parse_request(HTTPContext *c)$/;"	f	file:
rtsp_parse_transport	libavformat/rtsp.c	/^static void rtsp_parse_transport(RTSPHeader *reply, const char *p)$/;"	f	file:
rtsp_probe	libavformat/rtsp.c	/^static int rtsp_probe(AVProbeData *p)$/;"	f	file:
rtsp_read_close	libavformat/rtsp.c	/^static int rtsp_read_close(AVFormatContext *s)$/;"	f	file:
rtsp_read_header	libavformat/rtsp.c	/^static int rtsp_read_header(AVFormatContext *s,$/;"	f	file:
rtsp_read_packet	libavformat/rtsp.c	/^static int rtsp_read_packet(AVFormatContext *s,$/;"	f	file:
rtsp_read_pause	libavformat/rtsp.c	/^static int rtsp_read_pause(AVFormatContext *s)$/;"	f	file:
rtsp_read_play	libavformat/rtsp.c	/^static int rtsp_read_play(AVFormatContext *s)$/;"	f	file:
rtsp_read_seek	libavformat/rtsp.c	/^static int rtsp_read_seek(AVFormatContext *s, int stream_index, $/;"	f	file:
rtsp_reply_error	ffserver.c	/^static void rtsp_reply_error(HTTPContext *c, enum RTSPStatusCode error_number)$/;"	f	file:
rtsp_reply_header	ffserver.c	/^static void rtsp_reply_header(HTTPContext *c, enum RTSPStatusCode error_number)$/;"	f	file:
rtsp_send_cmd	libavformat/rtsp.c	/^static void rtsp_send_cmd(AVFormatContext *s, $/;"	f	file:
rtsp_set_callback	libavformat/rtsp.c	/^void rtsp_set_callback(FFRTSPCallback *rtsp_cb)$/;"	f
rtsp_skip_packet	libavformat/rtsp.c	/^static void rtsp_skip_packet(AVFormatContext *s)$/;"	f	file:
rtsp_streams	libavformat/rtsp.c	/^    struct RTSPStream **rtsp_streams;$/;"	m	struct:RTSPState	file:
run	libavcodec/bitstream.h	/^    uint8_t run;$/;"	m	struct:RL_VLC_ELEM
run	libavcodec/loco.c	/^    int save, run, run2; \/* internal rice decoder state *\/$/;"	m	struct:RICEContext	file:
run	libavcodec/svq3.c	/^static const struct { uint8_t run; uint8_t level; } svq3_dct_tables[2][16] = {$/;"	m	file:
run2	libavcodec/loco.c	/^    int save, run, run2; \/* internal rice decoder state *\/$/;"	m	struct:RICEContext	file:
run7_vlc	libavcodec/h264.c	/^static VLC run7_vlc;$/;"	v	file:
run_bits	libavcodec/h264data.h	/^static const uint8_t run_bits[7][16]={$/;"	v
run_index	libavcodec/ffv1.c	/^    int run_index;$/;"	m	struct:FFV1Context	file:
run_len	libavcodec/h264data.h	/^static const uint8_t run_len[7][16]={$/;"	v
run_table	libavcodec/wmadec.c	/^    uint16_t *run_table[2];$/;"	m	struct:WMADecodeContext	file:
run_vlc	libavcodec/h264.c	/^static VLC run_vlc[6];$/;"	v	file:
running	libavformat/mpegts.c	/^    int running:1;$/;"	m	struct:MpegTSService	file:
rv10_decode_end	libavcodec/rv10.c	/^static int rv10_decode_end(AVCodecContext *avctx)$/;"	f	file:
rv10_decode_frame	libavcodec/rv10.c	/^static int rv10_decode_frame(AVCodecContext *avctx, $/;"	f	file:
rv10_decode_init	libavcodec/rv10.c	/^static int rv10_decode_init(AVCodecContext *avctx)$/;"	f	file:
rv10_decode_packet	libavcodec/rv10.c	/^static int rv10_decode_packet(AVCodecContext *avctx, $/;"	f	file:
rv10_decode_picture_header	libavcodec/rv10.c	/^static int rv10_decode_picture_header(MpegEncContext *s)$/;"	f	file:
rv10_decoder	libavcodec/rv10.c	/^AVCodec rv10_decoder = {$/;"	v
rv10_encode_picture_header	libavcodec/rv10.c	/^void rv10_encode_picture_header(MpegEncContext *s, int picture_number)$/;"	f
rv10_encoder	libavcodec/mpegvideo.c	/^AVCodec rv10_encoder = {$/;"	v
rv10_first_dc_coded	libavcodec/mpegvideo.h	/^    int rv10_first_dc_coded[3];$/;"	m	struct:MpegEncContext
rv10_version	libavcodec/mpegvideo.h	/^    int rv10_version; \/\/\/< RV10 version: 0 or 3 $/;"	m	struct:MpegEncContext
rv10_write_header	libavformat/rm.c	/^static void rv10_write_header(AVFormatContext *ctx, $/;"	f	file:
rv20_decode_picture_header	libavcodec/rv10.c	/^static int rv20_decode_picture_header(MpegEncContext *s)$/;"	f	file:
rv20_decoder	libavcodec/rv10.c	/^AVCodec rv20_decoder = {$/;"	v
rv20_encode_picture_header	libavcodec/rv10.c	/^void rv20_encode_picture_header(MpegEncContext *s, int picture_number){$/;"	f
rv20_encoder	libavcodec/mpegvideo.c	/^AVCodec rv20_encoder = {$/;"	v
rv_chrom_bits	libavcodec/rv10.c	/^static const uint8_t rv_chrom_bits[256] =$/;"	v	file:
rv_chrom_code	libavcodec/rv10.c	/^static const uint16_t rv_chrom_code[256] =$/;"	v	file:
rv_dc_chrom	libavcodec/rv10.c	/^static VLC rv_dc_lum, rv_dc_chrom;$/;"	v	file:
rv_dc_lum	libavcodec/rv10.c	/^static VLC rv_dc_lum, rv_dc_chrom;$/;"	v	file:
rv_decode_dc	libavcodec/rv10.c	/^int rv_decode_dc(MpegEncContext *s, int n)$/;"	f
rv_lum_bits	libavcodec/rv10.c	/^static const uint8_t rv_lum_bits[256] = $/;"	v	file:
rv_lum_code	libavcodec/rv10.c	/^static const uint16_t rv_lum_code[256] =$/;"	v	file:
rvlc	libavcodec/mpegvideo.h	/^    int rvlc;                        \/\/\/< reversible vlc $/;"	m	struct:MpegEncContext
rvlc_rl_inter	libavcodec/mpeg4data.h	/^static RLTable rvlc_rl_inter = {$/;"	v
rvlc_rl_intra	libavcodec/mpeg4data.h	/^static RLTable rvlc_rl_intra = {$/;"	v
rw	vhook/ppm.c	/^    rwpipe *rw;$/;"	m	file:
rwpipe	vhook/ppm.c	/^rwpipe;$/;"	t	file:
rwpipe	vhook/ppm.c	/^typedef struct rwpipe$/;"	s	file:
rwpipe_close	vhook/ppm.c	/^void rwpipe_close( rwpipe *this )$/;"	f
rwpipe_open	vhook/ppm.c	/^rwpipe *rwpipe_open( int argc, char *argv[] )$/;"	f
rwpipe_read_number	vhook/ppm.c	/^int rwpipe_read_number( rwpipe *rw )$/;"	f
rwpipe_read_ppm_header	vhook/ppm.c	/^int rwpipe_read_ppm_header( rwpipe *rw, int *width, int *height )$/;"	f
rwpipe_reader	vhook/ppm.c	/^FILE *rwpipe_reader( rwpipe *this )$/;"	f
rwpipe_writer	vhook/ppm.c	/^FILE *rwpipe_writer( rwpipe *this )$/;"	f
rx_type	libavcodec/amr.c	/^    enum RXFrameType rx_type;$/;"	m	struct:AMRContext	file:
s	libavcodec/eval.c	/^    char *s;$/;"	m	struct:Parser	file:
s	libavcodec/h261.c	/^    MpegEncContext s;$/;"	m	struct:H261Context	file:
s	libavcodec/h264.c	/^    MpegEncContext s;$/;"	m	struct:H264Context	file:
s	libavcodec/i386/mmx.h	/^	float			s[2];	\/* Single-precision (32-bit) value *\/$/;"	m
s	libavcodec/imgresample.c	/^    signed short s[8];$/;"	m	file:
s	libavcodec/vc9.c	/^    MpegEncContext s;$/;"	m	struct:VC9Context	file:
s	libavcodec/wmv2.c	/^    MpegEncContext s;$/;"	m	struct:Wmv2Context	file:
s	vhook/fish.c	/^    int s;  \/* 0 .. 255 *\/$/;"	m	file:
s0	libavcodec/alpha/regdef.h	16;"	d
s1	libavcodec/adx.c	/^    int s1,s2;$/;"	m	file:
s1	libavcodec/alpha/regdef.h	17;"	d
s2	libavcodec/adx.c	/^    int s1,s2;$/;"	m	file:
s2	libavcodec/alpha/regdef.h	18;"	d
s3	libavcodec/alpha/regdef.h	19;"	d
s4	libavcodec/alpha/regdef.h	20;"	d
s5	libavcodec/alpha/regdef.h	21;"	d
s6	libavcodec/alpha/regdef.h	22;"	d
sBitRates	libavcodec/mp3lameaudio.c	/^static const int sBitRates[2][3][15] = {$/;"	v	file:
sBitRates	libavformat/swf.c	/^static const int sBitRates[2][3][15] = {$/;"	v	file:
sBitsPerSlot	libavcodec/mp3lameaudio.c	/^static const int sBitsPerSlot[3] = {$/;"	v	file:
sBitsPerSlot	libavformat/swf.c	/^static const int sBitsPerSlot[3] = {$/;"	v	file:
sSampleRates	libavcodec/mp3lameaudio.c	/^static const int sSampleRates[3] = {$/;"	v	file:
sSampleRates	libavformat/swf.c	/^static const int sSampleRates[3][4] = {$/;"	v	file:
sSamplesPerFrame	libavcodec/mp3lameaudio.c	/^static const int sSamplesPerFrame[2][3] =$/;"	v	file:
sSamplesPerFrame	libavformat/swf.c	/^static const int sSamplesPerFrame[3][3] =$/;"	v	file:
sab_diamond_search	libavcodec/motion_est_template.c	/^static int sab_diamond_search(MpegEncContext * s, int *best, int dmin,$/;"	f	file:
sad	libavcodec/dsputil.h	/^    me_cmp_func sad[5]; \/* identical to pix_absAxA except additional void * *\/$/;"	m	struct:DSPContext
sad16_altivec	libavcodec/ppc/dsputil_altivec.c	/^int sad16_altivec(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f
sad16_x2_altivec	libavcodec/ppc/dsputil_altivec.c	/^int sad16_x2_altivec(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f
sad16_xy2_altivec	libavcodec/ppc/dsputil_altivec.c	/^int sad16_xy2_altivec(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f
sad16_y2_altivec	libavcodec/ppc/dsputil_altivec.c	/^int sad16_y2_altivec(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f
sad16x16_mvi	libavcodec/alpha/dsputil_alpha.c	/^static int sad16x16_mvi(void *s, uint8_t *a, uint8_t *b, int stride)$/;"	f	file:
sad8_1_mmx	libavcodec/i386/motion_est_mmx.c	/^static inline void sad8_1_mmx(uint8_t *blk1, uint8_t *blk2, int stride, int h)$/;"	f	file:
sad8_1_mmx2	libavcodec/i386/motion_est_mmx.c	/^static inline void sad8_1_mmx2(uint8_t *blk1, uint8_t *blk2, int stride, int h)$/;"	f	file:
sad8_2_mmx	libavcodec/i386/motion_est_mmx.c	/^static inline void sad8_2_mmx(uint8_t *blk1a, uint8_t *blk1b, uint8_t *blk2, int stride, int h)$/;"	f	file:
sad8_2_mmx2	libavcodec/i386/motion_est_mmx.c	/^static inline void sad8_2_mmx2(uint8_t *blk1a, uint8_t *blk1b, uint8_t *blk2, int stride, int h)$/;"	f	file:
sad8_4_mmx	libavcodec/i386/motion_est_mmx.c	/^static inline void sad8_4_mmx(uint8_t *blk1, uint8_t *blk2, int stride, int h)$/;"	f	file:
sad8_4_mmx2	libavcodec/i386/motion_est_mmx.c	/^static inline void sad8_4_mmx2(uint8_t *blk1, uint8_t *blk2, int stride, int h)$/;"	f	file:
sad8_altivec	libavcodec/ppc/dsputil_altivec.c	/^int sad8_altivec(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f
sad_hpel_motion_search	libavcodec/motion_est.c	/^static inline int sad_hpel_motion_search(MpegEncContext * s,$/;"	f	file:
same_block	libavcodec/snow.c	/^static always_inline int same_block(BlockNode *a, BlockNode *b){$/;"	f	file:
same_quality	ffmpeg.c	/^static int same_quality = 0;$/;"	v	file:
sample	libavcodec/dpcm.c	/^    long sample[2];\/\/for SOL_DPCM$/;"	m	struct:DPCMContext	file:
sample1	libavcodec/adpcm.c	/^    short sample1;$/;"	m	struct:ADPCMChannelStatus	file:
sample2	libavcodec/adpcm.c	/^    short sample2;$/;"	m	struct:ADPCMChannelStatus	file:
sampleCount	libavformat/movenc.c	/^    long        sampleCount;$/;"	m	struct:MOVIndex	file:
sampleDuration	libavformat/movenc.c	/^    long        sampleDuration;$/;"	m	struct:MOVIndex	file:
sample_array	ffplay.c	/^    int16_t sample_array[SAMPLE_ARRAY_SIZE];$/;"	m	struct:VideoState	file:
sample_array_index	ffplay.c	/^    int sample_array_index;$/;"	m	struct:VideoState	file:
sample_aspect_ratio	libavcodec/avcodec.h	/^    AVRational sample_aspect_ratio;$/;"	m	struct:AVCodecContext
sample_buffer	libavcodec/adpcm.c	/^    short sample_buffer[32]; \/* hold left samples while waiting for right samples *\/$/;"	m	struct:ADPCMContext	file:
sample_count	libavformat/mov.c	/^    long sample_count;$/;"	m	struct:MOVStreamContext	file:
sample_count	libavformat/segafilm.c	/^    unsigned int sample_count;$/;"	m	struct:FilmDemuxContext	file:
sample_dump	libavcodec/mpegaudiodec.c	/^void sample_dump(int fnum, int32_t *tab, int n)$/;"	f
sample_fmt	libavcodec/avcodec.h	/^    enum SampleFormat sample_fmt;  \/\/\/< sample format, currenly unused $/;"	m	struct:AVCodecContext
sample_index	ffmpeg.c	/^    int64_t sample_index;      \/* current sample *\/$/;"	m	struct:AVInputStream	file:
sample_offset	libavformat/segafilm.c	/^  offset_t sample_offset;$/;"	m	file:
sample_rate	libavcodec/ac3enc.c	/^    unsigned int sample_rate;$/;"	m	struct:AC3EncodeContext	file:
sample_rate	libavcodec/avcodec.h	/^    int sample_rate; \/\/\/< samples per sec $/;"	m	struct:AVCodecContext
sample_rate	libavcodec/mpegaudiodec.c	/^    int sample_rate;$/;"	m	struct:MPADecodeContext	file:
sample_rate	libavcodec/wmadec.c	/^    int sample_rate;$/;"	m	struct:WMADecodeContext	file:
sample_rate	libavformat/4xm.c	/^    int sample_rate;$/;"	m	struct:AudioTrack	file:
sample_rate	libavformat/audio.c	/^    int sample_rate;$/;"	m	file:
sample_rate	libavformat/avformat.h	/^    int sample_rate;$/;"	m	struct:AVFormatParameters
sample_rate	libavformat/beosaudio.cpp	/^    int sample_rate;$/;"	m	file:
sample_rate	libavformat/psxstr.c	/^    int sample_rate;$/;"	m	struct:StrChannel	file:
sample_rate	libavformat/sierravmd.c	/^    int sample_rate;$/;"	m	struct:VmdDemuxContext	file:
sample_rate_index	libavcodec/mpegaudiodec.c	/^    int sample_rate_index; \/* between 0 and 8 *\/$/;"	m	struct:MPADecodeContext	file:
sample_rate_table	libavcodec/flac.c	/^static int sample_rate_table[] =$/;"	v	file:
sample_size	libavcodec/faad.c	/^    int sample_size;$/;"	m	file:
sample_size	libavformat/avidec.c	/^    int sample_size; \/* audio only data *\/$/;"	m	struct:AVIStream	file:
sample_size	libavformat/mov.c	/^    long sample_size;$/;"	m	struct:MOVStreamContext	file:
sample_size	libavformat/nsvdec.c	/^    int sample_size; \/* audio only data *\/$/;"	m	struct:NSVStream	file:
sample_size	libavformat/segafilm.c	/^  unsigned int sample_size;$/;"	m	file:
sample_size_table	libavcodec/flac.c	/^static int sample_size_table[] = $/;"	v	file:
sample_sizes	libavformat/mov.c	/^    long *sample_sizes;$/;"	m	struct:MOVStreamContext	file:
sample_t	libavcodec/liba52/a52.h	/^typedef double sample_t;$/;"	t
sample_t	libavcodec/liba52/a52.h	/^typedef float sample_t;$/;"	t
sample_t	libavcodec/liba52/a52.h	/^typedef int32_t sample_t;$/;"	t
sample_table	libavformat/segafilm.c	/^    film_sample_t *sample_table;$/;"	m	struct:FilmDemuxContext	file:
sample_to_chunk	libavformat/mov.c	/^    MOV_sample_to_chunk_tbl *sample_to_chunk;$/;"	m	struct:MOVStreamContext	file:
sample_to_chunk_index	libavformat/mov.c	/^    long sample_to_chunk_index;$/;"	m	struct:MOVStreamContext	file:
sample_to_chunk_sz	libavformat/mov.c	/^    long sample_to_chunk_sz;$/;"	m	struct:MOVStreamContext	file:
sample_to_ctime_index	libavformat/mov.c	/^    int sample_to_ctime_index;$/;"	m	struct:MOVStreamContext	file:
sample_to_ctime_sample	libavformat/mov.c	/^    int sample_to_ctime_sample;$/;"	m	struct:MOVStreamContext	file:
sample_to_time_index	libavformat/mov.c	/^    int sample_to_time_index;	 $/;"	m	struct:MOVStreamContext	file:
sample_to_time_sample	libavformat/mov.c	/^    long sample_to_time_sample;	 $/;"	m	struct:MOVStreamContext	file:
sample_to_time_time	libavformat/mov.c	/^    uint64_t sample_to_time_time;    $/;"	m	struct:MOVStreamContext	file:
samplerate	libavcodec/flac.c	/^    int samplerate, channels;$/;"	m	struct:FLACContext	file:
samplerate	libavcodec/sonic.c	/^    int channels, samplerate, block_align, frame_size;$/;"	m	struct:SonicContext	file:
samplerate	libavformat/matroska.c	/^        samplerate;$/;"	m	struct:MatroskaAudioTrack	file:
samplerate_table	libavcodec/sonic.c	/^static int samplerate_table[] =$/;"	v	file:
samples	libavcodec/a52dec.c	/^    sample_t* samples;$/;"	m	struct:AC3DecodeState	file:
samples	libavcodec/ac3dec.c	/^stream_samples_t samples;$/;"	v
samples	libavcodec/liba52/a52_internal.h	/^    sample_t * samples;$/;"	m	struct:a52_state_s
samples	output_example.c	/^int16_t *samples;$/;"	v
samplesInChunk	libavformat/movenc.c	/^    unsigned int samplesInChunk;$/;"	m	struct:MOVIentry	file:
samples_buf	libavcodec/mpegaudio.c	/^    short samples_buf[MPA_MAX_CHANNELS][SAMPLES_BUF_SIZE]; \/* buffer for filter *\/$/;"	m	struct:MpegAudioContext	file:
samples_offset	libavcodec/mpegaudio.c	/^    int samples_offset[MPA_MAX_CHANNELS];       \/* offset in samples_buf *\/$/;"	m	struct:MpegAudioContext	file:
samples_per_frame	libavformat/swf.c	/^    int samples_per_frame;$/;"	m	file:
samplesize	libavcodec/alac.c	/^    int samplesize;$/;"	m	file:
sar	libavcodec/dvdata.h	/^    AVRational       sar[2];              \/* sample aspect ratios for 4:3 and 16:9 *\/$/;"	m	struct:DVprofile
sar	libavcodec/h264.c	/^    AVRational sar;$/;"	m	struct:SPS	file:
save	libavcodec/loco.c	/^    int save, run, run2; \/* internal rice decoder state *\/$/;"	m	struct:RICEContext	file:
save_aspect_info	libavcodec/mpeg12.c	/^    int save_aspect_info;$/;"	m	struct:Mpeg1Context	file:
save_pgm	libavcodec/imgresample.c	/^void save_pgm(const char *filename, uint8_t *img, int xsize, int ysize)$/;"	f
saved	libavcodec/vorbis.h	/^    float *saved;$/;"	m
saved_start	libavcodec/vorbis.h	/^    uint_fast16_t saved_start;$/;"	m
sb	libavcodec/ra288.c	/^	float sb[41];$/;"	m	file:
sb	libavcodec/snow.c	/^    slice_buffer sb;$/;"	m	struct:SnowContext	file:
sb_hybrid	libavcodec/mpegaudiodec.c	/^    int32_t sb_hybrid[SBLIMIT * 18]; \/* 576 samples *\/$/;"	m	struct:GranuleDef	file:
sb_samples	libavcodec/mpegaudio.c	/^    int sb_samples[MPA_MAX_CHANNELS][3][12][SBLIMIT];$/;"	m	struct:MpegAudioContext	file:
sb_samples	libavcodec/mpegaudiodec.c	/^    int32_t sb_samples[MPA_MAX_CHANNELS][36][SBLIMIT] __attribute__((aligned(16)));$/;"	m	struct:MPADecodeContext	file:
sblimit	libavcodec/mpegaudio.c	/^    int sblimit; \/* number of used subbands *\/$/;"	m	struct:MpegAudioContext	file:
sblimit_table	libavcodec/mpegaudiodectab.h	/^const int sblimit_table[5] = { 27 , 30 , 8, 12 , 30 };$/;"	v
sc_threshold	ffmpeg.c	/^static int sc_threshold = 0;$/;"	v	file:
scalability	libavcodec/mpegvideo.h	/^    int scalability;$/;"	m	struct:MpegEncContext
scale	libavformat/avidec.c	/^    int scale;$/;"	m	struct:AVIStream	file:
scale	libavformat/nsvdec.c	/^    int scale;$/;"	m	struct:NSVStream	file:
scale_code	libavcodec/mpegaudio.c	/^    unsigned char scale_code[MPA_MAX_CHANNELS][SBLIMIT];       $/;"	m	struct:MpegAudioContext	file:
scale_diff_table	libavcodec/mpegaudiotab.h	/^static unsigned char scale_diff_table[128];$/;"	v
scale_factor	libavcodec/liba52/tables.h	/^static const sample_t scale_factor[25] = {$/;"	v
scale_factor_inv_table	libavcodec/mpegaudiotab.h	/^static float scale_factor_inv_table[64];$/;"	v
scale_factor_modshift	libavcodec/mpegaudiodec.c	/^static uint16_t scale_factor_modshift[64];$/;"	v	file:
scale_factor_mult	libavcodec/mpegaudiodec.c	/^static int32_t scale_factor_mult[15][3];$/;"	v	file:
scale_factor_mult	libavcodec/mpegaudiotab.h	/^static unsigned short scale_factor_mult[64];$/;"	v
scale_factor_mult2	libavcodec/mpegaudiodec.c	/^static int32_t scale_factor_mult2[3][3] = {$/;"	v	file:
scale_factor_shift	libavcodec/mpegaudiotab.h	/^static int8_t scale_factor_shift[64];$/;"	v
scale_factor_table	libavcodec/mpegaudiotab.h	/^static int scale_factor_table[64];$/;"	v
scale_factors	libavcodec/mpegaudio.c	/^    unsigned char scale_factors[MPA_MAX_CHANNELS][SBLIMIT][3]; \/* scale factors *\/$/;"	m	struct:MpegAudioContext	file:
scale_factors	libavcodec/mpegaudiodec.c	/^    uint8_t scale_factors[40];$/;"	m	struct:GranuleDef	file:
scale_huffbits	libavcodec/wmadata.h	/^static const uint8_t scale_huffbits[121] = {$/;"	v
scale_huffcodes	libavcodec/wmadata.h	/^static const uint32_t scale_huffcodes[121] = {$/;"	v
scalefac_compress	libavcodec/mpegaudiodec.c	/^    int scalefac_compress;$/;"	m	struct:GranuleDef	file:
scalefac_scale	libavcodec/mpegaudiodec.c	/^    uint8_t scalefac_scale;$/;"	m	struct:GranuleDef	file:
scan8	libavcodec/h264data.h	/^static const uint8_t scan8[16 + 2*4]={$/;"	v
scan_table	libavcodec/dv.c	/^    const uint8_t *scan_table;$/;"	m	struct:BlockInfo	file:
scantab	libavcodec/asv1.c	/^static const uint8_t scantab[64]={$/;"	v	file:
scantable	libavcodec/asv1.c	/^    ScanTable scantable;$/;"	m	struct:ASV1Context	file:
scantable	libavcodec/mdec.c	/^    ScanTable scantable;$/;"	m	struct:MDECContext	file:
scantable	libavcodec/mjpeg.c	/^    ScanTable scantable;$/;"	m	struct:MJpegDecodeContext	file:
scantable	libavcodec/mpegvideo.h	/^    const uint8_t *scantable;$/;"	m	struct:ScanTable
scantable	libavcodec/vp3.c	/^    ScanTable scantable;$/;"	m	struct:Vp3DecodeContext	file:
scene_change_score	libavcodec/mpegvideo.h	/^    int scene_change_score;$/;"	m	struct:MotionEstContext
scenechange_threshold	libavcodec/avcodec.h	/^    int scenechange_threshold;$/;"	m	struct:AVCodecContext
scfsi	libavcodec/mpegaudiodec.c	/^    uint8_t scfsi;$/;"	m	struct:GranuleDef	file:
schedule_refresh	ffplay.c	/^static void schedule_refresh(VideoState *is, int delay)$/;"	f	file:
score_map	libavcodec/mpegvideo.h	/^    uint32_t *score_map;               \/\/\/< map to store the scores $/;"	m	struct:MotionEstContext
scplx_mask	ffmpeg.c	/^static float scplx_mask = 0;$/;"	v	file:
scratchpad	libavcodec/mpegvideo.h	/^    uint8_t *scratchpad;               \/\/\/< data area for the me algo, so that the ME doesnt need to malloc\/free $/;"	m	struct:MotionEstContext
screen	ffplay.c	/^SDL_Surface *screen;$/;"	v
screen_height	ffplay.c	/^static int screen_height = 480;$/;"	v	file:
screen_height	libavformat/gifdec.c	/^    int screen_height;$/;"	m	struct:GifState	file:
screen_width	ffplay.c	/^static int screen_width = 640;$/;"	v	file:
screen_width	libavformat/gifdec.c	/^    int screen_width;$/;"	m	struct:GifState	file:
sd3	libavcodec/ps2/mmi.h	70;"	d
sdecay	libavcodec/ac3.h	/^    int sgain, sdecay, fdecay, dbknee, floor;$/;"	m	struct:AC3BitAllocParameters
sdecaycod	libavcodec/ac3enc.c	/^    int sgaincod, sdecaycod, fdecaycod, dbkneecod, floorcod; $/;"	m	struct:AC3EncodeContext	file:
sdecaytab	libavcodec/ac3tab.h	/^static const uint8_t sdecaytab[4]={ $/;"	v
sdl_audio_callback	ffplay.c	/^void sdl_audio_callback(void *opaque, Uint8 *stream, int len)$/;"	f
sdl_refresh_timer_cb	ffplay.c	/^static Uint32 sdl_refresh_timer_cb(Uint32 interval, void *opaque)$/;"	f	file:
sdp_demux	libavformat/rtsp.c	/^static AVInputFormat sdp_demux = {$/;"	v	file:
sdp_ip	libavformat/rtsp.c	/^    struct in_addr sdp_ip; \/* IP address  (from SDP content - not used in RTSP) *\/$/;"	m	struct:RTSPStream	file:
sdp_parse	libavformat/rtsp.c	/^static int sdp_parse(AVFormatContext *s, const char *content)$/;"	f	file:
sdp_parse_fmtp	libavformat/rtsp.c	/^static void sdp_parse_fmtp(AVStream *st, const char *p)$/;"	f	file:
sdp_parse_fmtp_config	libavformat/rtsp.c	/^static void sdp_parse_fmtp_config(AVCodecContext *codec, char *attr, char *value)$/;"	f	file:
sdp_parse_line	libavformat/rtsp.c	/^static void sdp_parse_line(AVFormatContext *s, SDPParseState *s1,$/;"	f	file:
sdp_parse_rtpmap	libavformat/rtsp.c	/^static int sdp_parse_rtpmap(AVCodecContext *codec, int payload_type, const char *p)$/;"	f	file:
sdp_payload_type	libavformat/rtsp.c	/^    int sdp_payload_type; \/* payload type - only used in SDP *\/$/;"	m	struct:RTSPStream	file:
sdp_port	libavformat/rtsp.c	/^    int sdp_port; \/* port (from SDP content - not used in RTSP) *\/$/;"	m	struct:RTSPStream	file:
sdp_probe	libavformat/rtsp.c	/^static int sdp_probe(AVProbeData *p1)$/;"	f	file:
sdp_read_close	libavformat/rtsp.c	/^static int sdp_read_close(AVFormatContext *s)$/;"	f	file:
sdp_read_header	libavformat/rtsp.c	/^static int sdp_read_header(AVFormatContext *s,$/;"	f	file:
sdp_read_packet	libavformat/rtsp.c	/^static int sdp_read_packet(AVFormatContext *s,$/;"	f	file:
sdp_ttl	libavformat/rtsp.c	/^    int sdp_ttl;  \/* IP TTL (from SDP content - not used in RTSP) *\/$/;"	m	struct:RTSPStream	file:
sdt	libavformat/mpegtsenc.c	/^    MpegTSSection sdt; \/* MPEG2 sdt table context *\/$/;"	m	struct:MpegTSWrite	file:
sdt_cb	libavformat/mpegts.c	/^static void sdt_cb(void *opaque, const uint8_t *section, int section_len)$/;"	f	file:
sdt_filter	libavformat/mpegts.c	/^    MpegTSFilter *sdt_filter;$/;"	m	struct:MpegTSContext	file:
sdt_packet_count	libavformat/mpegtsenc.c	/^    int sdt_packet_count;$/;"	m	struct:MpegTSWrite	file:
sdt_packet_freq	libavformat/mpegtsenc.c	/^    int sdt_packet_freq;$/;"	m	struct:MpegTSWrite	file:
se	libavcodec/g726.c	/^	 int se;              \/**< estimated signal for the next iteration *\/$/;"	m	struct:G726Context	file:
sec_num	libavformat/mpegts.c	/^    uint8_t sec_num;$/;"	m	struct:SectionHeader	file:
second_last_frame	libavcodec/interplayvideo.c	/^    AVFrame second_last_frame;$/;"	m	struct:IpvideoContext	file:
section_buf	libavformat/mpegts.c	/^    uint8_t *section_buf;$/;"	m	struct:MpegTSSectionFilter	file:
section_cb	libavformat/mpegts.c	/^    SectionCallback *section_cb;$/;"	m	struct:MpegTSSectionFilter	file:
section_filter	libavformat/mpegts.c	/^        MpegTSSectionFilter section_filter;$/;"	m	union:MpegTSFilter::<anonymous>	file:
section_h_size	libavformat/mpegts.c	/^    int section_h_size;$/;"	m	struct:MpegTSSectionFilter	file:
section_index	libavformat/mpegts.c	/^    int section_index;$/;"	m	struct:MpegTSSectionFilter	file:
section_write_packet	libavformat/mpegtsenc.c	/^static void section_write_packet(MpegTSSection *s, const uint8_t *packet)$/;"	f	file:
seed	libavformat/mov.c	/^    int seed;$/;"	m	file:
seed	tests/videogen.c	/^unsigned int seed = 1;$/;"	v
seek	libavformat/avio.h	/^    int (*seek)(void *opaque, offset_t offset, int whence);$/;"	m
seek_flags	ffplay.c	/^    int seek_flags;$/;"	m	struct:VideoState	file:
seek_pos	ffplay.c	/^    int64_t seek_pos;$/;"	m	struct:VideoState	file:
seek_req	ffplay.c	/^    int seek_req;$/;"	m	struct:VideoState	file:
seek_timestamp	libavformat/rtsp.c	/^    int64_t seek_timestamp;$/;"	m	struct:RTSPState	file:
seek_to_maindata	libavcodec/mpegaudiodec.c	/^static void seek_to_maindata(MPADecodeContext *s, unsigned int backstep)$/;"	f	file:
segment_start	libavformat/matroska.c	/^    offset_t segment_start;$/;"	m	struct:MatroskaDemuxContext	file:
segments	libavformat/ogg2.h	/^    uint8_t segments[255];$/;"	m	struct:ogg_stream
segp	libavformat/ogg2.h	/^    int nsegs, segp;$/;"	m	struct:ogg_stream
select_delta_tables	libavcodec/truemotion1.c	/^static void select_delta_tables(TrueMotion1Context *s, int delta_table_index)$/;"	f	file:
select_input_picture	libavcodec/mpegvideo.c	/^static void select_input_picture(MpegEncContext *s){$/;"	f	file:
selected_track	libavformat/4xm.c	/^    int selected_track;$/;"	m	struct:FourxmDemuxContext	file:
sem	libavcodec/beosthread.c	/^	sem_id sem;$/;"	m	struct:benaphore	file:
send_on_key	ffserver.c	/^    int send_on_key;$/;"	m	struct:FFStream	file:
send_time	libavformat/asf.h	/^    uint64_t send_time;		\/\/ time to send file, in 100-nanosecond units$/;"	m
seq	ffserver.c	/^    int seq; \/* RTSP sequence number *\/$/;"	m	struct:HTTPContext	file:
seq	libavformat/asf.h	/^    unsigned char seq;$/;"	m
seq	libavformat/ogg2.h	/^    uint32_t seq;$/;"	m	struct:ogg_stream
seq	libavformat/rtp.c	/^    uint16_t seq;$/;"	m	struct:RTPDemuxContext	file:
seq	libavformat/rtsp.c	/^    int seq;        \/* RTSP command sequence number *\/$/;"	m	struct:RTSPState	file:
seq	libavformat/rtsp.h	/^    int seq; \/* sequence number *\/$/;"	m	struct:RTSPHeader
seqno	libavformat/asf.h	/^    uint32_t seqno;$/;"	m
serial	libavformat/ogg2.h	/^    uint32_t serial;$/;"	m	struct:ogg_stream
server_port_max	libavformat/rtsp.h	/^    int server_port_min, server_port_max; \/* RTP ports *\/$/;"	m	struct:RTSPTransportField
server_port_min	libavformat/rtsp.h	/^    int server_port_min, server_port_max; \/* RTP ports *\/$/;"	m	struct:RTSPTransportField
services	libavformat/mpegts.c	/^    MpegTSService **services;$/;"	m	struct:MpegTSContext	file:
services	libavformat/mpegtsenc.c	/^    MpegTSService **services;$/;"	m	struct:MpegTSWrite	file:
session_id	ffserver.c	/^    char session_id[32]; \/* session id *\/$/;"	m	struct:HTTPContext	file:
session_id	libavformat/rtsp.c	/^    char session_id[512];$/;"	m	struct:RTSPState	file:
session_id	libavformat/rtsp.h	/^    char session_id[512];$/;"	m	struct:RTSPHeader
set_blocks	libavcodec/snow.c	/^static inline void set_blocks(SnowContext *s, int level, int x, int y, int l, int cb, int cr, int mx, int my, int type){$/;"	f	file:
set_p_mv_tables	libavcodec/motion_est.c	/^static inline void set_p_mv_tables(MpegEncContext * s, int mx, int my, int mv4)$/;"	f	file:
set_parameters	libavformat/avformat.h	/^    int (*set_parameters)(struct AVFormatContext *, AVFormatParameters *);$/;"	m	struct:AVOutputFormat
set_put_bits_buffer_size	libavcodec/bitstream.h	/^static inline void set_put_bits_buffer_size(PutBitContext *s, int size){$/;"	f
set_se_golomb	libavcodec/golomb.h	/^static inline void set_se_golomb(PutBitContext *pb, int i){$/;"	f
set_service_cb	libavformat/mpegts.c	/^    SetServiceCallback *set_service_cb;$/;"	m	struct:MpegTSContext	file:
set_service_cb	libavformat/mpegts.c	/^void set_service_cb(void *opaque, int ret)$/;"	f
set_service_opaque	libavformat/mpegts.c	/^    void *set_service_opaque;$/;"	m	struct:MpegTSContext	file:
set_service_ret	libavformat/mpegts.c	/^    int set_service_ret;$/;"	m	struct:MpegTSContext	file:
set_sr_golomb	libavcodec/golomb.h	/^static inline void set_sr_golomb(PutBitContext *pb, int i, int k, int limit, int esc_len){$/;"	f
set_sr_golomb_flac	libavcodec/golomb.h	/^static inline void set_sr_golomb_flac(PutBitContext *pb, int i, int k, int limit, int esc_len){$/;"	f
set_stat	libavcodec/msmpeg4.c	108;"	d	file:
set_stat	libavcodec/msmpeg4.c	152;"	d	file:
set_te_golomb	libavcodec/golomb.h	/^static inline void set_te_golomb(PutBitContext *pb, int i, int range){$/;"	f
set_ue_golomb	libavcodec/golomb.h	/^static inline void set_ue_golomb(PutBitContext *pb, int i){$/;"	f
set_ur_golomb	libavcodec/golomb.h	/^static inline void set_ur_golomb(PutBitContext *pb, int i, int k, int limit, int esc_len){$/;"	f
set_ur_golomb_jpegls	libavcodec/golomb.h	/^static inline void set_ur_golomb_jpegls(PutBitContext *pb, int i, int k, int limit, int esc_len){$/;"	f
setinfo_7a	libavcodec/alac.c	/^    uint8_t setinfo_7a; \/* 0x00 *\/$/;"	m	file:
setinfo_7f	libavcodec/alac.c	/^    uint8_t setinfo_7f; \/* 0x02 *\/$/;"	m	file:
setinfo_80	libavcodec/alac.c	/^    uint16_t setinfo_80; \/* 0x00ff *\/$/;"	m	file:
setinfo_82	libavcodec/alac.c	/^    uint32_t setinfo_82; \/* 0x000020e7 *\/$/;"	m	file:
setinfo_86	libavcodec/alac.c	/^    uint32_t setinfo_86; \/* 0x00069fe4 *\/$/;"	m	file:
setinfo_8a_rate	libavcodec/alac.c	/^    uint32_t setinfo_8a_rate; \/* 0x0000ac44 *\/$/;"	m	file:
setinfo_max_samples_per_frame	libavcodec/alac.c	/^    uint32_t setinfo_max_samples_per_frame; \/* 0x1000 = 4096 *\/    \/* max samples per frame? *\/$/;"	m	file:
setinfo_rice_historymult	libavcodec/alac.c	/^    uint8_t setinfo_rice_historymult; \/* 0x28 *\/$/;"	m	file:
setinfo_rice_initialhistory	libavcodec/alac.c	/^    uint8_t setinfo_rice_initialhistory; \/* 0x0a *\/$/;"	m	file:
setinfo_rice_kmodifier	libavcodec/alac.c	/^    uint8_t setinfo_rice_kmodifier; \/* 0x0e *\/$/;"	m	file:
setinfo_sample_size	libavcodec/alac.c	/^    uint8_t setinfo_sample_size; \/* 0x10 *\/$/;"	m	file:
sextw	libavcodec/alpha/asm.h	63;"	d
sez	libavcodec/g726.c	/^	 int sez;             \/**< estimated second order prediction *\/$/;"	m	struct:G726Context	file:
sfence	libavcodec/i386/mmx.h	247;"	d
sgain	libavcodec/ac3.h	/^    int sgain, sdecay, fdecay, dbknee, floor;$/;"	m	struct:AC3BitAllocParameters
sgaincod	libavcodec/ac3enc.c	/^    int sgaincod, sdecaycod, fdecaycod, dbkneecod, floorcod; $/;"	m	struct:AC3EncodeContext	file:
sgaintab	libavcodec/ac3tab.h	/^static const uint16_t sgaintab[4]= { $/;"	v
sgi_image_format	libavformat/sgi.c	/^AVImageFormat sgi_image_format = {$/;"	v
sgi_probe	libavformat/sgi.c	/^static int sgi_probe(AVProbeData *pd)$/;"	f	file:
sgi_read	libavformat/sgi.c	/^static int sgi_read(ByteIOContext *f, $/;"	f	file:
sgi_write	libavformat/sgi.c	/^static int sgi_write(ByteIOContext *pb, AVImageInfo *info)$/;"	f	file:
sgn	libavcodec/g726.c	/^static inline int sgn(int value)$/;"	f	file:
shape	libavcodec/mpegvideo.h	/^    int shape;$/;"	m	struct:MpegEncContext
shift	libavcodec/sonic.c	/^static inline int shift(int a,int b)$/;"	f	file:
shift	libavcodec/wnv1.c	/^    int shift;$/;"	m	struct:WNV1Context	file:
shift_down	libavcodec/sonic.c	/^static inline int shift_down(int a,int b)$/;"	f	file:
shift_offset	libavcodec/dv.c	/^    int shift_offset;$/;"	m	struct:BlockInfo	file:
shift_table	libavcodec/dv.c	/^    const uint8_t *shift_table;$/;"	m	struct:BlockInfo	file:
shortName	libavcodec/libpostproc/postprocess_internal.h	/^	char *shortName;$/;"	m	struct:PPFilter
short_frame_num	libavcodec/h264.c	/^    int short_frame_num;$/;"	m	struct:MMCO	file:
short_ref	libavcodec/h264.c	/^    Picture *short_ref[32];$/;"	m	struct:H264Context	file:
short_ref_count	libavcodec/h264.c	/^    int short_ref_count; \/\/\/< number of actual short term references$/;"	m	struct:H264Context	file:
short_start	libavcodec/mpegaudiodec.c	/^    int short_start, long_end; \/* long\/short band indexes *\/$/;"	m	struct:GranuleDef	file:
short_startcode	libavformat/nut.c	/^    int short_startcode;$/;"	m	file:
short_term_qcount	libavcodec/mpegvideo.h	/^    double short_term_qcount;     \/\/\/< count of recent qscales $/;"	m	struct:RateControlContext
short_term_qsum	libavcodec/mpegvideo.h	/^    double short_term_qsum;       \/\/\/< sum of recent qscales $/;"	m	struct:RateControlContext
shorten_decode_close	libavcodec/shorten.c	/^static int shorten_decode_close(AVCodecContext *avctx)$/;"	f	file:
shorten_decode_frame	libavcodec/shorten.c	/^static int shorten_decode_frame(AVCodecContext *avctx,$/;"	f	file:
shorten_decode_init	libavcodec/shorten.c	/^static int shorten_decode_init(AVCodecContext * avctx)$/;"	f	file:
shorten_decoder	libavcodec/shorten.c	/^AVCodec shorten_decoder = {$/;"	v
shorten_flush	libavcodec/shorten.c	/^static void shorten_flush(AVCodecContext *avctx){$/;"	f	file:
shorten_iformat	libavformat/raw.c	/^AVInputFormat shorten_iformat = {$/;"	v
shorten_read_header	libavformat/raw.c	/^static int shorten_read_header(AVFormatContext *s,$/;"	f	file:
show_audio	ffplay.c	/^    int show_audio; \/* if true, display audio samples *\/$/;"	m	struct:VideoState	file:
show_banner	ffmpeg.c	/^static void show_banner(void)$/;"	f	file:
show_banner	ffserver.c	/^static void show_banner(void)$/;"	f	file:
show_bits	libavcodec/bitstream.h	/^static inline unsigned int show_bits(GetBitContext *s, int n){$/;"	f
show_bits1	libavcodec/bitstream.h	/^static inline unsigned int show_bits1(GetBitContext *s){$/;"	f
show_bits_long	libavcodec/bitstream.c	/^unsigned int show_bits_long(GetBitContext *s, int n){$/;"	f
show_formats	ffmpeg.c	/^static void show_formats(void)$/;"	f	file:
show_help	ffmpeg.c	/^static void show_help(void)$/;"	f	file:
show_help	ffplay.c	/^void show_help(void)$/;"	f
show_help	ffserver.c	/^static void show_help(void)$/;"	f	file:
show_help_options	cmdutils.c	/^void show_help_options(const OptionDef *options, const char *msg, int mask, int value)$/;"	f
show_license	ffmpeg.c	/^static void show_license(void)$/;"	f	file:
show_license	ffserver.c	/^static void show_license(void)$/;"	f	file:
show_status	ffplay.c	/^static int show_status;$/;"	v	file:
show_version	ffmpeg.c	/^static void show_version(void)$/;"	f	file:
shrink12	libavcodec/imgconvert.c	/^static void shrink12(uint8_t *dst, int dst_wrap, $/;"	f	file:
shrink21	libavcodec/imgconvert.c	/^static void shrink21(uint8_t *dst, int dst_wrap, $/;"	f	file:
shrink22	libavcodec/imgconvert.c	/^static void shrink22(uint8_t *dst, int dst_wrap, $/;"	f	file:
shrink41	libavcodec/imgconvert.c	/^static void shrink41(uint8_t *dst, int dst_wrap, $/;"	f	file:
shrink44	libavcodec/imgconvert.c	/^static void shrink44(uint8_t *dst, int dst_wrap, $/;"	f	file:
sid	libavformat/mpegts.c	/^    int sid;$/;"	m	struct:MpegTSService	file:
sid	libavformat/mpegtsenc.c	/^    int sid;           \/* service ID *\/$/;"	m	struct:MpegTSService	file:
sidstate	libavcodec/amr.c	/^    sid_syncState *sidstate;$/;"	m	struct:AMRContext	file:
sigill_handler	libavcodec/ppc/dsputil_altivec.c	/^static void sigill_handler (int sig)$/;"	f	file:
sigill_handler	libavcodec/sparc/dsputil_vis.c	/^static void sigill_handler (int sig)$/;"	f	file:
sign	libavcodec/g726.c	/^	int sign;   \/**< 1bit sign *\/$/;"	m	struct:Float11	file:
sigterm_handler	ffmpeg.c	/^sigterm_handler(int sig)$/;"	f	file:
simple_idct	libavcodec/simple_idct.c	/^void simple_idct(DCTELEM *block)$/;"	f
simple_idct248_put	libavcodec/simple_idct.c	/^void simple_idct248_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
simple_idct48_add	libavcodec/simple_idct.c	/^void simple_idct48_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
simple_idct84_add	libavcodec/simple_idct.c	/^void simple_idct84_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
simple_idct_ARM	libavcodec/armv4l/simple_idct_arm.S	/^simple_idct_ARM:$/;"	l
simple_idct_ARM_add	libavcodec/armv4l/dsputil_arm.c	/^static void simple_idct_ARM_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
simple_idct_ARM_put	libavcodec/armv4l/dsputil_arm.c	/^static void simple_idct_ARM_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
simple_idct_add	libavcodec/simple_idct.c	/^void simple_idct_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
simple_idct_add_axp	libavcodec/alpha/simple_idct_alpha.c	/^void simple_idct_add_axp(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
simple_idct_axp	libavcodec/alpha/simple_idct_alpha.c	/^void simple_idct_axp(DCTELEM *block)$/;"	f
simple_idct_put	libavcodec/simple_idct.c	/^void simple_idct_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
simple_idct_put_axp	libavcodec/alpha/simple_idct_alpha.c	/^void simple_idct_put_axp(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
simple_index_header	libavformat/asf.h	/^static const GUID simple_index_header = {$/;"	v
simple_mmx_permutation	libavcodec/dsputil.c	/^static const uint8_t simple_mmx_permutation[64]={$/;"	v	file:
single_jpeg_format	libavformat/mpjpeg.c	/^static AVOutputFormat single_jpeg_format = {$/;"	v	file:
single_jpeg_write_header	libavformat/mpjpeg.c	/^static int single_jpeg_write_header(AVFormatContext *s)$/;"	f	file:
single_jpeg_write_packet	libavformat/mpjpeg.c	/^static int single_jpeg_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
single_jpeg_write_trailer	libavformat/mpjpeg.c	/^static int single_jpeg_write_trailer(AVFormatContext *s)$/;"	f	file:
sintab	libavcodec/ac3tab.h	/^static int16_t sintab[64];$/;"	v
size	ffplay.c	/^    int size;$/;"	m	struct:PacketQueue	file:
size	libavcodec/4xm.c	/^    int size;$/;"	m	struct:CFrameBuffer	file:
size	libavcodec/cinepak.c	/^    int size;$/;"	m	struct:CinepakContext	file:
size	libavcodec/dv.c	/^   uint8_t  size;$/;"	m	struct:dv_vlc_pair	file:
size	libavcodec/idcinvideo.c	/^    int size;$/;"	m	struct:IdcinContext	file:
size	libavcodec/interplayvideo.c	/^    int size;$/;"	m	struct:IpvideoContext	file:
size	libavcodec/msrle.c	/^    int size;$/;"	m	struct:MsrleContext	file:
size	libavcodec/msvideo1.c	/^    int size;$/;"	m	struct:Msvideo1Context	file:
size	libavcodec/qtrle.c	/^    int size;$/;"	m	struct:QtrleContext	file:
size	libavcodec/roqvideo.c	/^    int size;$/;"	m	struct:RoqContext	file:
size	libavcodec/rpza.c	/^    int size;$/;"	m	struct:RpzaContext	file:
size	libavcodec/smc.c	/^    int size;$/;"	m	struct:SmcContext	file:
size	libavcodec/truemotion1.c	/^    int size;$/;"	m	struct:TrueMotion1Context	file:
size	libavcodec/vmdav.c	/^    int size;$/;"	m	struct:VmdVideoContext	file:
size	libavcodec/vqavideo.c	/^    int size;$/;"	m	struct:VqaContext	file:
size	libavcodec/xan.c	/^    int size;$/;"	m	struct:XanContext	file:
size	libavformat/avformat.h	/^    int   size;$/;"	m	struct:AVPacket
size	libavformat/aviobuf.c	/^    int pos, size, allocated_size;$/;"	m	struct:DynBuffer	file:
size	libavformat/mov.c	/^    int size;$/;"	m	file:
size	libavformat/mov.c	/^    int64_t size; \/* total size (excluding the size and type fields) *\/$/;"	m	file:
size	libavformat/movenc.c	/^    unsigned int flags, pos, size;$/;"	m	struct:MOVIentry	file:
size	libavformat/mpeg.c	/^    int size;$/;"	m	struct:PacketDesc	file:
size	libavformat/ogg2.h	/^    uint64_t size;$/;"	m	struct:ogg
size	libavformat/rtp.h	/^        int size;$/;"	m	struct:rtp_payload_data_s::AUHeaders
size1	vhook/ppm.c	/^    int size1;$/;"	m	file:
size2	vhook/ppm.c	/^    int size2;$/;"	m	file:
size2index	libavcodec/4xm.c	/^static const uint8_t size2index[4][4]={$/;"	v	file:
size_in_bits	libavcodec/bitstream.h	/^    int size_in_bits;$/;"	m	struct:GetBitContext
size_lsb	libavformat/nut.c	/^    uint16_t size_lsb;$/;"	m	file:
size_mul	libavformat/nut.c	/^    uint16_t size_mul;$/;"	m	file:
sizelength	libavformat/rtp.h	/^    int sizelength;$/;"	m	struct:rtp_payload_data_s
sizes	libavformat/img2.c	/^static int sizes[][2] = {$/;"	v	file:
sizes	libavformat/yuv.c	/^static int sizes[][2] = {$/;"	v	file:
skip	libavcodec/mpegvideo.h	/^    int skip;                          \/\/\/< set if ME is skipped for the current MB $/;"	m	struct:MotionEstContext
skip_bits	libavcodec/bitstream.h	/^static inline void skip_bits(GetBitContext *s, int n){$/;"	f
skip_bits1	libavcodec/bitstream.h	/^static inline void skip_bits1(GetBitContext *s){$/;"	f
skip_bottom	libavcodec/avcodec.h	/^     int skip_bottom;$/;"	m	struct:AVCodecContext
skip_check	libavcodec/mpegvideo.c	/^static int skip_check(MpegEncContext *s, Picture *p, Picture *ref){$/;"	f	file:
skip_count	libavcodec/avcodec.h	/^    int skip_count;$/;"	m	struct:AVCodecContext
skip_count	libavcodec/mpegvideo.h	/^    int skip_count;$/;"	m	struct:MpegEncContext
skip_mb_plane	libavcodec/vc9.c	/^    BitPlane skip_mb_plane;       \/\/\/< bitplane for skipped MBs$/;"	m	struct:VC9Context	file:
skip_put_bits	libavcodec/bitstream.h	/^static inline void skip_put_bits(PutBitContext *s, int n){$/;"	f
skip_put_bytes	libavcodec/bitstream.h	/^static inline void skip_put_bytes(PutBitContext *s, int n){$/;"	f
skip_spaces	ffserver.c	/^static void skip_spaces(const char **pp)$/;"	f	file:
skip_spaces	libavformat/rtsp.c	/^static void skip_spaces(const char **pp)$/;"	f	file:
skip_top	libavcodec/avcodec.h	/^     int skip_top;$/;"	m	struct:AVCodecContext
skip_type	libavcodec/wmv2.c	/^    int skip_type;$/;"	m	struct:Wmv2Context	file:
sl_config	libavformat/mov.c	/^    uint8_t *sl_config;$/;"	m	file:
sl_config_len	libavformat/mov.c	/^    uint8_t  sl_config_len;$/;"	m	file:
slen_table	libavcodec/mpegaudiodectab.h	/^static const uint8_t slen_table[2][16] = {$/;"	v
slev	libavcodec/liba52/a52_internal.h	/^    level_t slev;		\/* surround channels mix level *\/$/;"	m	struct:a52_state_s
slice_alpha_c0_offset	libavcodec/h264.c	/^    int slice_alpha_c0_offset;$/;"	m	struct:H264Context	file:
slice_beta_offset	libavcodec/h264.c	/^    int slice_beta_offset;$/;"	m	struct:H264Context	file:
slice_buffer	libavcodec/snow.c	/^} slice_buffer;$/;"	t	file:
slice_buffer_destroy	libavcodec/snow.c	/^static void slice_buffer_destroy(slice_buffer * buf)$/;"	f	file:
slice_buffer_flush	libavcodec/snow.c	/^static void slice_buffer_flush(slice_buffer * buf)$/;"	f	file:
slice_buffer_get_line	libavcodec/snow.c	479;"	d	file:
slice_buffer_init	libavcodec/snow.c	/^static void slice_buffer_init(slice_buffer * buf, int line_count, int max_allocated_lines, int line_width, DWTELEM * base_buffer)$/;"	f	file:
slice_buffer_load_line	libavcodec/snow.c	/^static DWTELEM * slice_buffer_load_line(slice_buffer * buf, int line)$/;"	f	file:
slice_buffer_release	libavcodec/snow.c	/^static void slice_buffer_release(slice_buffer * buf, int line)$/;"	f	file:
slice_count	libavcodec/avcodec.h	/^    int slice_count;$/;"	m	struct:AVCodecContext
slice_count	libavcodec/mpeg12.c	/^    int slice_count;$/;"	m	struct:Mpeg1Context	file:
slice_decode_thread	libavcodec/mpeg12.c	/^static int slice_decode_thread(AVCodecContext *c, void *arg){$/;"	f	file:
slice_end	libavcodec/mpeg12.c	/^static int slice_end(AVCodecContext *avctx, AVFrame *pict)$/;"	f	file:
slice_flags	libavcodec/avcodec.h	/^    int slice_flags;$/;"	m	struct:AVCodecContext
slice_group_count	libavcodec/h264.c	/^    int slice_group_count;      \/\/\/< num_slice_groups_minus1 + 1$/;"	m	struct:PPS	file:
slice_height	libavcodec/mpegvideo.h	/^    int slice_height;      \/\/\/< in macroblocks $/;"	m	struct:MpegEncContext
slice_num	libavcodec/h264.c	/^    int slice_num;$/;"	m	struct:H264Context	file:
slice_offset	libavcodec/avcodec.h	/^    int *slice_offset;$/;"	m	struct:AVCodecContext
slice_table	libavcodec/h264.c	/^    uint8_t *slice_table;      \/\/\/< slice_table_base + mb_stride + 1$/;"	m	struct:H264Context	file:
slice_table_base	libavcodec/h264.c	/^    uint8_t *slice_table_base;$/;"	m	struct:H264Context	file:
slice_type	libavcodec/h264.c	/^    int slice_type;$/;"	m	struct:H264Context	file:
slice_type_fixed	libavcodec/h264.c	/^    int slice_type_fixed;$/;"	m	struct:H264Context	file:
slot	libavformat/gifdec.c	/^    int slot;			\/* Last read code *\/$/;"	m	struct:GifState	file:
small_diamond_search	libavcodec/motion_est_template.c	/^static always_inline int small_diamond_search(MpegEncContext * s, int *best, int dmin,$/;"	f	file:
small_strptime	libavformat/cutils.c	/^const char *small_strptime(const char *p, const char *fmt, $/;"	f
smc_decode_end	libavcodec/smc.c	/^static int smc_decode_end(AVCodecContext *avctx)$/;"	f	file:
smc_decode_frame	libavcodec/smc.c	/^static int smc_decode_frame(AVCodecContext *avctx,$/;"	f	file:
smc_decode_init	libavcodec/smc.c	/^static int smc_decode_init(AVCodecContext *avctx)$/;"	f	file:
smc_decode_stream	libavcodec/smc.c	/^static void smc_decode_stream(SmcContext *s)$/;"	f	file:
smc_decoder	libavcodec/smc.c	/^AVCodec smc_decoder = {$/;"	v
snd__TAG	libavformat/4xm.c	45;"	d	file:
snprintf	libavcodec/common.h	173;"	d
socket_open_listen	ffserver.c	/^static int socket_open_listen(struct sockaddr_in *my_addr)$/;"	f	file:
socklen_t	libavformat/tcp.c	/^typedef int socklen_t;$/;"	t	file:
sol_channels	libavformat/sol.c	/^static int sol_channels(int magic, int type)$/;"	f	file:
sol_codec_id	libavformat/sol.c	/^static int sol_codec_id(int magic, int type)$/;"	f	file:
sol_codec_type	libavformat/sol.c	/^static int sol_codec_type(int magic, int type)$/;"	f	file:
sol_dpcm_decoder	libavcodec/dpcm.c	/^AVCodec sol_dpcm_decoder = {$/;"	v
sol_iformat	libavformat/sol.c	/^static AVInputFormat sol_iformat = {$/;"	v	file:
sol_init	libavformat/sol.c	/^int sol_init(void)$/;"	f
sol_probe	libavformat/sol.c	/^static int sol_probe(AVProbeData *p)$/;"	f	file:
sol_read_close	libavformat/sol.c	/^static int sol_read_close(AVFormatContext *s)$/;"	f	file:
sol_read_header	libavformat/sol.c	/^static int sol_read_header(AVFormatContext *s,$/;"	f	file:
sol_read_packet	libavformat/sol.c	/^static int sol_read_packet(AVFormatContext *s,$/;"	f	file:
sol_table	libavcodec/dpcm.c	/^    int *sol_table;\/\/for SOL_DPCM$/;"	m	struct:DPCMContext	file:
sol_table_16	libavcodec/dpcm.c	/^static int sol_table_16[128] = {$/;"	v	file:
sol_table_new	libavcodec/dpcm.c	/^static int sol_table_new[16] =$/;"	v	file:
sol_table_old	libavcodec/dpcm.c	/^static int sol_table_old[16] =$/;"	v	file:
sonic_decode_close	libavcodec/sonic.c	/^static int sonic_decode_close(AVCodecContext *avctx)$/;"	f	file:
sonic_decode_frame	libavcodec/sonic.c	/^static int sonic_decode_frame(AVCodecContext *avctx,$/;"	f	file:
sonic_decode_init	libavcodec/sonic.c	/^static int sonic_decode_init(AVCodecContext *avctx)$/;"	f	file:
sonic_decoder	libavcodec/sonic.c	/^AVCodec sonic_decoder = {$/;"	v
sonic_encode_close	libavcodec/sonic.c	/^static int sonic_encode_close(AVCodecContext *avctx)$/;"	f	file:
sonic_encode_frame	libavcodec/sonic.c	/^static int sonic_encode_frame(AVCodecContext *avctx,$/;"	f	file:
sonic_encode_init	libavcodec/sonic.c	/^static int sonic_encode_init(AVCodecContext *avctx)$/;"	f	file:
sonic_encoder	libavcodec/sonic.c	/^AVCodec sonic_encoder = {$/;"	v
sonic_ls_encoder	libavcodec/sonic.c	/^AVCodec sonic_ls_encoder = {$/;"	v
sound_samples	libavformat/swf.c	/^    int sound_samples;$/;"	m	file:
source_index	ffmpeg.c	/^    int source_index;        \/* AVInputStream index *\/$/;"	m	struct:AVOutputStream	file:
sp	libavcodec/alpha/regdef.h	42;"	d
sp	libavformat/gifdec.c	/^    uint8_t *sp;$/;"	m	struct:GifState	file:
sp5x_data_dht	libavcodec/sp5x.h	/^static uint8_t sp5x_data_dht[] = {   $/;"	v
sp5x_data_dqt	libavcodec/sp5x.h	/^static uint8_t sp5x_data_dqt[] =$/;"	v
sp5x_data_sof	libavcodec/sp5x.h	/^static uint8_t sp5x_data_sof[] =$/;"	v
sp5x_data_sos	libavcodec/sp5x.h	/^static uint8_t sp5x_data_sos[] =$/;"	v
sp5x_decode_frame	libavcodec/mjpeg.c	/^static int sp5x_decode_frame(AVCodecContext *avctx, $/;"	f	file:
sp5x_decoder	libavcodec/mjpeg.c	/^AVCodec sp5x_decoder = {$/;"	v
sp5x_quant_table	libavcodec/sp5x.h	/^static uint8_t sp5x_quant_table[20][64]=$/;"	v
spatial_compose53i	libavcodec/snow.c	/^static void spatial_compose53i(DWTELEM *buffer, int width, int height, int stride){$/;"	f	file:
spatial_compose53i_buffered_init	libavcodec/snow.c	/^static void spatial_compose53i_buffered_init(dwt_compose_t *cs, slice_buffer * sb, int height, int stride_line){$/;"	f	file:
spatial_compose53i_dy	libavcodec/snow.c	/^static void spatial_compose53i_dy(dwt_compose_t *cs, DWTELEM *buffer, int width, int height, int stride){$/;"	f	file:
spatial_compose53i_dy_buffered	libavcodec/snow.c	/^static void spatial_compose53i_dy_buffered(dwt_compose_t *cs, slice_buffer * sb, int width, int height, int stride_line){$/;"	f	file:
spatial_compose53i_init	libavcodec/snow.c	/^static void spatial_compose53i_init(dwt_compose_t *cs, DWTELEM *buffer, int height, int stride){$/;"	f	file:
spatial_compose97i	libavcodec/snow.c	/^static void spatial_compose97i(DWTELEM *buffer, int width, int height, int stride){$/;"	f	file:
spatial_compose97i_buffered_init	libavcodec/snow.c	/^static void spatial_compose97i_buffered_init(dwt_compose_t *cs, slice_buffer * sb, int height, int stride_line){$/;"	f	file:
spatial_compose97i_dy	libavcodec/snow.c	/^static void spatial_compose97i_dy(dwt_compose_t *cs, DWTELEM *buffer, int width, int height, int stride){$/;"	f	file:
spatial_compose97i_dy_buffered	libavcodec/snow.c	/^static void spatial_compose97i_dy_buffered(dwt_compose_t *cs, slice_buffer * sb, int width, int height, int stride_line){$/;"	f	file:
spatial_compose97i_init	libavcodec/snow.c	/^static void spatial_compose97i_init(dwt_compose_t *cs, DWTELEM *buffer, int height, int stride){$/;"	f	file:
spatial_composeX	libavcodec/snow.c	/^static void spatial_composeX(DWTELEM *buffer, int width, int height, int stride){$/;"	f	file:
spatial_cplx_masking	libavcodec/avcodec.h	/^    float spatial_cplx_masking;$/;"	m	struct:AVCodecContext
spatial_decompose53i	libavcodec/snow.c	/^static void spatial_decompose53i(DWTELEM *buffer, int width, int height, int stride){$/;"	f	file:
spatial_decompose97i	libavcodec/snow.c	/^static void spatial_decompose97i(DWTELEM *buffer, int width, int height, int stride){$/;"	f	file:
spatial_decomposeX	libavcodec/snow.c	/^static void spatial_decomposeX(DWTELEM *buffer, int width, int height, int stride){$/;"	f	file:
spatial_decomposition_count	libavcodec/snow.c	/^    int spatial_decomposition_count;$/;"	m	struct:SnowContext	file:
spatial_decomposition_type	libavcodec/snow.c	/^    int spatial_decomposition_type;$/;"	m	struct:SnowContext	file:
spatial_dwt_buffer	libavcodec/snow.c	/^    DWTELEM *spatial_dwt_buffer;$/;"	m	struct:SnowContext	file:
spatial_scalability	libavcodec/snow.c	/^    int spatial_scalability;$/;"	m	struct:SnowContext	file:
speech_decoder_state	libavcodec/amr.c	/^    Speech_Decode_FrameState *speech_decoder_state;$/;"	m	struct:AMRContext	file:
split_direction	libavcodec/indeo3.c	/^  long split_direction;$/;"	m	file:
split_flag	libavcodec/indeo3.c	/^  long split_flag;$/;"	m	file:
sprintf	libavcodec/common.h	530;"	d
sprite_brightness_change	libavcodec/mpegvideo.h	/^    int sprite_brightness_change;$/;"	m	struct:MpegEncContext
sprite_delta	libavcodec/mpegvideo.h	/^    int sprite_delta[2][2];          \/\/\/< sprite_delta [isY][isMVY]  $/;"	m	struct:MpegEncContext
sprite_height	libavcodec/mpegvideo.h	/^    int sprite_height;$/;"	m	struct:MpegEncContext
sprite_left	libavcodec/mpegvideo.h	/^    int sprite_left;$/;"	m	struct:MpegEncContext
sprite_offset	libavcodec/mpegvideo.h	/^    int sprite_offset[2][2];         \/\/\/< sprite offset[isChroma][isMVY] $/;"	m	struct:MpegEncContext
sprite_shift	libavcodec/mpegvideo.h	/^    int sprite_shift[2];             \/\/\/< sprite shift [isChroma] $/;"	m	struct:MpegEncContext
sprite_top	libavcodec/mpegvideo.h	/^    int sprite_top;$/;"	m	struct:MpegEncContext
sprite_trajectory	libavcodec/h263.c	/^static VLC sprite_trajectory;$/;"	v	file:
sprite_trajectory_tab	libavcodec/mpeg4data.h	/^static const uint16_t sprite_trajectory_tab[15][2] = {$/;"	v
sprite_warping_accuracy	libavcodec/mpegvideo.h	/^    int sprite_warping_accuracy;$/;"	m	struct:MpegEncContext
sprite_width	libavcodec/mpegvideo.h	/^    int sprite_width;$/;"	m	struct:MpegEncContext
sps	libavcodec/h264.c	/^    SPS sps; \/\/\/< current sps$/;"	m	struct:H264Context	file:
sps_buffer	libavcodec/h264.c	/^    SPS sps_buffer[MAX_SPS_COUNT];$/;"	m	struct:H264Context	file:
sps_id	libavcodec/h264.c	/^    int sps_id;$/;"	m	struct:PPS	file:
sptr	libavcodec/ra144.c	/^	unsigned short *sptr;$/;"	m	file:
sq	libavcodec/ps2/mmi.h	48;"	d
sq2	libavcodec/ps2/mmi.h	76;"	d
sqrt_table	libavcodec/ra144.h	/^static const unsigned short sqrt_table[4096]={$/;"	v
squareTbl	libavcodec/dsputil.c	/^uint32_t squareTbl[512] = {0, };$/;"	v
sr	libavcodec/g726.c	/^	 Float11 sr[2];       \/**< prev. reconstructed samples *\/$/;"	m	struct:G726Context	file:
srand	libavcodec/common.h	529;"	d
src	libavcodec/mpegvideo.h	/^    uint8_t *src[4][4];$/;"	m	struct:MotionEstContext
src_incr	libavcodec/resample2.c	/^    int src_incr;$/;"	m	struct:AVResampleContext	file:
src_mem	libavformat/grab.c	/^    uint8_t *src_mem;$/;"	m	file:
sse	libavcodec/dsputil.h	/^    me_cmp_func sse[5];$/;"	m	struct:DSPContext
sse	libavcodec/mpegvideo.c	/^static int sse(MpegEncContext *s, uint8_t *src1, uint8_t *src2, int w, int h, int stride){$/;"	f	file:
sse16_altivec	libavcodec/ppc/dsputil_altivec.c	/^int sse16_altivec(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f
sse16_c	libavcodec/dsputil.c	/^static int sse16_c(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
sse16_mmx	libavcodec/i386/dsputil_mmx.c	/^static int sse16_mmx(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h) {$/;"	f	file:
sse4_c	libavcodec/dsputil.c	/^static int sse4_c(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h)$/;"	f	file:
sse8_altivec	libavcodec/ppc/dsputil_altivec.c	/^int sse8_altivec(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f
sse8_c	libavcodec/dsputil.c	/^static int sse8_c(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h)$/;"	f	file:
sse8_mmx	libavcodec/i386/dsputil_mmx.c	/^static int sse8_mmx(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h) {$/;"	f	file:
sse_mb	libavcodec/mpegvideo.c	/^static int sse_mb(MpegEncContext *s){$/;"	f	file:
ssrc	libavformat/rtp.c	/^    uint32_t ssrc;$/;"	m	struct:RTPDemuxContext	file:
st	ffmpeg.c	/^    AVStream *st;            \/* stream in the output file *\/$/;"	m	struct:AVOutputStream	file:
st	ffmpeg.c	/^    AVStream *st;$/;"	m	struct:AVInputStream	file:
st	libavformat/mpegts.c	/^    AVStream *st;$/;"	m	struct:PESContext	file:
st	libavformat/rtp.c	/^    AVStream *st;$/;"	m	struct:RTPDemuxContext	file:
st	vhook/watermark.c	/^    AVStream       *st;$/;"	m	file:
st1	libavcodec/ra288.c	/^	float st1a[111],st1b[37],st1[37];$/;"	m	file:
st1a	libavcodec/ra288.c	/^	float st1a[111],st1b[37],st1[37];$/;"	m	file:
st1b	libavcodec/ra288.c	/^	float st1a[111],st1b[37],st1[37];$/;"	m	file:
st2	libavcodec/ra288.c	/^	float st2a[38],st2b[11],st2[11];$/;"	m	file:
st2a	libavcodec/ra288.c	/^	float st2a[38],st2b[11],st2[11];$/;"	m	file:
st2b	libavcodec/ra288.c	/^	float st2a[38],st2b[11],st2[11];$/;"	m	file:
st_bit_counts	libavcodec/msmpeg4.c	/^unsigned int st_bit_counts[ST_NB];$/;"	v
st_current_index	libavcodec/msmpeg4.c	/^int st_current_index = 0;$/;"	v
st_names	libavcodec/msmpeg4.c	/^const char *st_names[ST_NB] = {$/;"	v
st_out_bit_counts	libavcodec/msmpeg4.c	/^unsigned int st_out_bit_counts[ST_NB];$/;"	v
stack	libavformat/gifdec.c	/^    uint8_t stack[SIZTABLE];$/;"	m	struct:GifState	file:
stack_index	libavcodec/eval.c	/^    int stack_index;$/;"	m	struct:Parser	file:
standard	libavformat/avformat.h	/^    const char *standard; \/* tv standard, NTSC, PAL, SECAM *\/$/;"	m	struct:AVFormatParameters
standard_decode_mbs	libavcodec/vc9.c	/^static int standard_decode_mbs(VC9Context *v)$/;"	f	file:
standard_decode_picture_primary_header	libavcodec/vc9.c	/^static int standard_decode_picture_primary_header(VC9Context *v)$/;"	f	file:
standard_decode_picture_secondary_header	libavcodec/vc9.c	/^static int standard_decode_picture_secondary_header(VC9Context *v)$/;"	f	file:
start	ffmpeg.c	/^    int64_t       start;     \/* time when read started *\/$/;"	m	struct:AVInputStream	file:
start	libavformat/avidec.c	/^    int start;$/;"	m	struct:AVIStream	file:
start	libavformat/matroska.c	/^    uint64_t start, length;$/;"	m	struct:MatroskaLevel	file:
start	libavformat/nsvdec.c	/^    int start;$/;"	m	struct:NSVStream	file:
start_children	ffserver.c	/^static void start_children(FFStream *feed)$/;"	f	file:
start_code	libavcodec/mjpeg.c	/^    int start_code; \/* current start code *\/$/;"	m	struct:MJpegDecodeContext	file:
start_column_loop	libavcodec/armv4l/jrevdct_arm.S	/^start_column_loop:$/;"	l
start_frame	libavcodec/avcodec.h	/^    int start_frame;$/;"	m	struct:RcOverride
start_mb_y	libavcodec/mpegvideo.h	/^    int start_mb_y;            \/\/\/< start mb_y of this thread (so current thread should process start_mb_y <= row < end_mb_y)$/;"	m	struct:MpegEncContext
start_multicast	ffserver.c	/^static void start_multicast(void)$/;"	f	file:
start_mv_blocks_num	xvmc_render.h	/^  int start_mv_blocks_num;\/\/offset in the array for the current slice,updated by vo$/;"	m
start_tag	libavformat/avienc.c	/^offset_t start_tag(ByteIOContext *pb, const char *tag)$/;"	f
start_time	ffmpeg.c	/^static int64_t start_time = 0;$/;"	v	file:
start_time	ffplay.c	/^static int64_t start_time = AV_NOPTS_VALUE;$/;"	v	file:
start_time	ffserver.c	/^    long start_time;            \/* In milliseconds - this wraps fairly often *\/$/;"	m	struct:HTTPContext	file:
start_time	libavformat/avformat.h	/^    int64_t start_time; $/;"	m	struct:AVFormatContext
start_time	libavformat/avformat.h	/^    int64_t start_time; $/;"	m	struct:AVStream
start_time	libavformat/dv.c	/^    time_t      start_time;   \/* Start time of recording *\/$/;"	m	struct:DVMuxContext	file:
start_wait_request	ffserver.c	/^static void start_wait_request(HTTPContext *c, int is_rtsp)$/;"	f	file:
startrate	libavcodec/amr.c	/^    int startrate;$/;"	m	struct:AMRWB_bitrates	file:
startrate	libavcodec/amr.c	/^    int startrate;$/;"	m	struct:AMR_bitrates	file:
starve_time	libavformat/beosaudio.cpp	/^    volatile bigtime_t starve_time;$/;"	m	file:
state	ffserver.c	/^    enum HTTPState state;$/;"	m	struct:HTTPContext	file:
state	libavcodec/a52dec.c	/^    a52_state_t* state;$/;"	m	struct:AC3DecodeState	file:
state	libavcodec/ac3dec.c	/^    ac3_state_t state;$/;"	m	struct:AC3DecodeState	file:
state	libavcodec/amr.c	/^    void *state;$/;"	m	struct:AMRWBContext	file:
state	libavcodec/ffv1.c	/^    uint8_t (*state)[CONTEXT_SIZE];$/;"	m	struct:PlaneContext	file:
state	libavcodec/mpegvideo.h	/^    uint32_t state;             \/\/\/< contains the last few bytes in MSB order$/;"	m	struct:ParseContext
state	libavcodec/oggtheora.c	/^    theora_state state;$/;"	m	struct:TheoraContext	file:
state	libavcodec/png.c	/^    int state;$/;"	m	struct:PNGContext	file:
state	libavcodec/snow.c	/^    uint8_t state[\/*7*2*\/ 7 + 512][32];$/;"	m	struct:SubBand	file:
state	libavformat/mpegts.c	/^    enum MpegTSState state;$/;"	m	struct:PESContext	file:
state	libavformat/nsvdec.c	/^    enum NSVStatus state;$/;"	m	file:
state	libavformat/ogg2.h	/^    ogg_state_t *state;$/;"	m	struct:ogg
state	libavformat/png.c	/^    int state;$/;"	m	struct:PNGDecodeState	file:
state	libavformat/rtsp.c	/^    enum RTSPClientState state;$/;"	m	struct:RTSPState	file:
state	xvmc_render.h	/^  int state;\/\/0-free,1 Waiting to Display,2 Waiting for prediction$/;"	m
stats	libavcodec/huffyuv.c	/^    uint64_t stats[3][256];$/;"	m	struct:HYuvContext	file:
stats_file	libavcodec/mpegvideo.h	/^    FILE *stats_file;$/;"	m	struct:RateControlContext
stats_in	libavcodec/avcodec.h	/^    char *stats_in;$/;"	m	struct:AVCodecContext
stats_out	libavcodec/avcodec.h	/^    char *stats_out;$/;"	m	struct:AVCodecContext
status	libavcodec/adpcm.c	/^    ADPCMChannelStatus status[2];$/;"	m	struct:ADPCMContext	file:
status_code	libavformat/rtsp.h	/^    enum RTSPStatusCode status_code; \/* response code from server *\/$/;"	m	struct:RTSPHeader
stdQPTable	libavcodec/libpostproc/postprocess_internal.h	/^	QP_STORE_T *stdQPTable;       \/\/\/< used to fix MPEG2 style qscale$/;"	m	struct:PPContext
std__TAG	libavformat/4xm.c	38;"	d	file:
step	ffplay.c	/^static int step = 0;$/;"	v	file:
step	libavcodec/adpcm.c	/^    int step;$/;"	m	struct:ADPCMChannelStatus	file:
step_index	libavcodec/adpcm.c	/^    short int step_index;$/;"	m	struct:ADPCMChannelStatus	file:
step_table	libavcodec/adpcm.c	/^static const int step_table[89] = {$/;"	v	file:
step_to_next_frame	ffplay.c	/^void step_to_next_frame(void)$/;"	f
steps128	libavcodec/vmdav.c	/^    unsigned short steps128[256];$/;"	m	struct:VmdAudioContext	file:
steps16	libavcodec/vmdav.c	/^    unsigned short steps16[16];$/;"	m	struct:VmdAudioContext	file:
steps8	libavcodec/vmdav.c	/^    unsigned char steps8[16];$/;"	m	struct:VmdAudioContext	file:
stereo	libavcodec/mp3lameaudio.c	/^	int stereo;$/;"	m	struct:Mp3AudioContext	file:
stereo_buffer	libavformat/segafilm.c	/^    unsigned char *stereo_buffer;$/;"	m	struct:FilmDemuxContext	file:
stereo_buffer_size	libavformat/segafilm.c	/^    int stereo_buffer_size;$/;"	m	struct:FilmDemuxContext	file:
stereo_mux	libavcodec/resample.c	/^static void stereo_mux(short *output, short *input1, short *input2, int n)$/;"	f	file:
stereo_split	libavcodec/resample.c	/^static void stereo_split(short *output1, short *output2, short *input, int n)$/;"	f	file:
stereo_to_mono	libavcodec/resample.c	/^static void stereo_to_mono(short *output, short *input, int n1)$/;"	f	file:
stl	libavcodec/alpha/asm.h	61;"	d
stop_parse	libavformat/mpegts.c	/^    int stop_parse; \/* stop parsing loop *\/$/;"	m	struct:MpegTSContext	file:
stoprate	libavcodec/amr.c	/^    int stoprate;$/;"	m	struct:AMRWB_bitrates	file:
stoprate	libavcodec/amr.c	/^    int stoprate;$/;"	m	struct:AMR_bitrates	file:
store_table	libavcodec/huffyuv.c	/^static int store_table(HYuvContext *s, uint8_t *len, uint8_t *buf){$/;"	f	file:
stq	libavcodec/alpha/asm.h	62;"	d
str	libavformat/img2.c	/^    const char *str;$/;"	m	file:
str	libavformat/rtsp.c	/^    char *str;$/;"	m	struct:attrname_map	file:
str_arg	cmdutils.h	/^        char **str_arg;$/;"	m
str_author	ffmpeg.c	/^static char *str_author = NULL;$/;"	v	file:
str_comment	ffmpeg.c	/^static char *str_comment = NULL;$/;"	v	file:
str_copyright	ffmpeg.c	/^static char *str_copyright = NULL;$/;"	v	file:
str_iformat	libavformat/psxstr.c	/^static AVInputFormat str_iformat = {$/;"	v	file:
str_init	libavformat/psxstr.c	/^int str_init(void)$/;"	f
str_probe	libavformat/psxstr.c	/^static int str_probe(AVProbeData *p)$/;"	f	file:
str_read_close	libavformat/psxstr.c	/^static int str_read_close(AVFormatContext *s)$/;"	f	file:
str_read_header	libavformat/psxstr.c	/^static int str_read_header(AVFormatContext *s,$/;"	f	file:
str_read_packet	libavformat/psxstr.c	/^static int str_read_packet(AVFormatContext *s,$/;"	f	file:
str_title	ffmpeg.c	/^static char *str_title = NULL;$/;"	v	file:
strcasecmp	libavformat/os_support.h	/^static inline int strcasecmp(const char* s1, const char* s2) { return stricmp(s1,s2); }$/;"	f
strcat	libavcodec/common.h	531;"	d
stream	ffserver.c	/^    struct FFStream *stream;$/;"	m	struct:HTTPContext	file:
stream	libavformat/mpegts.c	/^    AVFormatContext *stream;$/;"	m	struct:MpegTSContext	file:
stream	libavformat/mpegts.c	/^    AVFormatContext *stream;$/;"	m	struct:PESContext	file:
stream	libavformat/nut.c	/^    StreamContext *stream;$/;"	m	file:
stream	libavformat/segafilm.c	/^  int stream;$/;"	m	file:
stream_close	ffplay.c	/^static void stream_close(VideoState *is)$/;"	f	file:
stream_codec_tag	libavcodec/avcodec.h	/^    unsigned int stream_codec_tag;$/;"	m	struct:AVCodecContext
stream_component_close	ffplay.c	/^static void stream_component_close(VideoState *is, int stream_index)$/;"	f	file:
stream_component_open	ffplay.c	/^static int stream_component_open(VideoState *is, int stream_index)$/;"	f	file:
stream_copy	libavformat/avformat.h	/^    int stream_copy; \/* if TRUE, just copy stream *\/$/;"	m	struct:AVStream
stream_count	libavformat/nut.c	/^    unsigned int stream_count;$/;"	m	file:
stream_cycle_channel	ffplay.c	/^void stream_cycle_channel(VideoState *is, int codec_type)$/;"	f
stream_end	libavcodec/interplayvideo.c	/^    unsigned char *stream_end;$/;"	m	struct:IpvideoContext	file:
stream_header	libavformat/asf.h	/^static const GUID stream_header = {$/;"	v
stream_id_plus1	libavformat/nut.c	/^    uint8_t stream_id_plus1;$/;"	m	file:
stream_index	ffmpeg.c	/^    int stream_index;$/;"	m	struct:AVStreamMap	file:
stream_index	libavformat/4xm.c	/^    int stream_index;$/;"	m	struct:AudioTrack	file:
stream_index	libavformat/asf.h	/^    int stream_index;$/;"	m
stream_index	libavformat/avformat.h	/^    int   stream_index;$/;"	m	struct:AVPacket
stream_index	libavformat/avidec.c	/^    int stream_index;$/;"	m	file:
stream_index	libavformat/matroska.c	/^        stream_index;$/;"	m	struct:Track	file:
stream_index	libavformat/rtsp.c	/^    int stream_index; \/* corresponding stream index, if any. -1 if none (MPEG2TS case) *\/$/;"	m	struct:RTSPStream	file:
stream_index	libavformat/sierravmd.c	/^  int stream_index;$/;"	m	file:
stream_maps	ffmpeg.c	/^static AVStreamMap stream_maps[MAX_FILES];$/;"	v	file:
stream_open	ffplay.c	/^static VideoState *stream_open(const char *filename, AVInputFormat *iformat)$/;"	f	file:
stream_pause	ffplay.c	/^static void stream_pause(VideoState *is)$/;"	f	file:
stream_priority	libavformat/mov.c	/^    uint8_t  stream_priority;$/;"	m	file:
stream_ptr	libavcodec/interplayvideo.c	/^    unsigned char *stream_ptr;$/;"	m	struct:IpvideoContext	file:
stream_seek	ffplay.c	/^static void stream_seek(VideoState *is, int64_t pos, int rel)$/;"	f	file:
stream_type	ffserver.c	/^    enum StreamType stream_type;$/;"	m	struct:FFStream	file:
stream_type	libavformat/mov.c	/^    uint8_t  stream_type;$/;"	m	file:
stream_type	libavformat/mpegts.c	/^    int stream_type;$/;"	m	struct:PESContext	file:
streams	ffserver.c	/^    AVStream *streams[MAX_STREAMS];$/;"	m	struct:FFStream	file:
streams	libavformat/asf.h	/^    ASFStream streams[128];	\/* it's max number and it's not that big *\/$/;"	m
streams	libavformat/avformat.h	/^    AVStream *streams[MAX_STREAMS];$/;"	m	struct:AVFormatContext
streams	libavformat/mov.c	/^    MOVStreamContext *streams[MAX_STREAMS];$/;"	m	struct:MOVContext	file:
streams	libavformat/ogg2.h	/^    ogg_stream_t *streams;$/;"	m	struct:ogg
streams	libavformat/ogg2.h	/^    ogg_stream_t streams[1];$/;"	m	struct:ogg_state
streams	libavformat/rm.c	/^    StreamInfo streams[2];$/;"	m	file:
streamstate	libavformat/rtp.h	/^        int streamstate;$/;"	m	struct:rtp_payload_data_s::AUHeaders
streamtype	libavformat/rtp.h	/^    int streamtype;$/;"	m	struct:rtp_payload_data_s
strict	ffmpeg.c	/^static int strict = 0;$/;"	v	file:
strict_gop	ffmpeg.c	/^static int strict_gop = 0;$/;"	v	file:
strict_std_compliance	libavcodec/avcodec.h	/^    int strict_std_compliance;$/;"	m	struct:AVCodecContext
strict_std_compliance	libavcodec/mpegvideo.h	/^    int strict_std_compliance; \/\/\/< strictly follow the std (MPEG4, ...) $/;"	m	struct:MpegEncContext
stride	libavcodec/h264.c	1575;"	d	file:
stride	libavcodec/h264.c	1651;"	d	file:
stride	libavcodec/interplayvideo.c	/^    int stride;$/;"	m	struct:IpvideoContext	file:
stride	libavcodec/libpostproc/postprocess_internal.h	/^	int stride;   \/\/\/<size of some buffers (needed to realloc them if needed)$/;"	m	struct:PPContext
stride	libavcodec/mpegvideo.h	/^    int stride;$/;"	m	struct:MotionEstContext
stride	libavcodec/snow.c	/^    int stride;$/;"	m	struct:SubBand	file:
stride	libavcodec/svq3.c	111;"	d	file:
stride	libavcodec/svq3.c	143;"	d	file:
stride	libavcodec/vc9.c	/^    int stride;         \/\/\/< Stride of the buffer$/;"	m	struct:BitPlane	file:
stride_line	libavcodec/snow.c	/^    int stride_line; \/\/\/< Stride measured in lines, not pixels.$/;"	m	struct:SubBand	file:
string_table	libavcodec/svq1.c	/^static const uint8_t string_table[256] = {$/;"	v	file:
strips	libavcodec/cinepak.c	/^    cvid_strip_t strips[MAX_STRIPS];$/;"	m	struct:CinepakContext	file:
stristart	libavformat/cutils.c	/^int stristart(const char *str, const char *val, const char **ptr)$/;"	f
strk_SIZE	libavformat/4xm.c	48;"	d	file:
strk_TAG	libavformat/4xm.c	41;"	d	file:
strmatch	libavcodec/eval.c	/^static int strmatch(const char *s, const char *prefix){$/;"	f	file:
strstart	libavformat/cutils.c	/^int strstart(const char *str, const char *val, const char **ptr)$/;"	f
stts_count	libavformat/mov.c	/^    int stts_count;$/;"	m	struct:MOVStreamContext	file:
stts_data	libavformat/mov.c	/^    Time2Sample *stts_data;$/;"	m	struct:MOVStreamContext	file:
sub_cmp	ffmpeg.c	/^static int sub_cmp = FF_CMP_SAD;$/;"	v	file:
sub_flags	libavcodec/mpegvideo.h	/^    int sub_flags;$/;"	m	struct:MotionEstContext
sub_hfyu_median_prediction	libavcodec/dsputil.h	/^    void (*sub_hfyu_median_prediction)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int w, int *left, int *left_top);$/;"	m	struct:DSPContext
sub_hfyu_median_prediction_c	libavcodec/dsputil.c	/^static void sub_hfyu_median_prediction_c(uint8_t *dst, uint8_t *src1, uint8_t *src2, int w, int *left, int *left_top){$/;"	f	file:
sub_hfyu_median_prediction_mmx2	libavcodec/i386/dsputil_mmx.c	/^static void sub_hfyu_median_prediction_mmx2(uint8_t *dst, uint8_t *src1, uint8_t *src2, int w, int *left, int *left_top){$/;"	f	file:
sub_id	libavcodec/avcodec.h	/^    int sub_id;$/;"	m	struct:AVCodecContext
sub_left_prediction	libavcodec/huffyuv.c	/^static inline int sub_left_prediction(HYuvContext *s, uint8_t *dst, uint8_t *src, int w, int left){$/;"	f	file:
sub_mb_type	libavcodec/h264.c	/^    int sub_mb_type[4];$/;"	m	struct:H264Context	file:
sub_motion_search	libavcodec/mpegvideo.h	/^    int (*sub_motion_search)(struct MpegEncContext * s,$/;"	m	struct:MotionEstContext
sub_penalty_factor	libavcodec/mpegvideo.h	/^    int sub_penalty_factor;$/;"	m	struct:MotionEstContext
subblock_gain	libavcodec/mpegaudiodec.c	/^    int subblock_gain[3];$/;"	m	struct:GranuleDef	file:
subclass_books	libavcodec/vorbis.h	/^    int_fast16_t subclass_books[16][8];$/;"	m
submap_floor	libavcodec/vorbis.h	/^    uint_fast8_t submap_floor[16];$/;"	m
submap_residue	libavcodec/vorbis.h	/^    uint_fast8_t submap_residue[16];$/;"	m
submaps	libavcodec/vorbis.h	/^    uint_fast8_t submaps;$/;"	m
subpel_quality	ffmpeg.c	/^static int subpel_quality= 8;$/;"	v	file:
suffix	libavformat/gifdec.c	/^    uint8_t suffix[SIZTABLE];$/;"	m	struct:GifState	file:
sum	libavcodec/loco.c	/^    int sum, count; \/* sum and count for getting rice parameter *\/$/;"	m	struct:RICEContext	file:
sum_mmx	libavcodec/i386/motion_est_mmx.c	/^static inline int sum_mmx(void)$/;"	f	file:
sum_mmx2	libavcodec/i386/motion_est_mmx.c	/^static inline int sum_mmx2(void)$/;"	f	file:
superblock_coding	libavcodec/vp3.c	/^    unsigned char *superblock_coding;$/;"	m	struct:Vp3DecodeContext	file:
superblock_count	libavcodec/vp3.c	/^    int superblock_count;$/;"	m	struct:Vp3DecodeContext	file:
superblock_fragments	libavcodec/vp3.c	/^    int *superblock_fragments;$/;"	m	struct:Vp3DecodeContext	file:
superblock_height	libavcodec/vp3.c	/^    int superblock_height;$/;"	m	struct:Vp3DecodeContext	file:
superblock_macroblocks	libavcodec/vp3.c	/^    int *superblock_macroblocks;$/;"	m	struct:Vp3DecodeContext	file:
superblock_run_length_vlc	libavcodec/vp3.c	/^    VLC superblock_run_length_vlc;$/;"	m	struct:Vp3DecodeContext	file:
superblock_run_length_vlc_table	libavcodec/vp3data.h	/^static const uint16_t superblock_run_length_vlc_table[34][2] = {$/;"	v
superblock_width	libavcodec/vp3.c	/^    int superblock_width;$/;"	m	struct:Vp3DecodeContext	file:
supported_framerates	libavcodec/avcodec.h	/^    const AVRational *supported_framerates; \/\/\/array of supported framerates, or NULL if any, array is terminated by {0,0}$/;"	m	struct:AVCodec
supported_pixel_formats	libavformat/avformat.h	/^    int supported_pixel_formats; \/* mask of supported formats for output *\/$/;"	m	struct:AVImageFormat
suppress_log	ffserver.c	/^    int suppress_log;$/;"	m	struct:HTTPContext	file:
svcd_scan_offset_placeholder	libavcodec/mpeg12data.h	/^static const uint8_t svcd_scan_offset_placeholder[14]={$/;"	v
svq1_block_type	libavcodec/svq1.c	/^static VLC svq1_block_type;$/;"	v	file:
svq1_block_type_vlc	libavcodec/svq1_vlc.h	/^static const uint8_t svq1_block_type_vlc[4][2] = {$/;"	v
svq1_decode_block_intra	libavcodec/svq1.c	/^static int svq1_decode_block_intra (GetBitContext *bitbuf, uint8_t *pixels, int pitch ) {$/;"	f	file:
svq1_decode_block_non_intra	libavcodec/svq1.c	/^static int svq1_decode_block_non_intra (GetBitContext *bitbuf, uint8_t *pixels, int pitch ) {$/;"	f	file:
svq1_decode_delta_block	libavcodec/svq1.c	/^static int svq1_decode_delta_block (MpegEncContext *s, GetBitContext *bitbuf,$/;"	f	file:
svq1_decode_end	libavcodec/svq1.c	/^static int svq1_decode_end(AVCodecContext *avctx)$/;"	f	file:
svq1_decode_frame	libavcodec/svq1.c	/^static int svq1_decode_frame(AVCodecContext *avctx, $/;"	f	file:
svq1_decode_frame_header	libavcodec/svq1.c	/^static int svq1_decode_frame_header (GetBitContext *bitbuf,MpegEncContext *s) {$/;"	f	file:
svq1_decode_init	libavcodec/svq1.c	/^static int svq1_decode_init(AVCodecContext *avctx)$/;"	f	file:
svq1_decode_motion_vector	libavcodec/svq1.c	/^static int svq1_decode_motion_vector (GetBitContext *bitbuf, svq1_pmv_t *mv, svq1_pmv_t **pmv) {$/;"	f	file:
svq1_decoder	libavcodec/svq1.c	/^AVCodec svq1_decoder = {$/;"	v
svq1_encode_end	libavcodec/svq1.c	/^static int svq1_encode_end(AVCodecContext *avctx)$/;"	f	file:
svq1_encode_frame	libavcodec/svq1.c	/^static int svq1_encode_frame(AVCodecContext *avctx, unsigned char *buf, $/;"	f	file:
svq1_encode_init	libavcodec/svq1.c	/^static int svq1_encode_init(AVCodecContext *avctx)$/;"	f	file:
svq1_encode_plane	libavcodec/svq1.c	/^static int svq1_encode_plane(SVQ1Context *s, int plane, unsigned char *src_plane, unsigned char *ref_plane, unsigned char *decoded_plane,$/;"	f	file:
svq1_encoder	libavcodec/svq1.c	/^AVCodec svq1_encoder = {$/;"	v
svq1_frame_size_table	libavcodec/svq1.c	/^static struct { int width; int height; } svq1_frame_size_table[8] = {$/;"	v	file:
svq1_inter_codebook_4x2	libavcodec/svq1_cb.h	/^static const int8_t svq1_inter_codebook_4x2[768] = {$/;"	v
svq1_inter_codebook_4x4	libavcodec/svq1_cb.h	/^static const int8_t svq1_inter_codebook_4x4[1536] = {$/;"	v
svq1_inter_codebook_8x4	libavcodec/svq1_cb.h	/^static const int8_t svq1_inter_codebook_8x4[3072] = {$/;"	v
svq1_inter_codebook_8x8	libavcodec/svq1_cb.h	/^static const int8_t svq1_inter_codebook_8x8[6144] = {$/;"	v
svq1_inter_codebook_sum	libavcodec/svq1_cb.h	/^static const int8_t svq1_inter_codebook_sum[4][16*6] = {$/;"	v
svq1_inter_codebooks	libavcodec/svq1_cb.h	/^static const int8_t* const svq1_inter_codebooks[4] = {$/;"	v
svq1_inter_mean	libavcodec/svq1.c	/^static VLC svq1_inter_mean;$/;"	v	file:
svq1_inter_mean_vlc	libavcodec/svq1_vlc.h	/^static const uint16_t svq1_inter_mean_vlc[512][2] = {$/;"	v
svq1_inter_multistage	libavcodec/svq1.c	/^static VLC svq1_inter_multistage[6];$/;"	v	file:
svq1_inter_multistage_vlc	libavcodec/svq1_vlc.h	/^static const uint8_t svq1_inter_multistage_vlc[6][8][2] = {$/;"	v
svq1_intra_codebook_4x2	libavcodec/svq1_cb.h	/^static const int8_t svq1_intra_codebook_4x2[768] = {$/;"	v
svq1_intra_codebook_4x4	libavcodec/svq1_cb.h	/^static const int8_t svq1_intra_codebook_4x4[1536] = {$/;"	v
svq1_intra_codebook_8x4	libavcodec/svq1_cb.h	/^static const int8_t svq1_intra_codebook_8x4[3072] = {$/;"	v
svq1_intra_codebook_8x8	libavcodec/svq1_cb.h	/^static const int8_t svq1_intra_codebook_8x8[6144] = {$/;"	v
svq1_intra_codebook_sum	libavcodec/svq1_cb.h	/^static const int8_t svq1_intra_codebook_sum[4][16*6] = {$/;"	v
svq1_intra_codebooks	libavcodec/svq1_cb.h	/^static const int8_t* const svq1_intra_codebooks[4] = {$/;"	v
svq1_intra_mean	libavcodec/svq1.c	/^static VLC svq1_intra_mean;$/;"	v	file:
svq1_intra_mean_vlc	libavcodec/svq1_vlc.h	/^static const uint16_t svq1_intra_mean_vlc[256][2] = {$/;"	v
svq1_intra_multistage	libavcodec/svq1.c	/^static VLC svq1_intra_multistage[6];$/;"	v	file:
svq1_intra_multistage_vlc	libavcodec/svq1_vlc.h	/^static const uint8_t svq1_intra_multistage_vlc[6][8][2] = {$/;"	v
svq1_motion_component	libavcodec/svq1.c	/^static VLC svq1_motion_component;$/;"	v	file:
svq1_motion_inter_4v_block	libavcodec/svq1.c	/^static int svq1_motion_inter_4v_block (MpegEncContext *s, GetBitContext *bitbuf,$/;"	f	file:
svq1_motion_inter_block	libavcodec/svq1.c	/^static int svq1_motion_inter_block (MpegEncContext *s, GetBitContext *bitbuf,$/;"	f	file:
svq1_packet_checksum	libavcodec/svq1.c	/^static uint16_t svq1_packet_checksum (uint8_t *data, int length, int value) {$/;"	f	file:
svq1_parse_string	libavcodec/svq1.c	/^static void svq1_parse_string (GetBitContext *bitbuf, uint8_t *out) {$/;"	f	file:
svq1_pmv_s	libavcodec/svq1.c	/^typedef struct svq1_pmv_s {$/;"	s	file:
svq1_pmv_t	libavcodec/svq1.c	/^} svq1_pmv_t;$/;"	t	file:
svq1_skip_block	libavcodec/svq1.c	/^static void svq1_skip_block (uint8_t *current, uint8_t *previous, int pitch, int x, int y) {$/;"	f	file:
svq1_write_header	libavcodec/svq1.c	/^static void svq1_write_header(SVQ1Context *s, int frame_type)$/;"	f	file:
svq3_add_idct_c	libavcodec/svq3.c	/^static void svq3_add_idct_c (uint8_t *dst, DCTELEM *block, int stride, int qp, int dc){$/;"	f	file:
svq3_dct_tables	libavcodec/svq3.c	/^static const struct { uint8_t run; uint8_t level; } svq3_dct_tables[2][16] = {$/;"	v	file:
svq3_decode_block	libavcodec/svq3.c	/^static inline int svq3_decode_block (GetBitContext *gb, DCTELEM *block,$/;"	f	file:
svq3_decode_frame	libavcodec/svq3.c	/^static int svq3_decode_frame (AVCodecContext *avctx,$/;"	f	file:
svq3_decode_mb	libavcodec/svq3.c	/^static int svq3_decode_mb (H264Context *h, unsigned int mb_type) {$/;"	f	file:
svq3_decode_slice_header	libavcodec/svq3.c	/^static int svq3_decode_slice_header (H264Context *h) {$/;"	f	file:
svq3_decoder	libavcodec/svq3.c	/^AVCodec svq3_decoder = {$/;"	v
svq3_dequant_coeff	libavcodec/svq3.c	/^static const uint32_t svq3_dequant_coeff[32] = {$/;"	v	file:
svq3_get_se_golomb	libavcodec/golomb.h	/^static inline int svq3_get_se_golomb(GetBitContext *gb){$/;"	f
svq3_get_ue_golomb	libavcodec/golomb.h	/^static inline int svq3_get_ue_golomb(GetBitContext *gb){$/;"	f
svq3_luma_dc_dequant_idct_c	libavcodec/svq3.c	/^static void svq3_luma_dc_dequant_idct_c(DCTELEM *block, int qp){$/;"	f	file:
svq3_mc_dir	libavcodec/svq3.c	/^static inline int svq3_mc_dir (H264Context *h, int size, int mode, int dir, int avg) {$/;"	f	file:
svq3_mc_dir_part	libavcodec/svq3.c	/^static inline void svq3_mc_dir_part (MpegEncContext *s,$/;"	f	file:
svq3_pred_0	libavcodec/svq3.c	/^static const uint8_t svq3_pred_0[25][2] = {$/;"	v	file:
svq3_pred_1	libavcodec/svq3.c	/^static const int8_t svq3_pred_1[6][6][5] = {$/;"	v	file:
svq3_scan	libavcodec/svq3.c	/^static const uint8_t svq3_scan[16]={$/;"	v	file:
sw	libavcodec/ps2/mmi.h	73;"	d
swab32	libavcodec/liba52/bitstream.h	27;"	d
swab32	libavcodec/liba52/bitstream.h	33;"	d
swab32	libavcodec/liba52/bitstream.h	42;"	d
swap_uv	libavcodec/mpeg12.c	/^    int swap_uv;\/\/indicate VCR2$/;"	m	struct:Mpeg1Context	file:
swap_uv	libavcodec/mpegvideo.h	/^    int swap_uv;\/\/vcr2 codec is mpeg2 varint with UV swaped$/;"	m	struct:MpegEncContext
swapb1a	libavcodec/ra144.c	/^	unsigned int	 swapb1a[10];$/;"	m	file:
swapb1b	libavcodec/ra144.c	/^	unsigned int	 swapb1b[10];$/;"	m	file:
swapb2a	libavcodec/ra144.c	/^	unsigned int	 swapb2a[10];$/;"	m	file:
swapb2b	libavcodec/ra144.c	/^	unsigned int	 swapb2b[10];$/;"	m	file:
swapbuf1	libavcodec/ra144.c	/^	unsigned int	*swapbuf1;$/;"	m	file:
swapbuf1alt	libavcodec/ra144.c	/^	unsigned int	*swapbuf1alt;$/;"	m	file:
swapbuf2	libavcodec/ra144.c	/^	unsigned int	*swapbuf2;$/;"	m	file:
swapbuf2alt	libavcodec/ra144.c	/^	unsigned int	*swapbuf2alt;$/;"	m	file:
swf_frame_number	libavformat/swf.c	/^    int swf_frame_number;$/;"	m	file:
swf_iformat	libavformat/swf.c	/^static AVInputFormat swf_iformat = {$/;"	v	file:
swf_index_tables	libavcodec/adpcm.c	/^static int swf_index_tables[4][16] = {$/;"	v	file:
swf_init	libavformat/swf.c	/^int swf_init(void)$/;"	f
swf_mp3_info	libavformat/swf.c	/^static int swf_mp3_info(void *data, int *byteSize, int *samplesPerFrame, int *sampleRate, int *isMono )$/;"	f	file:
swf_oformat	libavformat/swf.c	/^static AVOutputFormat swf_oformat = {$/;"	v	file:
swf_probe	libavformat/swf.c	/^static int swf_probe(AVProbeData *p)$/;"	f	file:
swf_read_close	libavformat/swf.c	/^static int swf_read_close(AVFormatContext *s)$/;"	f	file:
swf_read_header	libavformat/swf.c	/^static int swf_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
swf_read_packet	libavformat/swf.c	/^static int swf_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
swf_write_audio	libavformat/swf.c	/^static int swf_write_audio(AVFormatContext *s, $/;"	f	file:
swf_write_header	libavformat/swf.c	/^static int swf_write_header(AVFormatContext *s)$/;"	f	file:
swf_write_packet	libavformat/swf.c	/^static int swf_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
swf_write_trailer	libavformat/swf.c	/^static int swf_write_trailer(AVFormatContext *s)$/;"	f	file:
swf_write_video	libavformat/swf.c	/^static int swf_write_video(AVFormatContext *s, $/;"	f	file:
swin	libavcodec/vorbis.h	/^    const float * swin;$/;"	m
switch_feed_streams	ffserver.c	/^    int switch_feed_streams[MAX_STREAMS]; \/* index of streams in the feed *\/$/;"	m	struct:HTTPContext	file:
switch_pending	ffserver.c	/^    int switch_pending;$/;"	m	struct:HTTPContext	file:
switch_point	libavcodec/mpegaudiodec.c	/^    uint8_t switch_point;$/;"	m	struct:GranuleDef	file:
symCount	libavcodec/cabac.h	/^    int symCount;$/;"	m	struct:CABACContext
sym_quant	libavcodec/ac3enc.c	/^static inline int sym_quant(int c, int e, int levels)$/;"	f	file:
sync	libavformat/rm.c	/^static int sync(AVFormatContext *s, int64_t *timestamp, int *flags, int *stream_index, int64_t *pos){$/;"	f	file:
sync_file_index	ffmpeg.c	/^    int sync_file_index;$/;"	m	struct:AVStreamMap	file:
sync_header	libavformat/psxstr.c	/^const static char sync_header[12] = {0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00};$/;"	v	file:
sync_ist	ffmpeg.c	/^    struct AVInputStream *sync_ist; \/* input stream to sync against *\/$/;"	m	struct:AVOutputStream	file:
sync_opts	ffmpeg.c	/^    int64_t sync_opts;       \/* output frame counter, could be changed to some true timestamp *\/ \/\/FIXME look at frame_number$/;"	m	struct:AVOutputStream	file:
sync_stream_index	ffmpeg.c	/^    int sync_stream_index;$/;"	m	struct:AVStreamMap	file:
synchronize_audio	ffplay.c	/^static int synchronize_audio(VideoState *is, short *samples, $/;"	f	file:
synth_buf	libavcodec/mpegaudiodec.c	/^    MPA_INT synth_buf[MPA_MAX_CHANNELS][512 * 2] __attribute__((aligned(16)));$/;"	m	struct:MPADecodeContext	file:
synth_buf_offset	libavcodec/mpegaudiodec.c	/^    int synth_buf_offset[MPA_MAX_CHANNELS];$/;"	m	struct:MPADecodeContext	file:
sys	libavcodec/dv.c	/^    const DVprofile* sys;$/;"	m	struct:DVVideoContext	file:
sys	libavformat/dv.c	/^    const DVprofile*  sys;    \/* Current DV profile. E.g.: 525\/60, 625\/50 *\/$/;"	m	struct:DVMuxContext	file:
system_header_freq	libavformat/mpeg.c	/^    int system_header_freq;$/;"	m	file:
system_header_size	libavformat/mpeg.c	/^    int system_header_size;$/;"	m	file:
syt_offset	libavformat/dv1394.h	/^	unsigned int syt_offset;$/;"	m	struct:dv1394_init
t	output_example.c	/^float t, tincr, tincr2;$/;"	v
t0	libavcodec/alpha/motion_est_mvi_asm.S	/^           t0:  left_u -> left lo -> left$/;"	l
t0	libavcodec/alpha/regdef.h	7;"	d
t1	libavcodec/alpha/motion_est_mvi_asm.S	/^           t1:  mid$/;"	l
t1	libavcodec/alpha/regdef.h	8;"	d
t10	libavcodec/alpha/regdef.h	34;"	d
t11	libavcodec/alpha/regdef.h	35;"	d
t12	libavcodec/alpha/regdef.h	37;"	d
t2	libavcodec/alpha/motion_est_mvi_asm.S	/^           t2:  right_u -> right hi -> right$/;"	l
t2	libavcodec/alpha/regdef.h	9;"	d
t3	libavcodec/alpha/motion_est_mvi_asm.S	/^           t3:  ref left$/;"	l
t3	libavcodec/alpha/regdef.h	10;"	d
t4	libavcodec/alpha/motion_est_mvi_asm.S	/^           t4:  ref right$/;"	l
t4	libavcodec/alpha/regdef.h	11;"	d
t5	libavcodec/alpha/motion_est_mvi_asm.S	/^           t5:  left_u -> left lo -> left$/;"	l
t5	libavcodec/alpha/regdef.h	12;"	d
t6	libavcodec/alpha/motion_est_mvi_asm.S	/^           t6:  mid$/;"	l
t6	libavcodec/alpha/regdef.h	13;"	d
t7	libavcodec/alpha/motion_est_mvi_asm.S	/^           t7:  right_u -> right hi -> right$/;"	l
t7	libavcodec/alpha/regdef.h	14;"	d
t8	libavcodec/alpha/motion_est_mvi_asm.S	/^           t8:  ref left$/;"	l
t8	libavcodec/alpha/regdef.h	32;"	d
t9	libavcodec/alpha/motion_est_mvi_asm.S	/^           t9:  ref right$/;"	l
t9	libavcodec/alpha/regdef.h	33;"	d
t_frame	libavcodec/mpegvideo.h	/^    int t_frame;                       \/\/\/< time distance of first I -> B, used for interlaced b frames $/;"	m	struct:MpegEncContext
t_sqrt	libavcodec/ra144.c	/^static int t_sqrt(unsigned int x)$/;"	f	file:
ta	libavcodec/alpha/dsputil_alpha_asm.S	/^#define ta t10$/;"	d
ta	libavcodec/alpha/motion_est_mvi_asm.S	/^           ta:  left hi$/;"	l
ta	libavcodec/alpha/motion_est_mvi_asm.S	/^#define ta t10$/;"	d
tab_b	tests/rotozoom.c	/^unsigned char tab_b[256*256];$/;"	v
tab_g	tests/rotozoom.c	/^unsigned char tab_g[256*256];$/;"	v
tab_r	tests/rotozoom.c	/^unsigned char tab_r[256*256];$/;"	v
table	libavcodec/bitstream.h	/^    VLC_TYPE (*table)[2]; \/\/\/< code, bits$/;"	m	struct:VLC
table	libavcodec/pcm.c	/^    short table[256];$/;"	m	struct:PCMDecode	file:
table0_level	libavcodec/msmpeg4data.h	/^static const int8_t table0_level[132] = {$/;"	v
table0_mv_bits	libavcodec/msmpeg4data.h	/^static const uint8_t table0_mv_bits[1100] = {$/;"	v
table0_mv_code	libavcodec/msmpeg4data.h	/^static const uint16_t table0_mv_code[1100] = {$/;"	v
table0_mvx	libavcodec/msmpeg4data.h	/^static const uint8_t table0_mvx[1099] = {$/;"	v
table0_mvy	libavcodec/msmpeg4data.h	/^static const uint8_t table0_mvy[1099] = {$/;"	v
table0_run	libavcodec/msmpeg4data.h	/^static const int8_t table0_run[132] = {$/;"	v
table0_vlc	libavcodec/msmpeg4data.h	/^static const uint16_t table0_vlc[133][2] = {$/;"	v
table1	libavcodec/ra288.h	/^static const float table1[111]={$/;"	v
table1_level	libavcodec/msmpeg4data.h	/^static const int8_t table1_level[148] = {$/;"	v
table1_mv_bits	libavcodec/msmpeg4data.h	/^static const uint8_t table1_mv_bits[1100] = {$/;"	v
table1_mv_code	libavcodec/msmpeg4data.h	/^static const uint16_t table1_mv_code[1100] = {$/;"	v
table1_mvx	libavcodec/msmpeg4data.h	/^static const uint8_t table1_mvx[1099] = {$/;"	v
table1_mvy	libavcodec/msmpeg4data.h	/^static const uint8_t table1_mvy[1099] = {$/;"	v
table1_run	libavcodec/msmpeg4data.h	/^static const int8_t table1_run[148] = {$/;"	v
table1_vlc	libavcodec/msmpeg4data.h	/^static const uint16_t table1_vlc[149][2] = {$/;"	v
table1a	libavcodec/ra288.h	/^static const float table1a[36]={$/;"	v
table2	libavcodec/ra288.h	/^static const float table2[38]={$/;"	v
table2_level	libavcodec/msmpeg4data.h	/^static const int8_t table2_level[185] = {$/;"	v
table2_run	libavcodec/msmpeg4data.h	/^static const int8_t table2_run[185] = {$/;"	v
table2_vlc	libavcodec/msmpeg4data.h	/^static const uint16_t table2_vlc[186][2] = {$/;"	v
table2a	libavcodec/ra288.h	/^static const float table2a[10]={$/;"	v
table4_level	libavcodec/msmpeg4data.h	/^static const int8_t table4_level[168] = {$/;"	v
table4_run	libavcodec/msmpeg4data.h	/^static const int8_t table4_run[168] = {$/;"	v
table4_vlc	libavcodec/msmpeg4data.h	/^static const uint16_t table4_vlc[169][2] = {$/;"	v
table_4_3_exp	libavcodec/mpegaudiodec.c	/^static int8_t  *table_4_3_exp;$/;"	v	file:
table_4_3_value	libavcodec/mpegaudiodec.c	/^static uint32_t *table_4_3_value;$/;"	v	file:
table_allocated	libavcodec/bitstream.h	/^    int table_size, table_allocated;$/;"	m	struct:VLC
table_crc8	libavcodec/flac.c	/^static const uint8_t table_crc8[256] = {$/;"	v	file:
table_inter_intra	libavcodec/msmpeg4data.h	/^static const uint8_t table_inter_intra[4][2]={$/;"	v
table_level	libavcodec/mpegvideo.h	/^    const int8_t *table_level;$/;"	m	struct:RLTable
table_mb_btype	libavcodec/mpeg12data.h	/^static const uint8_t table_mb_btype[11][2] = {$/;"	v
table_mb_intra	libavcodec/vc9.c	/^static const uint16_t table_mb_intra[64][2];$/;"	v	file:
table_mb_non_intra	libavcodec/msmpeg4data.h	/^static const uint32_t table_mb_non_intra[128][2] = {$/;"	v
table_mb_non_intra2	libavcodec/msmpeg4data.h	/^static const uint32_t table_mb_non_intra2[128][2] = {$/;"	v
table_mb_non_intra3	libavcodec/msmpeg4data.h	/^static const uint32_t table_mb_non_intra3[128][2] = {$/;"	v
table_mb_non_intra4	libavcodec/msmpeg4data.h	/^static const uint32_t table_mb_non_intra4[128][2] = {$/;"	v
table_mb_ptype	libavcodec/mpeg12data.h	/^static const uint8_t table_mb_ptype[7][2] = {$/;"	v
table_mv_bits	libavcodec/msmpeg4data.h	/^    const uint8_t *table_mv_bits;$/;"	m	struct:MVTable
table_mv_code	libavcodec/msmpeg4data.h	/^    const uint16_t *table_mv_code;$/;"	m	struct:MVTable
table_mv_index	libavcodec/msmpeg4data.h	/^    uint16_t *table_mv_index; \/* encoding: convert mv to index in table_mv *\/$/;"	m	struct:MVTable
table_mvx	libavcodec/msmpeg4data.h	/^    const uint8_t *table_mvx;$/;"	m	struct:MVTable
table_mvy	libavcodec/msmpeg4data.h	/^    const uint8_t *table_mvy;$/;"	m	struct:MVTable
table_run	libavcodec/mpegvideo.h	/^    const int8_t *table_run;$/;"	m	struct:RLTable
table_select	libavcodec/mpegaudiodec.c	/^    int table_select[3];$/;"	m	struct:GranuleDef	file:
table_size	libavcodec/bitstream.h	/^    int table_size, table_allocated;$/;"	m	struct:VLC
table_vlc	libavcodec/mpegvideo.h	/^    const uint16_t (*table_vlc)[2];$/;"	m	struct:RLTable
tables	libavcodec/truemotion1data.h	/^static uint8_t *tables[] = { pc_tbl2, pc_tbl3, pc_tbl4 };$/;"	v
tag	libavformat/avi.h	/^    unsigned int tag;$/;"	m	struct:CodecTag
tag	libavformat/swf.c	/^    int tag;$/;"	m	file:
tag_pos	libavformat/swf.c	/^    offset_t tag_pos;$/;"	m	file:
tail	libavcodec/sonic.c	/^    int *tail;$/;"	m	struct:SonicContext	file:
tail_size	libavcodec/sonic.c	/^    int tail_size;$/;"	m	struct:SonicContext	file:
tap_quant	libavcodec/sonic.c	/^    int *tap_quant;$/;"	m	struct:SonicContext	file:
tb	libavcodec/alpha/dsputil_alpha_asm.S	/^#define tb t11$/;"	d
tb	libavcodec/alpha/motion_est_mvi_asm.S	/^           tb:  right lo$/;"	l
tb	libavcodec/alpha/motion_est_mvi_asm.S	/^#define tb t11$/;"	d
tbls	libavcodec/g726.c	/^	 G726Tables* tbls;    \/**< static tables needed for computation *\/$/;"	m	struct:G726Context	file:
tc	libavcodec/alpha/dsputil_alpha_asm.S	/^#define tc t12$/;"	d
tc	libavcodec/alpha/motion_est_mvi_asm.S	/^           tc:  error left$/;"	l
tc	libavcodec/alpha/motion_est_mvi_asm.S	/^#define tc t12$/;"	d
tc0_table	libavcodec/h264data.h	/^static const int tc0_table[52][3] = {$/;"	v
tcos	libavcodec/dsputil.h	/^    FFTSample *tcos;$/;"	m	struct:MDCTContext
tcp_close	libavformat/tcp.c	/^static int tcp_close(URLContext *h)$/;"	f	file:
tcp_open	libavformat/tcp.c	/^static int tcp_open(URLContext *h, const char *uri, int flags)$/;"	f	file:
tcp_protocol	libavformat/tcp.c	/^URLProtocol tcp_protocol = {$/;"	v
tcp_read	libavformat/tcp.c	/^static int tcp_read(URLContext *h, uint8_t *buf, int size)$/;"	f	file:
tcp_read_packet	libavformat/rtsp.c	/^static int tcp_read_packet(AVFormatContext *s, RTSPStream **prtsp_st,$/;"	f	file:
tcp_write	libavformat/tcp.c	/^static int tcp_write(URLContext *h, uint8_t *buf, int size)$/;"	f	file:
tcplx_mask	ffmpeg.c	/^static float tcplx_mask = 0;$/;"	v	file:
td	libavcodec/alpha/dsputil_alpha_asm.S	/^#define td AT$/;"	d
td	libavcodec/alpha/motion_est_mvi_asm.S	/^           td:  error right  *\/$/;"	l
td	libavcodec/alpha/motion_est_mvi_asm.S	/^#define td AT$/;"	d
td	libavcodec/g726.c	/^	 int td;              \/**< tone detect *\/$/;"	m	struct:G726Context	file:
te	libavcodec/alpha/dsputil_alpha_asm.S	/^#define te a5$/;"	d
te	libavcodec/alpha/motion_est_mvi_asm.S	/^#define te a5$/;"	d
temp	libavcodec/alpha/motion_est_mvi_asm.S	/^           temp:$/;"	l
temp	libavcodec/huffyuv.c	/^    uint8_t *temp[3];$/;"	m	struct:HYuvContext	file:
temp	libavcodec/mpegvideo.h	/^    uint8_t *temp;$/;"	m	struct:MotionEstContext
temp	libavcodec/resample.c	/^    short *temp[2];$/;"	m	struct:ReSampleContext	file:
tempBlocks	libavcodec/libpostproc/postprocess_internal.h	/^	uint8_t *tempBlocks; \/\/\/<used for the horizontal code$/;"	m	struct:PPContext
tempBlured	libavcodec/libpostproc/postprocess_internal.h	/^	uint8_t *tempBlured[3];$/;"	m	struct:PPContext
tempBluredPast	libavcodec/libpostproc/postprocess_internal.h	/^	int32_t *tempBluredPast[3];$/;"	m	struct:PPContext
tempDst	libavcodec/libpostproc/postprocess_internal.h	/^	uint8_t *tempDst;$/;"	m	struct:PPContext
tempNoiseReducer	libavcodec/libpostproc/postprocess_altivec_template.c	/^static inline void RENAME(tempNoiseReducer)(uint8_t *src, int stride,$/;"	f	file:
tempNoiseReducer	libavcodec/libpostproc/postprocess_template.c	/^static inline void RENAME(tempNoiseReducer)(uint8_t *src, int stride,$/;"	f	file:
tempSrc	libavcodec/libpostproc/postprocess_internal.h	/^	uint8_t *tempSrc;$/;"	m	struct:PPContext
temp_len	libavcodec/resample.c	/^    int temp_len;$/;"	m	struct:ReSampleContext	file:
temp_mb	libavcodec/mpegvideo.h	/^    uint8_t *temp_mb[2];$/;"	m	struct:MotionEstContext
temporal_cplx_masking	libavcodec/avcodec.h	/^    float temporal_cplx_masking;$/;"	m	struct:AVCodecContext
temporal_decomposition_count	libavcodec/snow.c	/^    int temporal_decomposition_count;$/;"	m	struct:SnowContext	file:
temporal_decomposition_type	libavcodec/snow.c	/^    int temporal_decomposition_type;$/;"	m	struct:SnowContext	file:
term_exit	ffmpeg.c	/^static void term_exit(void)$/;"	f	file:
term_init	ffmpeg.c	/^static void term_init(void)$/;"	f	file:
test_motion	libavcodec/motion_test.c	/^void test_motion(const char *name,$/;"	f
test_speed	tests/dsptest.c	/^static test_speed(int step)$/;"	f	file:
teta	tests/rotozoom.c	/^int teta = 0;$/;"	v
tex_pb	libavcodec/mpegvideo.h	/^    PutBitContext tex_pb;            \/\/\/< used for data partitioned VOPs $/;"	m	struct:MpegEncContext
text	vhook/drawtext.c	/^  unsigned char *text;$/;"	m	file:
text	vhook/imlib2.c	/^    char *text;$/;"	m	file:
text_height	vhook/drawtext.c	/^  int        text_height;$/;"	m	file:
tf	libavcodec/alpha/dsputil_alpha_asm.S	/^#define tf a4$/;"	d
tf	libavcodec/alpha/motion_est_mvi_asm.S	/^#define tf a4$/;"	d
tfcntr	libavcodec/vc9.c	/^    uint8_t tfcntr;$/;"	m	struct:VC9Context	file:
tfcntrflag	libavcodec/vc9.c	/^    int tfcntrflag;       \/\/\/< TFCNTR present$/;"	m	struct:VC9Context	file:
tff	libavcodec/vc9.c	/^    uint8_t rptfrm, tff, rff;$/;"	m	struct:VC9Context	file:
tg	libavcodec/alpha/dsputil_alpha_asm.S	/^#define tg a3$/;"	d
tg	libavcodec/alpha/motion_est_mvi_asm.S	/^#define tg a3$/;"	d
th	libavcodec/alpha/dsputil_alpha_asm.S	/^#define th v0$/;"	d
th	libavcodec/alpha/motion_est_mvi_asm.S	/^#define th v0$/;"	d
the_buf	libavcodec/indeo3.c	/^  unsigned char *the_buf;$/;"	m	file:
the_buf_size	libavcodec/indeo3.c	/^  unsigned int the_buf_size;$/;"	m	file:
the_end	libavcodec/armv4l/jrevdct_arm.S	/^the_end:	$/;"	l
theora	libavcodec/vp3.c	/^    int theora, theora_tables;$/;"	m	struct:Vp3DecodeContext	file:
theora_calculate_pixel_addresses	libavcodec/vp3.c	/^static void theora_calculate_pixel_addresses(Vp3DecodeContext *s) $/;"	f	file:
theora_codec	libavformat/oggparsetheora.c	/^ogg_codec_t theora_codec = {$/;"	v
theora_decode_comments	libavcodec/vp3.c	/^static int theora_decode_comments(AVCodecContext *avctx, GetBitContext gb)$/;"	f	file:
theora_decode_header	libavcodec/vp3.c	/^static int theora_decode_header(AVCodecContext *avctx, GetBitContext gb)$/;"	f	file:
theora_decode_init	libavcodec/vp3.c	/^static int theora_decode_init(AVCodecContext *avctx)$/;"	f	file:
theora_decode_tables	libavcodec/vp3.c	/^static int theora_decode_tables(AVCodecContext *avctx, GetBitContext gb)$/;"	f	file:
theora_decoder	libavcodec/vp3.c	/^AVCodec theora_decoder = {$/;"	v
theora_gptopts	libavformat/oggparsetheora.c	/^theora_gptopts(AVFormatContext *ctx, int idx, uint64_t gp)$/;"	f	file:
theora_header	libavformat/oggparsetheora.c	/^theora_header (AVFormatContext * s, int idx)$/;"	f	file:
theora_params	libavformat/oggparsetheora.c	/^typedef struct theora_params {$/;"	s	file:
theora_params_t	libavformat/oggparsetheora.c	/^} theora_params_t;$/;"	t	file:
theora_tables	libavcodec/vp3.c	/^    int theora, theora_tables;$/;"	m	struct:Vp3DecodeContext	file:
thirdpel_flag	libavcodec/h264.c	/^    int thirdpel_flag;$/;"	m	struct:H264Context	file:
thread	libavcodec/beosthread.c	/^    thread_id thread;$/;"	m	struct:ThreadContext	file:
thread	libavcodec/w32thread.c	/^    HANDLE thread;$/;"	m	struct:ThreadContext	file:
thread_context	libavcodec/mpegvideo.h	/^    struct MpegEncContext *thread_context[MAX_THREADS];$/;"	m	struct:MpegEncContext
thread_count	ffmpeg.c	/^static int thread_count= 1;$/;"	v	file:
thread_count	ffplay.c	/^static int thread_count = 1;$/;"	v	file:
thread_count	libavcodec/avcodec.h	/^    int thread_count;$/;"	m	struct:AVCodecContext
thread_func	libavcodec/w32thread.c	/^static unsigned __stdcall thread_func(void *v){$/;"	f	file:
thread_opaque	libavcodec/avcodec.h	/^    void *thread_opaque;$/;"	m	struct:AVCodecContext
threshold	vhook/fish.c	/^    int threshold;$/;"	m	file:
tid	libavformat/mpegts.c	/^    uint8_t tid;$/;"	m	struct:SectionHeader	file:
time	ffmpeg.c	39;"	d	file:
time	ffserver.c	29;"	d	file:
time	libavcodec/common.h	527;"	d
time	libavcodec/mpegvideo.h	/^    int64_t time;                   \/\/\/< time of current frame  $/;"	m	struct:MpegEncContext
time	libavformat/gif.c	/^    int64_t time, file_time;$/;"	m	file:
time	libavformat/matroska.c	/^  uint64_t        time;  \/* in nanoseconds *\/$/;"	m	struct:MatroskaDemuxIndex	file:
time	libavformat/movenc.c	/^    long        time;$/;"	m	struct:MOVIndex	file:
time	libavformat/movenc.c	/^    long    time;$/;"	m	struct:MOVContext	file:
time	libavformat/utils.c	2521;"	d	file:
time	vhook/drawtext.c	54;"	d	file:
time	vhook/imlib2.c	54;"	d	file:
time1	ffserver.c	/^    long time1, time2;$/;"	m	file:
time2	ffserver.c	/^    long time1, time2;$/;"	m	file:
time_base	libavcodec/avcodec.h	/^    AVRational time_base;$/;"	m	struct:AVCodecContext
time_base	libavcodec/mpegvideo.h	/^    int time_base;                  \/\/\/< time in seconds of last I,P,S Frame $/;"	m	struct:MpegEncContext
time_base	libavformat/avformat.h	/^    AVRational time_base;$/;"	m	struct:AVFormatParameters
time_base	libavformat/avformat.h	/^    AVRational time_base;$/;"	m	struct:AVStream
time_frame	libavformat/grab.c	/^    int64_t time_frame;$/;"	m	file:
time_increment_bits	libavcodec/mpegvideo.h	/^    int time_increment_bits;        \/\/\/< number of bits to represent the fractional part of time $/;"	m	struct:MpegEncContext
time_scale	libavcodec/h264.c	/^    uint32_t time_scale;$/;"	m	struct:SPS	file:
time_scale	libavformat/matroska.c	/^    int64_t time_scale;$/;"	m	struct:MatroskaDemuxContext	file:
time_scale	libavformat/mov.c	/^    int time_scale;$/;"	m	struct:MOVContext	file:
time_scale	libavformat/mov.c	/^    int time_scale;$/;"	m	struct:MOVStreamContext	file:
timeout	ffserver.c	/^    long timeout;$/;"	m	struct:HTTPContext	file:
timescale	libavformat/movenc.c	/^    long        timescale;$/;"	m	struct:MOVIndex	file:
timescale	libavformat/movenc.c	/^    long    timescale;$/;"	m	struct:MOVContext	file:
timestamp	libavformat/asf.h	/^    int timestamp;$/;"	m
timestamp	libavformat/avformat.h	/^    int64_t timestamp;$/;"	m	struct:AVFormatContext
timestamp	libavformat/avformat.h	/^    int64_t timestamp;$/;"	m	struct:AVIndexEntry
timestamp	libavformat/rtp.c	/^    uint32_t timestamp;$/;"	m	struct:RTPDemuxContext	file:
timestamp_delta	libavformat/nut.c	/^    int16_t timestamp_delta;$/;"	m	file:
timing_info_present_flag	libavcodec/h264.c	/^    int timing_info_present_flag;$/;"	m	struct:SPS	file:
tincr	output_example.c	/^float t, tincr, tincr2;$/;"	v
tincr2	output_example.c	/^float t, tincr, tincr2;$/;"	v
title	ffserver.c	/^    char title[512];$/;"	m	struct:FFStream	file:
title	libavformat/avformat.h	/^    char title[512];$/;"	m	struct:AVFormatContext
tmp_picture	output_example.c	/^AVFrame *picture, *tmp_picture;$/;"	v
tmp_pkt	libavformat/psxstr.c	/^    AVPacket tmp_pkt;$/;"	m	struct:StrDemuxContext	file:
tmp_row	libavcodec/png.c	/^    uint8_t *tmp_row;$/;"	m	struct:PNGContext	file:
tmp_row	libavformat/png.c	/^    uint8_t *tmp_row;$/;"	m	struct:PNGDecodeState	file:
to_be32	libavcodec/png.c	/^static void to_be32(uint8_t *p, uint32_t v)$/;"	f	file:
to_be32	libavformat/mov.c	/^static inline uint32_t to_be32(uint8_t *buf)$/;"	f	file:
to_be32	libavformat/png.c	/^static void to_be32(uint8_t *p, uint32_t v)$/;"	f	file:
toggle_audio_display	ffplay.c	/^void toggle_audio_display(void)$/;"	f
toggle_full_screen	ffplay.c	/^void toggle_full_screen(void)$/;"	f
toggle_pause	ffplay.c	/^void toggle_pause(void)$/;"	f
topBand	ffmpeg.c	/^    int topBand;             \/* cropping area sizes *\/$/;"	m	struct:AVOutputStream	file:
topBand	libavcodec/imgresample.c	/^    int topBand, bottomBand, leftBand, rightBand;$/;"	m	struct:ImgReSampleContext	file:
top_borders	libavcodec/h264.c	/^    uint8_t (*top_borders[2])[16+2*8];$/;"	m	struct:H264Context	file:
top_cbp	libavcodec/h264.c	/^    int top_cbp;$/;"	m	struct:H264Context	file:
top_field_first	ffmpeg.c	/^static int top_field_first = -1;$/;"	v	file:
top_field_first	libavcodec/mpegvideo.h	/^    int top_field_first;$/;"	m	struct:MpegEncContext
top_left_mv_flag	libavcodec/wmv2.c	/^    int top_left_mv_flag;$/;"	m	struct:Wmv2Context	file:
top_mb_xy	libavcodec/h264.c	/^    int top_mb_xy;$/;"	m	struct:H264Context	file:
top_samples_available	libavcodec/h264.c	/^    unsigned int top_samples_available;$/;"	m	struct:H264Context	file:
top_slot	libavformat/gifdec.c	/^    int top_slot;		\/* Highest code for current size *\/$/;"	m	struct:GifState	file:
topleft_samples_available	libavcodec/h264.c	/^    unsigned int topleft_samples_available;$/;"	m	struct:H264Context	file:
topleftx	libavcodec/vc9.c	/^    uint16_t topleftx;$/;"	m	struct:VC9Context	file:
toplefty	libavcodec/vc9.c	/^    uint16_t toplefty;$/;"	m	struct:VC9Context	file:
topright_samples_available	libavcodec/h264.c	/^    unsigned int topright_samples_available;$/;"	m	struct:H264Context	file:
total_bits	libavcodec/mpegvideo.h	/^    int64_t total_bits;$/;"	m	struct:MpegEncContext
total_frames	libavformat/rm.c	/^    int total_frames; \/* total number of frames *\/$/;"	m	file:
total_number_of_data_blocks	xvmc_render.h	/^  int total_number_of_data_blocks;$/;"	m
total_number_of_mv_blocks	xvmc_render.h	/^  int total_number_of_mv_blocks;$/;"	m
total_quant_bits	libavcodec/mpegaudiotab.h	/^static unsigned short total_quant_bits[17];$/;"	v
total_size	libavformat/mpegts.c	/^    int total_size;$/;"	m	struct:PESContext	file:
total_streams	libavformat/mov.c	/^    int total_streams;$/;"	m	struct:MOVContext	file:
total_zeros_bits	libavcodec/h264data.h	/^static const uint8_t total_zeros_bits[16][16]= {$/;"	v
total_zeros_len	libavcodec/h264data.h	/^static const uint8_t total_zeros_len[16][16]= {$/;"	v
total_zeros_vlc	libavcodec/h264.c	/^static VLC total_zeros_vlc[15];$/;"	v	file:
tpel_mc_func	libavcodec/dsputil.h	/^typedef void (*tpel_mc_func)(uint8_t *block\/*align width (8 or 16)*\/, const uint8_t *pixels\/*align 1*\/, int line_size, int w, int h);$/;"	t
tprintf	libavcodec/bitstream.h	869;"	d
tprintf	libavcodec/bitstream.h	872;"	d
track	libavformat/avformat.h	/^    int track; \/* track number, 0 if none *\/$/;"	m	struct:AVFormatContext
track	libavformat/matroska.c	/^    MatroskaTrack track;$/;"	m	struct:MatroskaAudioTrack	file:
track	libavformat/matroska.c	/^    MatroskaTrack track;$/;"	m	struct:MatroskaSubtitleTrack	file:
track	libavformat/matroska.c	/^    MatroskaTrack track;$/;"	m	struct:MatroskaVideoTrack	file:
track	libavformat/matroska.c	/^  uint16_t        track; \/* reference to 'num' *\/$/;"	m	struct:MatroskaDemuxIndex	file:
trackDuration	libavformat/movenc.c	/^    long        trackDuration;$/;"	m	struct:MOVIndex	file:
trackID	libavformat/movenc.c	/^    int         trackID;$/;"	m	struct:MOVIndex	file:
track_count	libavformat/4xm.c	/^    int track_count;$/;"	m	struct:FourxmDemuxContext	file:
track_count	libavformat/electronicarts.c	/^    int track_count;$/;"	m	struct:EaDemuxContext	file:
tracks	libavformat/4xm.c	/^    AudioTrack *tracks;$/;"	m	struct:FourxmDemuxContext	file:
tracks	libavformat/matroska.c	/^    MatroskaTrack *tracks[MAX_STREAMS];$/;"	m	struct:MatroskaDemuxContext	file:
tracks	libavformat/movenc.c	/^    MOVTrack tracks[MAX_STREAMS];$/;"	m	struct:MOVContext	file:
transfer_char	libavcodec/vc9.c	/^    int transfer_char;    \/\/\/< 8bits, Opto-electronic transfer characteristics$/;"	m	struct:VC9Context	file:
transformtype	libavcodec/vorbis.h	/^    uint_fast16_t transformtype;$/;"	m
transparent_color_index	libavformat/gifdec.c	/^    int transparent_color_index;$/;"	m	struct:GifState	file:
transport_option	libavformat/rtsp.h	/^    char transport_option[512];$/;"	m	struct:RTSPActionServerSetup
transports	libavformat/rtsp.h	/^    RTSPTransportField transports[RTSP_MAX_TRANSPORTS];$/;"	m	struct:RTSPHeader
transpose1	libavcodec/libpostproc/postprocess_template.c	/^static inline void RENAME(transpose1)(uint8_t *dst1, uint8_t *dst2, uint8_t *src, int srcStride)$/;"	f	file:
transpose2	libavcodec/libpostproc/postprocess_template.c	/^static inline void RENAME(transpose2)(uint8_t *dst, int dstStride, uint8_t *src)$/;"	f	file:
transpose4x4	libavcodec/i386/dsputil_mmx.c	/^static inline void transpose4x4(uint8_t *dst, uint8_t *src, int dst_stride, int src_stride){$/;"	f	file:
transpose_16x8_char_toPackedAlign_altivec	libavcodec/libpostproc/postprocess_altivec_template.c	/^static inline void transpose_16x8_char_toPackedAlign_altivec(unsigned char* dst, unsigned char* src, int stride) {$/;"	f	file:
transpose_8x16_char_fromPackedAlign_altivec	libavcodec/libpostproc/postprocess_altivec_template.c	/^static inline void transpose_8x16_char_fromPackedAlign_altivec(unsigned char* dst, unsigned char* src, int stride) {$/;"	f	file:
truemotion1_decode_16bit	libavcodec/truemotion1.c	/^static void truemotion1_decode_16bit(TrueMotion1Context *s)$/;"	f	file:
truemotion1_decode_24bit	libavcodec/truemotion1.c	/^static void truemotion1_decode_24bit(TrueMotion1Context *s)$/;"	f	file:
truemotion1_decode_end	libavcodec/truemotion1.c	/^static int truemotion1_decode_end(AVCodecContext *avctx)$/;"	f	file:
truemotion1_decode_frame	libavcodec/truemotion1.c	/^static int truemotion1_decode_frame(AVCodecContext *avctx,$/;"	f	file:
truemotion1_decode_header	libavcodec/truemotion1.c	/^static int truemotion1_decode_header(TrueMotion1Context *s)$/;"	f	file:
truemotion1_decode_init	libavcodec/truemotion1.c	/^static int truemotion1_decode_init(AVCodecContext *avctx)$/;"	f	file:
truemotion1_decoder	libavcodec/truemotion1.c	/^AVCodec truemotion1_decoder = {$/;"	v
truncate_ts	libavformat/utils.c	/^static void truncate_ts(AVStream *st, AVPacket *pkt){$/;"	f	file:
try_8x8basis	libavcodec/dsputil.h	/^    int (*try_8x8basis)(int16_t rem[64], int16_t weight[64], int16_t basis[64], int scale);$/;"	m	struct:DSPContext
try_8x8basis_c	libavcodec/dsputil.c	/^static int try_8x8basis_c(int16_t rem[64], int16_t weight[64], int16_t basis[64], int scale){$/;"	f	file:
try_8x8basis_mmx	libavcodec/i386/dsputil_mmx.c	/^static int try_8x8basis_mmx(int16_t rem[64], int16_t weight[64], int16_t basis[64], int scale){$/;"	f	file:
try_decode_frame	libavformat/utils.c	/^static int try_decode_frame(AVStream *st, const uint8_t *data, int size)$/;"	f	file:
ts	libavformat/mpegts.c	/^    MpegTSContext *ts;$/;"	m	struct:PESContext	file:
ts	libavformat/rtp.c	/^    MpegTSContext *ts; \/* only used for MP2T payloads *\/$/;"	m	struct:RTPDemuxContext	file:
tscc_decoder	libavcodec/tscc.c	/^AVCodec tscc_decoder = {$/;"	v
tsid	libavformat/mpegtsenc.c	/^    int tsid;$/;"	m	struct:MpegTSWrite	file:
tsin	libavcodec/dsputil.h	/^    FFTSample *tsin;$/;"	m	struct:MDCTContext
tt_index	libavcodec/vc9.c	/^    int tt_index;                 \/\/\/< Index for Transform Type tables$/;"	m	struct:VC9Context	file:
ttblk4x4	libavcodec/vc9.c	/^    uint8_t ttblk4x4;     \/\/\/< Value of ttblk which indicates a 4x4 transform$/;"	m	struct:VC9Context	file:
ttfrm	libavcodec/vc9.c	/^    int ttfrm;            \/\/\/< Transform type info present at frame level$/;"	m	struct:VC9Context	file:
ttl	libavformat/rtsp.h	/^    int ttl; \/* ttl value *\/$/;"	m	struct:RTSPTransportField
ttl	libavformat/udp.c	/^    int ttl;$/;"	m	file:
ttmb	libavcodec/vc9.c	/^    int ttmb;             \/\/\/< Transform type$/;"	m	struct:VC9Context	file:
ttmbf	libavcodec/vc9.c	/^    uint8_t ttmbf;        \/\/\/< Transform type flag$/;"	m	struct:VC9Context	file:
twopassbuffer	libavcodec/xvidff.c	/^    char *twopassbuffer;           \/** Character buffer for two-pass *\/$/;"	m	struct:xvid_context	file:
twopassfile	libavcodec/xvidff.c	/^    char *twopassfile;             \/** second pass temp file name *\/$/;"	m	struct:xvid_context	file:
tx_frametype	libavcodec/amr.c	/^    enum TXFrameType tx_frametype;$/;"	m	struct:AMRContext	file:
type	libavcodec/avcodec.h	/^    enum CodecType type;$/;"	m	struct:AVCodec
type	libavcodec/avcodec.h	/^    int type;$/;"	m	struct:AVOption
type	libavcodec/h264data.h	/^    uint16_t type;$/;"	m	struct:IMbInfo
type	libavcodec/h264data.h	/^    uint16_t type;$/;"	m	struct:PMbInfo
type	libavcodec/snow.c	/^    uint8_t type;$/;"	m	struct:BlockNode	file:
type	libavcodec/vorbis.h	/^    uint_fast16_t type;$/;"	m
type	libavformat/matroska.c	/^    MatroskaTrackType type;$/;"	m	struct:Track	file:
type	libavformat/mov.c	/^    uint32_t type;$/;"	m	file:
type	libavformat/mov.c	/^    uint32_t type;$/;"	m	struct:MOVParseTableEntry	file:
type	libavformat/mpegts.c	/^    enum MpegTSFilterType type;$/;"	m	struct:MpegTSFilter	file:
type	libavformat/psxstr.c	/^    int type;$/;"	m	struct:StrChannel	file:
type	libavformat/rtsp.c	/^    uint16_t type;$/;"	m	struct:attrname_map	file:
typedef_h	libavcodec/amr.c	489;"	d	file:
u	cmdutils.h	/^    } u;$/;"	m
u	libavcodec/cinepak.c	/^    uint8_t  u, v;$/;"	m	file:
u	libavcodec/roqvideo.c	/^  unsigned char y0, y1, y2, y3, u, v;$/;"	m	file:
u	libavformat/mpegts.c	/^    } u;$/;"	m	struct:MpegTSFilter	file:
u_b_table	libavcodec/xan.c	/^static int u_b_table[256];$/;"	v	file:
u_fragment_start	libavcodec/vp3.c	/^    int u_fragment_start;$/;"	m	struct:Vp3DecodeContext	file:
u_g_table	libavcodec/xan.c	/^static int u_g_table[256];$/;"	v	file:
u_r_table	libavcodec/xan.c	/^static int u_r_table[256];$/;"	v	file:
u_superblock_start	libavcodec/vp3.c	/^    int u_superblock_start;$/;"	m	struct:Vp3DecodeContext	file:
ub	libavcodec/i386/mmx.h	/^	unsigned char		ub[8];	\/* 8 Unsigned Byte *\/$/;"	m
ud	libavcodec/i386/mmx.h	/^	unsigned int		ud[2];	\/* 2 Unsigned Doubleword *\/$/;"	m
udp_close	libavformat/udp.c	/^static int udp_close(URLContext *h)$/;"	f	file:
udp_fd	libavformat/udp.c	/^    int udp_fd;$/;"	m	file:
udp_get_file_handle	libavformat/udp.c	/^int udp_get_file_handle(URLContext *h)$/;"	f
udp_get_local_port	libavformat/udp.c	/^int udp_get_local_port(URLContext *h)$/;"	f
udp_ipv6_is_multicast_address	libavformat/udp.c	/^int udp_ipv6_is_multicast_address(const struct sockaddr *addr) {$/;"	f
udp_ipv6_join_multicast_group	libavformat/udp.c	/^int udp_ipv6_join_multicast_group(int sockfd, struct sockaddr *addr) {$/;"	f
udp_ipv6_leave_multicast_group	libavformat/udp.c	/^int udp_ipv6_leave_multicast_group(int sockfd, struct sockaddr *addr) {$/;"	f
udp_ipv6_resolve_host	libavformat/udp.c	/^struct addrinfo* udp_ipv6_resolve_host(const char *hostname, int port, int type, int family, int flags) {$/;"	f
udp_ipv6_set_local	libavformat/udp.c	/^int udp_ipv6_set_local(URLContext *h) {$/;"	f
udp_ipv6_set_multicast_ttl	libavformat/udp.c	/^int udp_ipv6_set_multicast_ttl(int sockfd, int mcastTTL, struct sockaddr *addr) {$/;"	f
udp_ipv6_set_remote_url	libavformat/udp.c	/^int udp_ipv6_set_remote_url(URLContext *h, const char *uri) {$/;"	f
udp_open	libavformat/udp.c	/^static int udp_open(URLContext *h, const char *uri, int flags)$/;"	f	file:
udp_protocol	libavformat/udp.c	/^URLProtocol udp_protocol = {$/;"	v
udp_read	libavformat/udp.c	/^static int udp_read(URLContext *h, uint8_t *buf, int size)$/;"	f	file:
udp_read_packet	libavformat/rtsp.c	/^static int udp_read_packet(AVFormatContext *s, RTSPStream **prtsp_st, $/;"	f	file:
udp_set_remote_url	libavformat/udp.c	/^int udp_set_remote_url(URLContext *h, const char *uri)$/;"	f
udp_write	libavformat/udp.c	/^static int udp_write(URLContext *h, uint8_t *buf, int size)$/;"	f	file:
uiclip	libavcodec/roqvideo.c	/^static int uiclip[1024], *uiclp;  \/* clipping table *\/$/;"	v	file:
uiclp	libavcodec/roqvideo.c	/^static int uiclip[1024], *uiclp;  \/* clipping table *\/$/;"	v	file:
uid	libavformat/matroska.c	/^        uid,$/;"	m	struct:Track	file:
uint16_t	libavcodec/common.h	/^    typedef unsigned short uint16_t;$/;"	t
uint32_t	libavcodec/common.h	/^    typedef unsigned int   uint32_t;$/;"	t
uint64_t	libavcodec/common.h	/^        typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	libavcodec/common.h	/^        typedef unsigned long long uint64_t;$/;"	t
uint64_t_C	libavcodec/common.h	157;"	d
uint64_t_C	libavcodec/common.h	165;"	d
uint64_t_C	libavcodec/common.h	183;"	d
uint64_t_C	libavcodec/common.h	203;"	d
uint8_t	libavcodec/common.h	/^    typedef unsigned char  uint8_t;$/;"	t
uint8_t	tests/videogen.c	/^typedef unsigned char uint8_t;$/;"	t	file:
uint_fast16_t	libavcodec/common.h	/^typedef unsigned int  uint_fast16_t;$/;"	t
uint_fast32_t	libavcodec/common.h	/^typedef unsigned int  uint_fast32_t;$/;"	t
uint_fast8_t	libavcodec/common.h	/^typedef unsigned char uint_fast8_t;$/;"	t
ulaw2linear	libavcodec/pcm.c	/^static int ulaw2linear(unsigned char	u_val)$/;"	f	file:
uldq	libavcodec/alpha/asm.h	136;"	d
uldq	libavcodec/alpha/asm.h	68;"	d
ulti_chromas	libavcodec/ulti.c	/^static uint8_t ulti_chromas[16] =$/;"	v	file:
ulti_codebook	libavcodec/ulti.c	/^    uint8_t *ulti_codebook;$/;"	m	struct:UltimotionDecodeContext	file:
ulti_codebook	libavcodec/ulti_cb.h	/^static unsigned char ulti_codebook[16384]={$/;"	v
ulti_convert_yuv	libavcodec/ulti.c	/^static void ulti_convert_yuv(AVFrame *frame, int x, int y,$/;"	f	file:
ulti_decode_end	libavcodec/ulti.c	/^static int ulti_decode_end(AVCodecContext *avctx)$/;"	f	file:
ulti_decode_frame	libavcodec/ulti.c	/^static int ulti_decode_frame(AVCodecContext *avctx, $/;"	f	file:
ulti_decode_init	libavcodec/ulti.c	/^static int ulti_decode_init(AVCodecContext *avctx)$/;"	f	file:
ulti_decoder	libavcodec/ulti.c	/^AVCodec ulti_decoder = {$/;"	v
ulti_grad	libavcodec/ulti.c	/^static void ulti_grad(AVFrame *frame, int x, int y, uint8_t *Y, int chroma, int angle)$/;"	f	file:
ulti_lumas	libavcodec/ulti.c	/^static uint8_t ulti_lumas[64] =$/;"	v	file:
ulti_pattern	libavcodec/ulti.c	/^static void ulti_pattern(AVFrame *frame, int x, int y,$/;"	f	file:
umv_fcode_tab	libavcodec/h263.c	/^static uint8_t umv_fcode_tab[MAX_MV*2+1];$/;"	v	file:
umvplus	libavcodec/mpegvideo.h	/^    int umvplus;                    \/\/\/< == H263+ && unrestricted_mv $/;"	m	struct:MpegEncContext
unaligned32	libavcodec/bitstream.h	/^static inline uint32_t unaligned32(const void *v) {$/;"	f
unaligned32	libavcodec/bitstream.h	139;"	d
unaligned32_be	libavcodec/bitstream.h	/^static inline int unaligned32_be(const void *v)$/;"	f
unaligned32_le	libavcodec/bitstream.h	/^static inline int unaligned32_le(const void *v)$/;"	f
unaligned_16	libavcodec/dsputil.h	/^struct unaligned_16 { uint16_t l; } __attribute__((packed));$/;"	s
unaligned_32	libavcodec/dsputil.h	/^struct unaligned_32 { uint32_t l; } __attribute__((packed));$/;"	s
unaligned_64	libavcodec/dsputil.h	/^struct unaligned_64 { uint64_t l; } __attribute__((packed));$/;"	s
unaligned_long	libavcodec/alpha/asm.h	/^struct unaligned_long { uint64_t l; } __attribute__((packed));$/;"	s
uni_DCtab_chrom_bits	libavcodec/h263.c	/^static uint16_t uni_DCtab_chrom_bits[512];$/;"	v	file:
uni_DCtab_chrom_len	libavcodec/h263.c	/^static uint8_t uni_DCtab_chrom_len[512];$/;"	v	file:
uni_DCtab_lum_bits	libavcodec/h263.c	/^static uint16_t uni_DCtab_lum_bits[512];$/;"	v	file:
uni_DCtab_lum_len	libavcodec/h263.c	/^static uint8_t uni_DCtab_lum_len[512];$/;"	v	file:
uni_h263_inter_rl_len	libavcodec/h263.c	/^static uint8_t  uni_h263_inter_rl_len [64*64*2*2];$/;"	v	file:
uni_h263_intra_aic_rl_len	libavcodec/h263.c	/^static uint8_t  uni_h263_intra_aic_rl_len [64*64*2*2];$/;"	v	file:
uni_mpeg1_ac_vlc_bits	libavcodec/mpeg12.c	/^static uint32_t uni_mpeg1_ac_vlc_bits[64*64*2];$/;"	v	file:
uni_mpeg1_ac_vlc_len	libavcodec/mpeg12.c	/^static uint8_t  uni_mpeg1_ac_vlc_len [64*64*2];$/;"	v	file:
uni_mpeg4_inter_rl_bits	libavcodec/h263.c	/^static uint32_t uni_mpeg4_inter_rl_bits[64*64*2*2];$/;"	v	file:
uni_mpeg4_inter_rl_len	libavcodec/h263.c	/^static uint8_t  uni_mpeg4_inter_rl_len [64*64*2*2];$/;"	v	file:
uni_mpeg4_intra_rl_bits	libavcodec/h263.c	/^static uint32_t uni_mpeg4_intra_rl_bits[64*64*2*2];$/;"	v	file:
uni_mpeg4_intra_rl_len	libavcodec/h263.c	/^static uint8_t  uni_mpeg4_intra_rl_len [64*64*2*2];$/;"	v	file:
uninitialize_before	libavcodec/beosthread.c	/^void uninitialize_before(void)$/;"	f
unix_to_file_time	libavformat/asf-enc.c	/^static int64_t unix_to_file_time(int ti)$/;"	f	file:
unknown_svq3_flag	libavcodec/h264.c	/^    int unknown_svq3_flag;$/;"	m	struct:H264Context	file:
unlikely	libavcodec/alpha/asm.h	34;"	d
unlikely	libavcodec/alpha/asm.h	37;"	d
unlock_ben	libavcodec/beosthread.c	/^static inline int unlock_ben(struct benaphore *ben)$/;"	f	file:
unmunge	doc/texi2pod.pl	/^sub unmunge$/;"	s
unpack	libavcodec/ra288.c	/^static void unpack(unsigned short *tgt, unsigned char *src, unsigned int len)$/;"	f	file:
unpack_buffer	libavcodec/vmdav.c	/^    unsigned char *unpack_buffer;$/;"	m	struct:VmdVideoContext	file:
unpack_coeffs	libavcodec/snow.c	/^static inline void unpack_coeffs(SnowContext *s, SubBand *b, SubBand * parent, int orientation){$/;"	f	file:
unpack_dct_coeffs	libavcodec/vp3.c	/^static int unpack_dct_coeffs(Vp3DecodeContext *s, GetBitContext *gb)$/;"	f	file:
unpack_input	libavcodec/ra144.c	/^static void unpack_input(unsigned char *input, unsigned int *output)$/;"	f	file:
unpack_modes	libavcodec/vp3.c	/^static int unpack_modes(Vp3DecodeContext *s, GetBitContext *gb)$/;"	f	file:
unpack_superblocks	libavcodec/vp3.c	/^static int unpack_superblocks(Vp3DecodeContext *s, GetBitContext *gb)$/;"	f	file:
unpack_token	libavcodec/vp3.c	/^static void unpack_token(GetBitContext *gb, int token, int *zero_run,$/;"	f	file:
unpack_vectors	libavcodec/vp3.c	/^static int unpack_vectors(Vp3DecodeContext *s, GetBitContext *gb)$/;"	f	file:
unpack_vlcs	libavcodec/vp3.c	/^static int unpack_vlcs(Vp3DecodeContext *s, GetBitContext *gb,$/;"	f	file:
unpacked	libavcodec/ra144.c	/^	unsigned int	 unpacked[28];		\/* buffer for unpacked input *\/$/;"	m	file:
unpkbl	libavcodec/alpha/asm.h	114;"	d
unpkbl	libavcodec/alpha/asm.h	128;"	d
unpkbl	libavcodec/alpha/asm.h	157;"	d
unpkbw	libavcodec/alpha/asm.h	115;"	d
unpkbw	libavcodec/alpha/asm.h	129;"	d
unpkbw	libavcodec/alpha/asm.h	158;"	d
unreference_pic	libavcodec/h264.c	/^static inline void unreference_pic(H264Context *h, Picture *pic){$/;"	f	file:
unrestricted_mv	libavcodec/mpegvideo.h	/^    int unrestricted_mv;        \/\/\/< mv can point outside of the coded picture $/;"	m	struct:MpegEncContext
unsigned_intra	xvmc_render.h	/^  int unsigned_intra;\/\/+-128 for intra pictures after clip$/;"	m
unused	libavcodec/avcodec.h	/^    int unused;$/;"	m	struct:AVCodecContext
unused_var_killer	libavcodec/i386/simple_idct_mmx.c	/^static void unused_var_killer(){$/;"	f	file:
unwritten_size	libavformat/mpeg.c	/^    int unwritten_size;$/;"	m	struct:PacketDesc	file:
update	libavcodec/ra288.c	/^static void update(Real288_internal *glob)$/;"	f	file:
update	libavformat/nut.c	/^static void update(NUTContext *nut, int stream_index, int64_t frame_start, int frame_type, int frame_code, int key_frame, int size, int64_t pts){$/;"	f	file:
updateSize	libavformat/movenc.c	/^static int updateSize (ByteIOContext *pb, int pos)$/;"	f	file:
update_adler32	libavformat/crc.c	/^unsigned long update_adler32(unsigned long adler, const uint8_t *buf, unsigned int len)$/;"	f
update_checksum	libavformat/avio.h	/^    unsigned long (*update_checksum)(unsigned long checksum, const uint8_t *buf, unsigned int size);$/;"	m
update_datarate	ffserver.c	/^static void update_datarate(DataRateData *drd, int64_t count)$/;"	f	file:
update_duplicate_context_after_me	libavcodec/mpegvideo.c	/^static void update_duplicate_context_after_me(MpegEncContext *dst, MpegEncContext *src){$/;"	f	file:
update_map_generation	libavcodec/motion_est.c	/^static inline int update_map_generation(MotionEstContext *c)$/;"	f	file:
update_noise_reduction	libavcodec/mpegvideo.c	/^static void update_noise_reduction(MpegEncContext *s){$/;"	f	file:
update_packetheader	libavformat/nut.c	/^static int update_packetheader(NUTContext *nut, ByteIOContext *bc, int additional_size, int calculate_checksum){$/;"	f	file:
update_predictor	libavcodec/ratecontrol.c	/^static void update_predictor(Predictor *p, double q, double var, double size)$/;"	f	file:
update_qscale	libavcodec/mpegvideo.c	/^static inline void update_qscale(MpegEncContext *s){$/;"	f	file:
update_sample_display	ffplay.c	/^static void update_sample_display(VideoState *is, short *samples, int samples_size)$/;"	f	file:
update_vlc_state	libavcodec/ffv1.c	/^static inline void update_vlc_state(VlcState * const state, const int v){$/;"	f	file:
upper_motion_limit_offset	libavcodec/interplayvideo.c	/^    int upper_motion_limit_offset;$/;"	m	struct:IpvideoContext	file:
uq	libavcodec/i386/mmx.h	/^	unsigned long long	uq;	\/* Unsigned Quadword *\/$/;"	m
url	ffserver.c	/^    char url[128];$/;"	m	struct:HTTPContext	file:
url_add_option	libavformat/rtpproto.c	/^static void url_add_option(char *buf, int buf_size, const char *fmt, ...)$/;"	f	file:
url_close	libavformat/avio.c	/^int url_close(URLContext *h)$/;"	f
url_close	libavformat/avio.h	/^    int (*url_close)(URLContext *h);$/;"	m	struct:URLProtocol
url_close_buf	libavformat/aviobuf.c	/^int url_close_buf(ByteIOContext *s)$/;"	f
url_close_dyn_buf	libavformat/aviobuf.c	/^int url_close_dyn_buf(ByteIOContext *s, uint8_t **pbuffer)$/;"	f
url_exist	libavformat/avio.c	/^int url_exist(const char *filename)$/;"	f
url_fclose	libavformat/aviobuf.c	/^int url_fclose(ByteIOContext *s)$/;"	f
url_fdopen	libavformat/aviobuf.c	/^int url_fdopen(ByteIOContext *s, URLContext *h)$/;"	f
url_feof	libavformat/aviobuf.c	/^int url_feof(ByteIOContext *s)$/;"	f
url_ferror	libavformat/aviobuf.c	/^int url_ferror(ByteIOContext *s)$/;"	f
url_fget_max_packet_size	libavformat/aviobuf.c	/^int url_fget_max_packet_size(ByteIOContext *s)$/;"	f
url_fgetc	libavformat/aviobuf.c	/^int url_fgetc(ByteIOContext *s)$/;"	f
url_fgets	libavformat/aviobuf.c	/^char *url_fgets(ByteIOContext *s, char *buf, int buf_size)$/;"	f
url_fileno	libavformat/aviobuf.c	/^URLContext *url_fileno(ByteIOContext *s)$/;"	f
url_filesize	libavformat/avio.c	/^offset_t url_filesize(URLContext *h)$/;"	f
url_fopen	libavformat/aviobuf.c	/^int url_fopen(ByteIOContext *s, const char *filename, int flags)$/;"	f
url_fprintf	libavformat/aviobuf.c	/^int url_fprintf(ByteIOContext *s, const char *fmt, ...)$/;"	f
url_fseek	libavformat/aviobuf.c	/^offset_t url_fseek(ByteIOContext *s, offset_t offset, int whence)$/;"	f
url_fsize	libavformat/aviobuf.c	/^offset_t url_fsize(ByteIOContext *s)$/;"	f
url_fskip	libavformat/aviobuf.c	/^void url_fskip(ByteIOContext *s, offset_t offset)$/;"	f
url_ftell	libavformat/aviobuf.c	/^offset_t url_ftell(ByteIOContext *s)$/;"	f
url_get_filename	libavformat/avio.c	/^void url_get_filename(URLContext *h, char *buf, int buf_size)$/;"	f
url_get_max_packet_size	libavformat/avio.c	/^int url_get_max_packet_size(URLContext *h)$/;"	f
url_interrupt_cb	libavformat/avio.c	/^URLInterruptCB *url_interrupt_cb = default_interrupt_cb;$/;"	v
url_is_streamed	libavformat/avio.h	/^static inline int url_is_streamed(ByteIOContext *s)$/;"	f
url_open	libavformat/avio.c	/^int url_open(URLContext **puc, const char *filename, int flags)$/;"	f
url_open	libavformat/avio.h	/^    int (*url_open)(URLContext *h, const char *filename, int flags);$/;"	m	struct:URLProtocol
url_open_buf	libavformat/aviobuf.c	/^int url_open_buf(ByteIOContext *s, uint8_t *buf, int buf_size, int flags)$/;"	f
url_open_dyn_buf	libavformat/aviobuf.c	/^int url_open_dyn_buf(ByteIOContext *s)$/;"	f
url_open_dyn_buf_internal	libavformat/aviobuf.c	/^static int url_open_dyn_buf_internal(ByteIOContext *s, int max_packet_size)$/;"	f	file:
url_open_dyn_packet_buf	libavformat/aviobuf.c	/^int url_open_dyn_packet_buf(ByteIOContext *s, int max_packet_size)$/;"	f
url_read	libavformat/avio.c	/^int url_read(URLContext *h, unsigned char *buf, int size)$/;"	f
url_read	libavformat/avio.h	/^    int (*url_read)(URLContext *h, unsigned char *buf, int size);$/;"	m	struct:URLProtocol
url_read_packet	libavformat/aviobuf.c	/^static int url_read_packet(void *opaque, uint8_t *buf, int buf_size)$/;"	f	file:
url_readbuf	libavformat/rtsp.c	/^static int url_readbuf(URLContext *h, unsigned char *buf, int size)$/;"	f	file:
url_seek	libavformat/avio.c	/^offset_t url_seek(URLContext *h, offset_t pos, int whence)$/;"	f
url_seek	libavformat/avio.h	/^    offset_t (*url_seek)(URLContext *h, offset_t pos, int whence);$/;"	m	struct:URLProtocol
url_seek_packet	libavformat/aviobuf.c	/^static int url_seek_packet(void *opaque, int64_t offset, int whence)$/;"	f	file:
url_set_interrupt_cb	libavformat/avio.c	/^void url_set_interrupt_cb(URLInterruptCB *interrupt_cb)$/;"	f
url_setbufsize	libavformat/aviobuf.c	/^int url_setbufsize(ByteIOContext *s, int buf_size)$/;"	f
url_split	libavformat/utils.c	/^void url_split(char *proto, int proto_size,$/;"	f
url_write	libavformat/avio.c	/^int url_write(URLContext *h, unsigned char *buf, int size)$/;"	f
url_write	libavformat/avio.h	/^    int (*url_write)(URLContext *h, unsigned char *buf, int size);$/;"	m	struct:URLProtocol
url_write_packet	libavformat/aviobuf.c	/^static int url_write_packet(void *opaque, uint8_t *buf, int buf_size)$/;"	f	file:
url_write_packet	libavformat/aviobuf.c	485;"	d	file:
usage	doc/texi2pod.pl	/^sub usage$/;"	s
usage	pktdumper.c	/^static int usage(int ret)$/;"	f	file:
use_4mv	ffmpeg.c	/^static int use_4mv = 0;$/;"	v	file:
use_aic	ffmpeg.c	/^static int use_aic = 0;$/;"	v	file:
use_aiv	ffmpeg.c	/^static int use_aiv = 0;$/;"	v	file:
use_alt_scan	ffmpeg.c	/^static int use_alt_scan = 0;$/;"	v	file:
use_bit_reservoir	libavcodec/wmadec.c	/^    int use_bit_reservoir;$/;"	m	struct:WMADecodeContext	file:
use_cbprd	ffmpeg.c	/^static int use_cbprd = 0;$/;"	v	file:
use_exp_vlc	libavcodec/wmadec.c	/^    int use_exp_vlc;  \/* exponent coding: 0 = lsp, 1 = vlc + delta *\/$/;"	m	struct:WMADecodeContext	file:
use_kerning	vhook/drawtext.c	/^  int use_kerning;$/;"	m	file:
use_loop	ffmpeg.c	/^static int use_loop = 0;$/;"	v	file:
use_mmap	libavformat/grab.c	/^    int use_mmap;$/;"	m	file:
use_mv0	ffmpeg.c	/^static int use_mv0 = 0;$/;"	v	file:
use_noise_coding	libavcodec/wmadec.c	/^    int use_noise_coding; \/* true if perceptual noise is added *\/$/;"	m	struct:WMADecodeContext	file:
use_obmc	ffmpeg.c	/^static int use_obmc = 0;$/;"	v	file:
use_part	ffmpeg.c	/^static int use_part = 0;$/;"	v	file:
use_qpel	ffmpeg.c	/^static int use_qpel = 0;$/;"	v	file:
use_qprd	ffmpeg.c	/^static int use_qprd = 0;$/;"	v	file:
use_scan_offset	ffmpeg.c	/^static int use_scan_offset = 0;$/;"	v	file:
use_skip_mb_code	libavcodec/mpegvideo.h	/^    int use_skip_mb_code;$/;"	m	struct:MpegEncContext
use_ss	ffmpeg.c	/^static int use_ss = 0;$/;"	v	file:
use_trell	ffmpeg.c	/^static int use_trell = 0;$/;"	v	file:
use_umv	ffmpeg.c	/^static int use_umv = 0;$/;"	v	file:
use_variable_block_len	libavcodec/wmadec.c	/^    int use_variable_block_len;$/;"	m	struct:WMADecodeContext	file:
use_weight	libavcodec/h264.c	/^    int use_weight;$/;"	m	struct:H264Context	file:
use_weight_chroma	libavcodec/h264.c	/^    int use_weight_chroma;$/;"	m	struct:H264Context	file:
used	libavcodec/idcinvideo.c	/^  unsigned char used;$/;"	m	file:
user_specified_pts	libavcodec/mpegvideo.h	/^    int64_t user_specified_pts;\/\/\/< last non zero pts from AVFrame which was passed into avcodec_encode_video()$/;"	m	struct:MpegEncContext
using_stdin	ffmpeg.c	/^static int using_stdin = 0;$/;"	v	file:
using_vhook	ffmpeg.c	/^static int using_vhook = 0;$/;"	v	file:
usl7	libavcodec/indeo3.c	/^  long usl7;$/;"	m	file:
usleep	libavformat/os_support.h	/^static inline int usleep(unsigned int t) { return _sleep2(t \/ 1000); }$/;"	f
usleep	libavformat/os_support.h	16;"	d
usleep	libavformat/os_support.h	22;"	d
ustr_t	libavcodec/indeo3.c	/^} ustr_t;$/;"	t	file:
uv_h	libavcodec/indeo3.c	/^  unsigned short uv_w, uv_h;$/;"	m	file:
uv_w	libavcodec/indeo3.c	/^  unsigned short uv_w, uv_h;$/;"	m	file:
uvlinesize	libavcodec/mpegvideo.h	/^    int uvlinesize;            \/\/\/< line size, for chroma in bytes, may be different from width $/;"	m	struct:MpegEncContext
uvsamp	libavcodec/vc9.c	/^    uint8_t uvsamp;$/;"	m	struct:VC9Context	file:
uvstride	libavcodec/mpegvideo.h	/^    int uvstride;$/;"	m	struct:MotionEstContext
uw	libavcodec/i386/mmx.h	/^	unsigned short		uw[4];	\/* 4 Unsigned Word *\/$/;"	m
uyvy411_to_yuv411p	libavcodec/imgconvert.c	/^static void uyvy411_to_yuv411p(AVPicture *dst, const AVPicture *src,$/;"	f	file:
uyvy422_to_yuv420p	libavcodec/imgconvert.c	/^static void uyvy422_to_yuv420p(AVPicture *dst, const AVPicture *src,$/;"	f	file:
uyvy422_to_yuv422p	libavcodec/imgconvert.c	/^static void uyvy422_to_yuv422p(AVPicture *dst, const AVPicture *src,$/;"	f	file:
v	libavcodec/cinepak.c	/^    uint8_t  u, v;$/;"	m	file:
v	libavcodec/imgresample.c	/^    vector signed short v;$/;"	m	file:
v	libavcodec/imgresample.c	/^    vector unsigned char v;$/;"	m	file:
v	libavcodec/integer.h	/^    uint16_t v[AV_INTEGER_SIZE]; $/;"	m	struct:AVInteger
v	libavcodec/roqvideo.c	/^  unsigned char y0, y1, y2, y3, u, v;$/;"	m	file:
v	vhook/fish.c	/^    int v;  \/* 0 .. 255 *\/$/;"	m	file:
v0	libavcodec/alpha/regdef.h	5;"	d
v1	libavformat/asf.h	/^    uint32_t v1;$/;"	m
v1_codebook	libavcodec/cinepak.c	/^    cvid_codebook_t   v1_codebook[256];$/;"	m	file:
v1_inter_cbpc_vlc	libavcodec/msmpeg4.c	/^static VLC v1_inter_cbpc_vlc;$/;"	v	file:
v1_intra_cbpc_vlc	libavcodec/msmpeg4.c	/^static VLC v1_intra_cbpc_vlc;$/;"	v	file:
v2	libavformat/asf.h	/^    uint16_t v2;$/;"	m
v2_dc_chroma_table	libavcodec/msmpeg4.c	/^static uint32_t v2_dc_chroma_table[512][2];$/;"	v	file:
v2_dc_chroma_vlc	libavcodec/msmpeg4.c	/^static VLC v2_dc_chroma_vlc;$/;"	v	file:
v2_dc_lum_table	libavcodec/msmpeg4.c	/^static uint32_t v2_dc_lum_table[512][2];$/;"	v	file:
v2_dc_lum_vlc	libavcodec/msmpeg4.c	/^static VLC v2_dc_lum_vlc;$/;"	v	file:
v2_intra_cbpc	libavcodec/msmpeg4data.h	/^static const uint8_t v2_intra_cbpc[4][2] = {$/;"	v
v2_intra_cbpc_vlc	libavcodec/msmpeg4.c	/^static VLC v2_intra_cbpc_vlc;$/;"	v	file:
v2_mb_type	libavcodec/msmpeg4data.h	/^static const uint8_t v2_mb_type[8][2] = {$/;"	v
v2_mb_type_vlc	libavcodec/msmpeg4.c	/^static VLC v2_mb_type_vlc;$/;"	v	file:
v2_mv_vlc	libavcodec/msmpeg4.c	/^static VLC v2_mv_vlc;$/;"	v	file:
v3	libavformat/asf.h	/^    uint16_t v3;$/;"	m
v4	libavformat/asf.h	/^    uint8_t v4[8];$/;"	m
v4_codebook	libavcodec/cinepak.c	/^    cvid_codebook_t   v4_codebook[256];$/;"	m	file:
v4l_mm_read_picture	libavformat/grab.c	/^static int v4l_mm_read_picture(VideoData *s, uint8_t *buf)$/;"	f	file:
vChromaSubSample	libavcodec/libpostproc/postprocess_internal.h	/^	int vChromaSubSample;$/;"	m	struct:PPContext
v_b_table	libavcodec/xan.c	/^static int v_b_table[256];$/;"	v	file:
v_block_filter	libavcodec/error_resilience.c	/^static void v_block_filter(MpegEncContext *s, uint8_t *dst, int w, int h, int stride, int is_luma){$/;"	f	file:
v_count	libavcodec/mjpeg.c	/^    int v_count[MAX_COMPONENTS];$/;"	m	struct:MJpegDecodeContext	file:
v_edge_pos	libavcodec/mpegvideo.h	/^    int h_edge_pos, v_edge_pos;\/\/\/< horizontal \/ vertical position of the right\/bottom edge (pixel replicateion)$/;"	m	struct:MpegEncContext
v_fragment_start	libavcodec/vp3.c	/^    int v_fragment_start;$/;"	m	struct:Vp3DecodeContext	file:
v_g_table	libavcodec/xan.c	/^static int v_g_table[256];$/;"	v	file:
v_incr	libavcodec/imgresample.c	/^    int h_incr, v_incr;$/;"	m	struct:ImgReSampleContext	file:
v_max	libavcodec/mjpeg.c	/^    int h_max, v_max; \/* maximum h and v counts *\/$/;"	m	struct:MJpegDecodeContext	file:
v_r_table	libavcodec/xan.c	/^static int v_r_table[256];$/;"	v	file:
v_resample	libavcodec/imgresample.c	/^static void v_resample(uint8_t *dst, int dst_width, const uint8_t *src,$/;"	f	file:
v_resample16_altivec	libavcodec/imgresample.c	/^void v_resample16_altivec(uint8_t *dst, int dst_width, const uint8_t *src,$/;"	f
v_resample4_mmx	libavcodec/imgresample.c	/^static void v_resample4_mmx(uint8_t *dst, int dst_width, const uint8_t *src,$/;"	f	file:
v_scount	libavcodec/mjpeg.c	/^    int v_scount[MAX_COMPONENTS];$/;"	m	struct:MJpegDecodeContext	file:
v_superblock_start	libavcodec/vp3.c	/^    int v_superblock_start;$/;"	m	struct:Vp3DecodeContext	file:
val	libavcodec/ra144.c	/^	unsigned int	 resetflag, val, oldval;$/;"	m	file:
val	libavformat/avformat.h	/^    int64_t val, num, den; $/;"	m	struct:AVFrac
val_ac_chrominance	libavcodec/mjpeg.c	/^static const uint8_t val_ac_chrominance[] =$/;"	v	file:
val_ac_luminance	libavcodec/mjpeg.c	/^static const uint8_t val_ac_luminance[] =$/;"	v	file:
val_dc_chrominance	libavcodec/mjpeg.c	/^static const uint8_t val_dc_chrominance[] =$/;"	v	file:
val_dc_luminance	libavcodec/mjpeg.c	/^static const uint8_t val_dc_luminance[] =$/;"	v	file:
validate_acl	ffserver.c	/^static int validate_acl(FFStream *stream, HTTPContext *c)$/;"	f	file:
value	libavformat/avformat.h	/^    int value;$/;"	m	struct:AVInputFormat
var_diamond_search	libavcodec/motion_est_template.c	/^static int var_diamond_search(MpegEncContext * s, int *best, int dmin,$/;"	f	file:
vb	libavcodec/oggvorbis.c	/^    vorbis_block vb ;$/;"	m	struct:OggVorbisContext	file:
vbv_delay_ptr	libavcodec/mpegvideo.h	/^    uint8_t *vbv_delay_ptr;  \/\/\/< pointer to vbv_delay in the bitstream $/;"	m	struct:MpegEncContext
vc	libavcodec/oggvorbis.c	/^    vorbis_comment vc ;$/;"	m	struct:OggVorbisContext	file:
vc9_4mv_block_pattern_bits	libavcodec/vc9data.h	/^static const uint8_t vc9_4mv_block_pattern_bits[4][16] = {$/;"	v
vc9_4mv_block_pattern_codes	libavcodec/vc9data.h	/^static const uint8_t vc9_4mv_block_pattern_codes[4][16] = {$/;"	v
vc9_4mv_block_pattern_vlc	libavcodec/vc9.c	/^static VLC vc9_4mv_block_pattern_vlc[4];$/;"	v	file:
vc9_bfraction_bits	libavcodec/vc9data.h	/^const uint8_t vc9_bfraction_bits[23] = {$/;"	v
vc9_bfraction_codes	libavcodec/vc9data.h	/^const uint8_t vc9_bfraction_codes[23] = {$/;"	v
vc9_bfraction_lut	libavcodec/vc9data.h	/^const int16_t vc9_bfraction_lut[23] = {$/;"	v
vc9_bfraction_vlc	libavcodec/vc9.c	/^static VLC vc9_bfraction_vlc;$/;"	v	file:
vc9_cbpcy_p_bits	libavcodec/vc9data.h	/^static const uint8_t vc9_cbpcy_p_bits[4][64] = {$/;"	v
vc9_cbpcy_p_codes	libavcodec/vc9data.h	/^static const uint16_t vc9_cbpcy_p_codes[4][64] = {$/;"	v
vc9_cbpcy_p_vlc	libavcodec/vc9.c	/^static VLC vc9_cbpcy_p_vlc[4];$/;"	v	file:
vc9_coded_block_pred	libavcodec/vc9.c	/^static inline int vc9_coded_block_pred(MpegEncContext * s, int n, uint8_t **coded_block_ptr)$/;"	f	file:
vc9_decode_b_mb	libavcodec/vc9.c	/^int vc9_decode_b_mb(VC9Context *v, DCTELEM block[6][64])$/;"	f
vc9_decode_block	libavcodec/vc9.c	/^int vc9_decode_block(VC9Context *v, DCTELEM block[64], int n, int coded, int mquant)$/;"	f
vc9_decode_end	libavcodec/vc9.c	/^static int vc9_decode_end(AVCodecContext *avctx)$/;"	f	file:
vc9_decode_frame	libavcodec/vc9.c	/^static int vc9_decode_frame(AVCodecContext *avctx,$/;"	f	file:
vc9_decode_i_mb	libavcodec/vc9.c	/^int vc9_decode_i_mb(VC9Context *v, DCTELEM block[6][64])$/;"	f
vc9_decode_init	libavcodec/vc9.c	/^static int vc9_decode_init(AVCodecContext *avctx)$/;"	f	file:
vc9_decode_p_mb	libavcodec/vc9.c	/^int vc9_decode_p_mb(VC9Context *v, DCTELEM block[6][64])$/;"	f
vc9_decoder	libavcodec/vc9.c	/^AVCodec vc9_decoder = {$/;"	v
vc9_imode_bits	libavcodec/vc9data.h	/^static const uint8_t vc9_imode_bits[7] = {$/;"	v
vc9_imode_codes	libavcodec/vc9data.h	/^static const uint8_t vc9_imode_codes[7] = {$/;"	v
vc9_imode_vlc	libavcodec/vc9.c	/^static VLC vc9_imode_vlc;$/;"	v	file:
vc9_init_common	libavcodec/vc9.c	/^static int vc9_init_common(VC9Context *v)$/;"	f	file:
vc9_mv_diff_bits	libavcodec/vc9data.h	/^static const uint8_t vc9_mv_diff_bits[4][73] = {$/;"	v
vc9_mv_diff_codes	libavcodec/vc9data.h	/^static const uint16_t vc9_mv_diff_codes[4][73] = {$/;"	v
vc9_mv_diff_vlc	libavcodec/vc9.c	/^static VLC vc9_mv_diff_vlc[4];$/;"	v	file:
vc9_norm2_bits	libavcodec/vc9data.h	/^static const uint8_t vc9_norm2_bits[4] = {$/;"	v
vc9_norm2_codes	libavcodec/vc9data.h	/^static const uint8_t vc9_norm2_codes[4] = {$/;"	v
vc9_norm2_vlc	libavcodec/vc9.c	/^static VLC vc9_norm2_vlc;$/;"	v	file:
vc9_norm6_bits	libavcodec/vc9data.h	/^static const uint8_t vc9_norm6_bits[64] = {$/;"	v
vc9_norm6_codes	libavcodec/vc9data.h	/^static const uint16_t vc9_norm6_codes[64] = {$/;"	v
vc9_norm6_spec	libavcodec/vc9data.h	/^static const uint8_t vc9_norm6_spec[64][5] = {$/;"	v
vc9_norm6_vlc	libavcodec/vc9.c	/^static VLC vc9_norm6_vlc;$/;"	v	file:
vc9_pixel_aspect	libavcodec/vc9data.h	/^static const AVRational vc9_pixel_aspect[16]={$/;"	v
vc9_pred_dc	libavcodec/vc9.c	/^static inline int vc9_pred_dc(MpegEncContext *s, int n,$/;"	f	file:
vc9_subblkpat_bits	libavcodec/vc9data.h	/^static const uint8_t vc9_subblkpat_bits[3][15] = {$/;"	v
vc9_subblkpat_codes	libavcodec/vc9data.h	/^static const uint8_t vc9_subblkpat_codes[3][15] = {$/;"	v
vc9_subblkpat_vlc	libavcodec/vc9.c	/^static VLC vc9_subblkpat_vlc[3];$/;"	v	file:
vc9_ttblk_bits	libavcodec/vc9data.h	/^static const uint8_t vc9_ttblk_bits[3][8] = {$/;"	v
vc9_ttblk_codes	libavcodec/vc9data.h	/^static const uint8_t vc9_ttblk_codes[3][8] = {$/;"	v
vc9_ttblk_vlc	libavcodec/vc9.c	/^static VLC vc9_ttblk_vlc[3];$/;"	v	file:
vc9_ttmb_bits	libavcodec/vc9data.h	/^static const uint8_t vc9_ttmb_bits[3][16] = {$/;"	v
vc9_ttmb_codes	libavcodec/vc9data.h	/^static const uint16_t vc9_ttmb_codes[3][16] = {$/;"	v
vc9_ttmb_vlc	libavcodec/vc9.c	/^static VLC vc9_ttmb_vlc[3];$/;"	v	file:
vcd_padding_bitrate	libavformat/mpeg.c	/^    double vcd_padding_bitrate; \/\/FIXME floats$/;"	m	file:
vcd_padding_bytes_written	libavformat/mpeg.c	/^    int64_t vcd_padding_bytes_written;$/;"	m	file:
vcii	libavcodec/ppc/dsputil_altivec.h	86;"	d
vcii	libavcodec/ppc/dsputil_altivec.h	88;"	d
vcprm	libavcodec/ppc/dsputil_altivec.h	69;"	d
vcprm	libavcodec/ppc/dsputil_altivec.h	71;"	d
vcprmle	libavcodec/ppc/dsputil_altivec.h	77;"	d
vcr1_decoder	libavcodec/vcr1.c	/^AVCodec vcr1_decoder = {$/;"	v
vcr2_init_sequence	libavcodec/mpeg12.c	/^static int vcr2_init_sequence(AVCodecContext *avctx)$/;"	f	file:
vd	libavcodec/oggvorbis.c	/^    vorbis_dsp_state vd ;$/;"	m	struct:OggVorbisContext	file:
vec_mergel	libavcodec/ppc/gcc_fixes.h	65;"	d
vec_mergel	libavcodec/ppc/gcc_fixes.h	67;"	d
vec_ss_t	libavcodec/imgresample.c	/^} vec_ss_t;$/;"	t	file:
vec_uc_t	libavcodec/imgresample.c	/^} vec_uc_t;$/;"	t	file:
vectable	libavcodec/truemotion1.c	/^    uint8_t vectable;$/;"	m	struct:frame_header	file:
vector	libavcodec/svq1.c	928;"	d	file:
vector128	libavcodec/i386/dsputil_mmx.c	/^static unsigned char __align8 vector128[8] =$/;"	v	file:
vector_height	libavcodec/vqavideo.c	/^    int vector_height;  \/* height of individual vector *\/$/;"	m	struct:VqaContext	file:
vector_s16_t	libavcodec/ppc/idct_altivec.c	46;"	d	file:
vector_s32_t	libavcodec/ppc/idct_altivec.c	51;"	d	file:
vector_s8_t	libavcodec/ppc/idct_altivec.c	49;"	d	file:
vector_u16_t	libavcodec/ppc/idct_altivec.c	48;"	d	file:
vector_u32_t	libavcodec/ppc/idct_altivec.c	52;"	d	file:
vector_u8_t	libavcodec/ppc/idct_altivec.c	50;"	d	file:
vector_width	libavcodec/vqavideo.c	/^    int vector_width;  \/* width of individual vector *\/$/;"	m	struct:VqaContext	file:
verbose	ffmpeg.c	/^static int verbose = 1;$/;"	v	file:
verbose	libavcodec/libpostproc/postprocess.c	/^static const int verbose= 0;$/;"	v	file:
version	libavcodec/ffv1.c	/^    int version;$/;"	m	struct:FFV1Context	file:
version	libavcodec/huffyuv.c	/^    int version;$/;"	m	struct:HYuvContext	file:
version	libavcodec/mdec.c	/^    int version;$/;"	m	struct:MDECContext	file:
version	libavcodec/shorten.c	/^    int version;$/;"	m	struct:ShortenContext	file:
version	libavcodec/snow.c	/^    int version;$/;"	m	struct:SnowContext	file:
version	libavcodec/truemotion1.c	/^    uint8_t version;$/;"	m	struct:frame_header	file:
version	libavcodec/vorbis.h	/^    uint_fast32_t version;$/;"	m
version	libavcodec/vp3.c	/^    int version;$/;"	m	struct:Vp3DecodeContext	file:
version	libavcodec/wmadec.c	/^    int version; \/* 1 = 0x160 (WMAV1), 2 = 0x161 (WMAV2) *\/$/;"	m	struct:WMADecodeContext	file:
version	libavcodec/xvidff.c	/^    int     version;                \/** XviD version *\/$/;"	m	struct:xvid_ff_pass1	file:
version	libavformat/mov.c	/^    uint8_t  version;$/;"	m	file:
version	libavformat/mpegts.c	/^    uint8_t version;$/;"	m	struct:SectionHeader	file:
version	libavformat/segafilm.c	/^    unsigned int version;$/;"	m	struct:FilmDemuxContext	file:
vertClassify	libavcodec/libpostproc/postprocess_template.c	/^static inline int RENAME(vertClassify)(uint8_t src[], int stride, PPContext *c){$/;"	f	file:
vertClassify_C	libavcodec/libpostproc/postprocess.c	/^static inline int vertClassify_C(uint8_t src[], int stride, PPContext *c){$/;"	f	file:
vertClassify_altivec	libavcodec/libpostproc/postprocess_altivec_template.c	/^static inline int vertClassify_altivec(uint8_t src[], int stride, PPContext *c) {$/;"	f	file:
vertX1Filter	libavcodec/libpostproc/postprocess_template.c	/^static inline void RENAME(vertX1Filter)(uint8_t *src, int stride, PPContext *co)$/;"	f	file:
vert_pred	libavcodec/truemotion1.c	/^    unsigned int *vert_pred;$/;"	m	struct:TrueMotion1Context	file:
vertical_compose53iH0	libavcodec/snow.c	/^static void vertical_compose53iH0(DWTELEM *b0, DWTELEM *b1, DWTELEM *b2, int width){$/;"	f	file:
vertical_compose53iL0	libavcodec/snow.c	/^static void vertical_compose53iL0(DWTELEM *b0, DWTELEM *b1, DWTELEM *b2, int width){$/;"	f	file:
vertical_compose97i	libavcodec/snow.c	/^static void vertical_compose97i(DWTELEM *b0, DWTELEM *b1, DWTELEM *b2, DWTELEM *b3, DWTELEM *b4, DWTELEM *b5, int width){$/;"	f	file:
vertical_compose97iH0	libavcodec/snow.c	/^static void vertical_compose97iH0(DWTELEM *b0, DWTELEM *b1, DWTELEM *b2, int width){$/;"	f	file:
vertical_compose97iH1	libavcodec/snow.c	/^static void vertical_compose97iH1(DWTELEM *b0, DWTELEM *b1, DWTELEM *b2, int width){$/;"	f	file:
vertical_compose97iL0	libavcodec/snow.c	/^static void vertical_compose97iL0(DWTELEM *b0, DWTELEM *b1, DWTELEM *b2, int width){$/;"	f	file:
vertical_compose97iL1	libavcodec/snow.c	/^static void vertical_compose97iL1(DWTELEM *b0, DWTELEM *b1, DWTELEM *b2, int width){$/;"	f	file:
vertical_decompose53iH0	libavcodec/snow.c	/^static void vertical_decompose53iH0(DWTELEM *b0, DWTELEM *b1, DWTELEM *b2, int width){$/;"	f	file:
vertical_decompose53iL0	libavcodec/snow.c	/^static void vertical_decompose53iL0(DWTELEM *b0, DWTELEM *b1, DWTELEM *b2, int width){$/;"	f	file:
vertical_decompose97iH0	libavcodec/snow.c	/^static void vertical_decompose97iH0(DWTELEM *b0, DWTELEM *b1, DWTELEM *b2, int width){$/;"	f	file:
vertical_decompose97iH1	libavcodec/snow.c	/^static void vertical_decompose97iH1(DWTELEM *b0, DWTELEM *b1, DWTELEM *b2, int width){$/;"	f	file:
vertical_decompose97iL0	libavcodec/snow.c	/^static void vertical_decompose97iL0(DWTELEM *b0, DWTELEM *b1, DWTELEM *b2, int width){$/;"	f	file:
vertical_decompose97iL1	libavcodec/snow.c	/^static void vertical_decompose97iL1(DWTELEM *b0, DWTELEM *b1, DWTELEM *b2, int width){$/;"	f	file:
vertical_filter	libavcodec/vp3.c	/^static void vertical_filter(unsigned char *first_pixel, int stride,$/;"	f	file:
vheight	libavformat/nsvdec.c	/^    uint16_t vwidth, vheight;$/;"	m	file:
vi	libavcodec/oggvorbis.c	/^    vorbis_info vi ;$/;"	m	struct:OggVorbisContext	file:
videoStream	vhook/watermark.c	/^    int             videoStream;$/;"	m	file:
video_audio_display	ffplay.c	/^static void video_audio_display(VideoState *s)$/;"	f	file:
video_b_qfactor	ffmpeg.c	/^static float video_b_qfactor = 1.25;$/;"	v	file:
video_b_qoffset	ffmpeg.c	/^static float video_b_qoffset = 1.25;$/;"	v	file:
video_bit_rate	ffmpeg.c	/^static int video_bit_rate = 200*1000;$/;"	v	file:
video_bit_rate_tolerance	ffmpeg.c	/^static int video_bit_rate_tolerance = 4000*1000;$/;"	v	file:
video_bound	libavformat/mpeg.c	/^    int video_bound;$/;"	m	file:
video_buf	libavformat/grab.c	/^    uint8_t *video_buf;$/;"	m	file:
video_cap	libavformat/grab.c	/^    struct video_capability video_cap;$/;"	m	file:
video_celim	ffmpeg.c	/^static int video_celim = 0;$/;"	v	file:
video_channel	ffmpeg.c	/^static int  video_channel = 0;$/;"	v	file:
video_channel	libavformat/psxstr.c	/^    int video_channel;$/;"	m	struct:StrDemuxContext	file:
video_chunk	libavformat/psxstr.c	/^    unsigned char *video_chunk;$/;"	m	struct:StrDemuxContext	file:
video_chunk_offset	libavformat/ipmovie.c	/^    offset_t video_chunk_offset;$/;"	m	struct:IPMVEContext	file:
video_chunk_size	libavformat/ipmovie.c	/^    int video_chunk_size;$/;"	m	struct:IPMVEContext	file:
video_clock	ffplay.c	/^    double video_clock;$/;"	m	struct:VideoState	file:
video_codec	libavformat/avformat.h	/^    enum CodecID video_codec; \/* default video codec *\/$/;"	m	struct:AVOutputFormat
video_codec_id	ffmpeg.c	/^static int video_codec_id = CODEC_ID_NONE;$/;"	v	file:
video_codec_id	libavformat/avformat.h	/^    enum CodecID video_codec_id;$/;"	m	struct:AVFormatParameters
video_codec_tag	ffmpeg.c	/^static int video_codec_tag = 0;$/;"	v	file:
video_conceal_none	libavformat/asf.h	/^static const GUID video_conceal_none = {$/;"	v
video_crop	ffmpeg.c	/^    int video_crop;          \/* video_resample and video_crop are mutually exclusive *\/$/;"	m	struct:AVOutputStream	file:
video_current_pts	ffplay.c	/^    double video_current_pts; \/* current displayed pts (different from$/;"	m	struct:VideoState	file:
video_current_pts_time	ffplay.c	/^    int64_t video_current_pts_time; \/* time at which we updated$/;"	m	struct:VideoState	file:
video_decode_example	libavcodec/apiexample.c	/^void video_decode_example(const char *outfilename, const char *filename)$/;"	f
video_decoder_mutex	ffplay.c	/^    SDL_mutex *video_decoder_mutex;$/;"	m	struct:VideoState	file:
video_device	ffmpeg.c	/^static char *video_device = NULL;$/;"	v	file:
video_disable	ffmpeg.c	/^static int video_disable = 0;$/;"	v	file:
video_disable	ffplay.c	/^static int video_disable;$/;"	v	file:
video_discard	ffmpeg.c	/^static int video_discard = 0;$/;"	v	file:
video_display	ffplay.c	/^static void video_display(VideoState *is)$/;"	f	file:
video_encode_example	libavcodec/apiexample.c	/^void video_encode_example(const char *filename)$/;"	f
video_frame_number	libavformat/swf.c	/^    int video_frame_number;$/;"	m	file:
video_grab_device_format	libavformat/grab.c	/^static AVInputFormat video_grab_device_format = {$/;"	v	file:
video_grab_format	ffmpeg.c	/^static char *video_grab_format = "video4linux";$/;"	v	file:
video_grab_init	libavformat/grab.c	/^int video_grab_init(void)$/;"	f
video_height	libavformat/ipmovie.c	/^    unsigned int video_height;$/;"	m	struct:IPMVEContext	file:
video_i_qfactor	ffmpeg.c	/^static float video_i_qfactor = -0.8;$/;"	v	file:
video_i_qoffset	ffmpeg.c	/^static float video_i_qoffset = 0.0;$/;"	v	file:
video_image_display	ffplay.c	/^static void video_image_display(VideoState *is)$/;"	f	file:
video_inter_quant_bias	ffmpeg.c	/^static int video_inter_quant_bias= FF_DEFAULT_QUANT_BIAS;$/;"	v	file:
video_intra_quant_bias	ffmpeg.c	/^static int video_intra_quant_bias= FF_DEFAULT_QUANT_BIAS;$/;"	v	file:
video_last_P_pts	ffplay.c	/^    double video_last_P_pts; \/* pts of the last P picture (needed if B$/;"	m	struct:VideoState	file:
video_lelim	ffmpeg.c	/^static int video_lelim = 0;$/;"	v	file:
video_level	ffmpeg.c	/^static int video_level = FF_LEVEL_UNKNOWN;$/;"	v	file:
video_lmax	ffmpeg.c	/^static int video_lmax = 31*FF_QP2LAMBDA;$/;"	v	file:
video_lmin	ffmpeg.c	/^static int video_lmin = 2*FF_QP2LAMBDA;$/;"	v	file:
video_mb_lmax	ffmpeg.c	/^static int video_mb_lmax = 31*FF_QP2LAMBDA;$/;"	v	file:
video_mb_lmin	ffmpeg.c	/^static int video_mb_lmin = 2*FF_QP2LAMBDA;$/;"	v	file:
video_outbuf	output_example.c	/^uint8_t *video_outbuf;$/;"	v
video_outbuf_size	output_example.c	/^int frame_count, video_outbuf_size;$/;"	v
video_pad	ffmpeg.c	/^    int video_pad;           \/* video_resample and video_pad are mutually exclusive *\/$/;"	m	struct:AVOutputStream	file:
video_place	libavcodec/dvdata.h	/^    const uint16_t  *video_place;         \/* positions of all DV macro blocks *\/$/;"	m	struct:DVprofile
video_profile	ffmpeg.c	/^static int video_profile = FF_PROFILE_UNKNOWN;$/;"	v	file:
video_pts	libavformat/4xm.c	/^    int64_t video_pts;$/;"	m	struct:FourxmDemuxContext	file:
video_pts	libavformat/electronicarts.c	/^    int64_t video_pts;$/;"	m	struct:EaDemuxContext	file:
video_pts	libavformat/idroq.c	/^    int64_t video_pts;$/;"	m	struct:RoqDemuxContext	file:
video_pts	libavformat/ipmovie.c	/^    int64_t video_pts;$/;"	m	struct:IPMVEContext	file:
video_pts	libavformat/westwood.c	/^    int64_t video_pts;$/;"	m	struct:WsVqaDemuxContext	file:
video_pts_inc	libavformat/electronicarts.c	/^    int video_pts_inc;$/;"	m	struct:EaDemuxContext	file:
video_qblur	ffmpeg.c	/^static float video_qblur = 0.5;$/;"	v	file:
video_qcomp	ffmpeg.c	/^static float video_qcomp = 0.5;$/;"	v	file:
video_qdiff	ffmpeg.c	/^static int video_qdiff = 3;$/;"	v	file:
video_qmax	ffmpeg.c	/^static int video_qmax = 31;$/;"	v	file:
video_qmin	ffmpeg.c	/^static int video_qmin = 2;$/;"	v	file:
video_qscale	ffmpeg.c	/^static float video_qscale = 0;$/;"	v	file:
video_qsquish	ffmpeg.c	/^static float video_qsquish = 0.0;$/;"	v	file:
video_rc_buffer_aggressivity	ffmpeg.c	/^static float video_rc_buffer_aggressivity=1.0;$/;"	v	file:
video_rc_buffer_size	ffmpeg.c	/^static int video_rc_buffer_size=0;$/;"	v	file:
video_rc_eq	ffmpeg.c	/^static char *video_rc_eq="tex^qComp";$/;"	v	file:
video_rc_initial_cplx	ffmpeg.c	/^static float video_rc_initial_cplx=0;$/;"	v	file:
video_rc_max_rate	ffmpeg.c	/^static int video_rc_max_rate=0;$/;"	v	file:
video_rc_min_rate	ffmpeg.c	/^static int video_rc_min_rate=0;$/;"	v	file:
video_rc_override_string	ffmpeg.c	/^static char *video_rc_override_string=NULL;$/;"	v	file:
video_read_header	libavformat/raw.c	/^static int video_read_header(AVFormatContext *s,$/;"	f	file:
video_refresh_timer	ffplay.c	/^static void video_refresh_timer(void *opaque)$/;"	f	file:
video_resample	ffmpeg.c	/^    int video_resample;      \/* video_resample and video_crop are mutually exclusive *\/$/;"	m	struct:AVOutputStream	file:
video_samples	libavformat/swf.c	/^    int video_samples;$/;"	m	file:
video_size	ffmpeg.c	/^static int64_t video_size = 0;$/;"	v	file:
video_st	ffplay.c	/^    AVStream *video_st;$/;"	m	struct:VideoState	file:
video_standard	ffmpeg.c	/^static char *video_standard = "ntsc";$/;"	v	file:
video_stream	ffplay.c	/^    int video_stream;$/;"	m	struct:VideoState	file:
video_stream	libavformat/asf.h	/^static const GUID video_stream = {$/;"	v
video_stream	libavformat/rm.c	/^    StreamInfo *audio_stream, *video_stream;$/;"	m	file:
video_stream_copy	ffmpeg.c	/^static int video_stream_copy = 0;$/;"	v	file:
video_stream_index	libavformat/4xm.c	/^    int video_stream_index;$/;"	m	struct:FourxmDemuxContext	file:
video_stream_index	libavformat/electronicarts.c	/^    int video_stream_index;$/;"	m	struct:EaDemuxContext	file:
video_stream_index	libavformat/flic.c	/^    int video_stream_index;$/;"	m	struct:FlicDemuxContext	file:
video_stream_index	libavformat/idcin.c	/^    int video_stream_index;$/;"	m	struct:IdcinDemuxContext	file:
video_stream_index	libavformat/idroq.c	/^    int video_stream_index;$/;"	m	struct:RoqDemuxContext	file:
video_stream_index	libavformat/ipmovie.c	/^    int video_stream_index;$/;"	m	struct:IPMVEContext	file:
video_stream_index	libavformat/psxstr.c	/^    int video_stream_index;$/;"	m	struct:StrChannel	file:
video_stream_index	libavformat/segafilm.c	/^    int video_stream_index;$/;"	m	struct:FilmDemuxContext	file:
video_stream_index	libavformat/sierravmd.c	/^    int video_stream_index;$/;"	m	struct:VmdDemuxContext	file:
video_stream_index	libavformat/wc3movie.c	/^    int video_stream_index;$/;"	m	struct:Wc3DemuxContext	file:
video_stream_index	libavformat/westwood.c	/^    int video_stream_index;$/;"	m	struct:WsVqaDemuxContext	file:
video_sync_method	ffmpeg.c	/^static int video_sync_method= 1;$/;"	v	file:
video_thread	ffplay.c	/^static int video_thread(void *arg)$/;"	f	file:
video_tid	ffplay.c	/^    SDL_Thread *video_tid;$/;"	m	struct:VideoState	file:
video_type	libavformat/segafilm.c	/^    unsigned int video_type;$/;"	m	struct:FilmDemuxContext	file:
video_type	libavformat/swf.c	/^    int video_type;$/;"	m	file:
video_width	libavformat/ipmovie.c	/^    unsigned int video_width;$/;"	m	struct:IPMVEContext	file:
videoq	ffplay.c	/^    PacketQueue videoq;$/;"	m	struct:VideoState	file:
vis_alignaddr	libavcodec/sparc/vis.h	/^static inline void *vis_alignaddr(void *_ptr)$/;"	f
vis_alignaddr_g0	libavcodec/sparc/vis.h	/^static inline void vis_alignaddr_g0(void *_ptr)$/;"	f
vis_alignaddrl	libavcodec/sparc/vis.h	/^static inline void *vis_alignaddrl(void *_ptr)$/;"	f
vis_alignaddrl_g0	libavcodec/sparc/vis.h	/^static inline void vis_alignaddrl_g0(void *_ptr)$/;"	f
vis_and	libavcodec/sparc/vis.h	309;"	d
vis_andnot1	libavcodec/sparc/vis.h	321;"	d
vis_andnot1s	libavcodec/sparc/vis.h	322;"	d
vis_andnot2	libavcodec/sparc/vis.h	323;"	d
vis_andnot2s	libavcodec/sparc/vis.h	324;"	d
vis_ands	libavcodec/sparc/vis.h	310;"	d
vis_d	libavcodec/sparc/vis.h	124;"	d
vis_d12d	libavcodec/sparc/vis.h	95;"	d
vis_d22d	libavcodec/sparc/vis.h	101;"	d
vis_d2s	libavcodec/sparc/vis.h	83;"	d
vis_dd2d	libavcodec/sparc/vis.h	62;"	d
vis_dreg	libavcodec/sparc/vis.h	47;"	d
vis_expand	libavcodec/sparc/vis.h	210;"	d
vis_faligndata	libavcodec/sparc/vis.h	289;"	d
vis_fone	libavcodec/sparc/vis.h	295;"	d
vis_fones	libavcodec/sparc/vis.h	296;"	d
vis_fzero	libavcodec/sparc/vis.h	293;"	d
vis_fzeros	libavcodec/sparc/vis.h	294;"	d
vis_ld32	libavcodec/sparc/vis.h	155;"	d
vis_ld32_2	libavcodec/sparc/vis.h	156;"	d
vis_ld64	libavcodec/sparc/vis.h	159;"	d
vis_ld64_2	libavcodec/sparc/vis.h	160;"	d
vis_ldblk	libavcodec/sparc/vis.h	164;"	d
vis_level	libavcodec/sparc/dsputil_vis.c	/^static int vis_level ()$/;"	f	file:
vis_m2r	libavcodec/sparc/vis.h	135;"	d
vis_m2r_2	libavcodec/sparc/vis.h	138;"	d
vis_membar_storestore	libavcodec/sparc/vis.h	184;"	d
vis_membar_sync	libavcodec/sparc/vis.h	187;"	d
vis_mul8sux16	libavcodec/sparc/vis.h	218;"	d
vis_mul8ulx16	libavcodec/sparc/vis.h	219;"	d
vis_mul8x16	libavcodec/sparc/vis.h	215;"	d
vis_mul8x16al	libavcodec/sparc/vis.h	217;"	d
vis_mul8x16au	libavcodec/sparc/vis.h	216;"	d
vis_muld8sux16	libavcodec/sparc/vis.h	220;"	d
vis_muld8ulx16	libavcodec/sparc/vis.h	221;"	d
vis_nand	libavcodec/sparc/vis.h	311;"	d
vis_nands	libavcodec/sparc/vis.h	312;"	d
vis_nor	libavcodec/sparc/vis.h	307;"	d
vis_nors	libavcodec/sparc/vis.h	308;"	d
vis_not1	libavcodec/sparc/vis.h	301;"	d
vis_not1s	libavcodec/sparc/vis.h	302;"	d
vis_not2	libavcodec/sparc/vis.h	303;"	d
vis_not2s	libavcodec/sparc/vis.h	304;"	d
vis_opc_base	libavcodec/sparc/vis.h	44;"	d
vis_opf	libavcodec/sparc/vis.h	45;"	d
vis_or	libavcodec/sparc/vis.h	305;"	d
vis_ornot1	libavcodec/sparc/vis.h	317;"	d
vis_ornot1s	libavcodec/sparc/vis.h	318;"	d
vis_ornot2	libavcodec/sparc/vis.h	319;"	d
vis_ornot2s	libavcodec/sparc/vis.h	320;"	d
vis_ors	libavcodec/sparc/vis.h	306;"	d
vis_pack16	libavcodec/sparc/vis.h	207;"	d
vis_pack32	libavcodec/sparc/vis.h	208;"	d
vis_packfix	libavcodec/sparc/vis.h	209;"	d
vis_padd16	libavcodec/sparc/vis.h	196;"	d
vis_padd16s	libavcodec/sparc/vis.h	197;"	d
vis_padd32	libavcodec/sparc/vis.h	198;"	d
vis_padd32s	libavcodec/sparc/vis.h	199;"	d
vis_pdist	libavcodec/sparc/vis.h	328;"	d
vis_pmerge	libavcodec/sparc/vis.h	211;"	d
vis_psub16	libavcodec/sparc/vis.h	200;"	d
vis_psub16s	libavcodec/sparc/vis.h	201;"	d
vis_psub32	libavcodec/sparc/vis.h	202;"	d
vis_psub32s	libavcodec/sparc/vis.h	203;"	d
vis_r2m	libavcodec/sparc/vis.h	129;"	d
vis_r2m_2	libavcodec/sparc/vis.h	132;"	d
vis_rd_d	libavcodec/sparc/vis.h	53;"	d
vis_rd_s	libavcodec/sparc/vis.h	52;"	d
vis_rs1_d	libavcodec/sparc/vis.h	49;"	d
vis_rs1_s	libavcodec/sparc/vis.h	48;"	d
vis_rs2_d	libavcodec/sparc/vis.h	51;"	d
vis_rs2_s	libavcodec/sparc/vis.h	50;"	d
vis_s	libavcodec/sparc/vis.h	119;"	d
vis_s12s	libavcodec/sparc/vis.h	107;"	d
vis_s22s	libavcodec/sparc/vis.h	113;"	d
vis_s2d	libavcodec/sparc/vis.h	89;"	d
vis_sd2d	libavcodec/sparc/vis.h	76;"	d
vis_set_gsr	libavcodec/sparc/vis.h	/^static inline void vis_set_gsr(unsigned int _val)$/;"	f
vis_src1	libavcodec/sparc/vis.h	297;"	d
vis_src1s	libavcodec/sparc/vis.h	298;"	d
vis_src2	libavcodec/sparc/vis.h	299;"	d
vis_src2s	libavcodec/sparc/vis.h	300;"	d
vis_sreg	libavcodec/sparc/vis.h	46;"	d
vis_ss2d	libavcodec/sparc/vis.h	69;"	d
vis_ss2s	libavcodec/sparc/vis.h	55;"	d
vis_st32	libavcodec/sparc/vis.h	157;"	d
vis_st32_2	libavcodec/sparc/vis.h	158;"	d
vis_st64	libavcodec/sparc/vis.h	161;"	d
vis_st64_2	libavcodec/sparc/vis.h	162;"	d
vis_stblk	libavcodec/sparc/vis.h	174;"	d
vis_xnor	libavcodec/sparc/vis.h	315;"	d
vis_xnors	libavcodec/sparc/vis.h	316;"	d
vis_xor	libavcodec/sparc/vis.h	313;"	d
vis_xors	libavcodec/sparc/vis.h	314;"	d
visualization_buffer	libavcodec/mpegvideo.h	/^    uint8_t *visualization_buffer[3]; \/\/< temporary buffer vor MV visualization$/;"	m	struct:MpegEncContext
vlc	libavcodec/dv.c	/^   uint32_t vlc;$/;"	m	struct:dv_vlc_pair	file:
vlc	libavcodec/huffyuv.c	/^    VLC vlc[3];$/;"	m	struct:HYuvContext	file:
vlc	libavcodec/mpegvideo.h	/^    VLC vlc;                       \/\/\/< decoding only deprected FIXME remove$/;"	m	struct:RLTable
vlc	libavcodec/msmpeg4data.h	/^    VLC vlc;                \/* decoding: vlc *\/$/;"	m	struct:MVTable
vlc	libavcodec/vorbis.h	/^    VLC vlc;$/;"	m
vlc_dc_chroma_bits	libavcodec/mpeg12data.h	/^const unsigned char vlc_dc_chroma_bits[12] = {$/;"	v
vlc_dc_chroma_code	libavcodec/mpeg12data.h	/^const uint16_t vlc_dc_chroma_code[12] = {$/;"	v
vlc_dc_lum_bits	libavcodec/mpeg12data.h	/^static const unsigned char vlc_dc_lum_bits[12] = {$/;"	v
vlc_dc_lum_code	libavcodec/mpeg12data.h	/^static const uint16_t vlc_dc_lum_code[12] = {$/;"	v
vlc_state	libavcodec/ffv1.c	/^    VlcState *vlc_state;$/;"	m	struct:PlaneContext	file:
vlcs	libavcodec/mjpeg.c	/^    VLC vlcs[2][4];$/;"	m	struct:MJpegDecodeContext	file:
vmd_calculate_audio_duration	libavformat/sierravmd.c	/^static int vmd_calculate_audio_duration(unsigned char *audio_chunk,$/;"	f	file:
vmd_decode	libavcodec/vmdav.c	/^static void vmd_decode(VmdVideoContext *s)$/;"	f	file:
vmd_frame_t	libavformat/sierravmd.c	/^} vmd_frame_t;$/;"	t	file:
vmd_header	libavformat/sierravmd.c	/^    unsigned char vmd_header[VMD_HEADER_SIZE];$/;"	m	struct:VmdDemuxContext	file:
vmd_iformat	libavformat/sierravmd.c	/^static AVInputFormat vmd_iformat = {$/;"	v	file:
vmd_init	libavformat/sierravmd.c	/^int vmd_init(void)$/;"	f
vmd_probe	libavformat/sierravmd.c	/^static int vmd_probe(AVProbeData *p)$/;"	f	file:
vmd_read_close	libavformat/sierravmd.c	/^static int vmd_read_close(AVFormatContext *s)$/;"	f	file:
vmd_read_header	libavformat/sierravmd.c	/^static int vmd_read_header(AVFormatContext *s,$/;"	f	file:
vmd_read_packet	libavformat/sierravmd.c	/^static int vmd_read_packet(AVFormatContext *s,$/;"	f	file:
vmdaudio_decode_audio	libavcodec/vmdav.c	/^static void vmdaudio_decode_audio(VmdAudioContext *s, unsigned char *data,$/;"	f	file:
vmdaudio_decode_frame	libavcodec/vmdav.c	/^static int vmdaudio_decode_frame(AVCodecContext *avctx,$/;"	f	file:
vmdaudio_decode_init	libavcodec/vmdav.c	/^static int vmdaudio_decode_init(AVCodecContext *avctx)$/;"	f	file:
vmdaudio_decoder	libavcodec/vmdav.c	/^AVCodec vmdaudio_decoder = {$/;"	v
vmdaudio_loadsound	libavcodec/vmdav.c	/^static int vmdaudio_loadsound(VmdAudioContext *s, unsigned char *data,$/;"	f	file:
vmdvideo_decode_end	libavcodec/vmdav.c	/^static int vmdvideo_decode_end(AVCodecContext *avctx)$/;"	f	file:
vmdvideo_decode_frame	libavcodec/vmdav.c	/^static int vmdvideo_decode_frame(AVCodecContext *avctx,$/;"	f	file:
vmdvideo_decode_init	libavcodec/vmdav.c	/^static int vmdvideo_decode_init(AVCodecContext *avctx)$/;"	f	file:
vmdvideo_decoder	libavcodec/vmdav.c	/^AVCodec vmdvideo_decoder = {$/;"	v
vo_type	libavcodec/mpegvideo.h	/^    int vo_type;$/;"	m	struct:MpegEncContext
vobu_start_pts	libavformat/mpeg.c	/^    int64_t vobu_start_pts;$/;"	m	file:
vol_control_parameters	libavcodec/mpegvideo.h	/^    int vol_control_parameters;      \/\/\/< does the stream contain the low_delay flag, used to workaround buggy encoders $/;"	m	struct:MpegEncContext
vol_flags	libavcodec/xvidff.c	/^    int vol_flags;                 \/** VOL flags for XviD Encoder *\/$/;"	m	struct:xvid_context	file:
vol_sprite_usage	libavcodec/mpegvideo.h	/^    int vol_sprite_usage;$/;"	m	struct:MpegEncContext
vop_dquant_decoding	libavcodec/vc9.c	/^static int vop_dquant_decoding(VC9Context *v)$/;"	f	file:
vop_flags	libavcodec/xvidff.c	/^    int vop_flags;                 \/** VOP flags for XviD Encoder *\/$/;"	m	struct:xvid_context	file:
vorbis_codebook	libavcodec/vorbis.h	/^} vorbis_codebook;$/;"	t
vorbis_codec	libavformat/oggparsevorbis.c	/^ogg_codec_t vorbis_codec = {$/;"	v
vorbis_comment	libavformat/oggparsevorbis.c	/^vorbis_comment (AVFormatContext * as, char *buf, int size)$/;"	f
vorbis_context	libavcodec/vorbis.h	/^} vorbis_context;$/;"	t
vorbis_decode_close	libavcodec/vorbis.c	/^static int vorbis_decode_close(AVCodecContext *avccontext) {$/;"	f	file:
vorbis_decode_frame	libavcodec/vorbis.c	/^static int vorbis_decode_frame(AVCodecContext *avccontext,$/;"	f	file:
vorbis_decode_init	libavcodec/vorbis.c	/^static int vorbis_decode_init(AVCodecContext *avccontext) {$/;"	f	file:
vorbis_decoder	libavcodec/vorbis.c	/^AVCodec vorbis_decoder = {$/;"	v
vorbis_floor	libavcodec/vorbis.h	/^} vorbis_floor;$/;"	t
vorbis_floor1_decode	libavcodec/vorbis.c	/^static uint_fast8_t vorbis_floor1_decode(vorbis_context *vc, vorbis_floor *vf, float *vec) {$/;"	f	file:
vorbis_free	libavcodec/vorbis.c	/^static void vorbis_free(vorbis_context *vc) {$/;"	f	file:
vorbis_header	libavformat/oggparsevorbis.c	/^vorbis_header (AVFormatContext * s, int idx)$/;"	f	file:
vorbis_len2vlc	libavcodec/vorbis.c	/^static int vorbis_len2vlc(vorbis_context *vc, uint_fast8_t *bits, uint_fast32_t *codes, uint_fast32_t num) {$/;"	f	file:
vorbis_mapping	libavcodec/vorbis.h	/^} vorbis_mapping;$/;"	t
vorbis_mode	libavcodec/vorbis.h	/^} vorbis_mode;$/;"	t
vorbis_parse_audio_packet	libavcodec/vorbis.c	/^static int vorbis_parse_audio_packet(vorbis_context *vc) {$/;"	f	file:
vorbis_parse_id_hdr	libavcodec/vorbis.c	/^static int vorbis_parse_id_hdr(vorbis_context *vc){$/;"	f	file:
vorbis_parse_setup_hdr	libavcodec/vorbis.c	/^static int vorbis_parse_setup_hdr(vorbis_context *vc) {$/;"	f	file:
vorbis_parse_setup_hdr_codebooks	libavcodec/vorbis.c	/^static int vorbis_parse_setup_hdr_codebooks(vorbis_context *vc) {$/;"	f	file:
vorbis_parse_setup_hdr_floors	libavcodec/vorbis.c	/^static int vorbis_parse_setup_hdr_floors(vorbis_context *vc) {$/;"	f	file:
vorbis_parse_setup_hdr_mappings	libavcodec/vorbis.c	/^static int vorbis_parse_setup_hdr_mappings(vorbis_context *vc) {$/;"	f	file:
vorbis_parse_setup_hdr_modes	libavcodec/vorbis.c	/^static int vorbis_parse_setup_hdr_modes(vorbis_context *vc) {$/;"	f	file:
vorbis_parse_setup_hdr_residues	libavcodec/vorbis.c	/^static int vorbis_parse_setup_hdr_residues(vorbis_context *vc){$/;"	f	file:
vorbis_parse_setup_hdr_tdtransforms	libavcodec/vorbis.c	/^static int vorbis_parse_setup_hdr_tdtransforms(vorbis_context *vc) {$/;"	f	file:
vorbis_residue	libavcodec/vorbis.h	/^} vorbis_residue;$/;"	t
vorbis_residue_decode	libavcodec/vorbis.c	/^static int vorbis_residue_decode(vorbis_context *vc, vorbis_residue *vr, uint_fast8_t ch, uint_fast8_t *do_not_decode, float *vec, uint_fast16_t vlen) {$/;"	f	file:
vorbisfloat2float	libavcodec/vorbis.c	/^static float vorbisfloat2float(uint_fast32_t val) {$/;"	f	file:
vosData	libavformat/movenc.c	/^    uint8_t     *vosData;$/;"	m	struct:MOVIndex	file:
vosLen	libavformat/movenc.c	/^    int         vosLen;$/;"	m	struct:MOVIndex	file:
vp31_ac_scale_factor	libavcodec/vp3data.h	/^static const uint32_t vp31_ac_scale_factor[64] =$/;"	v
vp31_dc_scale_factor	libavcodec/vp3data.h	/^static const int16_t vp31_dc_scale_factor[64] =$/;"	v
vp31_filter_limit_values	libavcodec/vp3data.h	/^static const uint32_t vp31_filter_limit_values[64] = $/;"	v
vp31_inter_dequant	libavcodec/vp3data.h	/^static const int16_t vp31_inter_dequant[64] =$/;"	v
vp31_intra_c_dequant	libavcodec/vp3data.h	/^static const int16_t vp31_intra_c_dequant[64] =$/;"	v
vp31_intra_y_dequant	libavcodec/vp3data.h	/^static const int16_t vp31_intra_y_dequant[64] =$/;"	v
vp3_calculate_pixel_addresses	libavcodec/vp3.c	/^static void vp3_calculate_pixel_addresses(Vp3DecodeContext *s) $/;"	f	file:
vp3_decode_end	libavcodec/vp3.c	/^static int vp3_decode_end(AVCodecContext *avctx)$/;"	f	file:
vp3_decode_frame	libavcodec/vp3.c	/^static int vp3_decode_frame(AVCodecContext *avctx, $/;"	f	file:
vp3_decode_init	libavcodec/vp3.c	/^static int vp3_decode_init(AVCodecContext *avctx)$/;"	f	file:
vp3_decoder	libavcodec/vp3.c	/^AVCodec vp3_decoder = {$/;"	v
vqa_debug	libavcodec/vqavideo.c	/^static inline void vqa_debug(const char *format, ...) { }$/;"	f	file:
vqa_debug	libavcodec/vqavideo.c	96;"	d	file:
vqa_decode_chunk	libavcodec/vqavideo.c	/^static void vqa_decode_chunk(VqaContext *s)$/;"	f	file:
vqa_decode_end	libavcodec/vqavideo.c	/^static int vqa_decode_end(AVCodecContext *avctx)$/;"	f	file:
vqa_decode_frame	libavcodec/vqavideo.c	/^static int vqa_decode_frame(AVCodecContext *avctx,$/;"	f	file:
vqa_decode_init	libavcodec/vqavideo.c	/^static int vqa_decode_init(AVCodecContext *avctx)$/;"	f	file:
vqa_decoder	libavcodec/vqavideo.c	/^AVCodec vqa_decoder = {$/;"	v
vqa_version	libavcodec/vqavideo.c	/^    int vqa_version;  \/* this should be either 1, 2 or 3 *\/$/;"	m	struct:VqaContext	file:
vs16	libavcodec/ppc/fdct_altivec.c	27;"	d	file:
vs32	libavcodec/ppc/fdct_altivec.c	28;"	d	file:
vs_total_ac_bits	libavcodec/dv.c	/^static const int vs_total_ac_bits = (100 * 4 + 68*2) * 5;$/;"	v	file:
vsad	libavcodec/dsputil.h	/^    me_cmp_func vsad[5];$/;"	m	struct:DSPContext
vsad16_c	libavcodec/dsputil.c	/^static int vsad16_c(\/*MpegEncContext*\/ void *c, uint8_t *s1, uint8_t *s2, int stride, int h){$/;"	f	file:
vsad16_mmx	libavcodec/i386/dsputil_mmx.c	/^static int vsad16_mmx(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h) {$/;"	f	file:
vsad16_mmx2	libavcodec/i386/dsputil_mmx.c	/^static int vsad16_mmx2(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h) {$/;"	f	file:
vsad_intra16_c	libavcodec/dsputil.c	/^static int vsad_intra16_c(\/*MpegEncContext*\/ void *c, uint8_t *s, uint8_t *dummy, int stride, int h){$/;"	f	file:
vsad_intra16_mmx	libavcodec/i386/dsputil_mmx.c	/^static int vsad_intra16_mmx(void *v, uint8_t * pix, uint8_t * dummy, int line_size, int h) {$/;"	f	file:
vsad_intra16_mmx2	libavcodec/i386/dsputil_mmx.c	/^static int vsad_intra16_mmx2(void *v, uint8_t * pix, uint8_t * dummy, int line_size, int h) {$/;"	f	file:
vsnprintf	libavcodec/common.h	174;"	d
vsse	libavcodec/dsputil.h	/^    me_cmp_func vsse[5];$/;"	m	struct:DSPContext
vsse16_c	libavcodec/dsputil.c	/^static int vsse16_c(\/*MpegEncContext*\/ void *c, uint8_t *s1, uint8_t *s2, int stride, int h){$/;"	f	file:
vsse_intra16_c	libavcodec/dsputil.c	/^static int vsse_intra16_c(\/*MpegEncContext*\/ void *c, uint8_t *s, uint8_t *dummy, int stride, int h){$/;"	f	file:
vst	libavformat/dv.c	/^    AVStream*        vst;$/;"	m	struct:DVDemuxContext	file:
vstransform	libavcodec/vc9.c	/^    int vstransform;      \/\/\/< variable-size [48]x[48] transform type + info$/;"	m	struct:VC9Context	file:
vtag	libavformat/nsvdec.c	/^    uint32_t vtag, atag;$/;"	m	file:
vtrk_SIZE	libavformat/4xm.c	47;"	d	file:
vtrk_TAG	libavformat/4xm.c	40;"	d	file:
vu16	libavcodec/ppc/fdct_altivec.c	30;"	d	file:
vu32	libavcodec/ppc/fdct_altivec.c	31;"	d	file:
vu8	libavcodec/ppc/fdct_altivec.c	29;"	d	file:
vui_parameters_present_flag	libavcodec/h264.c	/^    int vui_parameters_present_flag;$/;"	m	struct:SPS	file:
vwidth	libavformat/nsvdec.c	/^    uint16_t vwidth, vheight;$/;"	m	file:
vwin1024	libavcodec/vorbis.h	/^static const float vwin1024[512] = {$/;"	v
vwin128	libavcodec/vorbis.h	/^static const float vwin128[64] = {$/;"	v
vwin2048	libavcodec/vorbis.h	/^static const float vwin2048[1024] = {$/;"	v
vwin256	libavcodec/vorbis.h	/^static const float vwin256[128] = {$/;"	v
vwin4096	libavcodec/vorbis.h	/^static const float vwin4096[2048] = {$/;"	v
vwin512	libavcodec/vorbis.h	/^static const float vwin512[256] = {$/;"	v
vwin64	libavcodec/vorbis.h	/^static const float vwin64[32] = {$/;"	v
vwin8192	libavcodec/vorbis.h	/^static const float vwin8192[4096] = {$/;"	v
w	libavcodec/i386/mmx.h	/^	short			w[4];	\/* 4 Word (16-bit) values *\/$/;"	m
w	libavcodec/truemotion1.c	/^    int x, y, w, h;$/;"	m	struct:TrueMotion1Context	file:
w	tests/videogen.c	/^    int x, y, w, h;$/;"	m	struct:VObj	file:
w04	libavcodec/libpostproc/postprocess.c	/^static uint64_t __attribute__((aligned(8))) attribute_used w04=		0x0004000400040004LL;$/;"	v	file:
w05	libavcodec/libpostproc/postprocess.c	/^static uint64_t __attribute__((aligned(8))) attribute_used w05=		0x0005000500050005LL;$/;"	v	file:
w20	libavcodec/libpostproc/postprocess.c	/^static uint64_t __attribute__((aligned(8))) attribute_used w20=		0x0020002000200020LL;$/;"	v	file:
w53	libavcodec/dsputil.h	/^    me_cmp_func w53[5];$/;"	m	struct:DSPContext
w53_16_c	libavcodec/dsputil.c	/^static int w53_16_c(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h){$/;"	f	file:
w53_8_c	libavcodec/dsputil.c	/^static int w53_8_c(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h){$/;"	f	file:
w97	libavcodec/dsputil.h	/^    me_cmp_func w97[5];$/;"	m	struct:DSPContext
w97_16_c	libavcodec/dsputil.c	/^static int w97_16_c(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h){$/;"	f	file:
w97_8_c	libavcodec/dsputil.c	/^static int w97_8_c(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h){$/;"	f	file:
w_c	libavcodec/dsputil.c	/^static inline int w_c(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int w, int h, int type){$/;"	f	file:
wanted_bits	libavcodec/mpegvideo.h	/^    int64_t wanted_bits;$/;"	m	struct:MpegEncContext
wav_codec_get_id	libavformat/wav.c	/^int wav_codec_get_id(unsigned int tag, int bps)$/;"	f
wav_iformat	libavformat/wav.c	/^static AVInputFormat wav_iformat = {$/;"	v	file:
wav_oformat	libavformat/wav.c	/^static AVOutputFormat wav_oformat = {$/;"	v	file:
wav_probe	libavformat/wav.c	/^static int wav_probe(AVProbeData *p)$/;"	f	file:
wav_read_close	libavformat/wav.c	/^static int wav_read_close(AVFormatContext *s)$/;"	f	file:
wav_read_header	libavformat/wav.c	/^static int wav_read_header(AVFormatContext *s,$/;"	f	file:
wav_read_packet	libavformat/wav.c	/^static int wav_read_packet(AVFormatContext *s,$/;"	f	file:
wav_read_seek	libavformat/wav.c	/^static int wav_read_seek(AVFormatContext *s, $/;"	f	file:
wav_write_header	libavformat/wav.c	/^static int wav_write_header(AVFormatContext *s)$/;"	f	file:
wav_write_packet	libavformat/wav.c	/^static int wav_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
wav_write_trailer	libavformat/wav.c	/^static int wav_write_trailer(AVFormatContext *s)$/;"	f	file:
wavtable1	libavcodec/ra144.c	/^	signed short wavtable1[2304];$/;"	m	file:
wavtable1	libavcodec/ra144.h	/^static const signed short wavtable1[2304]={$/;"	v
wavtable2	libavcodec/ra144.c	/^	unsigned short wavtable2[2304];$/;"	m	file:
wavtable2	libavcodec/ra144.h	/^static const unsigned short wavtable2[2304]={$/;"	v
wc3_iformat	libavformat/wc3movie.c	/^static AVInputFormat wc3_iformat = {$/;"	v	file:
wc3_init	libavformat/wc3movie.c	/^int wc3_init(void)$/;"	f
wc3_pal_lookup	libavformat/wc3movie.c	/^static const unsigned char wc3_pal_lookup[] = {$/;"	v	file:
wc3_probe	libavformat/wc3movie.c	/^static int wc3_probe(AVProbeData *p)$/;"	f	file:
wc3_read_close	libavformat/wc3movie.c	/^static int wc3_read_close(AVFormatContext *s)$/;"	f	file:
wc3_read_header	libavformat/wc3movie.c	/^static int wc3_read_header(AVFormatContext *s,$/;"	f	file:
wc3_read_packet	libavformat/wc3movie.c	/^static int wc3_read_packet(AVFormatContext *s,$/;"	f	file:
weight_h264_pixels_tab	libavcodec/dsputil.h	/^    h264_weight_func weight_h264_pixels_tab[10];$/;"	m	struct:DSPContext
weighted_bipred_idc	libavcodec/h264.c	/^    int weighted_bipred_idc;$/;"	m	struct:PPS	file:
weighted_pred	libavcodec/h264.c	/^    int weighted_pred;          \/\/\/< weighted_pred_flag$/;"	m	struct:PPS	file:
westwood_init	libavformat/westwood.c	/^int westwood_init(void)$/;"	f
wh64	libavcodec/alpha/asm.h	100;"	d
wh64	libavcodec/alpha/asm.h	159;"	d
width	ffplay.c	/^    int width, height, xleft, ytop;$/;"	m	struct:VideoState	file:
width	ffplay.c	/^    int width, height; \/* source height & width *\/$/;"	m	struct:VideoPicture	file:
width	libavcodec/avcodec.h	/^    int width, height;$/;"	m	struct:AVCodecContext
width	libavcodec/avcodec.h	/^    int width;$/;"	m	struct:AVPanScan
width	libavcodec/cinepak.c	/^    int width, height;$/;"	m	struct:CinepakContext	file:
width	libavcodec/cyuv.c	/^    int width, height;$/;"	m	struct:CyuvDecodeContext	file:
width	libavcodec/dvdata.h	/^    int              width;               \/* picture width in pixels *\/$/;"	m	struct:DVprofile
width	libavcodec/ffv1.c	/^    int width, height;$/;"	m	struct:FFV1Context	file:
width	libavcodec/huffyuv.c	/^    int width, height;$/;"	m	struct:HYuvContext	file:
width	libavcodec/indeo3.c	/^    int width, height;$/;"	m	struct:Indeo3DecodeContext	file:
width	libavcodec/indeo3.c	/^  long width;$/;"	m	file:
width	libavcodec/mjpeg.c	/^    int width, height;$/;"	m	struct:MJpegDecodeContext	file:
width	libavcodec/mpegvideo.h	/^    int width, height;\/\/\/< picture size. must be a multiple of 16 $/;"	m	struct:MpegEncContext
width	libavcodec/parser.c	/^    int width, height;$/;"	m	struct:ParseContext1	file:
width	libavcodec/png.c	/^    int width, height;$/;"	m	struct:PNGContext	file:
width	libavcodec/snow.c	/^    int width;$/;"	m	struct:Plane	file:
width	libavcodec/snow.c	/^    int width;$/;"	m	struct:SubBand	file:
width	libavcodec/svq1.c	/^static struct { int width; int height; } svq1_frame_size_table[8] = {$/;"	m	file:
width	libavcodec/truemotion1.c	/^    uint16_t width;$/;"	m	struct:frame_header	file:
width	libavcodec/ulti.c	/^    int width, height, blocks;$/;"	m	struct:UltimotionDecodeContext	file:
width	libavcodec/vc9.c	/^    int width;          \/\/\/< Width of the buffer$/;"	m	struct:BitPlane	file:
width	libavcodec/vp3.c	/^    int width, height;$/;"	m	struct:Vp3DecodeContext	file:
width	libavcodec/vqavideo.c	/^    int width;   \/* width of a frame *\/$/;"	m	struct:VqaContext	file:
width	libavformat/4xm.c	/^    int width;$/;"	m	struct:FourxmDemuxContext	file:
width	libavformat/avformat.h	/^    int width; \/* requested width *\/$/;"	m	struct:AVImageInfo
width	libavformat/avformat.h	/^    int width;$/;"	m	struct:AVFormatParameters
width	libavformat/dc1394.c	/^    int width;$/;"	m	struct:dc1394_frame_format	file:
width	libavformat/electronicarts.c	/^    int width;$/;"	m	struct:EaDemuxContext	file:
width	libavformat/grab.c	/^    int width, height;$/;"	m	file:
width	libavformat/idroq.c	/^    int width;$/;"	m	struct:RoqDemuxContext	file:
width	libavformat/img.c	/^    int width;$/;"	m	file:
width	libavformat/png.c	/^    int width, height;$/;"	m	struct:PNGDecodeState	file:
width	libavformat/psxstr.c	/^    int width;$/;"	m	struct:StrChannel	file:
width	libavformat/utils.c	/^    int width, height;$/;"	m	file:
width	libavformat/wc3movie.c	/^    int width;$/;"	m	struct:Wc3DemuxContext	file:
width	tests/rotozoom.c	/^int width, height, wrap;$/;"	v
width	tests/videogen.c	/^int width, height, wrap;$/;"	v
width	vhook/imlib2.c	/^    int width;$/;"	m	struct:_CachedImage	file:
window	libavcodec/mpegaudiodec.c	/^static MPA_INT window[512] __attribute__((aligned(16)));$/;"	v	file:
window	libavcodec/sonic.c	/^    int *window;$/;"	m	struct:SonicContext	file:
window_size	libavcodec/sonic.c	/^    int window_size;$/;"	m	struct:SonicContext	file:
windows	libavcodec/wmadec.c	/^    float *windows[BLOCK_NB_SIZES];$/;"	m	struct:WMADecodeContext	file:
windowtype	libavcodec/vorbis.h	/^    uint_fast16_t windowtype;$/;"	m
wm0101	libavcodec/liba52/resample_mmx.c	/^static uint64_t __attribute__((aligned(8))) attribute_used wm0101= 0x0000FFFF0000FFFFLL;$/;"	v	file:
wm1010	libavcodec/i386/simple_idct_mmx.c	/^static const uint64_t attribute_used __attribute__((aligned(8))) wm1010= 0xFFFF0000FFFF0000ULL;$/;"	v	file:
wm1010	libavcodec/liba52/resample_mmx.c	/^static uint64_t __attribute__((aligned(8))) attribute_used wm1010= 0xFFFF0000FFFF0000LL;$/;"	v	file:
wm1100	libavcodec/liba52/resample_mmx.c	/^static uint64_t __attribute__((aligned(8))) attribute_used wm1100= 0xFFFFFFFF00000000LL;$/;"	v	file:
wma_critical_freqs	libavcodec/wmadata.h	/^static const uint16_t wma_critical_freqs[25] = {$/;"	v
wma_decode_block	libavcodec/wmadec.c	/^static int wma_decode_block(WMADecodeContext *s)$/;"	f	file:
wma_decode_end	libavcodec/wmadec.c	/^static int wma_decode_end(AVCodecContext *avctx)$/;"	f	file:
wma_decode_frame	libavcodec/wmadec.c	/^static int wma_decode_frame(WMADecodeContext *s, int16_t *samples)$/;"	f	file:
wma_decode_init	libavcodec/wmadec.c	/^static int wma_decode_init(AVCodecContext * avctx)$/;"	f	file:
wma_decode_superframe	libavcodec/wmadec.c	/^static int wma_decode_superframe(AVCodecContext *avctx, $/;"	f	file:
wma_lsp_to_curve	libavcodec/wmadec.c	/^static void wma_lsp_to_curve(WMADecodeContext *s, $/;"	f	file:
wma_lsp_to_curve_init	libavcodec/wmadec.c	/^static void wma_lsp_to_curve_init(WMADecodeContext *s, int frame_len)$/;"	f	file:
wmav1_decoder	libavcodec/wmadec.c	/^AVCodec wmav1_decoder =$/;"	v
wmav2_decoder	libavcodec/wmadec.c	/^AVCodec wmav2_decoder =$/;"	v
wmp_client_id	ffserver.c	/^    int wmp_client_id;$/;"	m	struct:HTTPContext	file:
wmv1_c_dc_scale_table	libavcodec/msmpeg4data.h	/^static uint8_t wmv1_c_dc_scale_table[32]={$/;"	v
wmv1_decoder	libavcodec/h263dec.c	/^AVCodec wmv1_decoder = {$/;"	v
wmv1_encoder	libavcodec/mpegvideo.c	/^AVCodec wmv1_encoder = {$/;"	v
wmv1_scantable	libavcodec/msmpeg4data.h	/^static const uint8_t *wmv1_scantable[WMV1_SCANTABLE_COUNT+1]={$/;"	v
wmv1_scantable00	libavcodec/msmpeg4data.h	/^static const uint8_t wmv1_scantable00[64]= {$/;"	v
wmv1_scantable01	libavcodec/msmpeg4data.h	/^static const uint8_t wmv1_scantable01[64]= {$/;"	v
wmv1_scantable02	libavcodec/msmpeg4data.h	/^static const uint8_t wmv1_scantable02[64]= {$/;"	v
wmv1_scantable03	libavcodec/msmpeg4data.h	/^static const uint8_t wmv1_scantable03[64]= {$/;"	v
wmv1_y_dc_scale_table	libavcodec/msmpeg4data.h	/^static uint8_t wmv1_y_dc_scale_table[32]={$/;"	v
wmv2_add_block	libavcodec/wmv2.c	/^static void wmv2_add_block(Wmv2Context *w, DCTELEM *block1, uint8_t *dst, int stride, int n){$/;"	f	file:
wmv2_common_init	libavcodec/wmv2.c	/^static void wmv2_common_init(Wmv2Context * w){$/;"	f	file:
wmv2_decode_init	libavcodec/wmv2.c	/^static int wmv2_decode_init(AVCodecContext *avctx){$/;"	f	file:
wmv2_decode_inter_block	libavcodec/wmv2.c	/^static inline int wmv2_decode_inter_block(Wmv2Context *w, DCTELEM *block, int n, int cbp){$/;"	f	file:
wmv2_decode_mb	libavcodec/wmv2.c	/^static int wmv2_decode_mb(MpegEncContext *s, DCTELEM block[6][64])$/;"	f	file:
wmv2_decode_motion	libavcodec/wmv2.c	/^static inline int wmv2_decode_motion(Wmv2Context *w, int *mx_ptr, int *my_ptr){$/;"	f	file:
wmv2_decoder	libavcodec/wmv2.c	/^AVCodec wmv2_decoder = {$/;"	v
wmv2_encode_init	libavcodec/wmv2.c	/^static int wmv2_encode_init(AVCodecContext *avctx){$/;"	f	file:
wmv2_encoder	libavcodec/wmv2.c	/^AVCodec wmv2_encoder = {$/;"	v
wmv2_inter_table	libavcodec/msmpeg4data.h	/^static const uint32_t (*wmv2_inter_table[WMV2_INTER_CBP_TABLE_COUNT])[2]={$/;"	v
wmv2_mspel8_h_lowpass	libavcodec/dsputil.c	/^static void wmv2_mspel8_h_lowpass(uint8_t *dst, uint8_t *src, int dstStride, int srcStride, int h){$/;"	f	file:
wmv2_mspel8_h_lowpass	libavcodec/sh4/qpel.c	/^static void wmv2_mspel8_h_lowpass(uint8_t *dst, uint8_t *src, int dstStride, int srcStride, int h){$/;"	f	file:
wmv2_mspel8_v_lowpass	libavcodec/dsputil.c	/^static void wmv2_mspel8_v_lowpass(uint8_t *dst, uint8_t *src, int dstStride, int srcStride, int w){$/;"	f	file:
wmv2_mspel8_v_lowpass	libavcodec/sh4/qpel.c	/^static void wmv2_mspel8_v_lowpass(uint8_t *dst, uint8_t *src, int dstStride, int srcStride, int w){$/;"	f	file:
wmv2_pred_motion	libavcodec/wmv2.c	/^static int16_t *wmv2_pred_motion(Wmv2Context *w, int *px, int *py){$/;"	f	file:
wmv2_scantableA	libavcodec/msmpeg4data.h	/^static const uint8_t wmv2_scantableA[64]={$/;"	v
wmv2_scantableB	libavcodec/msmpeg4data.h	/^static const uint8_t wmv2_scantableB[64]={$/;"	v
wmv3_dc_scale_table	libavcodec/vc9data.h	/^const uint8_t wmv3_dc_scale_table[32]={$/;"	v
wmv3_decoder	libavcodec/vc9.c	/^AVCodec wmv3_decoder = {$/;"	v
wnv1_decoder	libavcodec/wnv1.c	/^AVCodec wnv1_decoder = {$/;"	v
wnv1_get_code	libavcodec/wnv1.c	/^static inline int wnv1_get_code(WNV1Context *w, int base_value)$/;"	f	file:
wordstream	libavcodec/4xm.c	/^    uint16_t *wordstream;$/;"	m	struct:FourXContext	file:
work	libavcodec/ra144.c	/^	unsigned short int work[50];$/;"	m	file:
work_sem	libavcodec/beosthread.c	/^    sem_id work_sem;$/;"	m	struct:ThreadContext	file:
work_sem	libavcodec/w32thread.c	/^    HANDLE work_sem;$/;"	m	struct:ThreadContext	file:
workaround_bugs	ffmpeg.c	/^static int workaround_bugs = FF_BUG_AUTODETECT;$/;"	v	file:
workaround_bugs	ffplay.c	/^static int workaround_bugs = 1;$/;"	v	file:
workaround_bugs	libavcodec/avcodec.h	/^    int workaround_bugs;$/;"	m	struct:AVCodecContext
workaround_bugs	libavcodec/mpegvideo.h	/^    int workaround_bugs;       \/\/\/< workaround bugs in encoders which cannot be detected automatically $/;"	m	struct:MpegEncContext
worker	libavcodec/pthread.c	/^static void* worker(void *v) $/;"	f	file:
workers	libavcodec/pthread.c	/^    pthread_t *workers;$/;"	m	struct:ThreadContext	file:
wptr	libavformat/avformat.h	/^    uint8_t *rptr, *wptr, *end;$/;"	m	struct:FifoBuffer
wrap	tests/rotozoom.c	/^int width, height, wrap;$/;"	v
wrap	tests/videogen.c	/^int width, height, wrap;$/;"	v
write_audio_frame	output_example.c	/^void write_audio_frame(AVFormatContext *oc, AVStream *st)$/;"	f
write_back_intra_pred_mode	libavcodec/h264.c	/^static inline void write_back_intra_pred_mode(H264Context *h){$/;"	f	file:
write_back_motion	libavcodec/h264.c	/^static inline void write_back_motion(H264Context *h, int mb_type){$/;"	f	file:
write_back_non_zero_count	libavcodec/h264.c	/^static inline void write_back_non_zero_count(H264Context *h){$/;"	f	file:
write_flag	libavformat/avio.h	/^    int write_flag;  \/* true if open for writing *\/$/;"	m
write_header	libavcodec/ffv1.c	/^static void write_header(FFV1Context *f){$/;"	f	file:
write_header	libavformat/avformat.h	/^    int (*write_header)(struct AVFormatContext *);$/;"	m	struct:AVOutputFormat
write_index	libavformat/ffm.c	/^    offset_t write_index, file_size;$/;"	m	struct:FFMContext	file:
write_long	libavcodec/adx.c	/^static void write_long(unsigned char *p,uint32_t v)$/;"	f	file:
write_packet	libavformat/avformat.h	/^    int (*write_packet)(struct AVFormatContext *, AVPacket *pkt);$/;"	m	struct:AVOutputFormat
write_packet	libavformat/avio.h	/^    int (*write_packet)(void *opaque, uint8_t *buf, int buf_size);$/;"	m
write_packet	libavformat/mpegtsenc.c	/^    void (*write_packet)(struct MpegTSSection *s, const uint8_t *packet);$/;"	m	struct:MpegTSSection	file:
write_packet_header	libavformat/rm.c	/^static void write_packet_header(AVFormatContext *ctx, StreamInfo *stream, $/;"	f	file:
write_quant_table	libavcodec/ffv1.c	/^static void write_quant_table(RangeCoder *c, int16_t *quant_table){$/;"	f	file:
write_section_data	libavformat/mpegts.c	/^static void write_section_data(AVFormatContext *s, MpegTSFilter *tss1,$/;"	f	file:
write_sgi_header	libavformat/sgi.c	/^static void write_sgi_header(ByteIOContext *f, const SGIInfo *info)$/;"	f	file:
write_slice_end	libavcodec/mpegvideo.c	/^static void write_slice_end(MpegEncContext *s){$/;"	f	file:
write_trailer	libavformat/avformat.h	/^    int (*write_trailer)(struct AVFormatContext *);$/;"	m	struct:AVOutputFormat
write_uint_max	libavcodec/sonic.c	/^static void write_uint_max(PutBitContext *pb, unsigned int value, unsigned int max)$/;"	f	file:
write_video_frame	output_example.c	/^void write_video_frame(AVFormatContext *oc, AVStream *st)$/;"	f
writer	vhook/ppm.c	/^    FILE *writer;$/;"	m	struct:rwpipe	file:
writing_app	libavformat/matroska.c	/^    char *writing_app,$/;"	m	struct:MatroskaDemuxContext	file:
written_packet_size	libavformat/nut.c	/^    int written_packet_size;$/;"	m	file:
wrong_run	libavcodec/h263data.h	/^static const uint8_t wrong_run[102] = {$/;"	v
ws_adpcm_2bit	libavcodec/ws-snd1.c	/^static const char ws_adpcm_2bit[] = { -2, -1, 0, 1};$/;"	v	file:
ws_adpcm_4bit	libavcodec/ws-snd1.c	/^static const char ws_adpcm_4bit[] = {$/;"	v	file:
ws_snd1_decoder	libavcodec/ws-snd1.c	/^AVCodec ws_snd1_decoder = {$/;"	v
ws_snd_decode_frame	libavcodec/ws-snd1.c	/^static int ws_snd_decode_frame(AVCodecContext *avctx,$/;"	f	file:
ws_snd_decode_init	libavcodec/ws-snd1.c	/^static int ws_snd_decode_init(AVCodecContext * avctx)$/;"	f	file:
wsaud_iformat	libavformat/westwood.c	/^static AVInputFormat wsaud_iformat = {$/;"	v	file:
wsaud_probe	libavformat/westwood.c	/^static int wsaud_probe(AVProbeData *p)$/;"	f	file:
wsaud_read_close	libavformat/westwood.c	/^static int wsaud_read_close(AVFormatContext *s)$/;"	f	file:
wsaud_read_header	libavformat/westwood.c	/^static int wsaud_read_header(AVFormatContext *s,$/;"	f	file:
wsaud_read_packet	libavformat/westwood.c	/^static int wsaud_read_packet(AVFormatContext *s,$/;"	f	file:
wsvqa_iformat	libavformat/westwood.c	/^static AVInputFormat wsvqa_iformat = {$/;"	v	file:
wsvqa_probe	libavformat/westwood.c	/^static int wsvqa_probe(AVProbeData *p)$/;"	f	file:
wsvqa_read_close	libavformat/westwood.c	/^static int wsvqa_read_close(AVFormatContext *s)$/;"	f	file:
wsvqa_read_header	libavformat/westwood.c	/^static int wsvqa_read_header(AVFormatContext *s,$/;"	f	file:
wsvqa_read_packet	libavformat/westwood.c	/^static int wsvqa_read_packet(AVFormatContext *s,$/;"	f	file:
x	libavcodec/motion_est.c	/^    int x, y;$/;"	m	struct:Minima	file:
x	libavcodec/snow.c	/^    int16_t x;$/;"	m	struct:x_and_coeff	file:
x	libavcodec/svq1.c	/^  int		 x;$/;"	m	struct:svq1_pmv_s	file:
x	libavcodec/truemotion1.c	/^    int x, y, w, h;$/;"	m	struct:TrueMotion1Context	file:
x	tests/videogen.c	/^    int x, y, w, h;$/;"	m	struct:VObj	file:
x	vhook/drawtext.c	/^  unsigned int x;$/;"	m	file:
x	vhook/imlib2.c	/^    int x;$/;"	m	file:
x1	libavcodec/cinepak.c	/^    uint16_t          x1, y1;$/;"	m	file:
x2	libavcodec/cinepak.c	/^    uint16_t          x2, y2;$/;"	m	file:
x264_encoder	libavcodec/x264.c	/^AVCodec x264_encoder = {$/;"	v
xC1S7	libavcodec/vp3dsp.c	31;"	d	file:
xC2S6	libavcodec/vp3dsp.c	32;"	d	file:
xC3S5	libavcodec/vp3dsp.c	33;"	d	file:
xC4S4	libavcodec/vp3dsp.c	34;"	d	file:
xC5S3	libavcodec/vp3dsp.c	35;"	d	file:
xC6S2	libavcodec/vp3dsp.c	36;"	d	file:
xC7S1	libavcodec/vp3dsp.c	37;"	d	file:
xStride	libavcodec/h264.c	1650;"	d	file:
x_and_coeff	libavcodec/snow.c	/^typedef struct x_and_coeff{$/;"	s	file:
x_and_coeff	libavcodec/snow.c	/^} x_and_coeff;$/;"	t	file:
x_chroma_shift	libavcodec/imgconvert.c	/^    uint8_t x_chroma_shift;  \/* X chroma subsampling factor is 2 ^ shift *\/$/;"	m	struct:PixFmtInfo	file:
x_coeff	libavcodec/snow.c	/^    x_and_coeff * x_coeff;$/;"	m	struct:SubBand	file:
x_list	libavcodec/vorbis.h	/^    uint_fast16_t *x_list;$/;"	m
x_list_dim	libavcodec/vorbis.h	/^    uint_fast16_t x_list_dim;$/;"	m
x_list_order	libavcodec/vorbis.h	/^    uint_fast16_t *x_list_order;$/;"	m
x_size	vhook/watermark.c	/^    int             x_size;$/;"	m	file:
xa_adpcm_table	libavcodec/adpcm.c	/^static const int xa_adpcm_table[5][2] = {$/;"	v	file:
xa_decode	libavcodec/adpcm.c	/^static void xa_decode(short *out, const unsigned char *in, $/;"	f	file:
xan_decode_end	libavcodec/xan.c	/^static int xan_decode_end(AVCodecContext *avctx)$/;"	f	file:
xan_decode_frame	libavcodec/xan.c	/^static int xan_decode_frame(AVCodecContext *avctx,$/;"	f	file:
xan_decode_init	libavcodec/xan.c	/^static int xan_decode_init(AVCodecContext *avctx)$/;"	f	file:
xan_dpcm_decoder	libavcodec/dpcm.c	/^AVCodec xan_dpcm_decoder = {$/;"	v
xan_huffman_decode	libavcodec/xan.c	/^static int xan_huffman_decode(unsigned char *dest, unsigned char *src)$/;"	f	file:
xan_unpack	libavcodec/xan.c	/^static void xan_unpack(unsigned char *dest, unsigned char *src)$/;"	f	file:
xan_wc3_build_palette	libavcodec/xan.c	/^static void inline xan_wc3_build_palette(XanContext *s, $/;"	f	file:
xan_wc3_copy_pixel_run	libavcodec/xan.c	/^static void inline xan_wc3_copy_pixel_run(XanContext *s, $/;"	f	file:
xan_wc3_decode_frame	libavcodec/xan.c	/^static void xan_wc3_decode_frame(XanContext *s) {$/;"	f	file:
xan_wc3_decoder	libavcodec/xan.c	/^AVCodec xan_wc3_decoder = {$/;"	v
xan_wc3_output_pixel_run	libavcodec/xan.c	/^static void inline xan_wc3_output_pixel_run(XanContext *s, $/;"	f	file:
xan_wc4_decode_frame	libavcodec/xan.c	/^static void xan_wc4_decode_frame(XanContext *s) {$/;"	f	file:
xchg_mb_border	libavcodec/h264.c	/^static inline void xchg_mb_border(H264Context *h, uint8_t *src_y, uint8_t *src_cb, uint8_t *src_cr, int linesize, int uvlinesize, int xchg){$/;"	f	file:
xchg_pair_border	libavcodec/h264.c	/^static inline void xchg_pair_border(H264Context *h, uint8_t *src_y, uint8_t *src_cb, uint8_t *src_cr, int linesize, int uvlinesize, int xchg){$/;"	f	file:
xcos1	libavcodec/ac3tab.h	/^static int16_t xcos1[128];$/;"	v
xglue	libavcodec/imgconvert.c	42;"	d	file:
xl_decoder	libavcodec/xl.c	/^AVCodec xl_decoder = {$/;"	v
xl_table	libavcodec/xl.c	/^const int xl_table[32] = {$/;"	v
xleft	ffplay.c	/^    int width, height, xleft, ytop;$/;"	m	struct:VideoState	file:
xmax	libavcodec/mpegvideo.h	/^    int xmax;$/;"	m	struct:MotionEstContext
xmin	libavcodec/mpegvideo.h	/^    int xmin;$/;"	m	struct:MotionEstContext
xoffset	libavcodec/truemotion1.c	/^    uint16_t xoffset;$/;"	m	struct:frame_header	file:
xpos	libavcodec/indeo3.c	/^  long xpos;$/;"	m	file:
xsin1	libavcodec/ac3tab.h	/^static int16_t xsin1[128];$/;"	v
xsize	libavcodec/mpegaudiodec.c	/^    int xsize;$/;"	m	struct:HuffTable	file:
xsize	libavcodec/truemotion1.c	/^    uint16_t xsize;$/;"	m	struct:frame_header	file:
xsize	libavcodec/xvidff.c	/^    int xsize, ysize;              \/** Frame size *\/$/;"	m	struct:xvid_context	file:
xsize	libavformat/sgi.c	/^    unsigned short xsize;$/;"	m	struct:SGIInfo	file:
xvid_build	libavcodec/mpegvideo.h	/^    int xvid_build;$/;"	m	struct:MpegEncContext
xvid_context	libavcodec/xvidff.c	/^typedef struct xvid_context {$/;"	s	file:
xvid_context_t	libavcodec/xvidff.c	/^} xvid_context_t;$/;"	t	file:
xvid_correct_framerate	libavcodec/xvidff.c	/^void xvid_correct_framerate(AVCodecContext *avctx) {$/;"	f
xvid_encoder	libavcodec/xvidff.c	/^AVCodec xvid_encoder = {$/;"	v
xvid_ff_2pass	libavcodec/xvidff.c	/^int xvid_ff_2pass(void *ref, int cmd, void *p1, void *p2) {$/;"	f
xvid_ff_2pass_after	libavcodec/xvidff.c	/^static int xvid_ff_2pass_after(xvid_context_t *ref,$/;"	f	file:
xvid_ff_2pass_before	libavcodec/xvidff.c	/^static int xvid_ff_2pass_before(xvid_context_t *ref,$/;"	f	file:
xvid_ff_2pass_create	libavcodec/xvidff.c	/^static int xvid_ff_2pass_create(xvid_plg_create_t * param,$/;"	f	file:
xvid_ff_2pass_destroy	libavcodec/xvidff.c	/^static int xvid_ff_2pass_destroy(xvid_context_t *ref, $/;"	f	file:
xvid_ff_pass1	libavcodec/xvidff.c	/^typedef struct xvid_ff_pass1 {$/;"	s	file:
xvid_ff_pass1_t	libavcodec/xvidff.c	/^} xvid_ff_pass1_t;$/;"	t	file:
xvid_strip_vol_header	libavcodec/xvidff.c	/^int xvid_strip_vol_header(AVCodecContext *avctx, $/;"	f
xvmc_acceleration	libavcodec/avcodec.h	/^    int xvmc_acceleration;$/;"	m	struct:AVCodecContext
xvmc_render_state_t	xvmc_render.h	/^} xvmc_render_state_t;$/;"	t
y	libavcodec/g726.c	/^	 int y;               \/**< quantizer scaling factor for the next iteration *\/$/;"	m	struct:G726Context	file:
y	libavcodec/motion_est.c	/^    int x, y;$/;"	m	struct:Minima	file:
y	libavcodec/png.c	/^    int y;$/;"	m	struct:PNGContext	file:
y	libavcodec/snow.c	/^    int y;$/;"	m	file:
y	libavcodec/svq1.c	/^  int		 y;$/;"	m	struct:svq1_pmv_s	file:
y	libavcodec/truemotion1.c	/^    int x, y, w, h;$/;"	m	struct:TrueMotion1Context	file:
y	libavformat/png.c	/^    int y;$/;"	m	struct:PNGDecodeState	file:
y	tests/videogen.c	/^    int x, y, w, h;$/;"	m	struct:VObj	file:
y	vhook/drawtext.c	/^  unsigned int y;$/;"	m	file:
y	vhook/imlib2.c	/^    int y;$/;"	m	file:
y0	libavcodec/cinepak.c	/^    uint8_t  y0, y1, y2, y3;$/;"	m	file:
y0	libavcodec/roqvideo.c	/^  unsigned char y0, y1, y2, y3, u, v;$/;"	m	file:
y1	libavcodec/cinepak.c	/^    uint16_t          x1, y1;$/;"	m	file:
y1	libavcodec/cinepak.c	/^    uint8_t  y0, y1, y2, y3;$/;"	m	file:
y1	libavcodec/roqvideo.c	/^  unsigned char y0, y1, y2, y3, u, v;$/;"	m	file:
y2	libavcodec/cinepak.c	/^    uint16_t          x2, y2;$/;"	m	file:
y2	libavcodec/cinepak.c	/^    uint8_t  y0, y1, y2, y3;$/;"	m	file:
y2	libavcodec/roqvideo.c	/^  unsigned char y0, y1, y2, y3, u, v;$/;"	m	file:
y3	libavcodec/cinepak.c	/^    uint8_t  y0, y1, y2, y3;$/;"	m	file:
y3	libavcodec/roqvideo.c	/^  unsigned char y0, y1, y2, y3, u, v;$/;"	m	file:
yHistogram	libavcodec/libpostproc/postprocess_internal.h	/^	uint64_t *yHistogram;$/;"	m	struct:PPContext
y_ac_table_index	libavcodec/vc9.c	/^    int y_ac_table_index; \/\/\/< Luma index from AC2FRM element$/;"	m	struct:VC9Context	file:
y_b_table	libavcodec/xan.c	/^static int y_b_table[256];$/;"	v	file:
y_block_height	libavcodec/svq1.c	/^    int y_block_height;$/;"	m	struct:SVQ1Context	file:
y_block_width	libavcodec/svq1.c	/^    int y_block_width;$/;"	m	struct:SVQ1Context	file:
y_ccir_to_jpeg	libavcodec/imgconvert.c	/^static uint8_t y_ccir_to_jpeg[256];$/;"	v	file:
y_chroma_shift	libavcodec/imgconvert.c	/^    uint8_t y_chroma_shift;  \/* Y chroma subsampling factor is 2 ^ shift *\/$/;"	m	struct:PixFmtInfo	file:
y_dc_scale	libavcodec/mpegvideo.h	/^    int y_dc_scale, c_dc_scale;$/;"	m	struct:MpegEncContext
y_dc_scale_table	libavcodec/mpegvideo.h	/^    uint8_t *y_dc_scale_table;     \/\/\/< qscale -> y_dc_scale table $/;"	m	struct:MpegEncContext
y_g_table	libavcodec/xan.c	/^static int y_g_table[256];$/;"	v	file:
y_h	libavcodec/indeo3.c	/^  unsigned short y_w, y_h;$/;"	m	file:
y_jpeg_to_ccir	libavcodec/imgconvert.c	/^static uint8_t y_jpeg_to_ccir[256];$/;"	v	file:
y_predictor_table	libavcodec/truemotion1.c	/^    uint32_t y_predictor_table[1024];$/;"	m	struct:TrueMotion1Context	file:
y_r_table	libavcodec/xan.c	/^static int y_r_table[256];$/;"	v	file:
y_size	vhook/watermark.c	/^    int             y_size;$/;"	m	file:
y_stride	libavcodec/roqvideo.c	/^    int y_stride;$/;"	m	struct:RoqContext	file:
y_superblock_height	libavcodec/vp3.c	/^    int y_superblock_height;$/;"	m	struct:Vp3DecodeContext	file:
y_superblock_width	libavcodec/vp3.c	/^    int y_superblock_width;$/;"	m	struct:Vp3DecodeContext	file:
y_w	libavcodec/indeo3.c	/^  unsigned short y_w, y_h;$/;"	m	file:
ydt	libavcodec/truemotion1.c	/^    int16_t ydt[8];$/;"	m	struct:TrueMotion1Context	file:
ydt1	libavcodec/truemotion1data.h	/^static int16_t ydt1[8] = { 0, -2, 2, -6, 6, -12, 12, -12 };$/;"	v
ydt2	libavcodec/truemotion1data.h	/^static int16_t ydt2[8] = { 0, -2, 2, -6, 6, -12, 12, -12 };$/;"	v
ydt3	libavcodec/truemotion1data.h	/^static int16_t ydt3[8] = { 4, -6, 20, -20, 46, -46, 94, -94 };$/;"	v
ydt4	libavcodec/truemotion1data.h	/^static int16_t ydt4[8] = { 0, -4, 4, -16, 16, -36, 36, -80 };$/;"	v
ydts	libavcodec/truemotion1data.h	/^static int16_t *ydts[] = { ydt1, ydt2, ydt3, ydt4, NULL };$/;"	v
year	libavformat/avformat.h	/^    int year;  \/* ID3 year, 0 if none *\/$/;"	m	struct:AVFormatContext
yl	libavcodec/g726.c	/^	 int yl;              \/**< slow scale factor *\/$/;"	m	struct:G726Context	file:
ymax	libavcodec/mpegvideo.h	/^    int ymax;$/;"	m	struct:MotionEstContext
ymin	libavcodec/mpegvideo.h	/^    int ymin;$/;"	m	struct:MotionEstContext
yoffset	libavcodec/truemotion1.c	/^    uint16_t yoffset;$/;"	m	struct:frame_header	file:
ypos	libavcodec/indeo3.c	/^  long ypos;$/;"	m	file:
ysize	libavcodec/truemotion1.c	/^    uint16_t ysize;$/;"	m	struct:frame_header	file:
ysize	libavcodec/xvidff.c	/^    int xsize, ysize;              \/** Frame size *\/$/;"	m	struct:xvid_context	file:
ysize	libavformat/sgi.c	/^    unsigned short ysize;$/;"	m	struct:SGIInfo	file:
ytop	ffplay.c	/^    int width, height, xleft, ytop;$/;"	m	struct:VideoState	file:
yu	libavcodec/g726.c	/^	 int yu;              \/**< fast scale factor *\/$/;"	m	struct:G726Context	file:
yuv420p_to_uyvy422	libavcodec/imgconvert.c	/^static void yuv420p_to_uyvy422(AVPicture *dst, const AVPicture *src,$/;"	f	file:
yuv420p_to_yuv422	libavcodec/imgconvert.c	/^static void yuv420p_to_yuv422(AVPicture *dst, const AVPicture *src,$/;"	f	file:
yuv422_to_yuv420p	libavcodec/imgconvert.c	/^static void yuv422_to_yuv420p(AVPicture *dst, const AVPicture *src,$/;"	f	file:
yuv422_to_yuv422p	libavcodec/imgconvert.c	/^static void yuv422_to_yuv422p(AVPicture *dst, const AVPicture *src,$/;"	f	file:
yuv422p_to_uyvy422	libavcodec/imgconvert.c	/^static void yuv422p_to_uyvy422(AVPicture *dst, const AVPicture *src,$/;"	f	file:
yuv422p_to_yuv422	libavcodec/imgconvert.c	/^static void yuv422p_to_yuv422(AVPicture *dst, const AVPicture *src,$/;"	f	file:
yuv444p_to_rgb24	libavcodec/imgconvert_template.h	/^static void yuv444p_to_rgb24(AVPicture *dst, const AVPicture *src,$/;"	f
yuv4_generate_header	libavformat/yuv4mpeg.c	/^static int yuv4_generate_header(AVFormatContext *s, char* buf)$/;"	f	file:
yuv4_probe	libavformat/yuv4mpeg.c	/^static int yuv4_probe(AVProbeData *pd)$/;"	f	file:
yuv4_read_close	libavformat/yuv4mpeg.c	/^static int yuv4_read_close(AVFormatContext *s)$/;"	f	file:
yuv4_read_header	libavformat/yuv4mpeg.c	/^static int yuv4_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
yuv4_read_packet	libavformat/yuv4mpeg.c	/^static int yuv4_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
yuv4_write_header	libavformat/yuv4mpeg.c	/^static int yuv4_write_header(AVFormatContext *s)$/;"	f	file:
yuv4_write_packet	libavformat/yuv4mpeg.c	/^static int yuv4_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
yuv4_write_trailer	libavformat/yuv4mpeg.c	/^static int yuv4_write_trailer(AVFormatContext *s)$/;"	f	file:
yuv4mpeg_init	libavformat/yuv4mpeg.c	/^int yuv4mpeg_init(void)$/;"	f
yuv4mpegpipe_iformat	libavformat/yuv4mpeg.c	/^AVInputFormat yuv4mpegpipe_iformat = {$/;"	v
yuv4mpegpipe_oformat	libavformat/yuv4mpeg.c	/^AVOutputFormat yuv4mpegpipe_oformat = {$/;"	v
yuv_image_format	libavformat/yuv.c	/^AVImageFormat yuv_image_format = {$/;"	v
yuv_probe	libavformat/yuv.c	/^static int yuv_probe(AVProbeData *pd)$/;"	f	file:
yuv_read	libavformat/yuv.c	/^static int yuv_read(ByteIOContext *f,$/;"	f	file:
yuv_write	libavformat/yuv.c	/^static int yuv_write(ByteIOContext *pb2, AVImageInfo *info)$/;"	f	file:
yuvj444p_to_rgb24	libavcodec/imgconvert_template.h	/^static void yuvj444p_to_rgb24(AVPicture *dst, const AVPicture *src,$/;"	f
yuy2	libavcodec/huffyuv.c	/^    int yuy2;                               \/\/use yuy2 instead of 422P$/;"	m	struct:HYuvContext	file:
zap	libavcodec/alpha/asm.h	141;"	d
zap	libavcodec/alpha/asm.h	80;"	d
zap	libavcodec/alpha/asm.h	94;"	d
zapnot	libavcodec/alpha/asm.h	142;"	d
zapnot	libavcodec/alpha/asm.h	81;"	d
zapnot	libavcodec/alpha/asm.h	95;"	d
zapping	vhook/fish.c	/^    int zapping;$/;"	m	file:
zero	libavcodec/alpha/regdef.h	43;"	d
zero	libavcodec/liba52/downmix.c	/^static void zero (sample_t * samples)$/;"	f	file:
zero_cmp	libavcodec/dsputil.c	/^static int zero_cmp(void *s, uint8_t *a, uint8_t *b, int stride, int h){$/;"	f	file:
zero_cmp	libavcodec/motion_est.c	/^static int zero_cmp(void *s, uint8_t *a, uint8_t *b, int stride, int h){$/;"	f	file:
zero_hpel	libavcodec/motion_est.c	/^static void zero_hpel(uint8_t *a, const uint8_t *b, int stride, int h){$/;"	f	file:
zero_run_base	libavcodec/vp3data.h	/^static const int zero_run_base[32] = {$/;"	v
zero_run_get_bits	libavcodec/vp3data.h	/^static const int zero_run_get_bits[32] = {$/;"	v
zero_snr_offsets	libavcodec/liba52/parse.c	/^static inline int zero_snr_offsets (int nfchans, a52_state_t * state)$/;"	f	file:
zero_state	libavcodec/rangecoder.h	/^    uint8_t zero_state[256];$/;"	m	struct:RangeCoder
zigzag_scan	libavcodec/h264data.h	/^static const uint8_t zigzag_scan[16]={$/;"	v
zlib_decoder	libavcodec/lcl.c	/^AVCodec zlib_decoder = {$/;"	v
zlib_encoder	libavcodec/lcl.c	/^AVCodec zlib_encoder = {$/;"	v
zsize	libavformat/sgi.c	/^    unsigned short zsize;$/;"	m	struct:SGIInfo	file:
zstream	libavcodec/lcl.c	/^    z_stream zstream;$/;"	m	struct:LclContext	file:
zstream	libavcodec/png.c	/^    z_stream zstream;$/;"	m	struct:PNGContext	file:
zstream	libavcodec/tscc.c	/^    z_stream zstream;$/;"	m	struct:TsccContext	file:
zstream	libavformat/png.c	/^    z_stream zstream;$/;"	m	struct:PNGDecodeState	file:
zstream	libavformat/png.c	/^    z_stream zstream;$/;"	m	struct:PNGEncodeState	file:
