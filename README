[[[ FreeJ 0.2.1  "ETNA" ]]]
  [http://freej.dyne.org]

 set the vj free :: free unified framework for realtime video processing

(( idea, first coder and mantainer : jaromil ....//korova.dyne.org ))

+-------------------------------------------------------------------------
This is a generic project overview, refer to the file USAGE to have
instructions about how to use this release.
+-------------------------------------------------------------------------

:: OVERVIEW

FreeJ aims to be a digital instrument for video livesets, featuring
realtime rendering of multilayered video and chained effect filtering
directly on the screen. FreeJ threats every video source as a layer,
making then possible to dynamically apply on each a chain of filters,
loadable as effect plugins and easily customizable. Layers are planned
for rendering of analog video input, digital movie files, image bitmaps,
sound scopes, texts and eventually more.

FreeJ is being developed in the hope to provide the GNU community with a
free, modular and highly customizable application to perform video
livesets, based on a GPL'ed framework that lets anybody implement his
own filters concentrating simply on the dsp algorithm developed and
furthermore to combine them over any supported layer.

FreeJ is Free Software and his sourcecode is released under the Gnu
Public License, it comes with absolutely no warranty and you are welcome
to redistribute it under certain conditions (refer to the license for
details).

:: INTERNALS

FreeJ, as a free modularized GNU/Linux framework, permits unified
quality control over the rendering of digital video processing and makes
it much easier to write effect algorithms keeping them compatible with
as much devices as possible and making them relying on optimized code.

FreeJ is being developed in c++ respecting POSIX compliance, releases
will be made available in a packaging permitting easy compilation with
standard GNU free development tools.
For rendering to screen is being linked shared the Simple Direct Media
Layer [http://www.libsdl.org] library, allready employed by
lokigames.org for his high performance in porting games like
QuakeIII(tm) under GNU/Linux platform.

As a realtime architecture FreeJ aims to make efficient use of
multithreading optimizing the usage of hardware resources. There's only
one layer implemented yet wich makes use of the video4linux abstracted
device for capturing live video input from the many linux supported
hardware devices (which includes bttv, usb cams and more). Alltough
possible, is not planned any porting to platforms other than GNU/Linux
at least in the earliest development phases.

:: FEATURES

++ multilayered video engine
++ layer filtering thru chainable dsp algorithms
++ easy customization of filters
++ MMX/SSE accelerated engine lubrification
++ efficient triple-buffered video grabbing layer
++ modular c++ code structure
++ multithreaded architecture (POSIX.1b compliant)
++ (ab)user friendly OnScreenDisplay interface

:: REQUIREMENTS

To run FreeJ is necessary to have:

- a working x86 GNU/Linux workstation ;)
- SDL libraries ... <http://www.libsdl.org>
- NASM netwide assembler ... <ftp://ftp.kernel.org/pub/software/devel/nasm>
- XFree86, possibly 4.1 running on a supported accelerated card.
- a video4linux supported grabbing card

For better fullscreen support try to add to your XF86Config file the modelines
in doc/x11.modelines.

:: AVAILABILITY

Updated informations and FreeJ releases are made available on
[http://freej.dyne.org]. The bleeding edge sourcecode is also publicly
available thru CVS: instructions how to get anonymous CVS access and
possibility to browse the code online are given on
[http://cvs.dyne.org].

:: ROADMAP

At the moment FreeJ is being released in a early stage of development
according with GPL software tradictions, seeking collaborations of
developers interested in being involved and support from anybody else.
Alltough the code is mature enough to be appreciated by coders and
effects can allready be implemented with noticeable good performance.
The 0.1 release is simply intended to be the beginning of a developing
roadmap that can resolve in a fully featured 1.0 release in 1/2 years
depending from received contributions, even less in the most optimistic
case.

:: SUPPORT

As allready mentioned, support is crucial for succesfully achieve the
implementation of planned features. The code will be hosted and
developed using the CVS server on http://cvs.dyne.org, opened to
anybody's contribution. Any organization or individual can also give
significant support contributing founds for involved developers,
bandwidth for project hosting, hardware for development, timespace where
to present FreeJ thru public lectures and/or performances and more
generally credits and citations. Every single contribution will be
reported on the project's documentation and the software itself will
state it thru noticeable credits. Besides that dyne.org staff is
available to run formation courses about usage, customization and
reuse/abuse of the software in particular circumstances. Even adhoc
setup and/or warranty that FreeJ fits to anybody's particular purpose
can be requested: feel free to contact <freej-team@dyne.org> for any
further information.

:: DISCUSSION

A mailinglist for further discussion about FreeJ is running as
<freej@dyne.org>, subscription is opened and anybody interested can send
a mail to <freej-subscribe@dyne.org> to join. Online archive and
mailinglist interface is made available on
[http://dyne.org/cgi-bin/ml.cgi?4] .

--
FreeJ is (c) 2001 Denis Roio <jaromil@dyne.org>
refer to AUTHORS for a complete list of contributions.